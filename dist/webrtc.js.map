{"version":3,"sources":["webpack://WebRTC/webpack/universalModuleDefinition","webpack://WebRTC/webpack/bootstrap","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@redux-saga/core/dist/io-c3792963.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/selectors.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@redux-saga/is/dist/redux-saga-is.esm.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/helpers/extends.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/lodash/fp.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/errors/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/constants.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/constants.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/actions/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/eventTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/interface/selectors.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/promise.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/reporter/constants.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_core.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/common/utils.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_export.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/constants.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/actionTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_global.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/interface/actionTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_wks.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/selectors.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/logs.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/utils/call.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/isFunction.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/isSymbol.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/isEmpty.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/toString.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/isString.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/constants.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/combineActions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/identity.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/isNull.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/createAction.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/isPlainObject.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/isArray.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/isNil.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/getLastElement.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/camelCase.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/arrayToObject.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/isMap.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/ownKeys.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/get.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/flattenWhenNode.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/flattenActionMap.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/unflattenActionCreators.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/createActions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/createCurriedAction.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/isUndefined.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/handleAction.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/reduce-reducers/es/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/hasGeneratorInterface.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/utils/flattenReducerMap.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/handleActions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-actions/es/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_is-object.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/invariant/browser.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-dp.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_descriptors.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/actionTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_an-object.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/json/stringify.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/sdp-transform/lib/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/actions/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/node_modules/eventemitter3/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/constants.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/interface/actionTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_ctx.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_hide.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_has.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/rng.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/regex.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/validate.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/stringify.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/v1.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/parse.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/v35.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/md5.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/v3.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/native.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/v4.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/sha1.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/v5.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/nil.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/version.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/uuid/dist/esm-browser/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_fails.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_to-iobject.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/config/interface/actions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/interface/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/map.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/interface/actionTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/media/remoteTracks.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_property-desc.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-keys.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_to-object.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/helpers/objectWithoutProperties.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/common/version.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/common/validation/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/array/from.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/interface/selectors.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/utils.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_a-function.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_cof.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_library.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-pie.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_iterators.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_set-to-string-tag.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_for-of.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/object/keys.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/object/values.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/logger/src/constants.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/events/interface/actions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/interface/actions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/utils/state.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_to-length.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_uid.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es6.string.iterator.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-create.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/logger/src/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_meta.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/interface/actionTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/sdpUtils/pipeline.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/object/freeze.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/utils.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/constants.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/interface/actionTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/interface/actions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/utils/normalization.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/requests/utils.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@redux-saga/delay-p/dist/redux-saga-delay-p.esm.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux/es/redux.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_dom-create.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_to-primitive.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_iobject.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_defined.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_to-integer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_shared-key.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_shared.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_enum-bug-keys.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-gops.js","webpack://WebRTC/(webpack)/buildin/global.js","webpack://WebRTC/(webpack)/buildin/module.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@stamp/is/object.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_iter-define.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/web.dom.iterable.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_classof.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_an-instance.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_new-promise-capability.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_redefine-all.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_wks-define.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/logger/src/validation.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/interface/actions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_validate-collection.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/events/interface/actionTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/eventTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/sdpUtils/handlers.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/interface/actions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/utils/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/subscription/interface/actionTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/utils.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/make/remoteAnswer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/media/operations.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/media/constants.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/interface/actions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@redux-saga/deferred/dist/redux-saga-deferred.esm.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@redux-saga/core/dist/redux-saga-core.esm.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-saga/dist/redux-saga-core-npm-proxy.esm.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/to-camel-case/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/object/assign.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_ie8-dom-define.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-keys-internal.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@stamp/is/array.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@stamp/is/function.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_redefine.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_html.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-gpo.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_iter-step.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_iter-call.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_is-array-iter.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/core.get-iterator-method.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_species-constructor.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_task.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_perform.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_promise-resolve.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_set-species.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_iter-detect.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-sap.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-to-array.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_wks-ext.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_is-array.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-gopn.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-gopd.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/logger/src/logFormatter.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/config.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/interface/selectors.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_collection-strong.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_collection.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_collection-to-json.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_set-collection-of.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_set-collection-from.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/config/interface/actionTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/configs.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/sdp-transform/lib/grammar.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/api/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/actions/sessions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/errors/codes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/models/track.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/models/media.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/utils/iceCollectionScheduledCheck.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/subscription/requests.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/effects.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/oldLink/sagas.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/interface/effects.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/interface/name.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/api/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/actions/call.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/subscription/interface/selectors.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/utils/media.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/addMedia/addMedia.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/utils/hasMediaFlowing.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/pipeline/utils.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/ansi-styles/node_modules/color-convert/conversions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/callManager/operationMap.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/interface/selectors.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/link/requests.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/sagas.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/authorization.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/interface/eventTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/just-curry-it/index.js","webpack://WebRTC/./index.js","webpack://WebRTC/../core/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/factory.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/object/assign.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es6.object.assign.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-assign.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_array-includes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_to-absolute-index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-devtools-extension/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/lodash/lodash.min.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/lodash/fp/_baseConvert.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/lodash/fp/_mapping.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/lodash/fp/placeholder.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@stamp/compose/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@stamp/is/stamp.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@stamp/is/composable.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@stamp/core/assign.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@stamp/core/merge.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@stamp/is/plain-object.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/bottlejs/dist/bottle-es.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/promise.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_string-at.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_iter-create.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-dps.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es6.array.iterator.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_add-to-unscopables.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es6.promise.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_invoke.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_microtask.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_user-agent.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es7.promise.finally.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es7.promise.try.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/object/keys.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es6.object.keys.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/node_modules/query-string/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/strict-uri-encode/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/decode-uri-component/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/split-on-first/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/filter-obj/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/logger/src/logManager.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/object/values.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es7.object.values.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/symbol.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/symbol/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es6.symbol.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_enum-keys.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_object-gopn-ext.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es7.symbol.async-iterator.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es7.symbol.observable.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/logger/src/logger.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/logger/src/timer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/logger/src/logHandler.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/actions/actionHandler.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/json/stringify.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/v8n/dist/v8n.esm.js","webpack://WebRTC/../core/basePlugins.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/plugin.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/interface/api.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/interface/reducers.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/to-space-case/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/to-no-case/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/sagas.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/set.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/set.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es6.set.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_array-methods.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_array-species-create.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_array-species-constructor.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es7.set.to-json.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_array-from-iterable.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es7.set.of.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es7.set.from.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/actions/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/actions/transformers.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/actions/utils.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/redux-logger/dist/redux-logger.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/handlers/sanitizeSdesFromSdp.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/handlers/modifySdpBandwidth.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/logs/docs.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/config/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/config/interface/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/config/interface/api.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/config/interface/selectors.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/array/from.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es6.array.from.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/_create-property.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/utils/defaults.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/sdp-transform/lib/parser.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/sdp-transform/lib/writer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/config/interface/reducers.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/events/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/events/interface/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/events/interface/api.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/events/interface/reducers.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/events/eventEmitter.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/api/media.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/reducers/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/reducers/devices.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/reducers/media.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/reducers/tracks.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/reducers/sessions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/reducers/browser.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/operations/media.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/actions/devices.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/actions/tracks.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/actions/media.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/interface/actions/misc.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/operations/logs.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/channels/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/channels/devices.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/channels/trackManager.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/channels/track.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/channels/sessionManager.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/channels/session.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/channels/mediaManager.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/channels/media.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/common/helpers/getAssociatedCallEvent.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/webrtc/middleware.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/map.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es6.map.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es7.map.to-json.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es7.map.of.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es7.map.from.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/reflect/set.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/reflect/set.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es6.reflect.set.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/events/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/events/icecandidate.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/events/iceconnectionstatechange.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/events/icegatheringstatechange.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/events/negotiationneeded.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/events/signalingstatechange.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/events/track.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/addIceCandidate.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/addTrack.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/close.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/createAnswer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/object/freeze.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es6.object.freeze.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/createOffer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/findReusableTransceiver.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/getState.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/getStats.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/removeTrack.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/replaceTrack.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/sendDTMF.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/setLocalDescription.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/methods/setRemoteDescription.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/properties/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/properties/localDescription.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/properties/localTracks.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/properties/remoteDescription.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/properties/remoteTracksActive.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/properties/remoteTracks.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/properties/senderTracks.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/webrtc-adapter/out/adapter.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/config.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/Peer/utils/timer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/object/create.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/object/create.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es6.object.create.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/managers/mediaManager.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/managers/peerManager.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/managers/sessionManager.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/models/session.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/sdpUtils/transceiverUtils.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/sdpUtils/extractors.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/managers/deviceManager.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/managers/trackManager.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/managers/webrtcManager.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/webrtc/src/managers/renderer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/callMe/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/noop/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/interface/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/interface/reducers.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/interface/name.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/interface/api.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/jwt-decode/build/jwt-decode.esm.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/callMe/sagas.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/auth/subscription/services.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/interface/selectors.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/base-64/base64.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/utf8/utf8.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/anonymous/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/api/establish.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/actions/turn.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/api/midcall.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/api/complex.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/api/misc.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/api/constants.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/reducers/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/reducers/call.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/reducers/operations.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/reducers/turn.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/interface/api/anonymous.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/middleware/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/middleware/callCancelledNotification.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/middleware/callStatusUpdateEndedNotification.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/middleware/callStatusUpdateFailedNotification.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/middleware/callStatusUpdateRingingNotification.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/middleware/sessionStatusUpdateEndedNotification.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/middleware/incomingCallNotification.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/middleware/remoteAnswerNotification.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/middleware/remoteOfferNotification.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/middleware/resyncSessionStatuses.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/middleware/sessionProgressNotification.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/middleware/setTurnCredentials.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/middleware/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/middleware/getSessions.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/middleware/iceCollectionCheck.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/middleware/normalizeIceFailure.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/middleware/callAudit.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/requests/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/requests/complex.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/requests/establish.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/requests/misc.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/requests/negotiation.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/operations/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/operations/setTurnCredentials/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/link/operations/setTurnCredentials/setTurnCredentials.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/anonymous/operations/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/anonymous/operations/makeAnonymous/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/anonymous/operations/makeAnonymous/makeAnonymous.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/anonymous/operations/anonymousCallEnd/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/anonymous/operations/anonymousCallEnd/anonymousCallEnd.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/consultativeTransfer/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/consultativeTransfer/consultativeTransfer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/directTransfer/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/directTransfer/directTransfer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/join/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/join/join.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/join/remoteAnswer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/make/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/make/make.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/make/incomingCall.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/make/setupIncomingCall.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/make/setupOutgoingSession.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/answer/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/answer/answer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/answer/slowAnswer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/answer/remoteSlowAnswer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/answer/answerWebrtcSession.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/end/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/end/end.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/end/callStatusUpdateEnded.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/forward/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/forward/forward.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/ignore/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/ignore/ignore.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/reject/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/reject/reject.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/addMedia/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/addMedia/webrtcAddMedia.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/addMedia/rollbackAddMedia.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/addMedia/addBasicMedia.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/addMedia/remoteAnswer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/hold/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/hold/hold.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/hold/rollbackHold.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/hold/remoteAnswer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/unhold/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/unhold/unhold.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/unhold/rollbackUnhold.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/unhold/remoteAnswer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/removeMedia/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/removeMedia/removeMedia.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/removeMedia/webrtcRemoveMedia.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/removeMedia/rollbackRemoveMedia.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/removeMedia/removeBasicMedia.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/removeMedia/remoteAnswer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/replaceTrack/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/replaceTrack/replaceTrack.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/replaceTrack/webrtcReplaceTrack.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/babel-runtime/core-js/object/entries.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/fn/object/entries.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/core-js/library/modules/es7.object.entries.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/playAudioFile/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/playAudioFile/playAudio.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/getAvailableCodecs/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/getAvailableCodecs/getAvailableCodecs.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/iceRestart/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/iceRestart/iceRestart.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/interface/utils.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/iceRestart/remoteAnswer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/sendDtmf/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/sendDtmf/sendDtmf.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/sendDtmf/playMethods.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/sendDtmf/tones.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/utils/hasTelephoneEvent.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/updateCallState/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/updateCallState/updateCallState.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/resyncCallState/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/resyncCallState/resyncCallState.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/iceCollectionCheck/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/iceCollectionCheck/iceCollectionCheck.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/getStats/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/getStats/getStats.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/common/sdkId.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/normalizeIceFailure/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/normalizeIceFailure/normalizeIceFailure.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/sendCallAudit/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/sendCallAudit/sendCallAudit.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/sendCustomParameters/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/sendCustomParameters/sendCustomParameters.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/sendRingingFeedback/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/operations/sendRingingFeedback/sendRingingFeedback.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/callCancelled/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/callCancelled/callCancelled.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/callStatusRinging/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/callStatusRinging/callStatusUpdateRinging.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/callStatusUpdateFailed/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/callStatusUpdateFailed/callStatusUpdateFailed.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/sessionStatusEnded/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/sessionStatusEnded/sessionStatusUpdateEnded.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/receiveEarlyMedia/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/receiveEarlyMedia/receiveEarlyMedia.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/negotiation/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/negotiation/handleSlowUpdateRequest.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/negotiation/handleSlowUpdateResponse.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/notifications/negotiation/handleUpdateRequest.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/utils/setMediaInactive.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/utils/webrtc.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/media/compareMedia.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/media/summarizeMedia.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/media/matchMedias.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/media/compareSummary.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/pipeline/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/pipeline/runDefault.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/pipeline/runYaml.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/variable-diff/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/chalk/source/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/ansi-styles/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/ansi-styles/node_modules/color-convert/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/color-name/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/ansi-styles/node_modules/color-convert/route.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/chalk/node_modules/supports-color/browser.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/chalk/source/util.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/chalk/source/templates.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/webrtc/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/webrtc/establish/closeCall.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/webrtc/media/createLocal.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/webrtc/negotiation/generateOffer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/webrtc/negotiation/handleOffer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/webrtc/negotiation/receivedAnswer.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/sdp/handlers/changeDtlsRoleTo.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/callManager/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/callManager/negotiations.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/reporter/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/call/callstack/reporter/metricHandlers.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/reporter/src/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/reporter/src/reporter.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/reporter/src/report.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/reporter/src/timelineEvent.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/link/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/common/base.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/interface/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/interface/api.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/interface/reducers.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/interface/events.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/interface/eventTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/common/sagas.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/connectivity/common/websocket.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/link/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/interface/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/interface/reducers.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/interface/api.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/interface/events.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/interface/eventTypes.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/link/sagas/pushRegistration.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/link/sagas/notification.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/node_modules/pako/dist/pako.esm.mjs","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/notifications/middleware.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/configs.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/makeRequest.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/interface/events.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/requestModule.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/interface/index.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/interface/name.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/request/interface/api.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/packages/kandy/src/docs/docs.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@kandy-io/sdp-handlers/src/codecRemover.js","webpack://WebRTC//var/jenkins_home/workspace/Kandy.js_beta@2/node_modules/@kandy-io/sdp-handlers/src/index.js"],"names":["getCalls","getActiveCalls","getCallById","getCallByWrtcsSessionId","getCallByWebrtcSessionId","getOptions","getTurnInfo","state","call","calls","endedStates","CALL_STATES","ENDED","CANCELLED","filter","includes","callId","find","id","wrtcsSessionId","webrtcSessionId","config","turn","authCodes","callCodes","callHistoryCodes","groupsCodes","messagingCodes","mwiCodes","sipEventCodes","clickToCallCodes","bridgeCodes","subscriptionCodes","presenceCodes","usersCodes","webrtcCodes","NO_CODE","BasicError","constructor","message","code","name","INITIATING","INITIATED","EARLY_MEDIA","RINGING","CONNECTED","ON_HOLD","CALL_MEDIA_STATES","LOCAL_HOLD","REMOTE_HOLD","DUAL_HOLD","CALL_MEDIA_CONNECTION_STATES","NEW","CHECKING","COMPLETED","FAILED","DISCONNECTED","CLOSED","OPERATIONS","CHANGE_MEDIA","HOLD_MEDIA","UNHOLD_MEDIA","MUSIC_ON_HOLD","COMPLEX_OPERATIONS","DIRECT_TRANSFER","CONSULTATIVE_TRANSFER","JOIN","COMPLEX_OPERATION_MESSAGES","DIRECT_TRANSFER_SUCCESS","CONSULTATIVE_TRANSFER_SUCCESS","JOIN_SUCCESS","DIRECT_TRANSFER_FAILURE","CONSULTATIVE_TRANSFER_FAILURE","JOIN_FAILURE","STATUS_CODES","CALL_DIRECTION","INCOMING","OUTGOING","WEBRTC_DEVICE_KINDS","audioinput","videoinput","audiooutput","ICE_COLLECTION_RESULT_TYPES","START_CALL","WAIT","ERROR","MAKE","MAKE_ANONYMOUS","ANSWER","REJECT","IGNORE","END","SEND_RINGING_FEEDBACK","FORWARD_CALL","HOLD","UNHOLD","SEND_CUSTOM_PARAMETERS","ADD_MEDIA","ADD_BASIC_MEDIA","REMOVE_MEDIA","REMOVE_BASIC_MEDIA","GET_STATS","SEND_DTMF","REPLACE_TRACK","MEDIA_RESTART","RESYNC","PLAY_AUDIO","GET_AVAILABLE_CODECS","START_MOH","STOP_MOH","SLOW_START","ENDPOINTS","LOCAL","REMOTE","OP_STATUS","ONGOING","PENDING","OP_TRANSITIONS","START","UPDATE","FINISH","NO_FINISH_OPS","callActionsImport","turnActionsImport","callActions","turnActions","CALL_OPERATION","CALL_STARTED","CALL_JOIN","CALL_INCOMING","CALL_STATE_CHANGE","CALL_ADDED_MEDIA","CALL_REMOVED_MEDIA","CALL_TRACKS_ADDED","CALL_TRACKS_REMOVED","STATS_RECEIVED","CALL_TRACK_REPLACED","CUSTOM_PARAMETERS","AVAILABLE_CODECS","MEDIA_CONNECTION_CHANGE","API_LOG_TAG","manager","defaultOptions","logManager","getAuthConfig","getServiceUnavailableMaxRetries","getSubscriptionInfo","getConnectionInfo","getDomain","getIdentity","getUserInfo","getAuthScenario","getServices","getPlatform","getRequestInfo","authentication","subscription","serviceUnavailableMaxRetries","platform","undefined","connection","username","identity","domain","split","userInfo","isSSO","servicesInfo","requested","received","missing","status","SUBSCRIPTION_STATE","NONE","services","clientCorrelator","server","protocol","base","port","version","requestInfo","platforms","CPAAS","baseURL","token","accessToken","options","headers","Accept","Authorization","UC","LINK","setPlatform","connInfo","requestOptions","REPORTER_EVENTS","ADD_TRACKS","END_LOCAL","END_REMOTE","HOLD_LOCAL","HOLD_REMOTE","GET_USER_MEDIA","ICE_COLLECTION","INCOMING_CALL","PROCESS_RESPONSE","RECEIVE_CALL","RELAY_CANDIDATE_COLLECTED","REMOTE_RINGING","REST_REQUEST","SET_LOCAL_DESCRIPTION","SET_REMOTE_DESCRIPTION","UNHOLD_LOCAL","UNHOLD_REMOTE","REPORTER_REQUESTS","CREATE_SESSION","ANSWER_SESSION","REJECT_SESSION","FORWARD_SESSION","UPDATE_SESSION","END_SESSION","REPORTER_METRICS","CALL_DURATION","MAKE_CALL_LOCAL_SETUP","MAKE_CALL_REMOTE_SETUP","TIME_TO_ANSWER","TIME_TO_MEDIA_DURATION","TIME_TO_CALL_SETUP_DURATION","TIME_TO_IGNORE","TIME_TO_REJECT","TIME_TO_RINGING","TIME_TO_REMOVE_MEDIA","TIME_TO_REMOVE_MEDIA_REMOTE","TIME_TO_ADD_MEDIA","TIME_TO_ADD_MEDIA_REMOTE","TIME_TO_HOLD_LOCAL","TIME_TO_HOLD_REMOTE","TIME_TO_UNHOLD_LOCAL","TIME_TO_UNHOLD_REMOTE","TIME_TO_COLLECT_ICE_CANDIDATES","TIME_TO_RESTART_MEDIA","TIME_TO_RELAY_CANDIDATES","TIME_TO_SEND_CUSTOM_PARAMETERS","TIME_TO_FORWARD","TIME_TO_DIRECT_TRANSFER","TIME_TO_CONSULTATIVE_TRANSFER","TIME_TO_JOIN","REPORTER_OPERATION_EVENTS_MAP","ADD_MEDIA_REMOTE","ADD_BASIC_MEDIA_REMOTE","REMOVE_MEDIA_REMOTE","REMOVE_BASIC_MEDIA_REMOTE","callStatusUpdateEnded","ICE_COLLECTION_OPERATIONS","UNKNOWN","mergeValues","toQueryString","autoRestart","forwardAction","normalizeServices","defer","delay","objects","leftValue","rightValue","params","length","stringifiedParams","paramParser","stringify","saga","autoRestarting","args","shouldRestart","e","console","log","action","map","service","hasOwnProperty","d","promise","resolve","reject","duration","setTimeout","notificationTypes","WEBSOCKET","PUSH","connCheckResponsibility","CLIENT","SERVER","connCheckMethods","KEEP_ALIVE","PING_PONG","prefix","DEVICES_CHANGE","INITIALIZE_DEVICES","INITIALIZE_DEVICES_FINISH","trackPrefix","TRACK_ADDED","TRACK_REMOVED","RENDER_TRACKS","RENDER_TRACKS_FINISH","REMOVE_TRACKS","REMOVE_TRACKS_FINISH","MUTE_TRACKS","MUTE_TRACKS_FINISH","UNMUTE_TRACKS","UNMUTE_TRACKS_FINISH","TRACK_SOURCE_MUTED","TRACK_SOURCE_UNMUTED","sessionPrefix","SESSION_ADDED","SESSION_REMOVED","SESSION_NEW_TRACK","SESSION_TRACK_ENDED","SESSION_TRACK_REPLACED","SESSION_AUDIO_ENDED","SESSION_ICE_CONNECTION_STATE_CHANGE","SESSION_ICE_GATHERING_STATE_CHANGE","SESSION_ICE_CANDIDATE_COLLECTED","SESSION_ICE_COLLECTION_SCHEDULED_CHECK","mediaPrefix","MEDIA_NEW","MEDIA_REMOVED","MEDIA_CHANGE","MEDIA_NEW_TRACK","MEDIA_TRACK_ENDED","SET_BROWSER_DETAILS","PROCESS_NOTIFICATION","PROCESS_NOTIFICATION_FINISH","NOTIFICATION_RECEIVED","ENABLE_NOTIFICATION_CHANNEL","ENABLE_NOTIFICATION_CHANNEL_FINISH","REGISTER_APPLE_PUSH_NOTIFICATION","REGISTER_ANDROID_PUSH_NOTIFICATION","UNREGISTER_APPLE_PUSH_NOTIFICATION","UNREGISTER_ANDROID_PUSH_NOTIFICATION","getDevices","getSessions","getSessionById","getTracks","getTrackById","getMedia","getMediaById","getBrowserDetails","webrtc","devices","sessions","sessionId","session","tracks","trackId","track","media","mediaId","browser","level","getLocalTracks","getCallAction","getLocalOpTrackEvents","generateEndParams","getTrackDscpMapping","checkBandwidthControls","eventTypes","context","kind","getState","localTracks","tracksRemoved","prevState","currentState","prevCall","payload","localHold","remoteHold","remoteTracks","newCall","removedTracks","getNewRemoteTracks","prevRemote","newRemote","trackIds","remoteOp","event","type","isLocal","operation","transition","previous","error","skip","callAction","remoteHoldFinish","eventFns","remoteUnholdFinish","remoteAddMediaFinish","remoteRemoveMediaFinish","remoteStartMohFinish","remoteStopMohFinish","remoteSlowStart","updateCall","currState","push","currentCallState","endParams","remoteParticipant","displayNumber","remoteNumber","displayName","remoteName","statusCode","reasonText","trackLists","dscpControls","audio","audioTracks","video","videoTracks","screen","screenTracks","dscpTrackMapping","screenNetworkPriority","screenTrack","audioNetworkPriority","audioTrack","videoNetworkPriority","videoTrack","bandwidthControls","finalBandwidthControls","callPrefix","MAKE_CALL","PENDING_MAKE_CALL","SESSION_CREATED","MAKE_CALL_FINISH","MAKE_ANONYMOUS_CALL","MAKE_ANONYMOUS_CALL_FINISH","SEND_RINGING_FEEDBACK_FINISH","CALL_RINGING","SESSION_PROGRESS","CALL_CANCELLED","ANSWER_CALL","ANSWER_CALL_FINISH","REJECT_CALL","REJECT_CALL_FINISH","IGNORE_CALL","IGNORE_CALL_FINISH","CALL_ACCEPTED","END_CALL","END_CALL_FINISH","FORWARD_CALL_FINISH","PENDING_OPERATION","UPDATE_CALL","CALL_HOLD","CALL_HOLD_FINISH","CALL_UNHOLD","CALL_UNHOLD_FINISH","SET_CUSTOM_PARAMETERS","SEND_CUSTOM_PARAMETERS_FINISH","ADD_MEDIA_FINISH","REMOVE_MEDIA_FINISH","SEND_DTMF_FINISH","GET_STATS_FINISH","PENDING_CONSULTATIVE_TRANSFER","CONSULTATIVE_TRANSFER_FINISH","DIRECT_TRANSFER_FINISH","JOIN_START","PENDING_JOIN","JOIN_FINISH","REPLACE_TRACK_FINISH","MEDIA_RESTART_FINISH","RESYNC_FINISH","PENDING_PLAY_AUDIO","PLAY_AUDIO_FINISH","CUSTOM_PARAMETERS_RECEIVED","AVAILABLE_CODECS_RETRIEVED","OPERATION_UPDATE","CALL_REMOTE_HOLD_FINISH","CALL_REMOTE_UNHOLD_FINISH","REMOTE_ADD_MEDIA_FINISH","REMOTE_REMOVE_MEDIA_FINISH","REMOTE_START_MOH_FINISH","REMOTE_STOP_MOH_FINISH","REMOTE_SLOW_START","turnPrefix","TURN_CHANGED","deviceActionsImport","trackActionsImport","sessionActionsImport","mediaActionsImport","miscActionsImport","deviceActions","trackActions","sessionActions","mediaActions","miscActions","PEER","TRICKLE_ICE","FULL","HALF","ICE_GATHERING_STATE","GATHERING","COMPLETE","ENDPOINT","MEDIA_DIR","INACTIVE","SEND_ONLY","RECV_ONLY","SEND_RECV","ICE_COLLECTION_CHECK_REASONS","ICE_GATHERING_STATE_CHANGE","NEW_CANDIDATE","SCHEDULED","WS_ATTEMPT_CONNECT","WS_CONNECT_FINISHED","WS_DISCONNECT","WS_DISCONNECT_FINISHED","WS_RECONNECT_FAILED","WS_CLOSED","WS_ERROR","LOST_CONNECTION","RECEIVE_SERVER_PING","RECEIVE_SERVER_PONG","CHANGE_CONNECTIVITY_CHECKING","CHANGE_PING_INTERVAL","update","setSdpHandlers","actionTypes","values","pluginName","CONFIG_UPDATE","sdpHandlers","sanitizeSdesFromSdp","modifySdpBandwidth","SET_SDP_HANDLERS","getWebRTCSupportCapabilities","initialize","getDetails","mediaDevices","Boolean","navigator","peerConnection","window","RTCPeerConnection","getLogger","browserDetails","debug","renderer","Renderer","deviceManager","DeviceManager","trackManager","TrackManager","mediaManager","MediaManager","peerManager","PeerManager","sessionManager","SessionManager","webrtcManager","WebRTCManager","models","Track","Media","Peer","managers","logs","sdp","pipeline","sdpPipeline","handlers","CONNECT","SET_CONNECTION_INFO","CONNECTION_OCCURRED","CONNECT_FINISHED","GET_USER_DETAILS","USER_DETAILS_RECEIVED","DISCONNECT","DISCONNECT_FINISHED","RESUBSCRIPTION_FINISHED","REFRESH_TOKENS","REFRESH_TOKENS_FINISHED","UPDATE_SUBSCRIPTION","UPDATE_SUBSCRIPTION_FINISH","SET_TOKEN","SET_CREDENTIALS","SET_CREDENTIALS_FINISH","AUTHORIZATION_ERROR","UPDATE_HMAC_TOKEN","getAllRemoteTracks","getIncomingRemoteTracks","getAffectedRemoteTracks","mediaDiff","removed","affectedTracks","sectionIds","getAddedSectionIds","getRemovedSectionIds","get3xHeldSectionIds","getHeldSectionIds","get3xUnheldSectionIds","getUnheldSectionIds","getRemoteTrackIdsFromTransceivers","heldSections","changed","forEach","changedMedia","changes","sending","sectionId","sectionIndex","receiving","willReceive","unchanged","willSend","unheldSections","addedMediaSections","newSectionsWithTracks","added","mediaSummary","concat","removedMediaSections","getActiveRemoteTrackIds","incomingTracks","getIncomingRemoteTrackIds","getVersion","v8n","extend","function","value","validation","enums","v8nExact","exact","exactValues","passesAnyOf","errorMessages","v8nRule","input","validationErrorMessages","validationResults","testAll","parse","errors","info","prettyPrint","validationError","startingPath","validationErrorMessageHelper","acc","cause","rule","target","path","newVEM","ruleMessage","enumName","join","aOrAn","arg","chain","__","string","test","getConnectionState","getConnectivityConfig","getPingInterval","getCheckConnectivity","Error","pingInterval","checkConnectivity","getRemoteParticipant","targetCall","notification","callNotificationParams","remoteInfo","isConference","callerDisplayNumber","startsWith","isIncoming","direction","callerName","remoteDisplayNumber","logLevels","TRACE","DEBUG","INFO","WARN","SILENT","levelValues","logMethods","trace","warn","group","groupEnd","groupCollapsed","timeLevel","mapEvents","on","off","subscribe","unsubscribe","emitEvent","aliasEvent","mapping","MAP_EVENTS","listener","EVENTS_ON","eventType","EVENTS_OFF","EVENTS_SUBSCRIBE","EVENTS_UNSUBSCRIBE","EVENTS_EMIT","alias","EVENTS_ALIAS","connect","setConnectionInfo","connectionOccurred","connectFinished","getUserDetails","userDetailsReceived","disconnect","disconnectFinished","resubscribeFinished","refreshTokens","refreshTokensFinished","updateSubscription","updateSubscriptionFinished","setTokens","setCredentials","setCredentialsFinished","updateHmacToken","credentials","meta","isSensitive","userDetailsResponse","firstName","user_first_name","lastName","user_last_name","photoURL","emailAddress","user_email","reason","retryAfter","attemptNum","idToken","password","authname","hmacToken","bearerAccessToken","getMediaState","hasMedia","isLocalHold","isRemoteHold","isDualHold","callState","createManager","levelImport","logFormatter","defaultLogFormatter","SET_LEVEL","LEVELS_CHANGE","SET_HANDLER","HANDLERS_CHANGE","runPipeline","objectSdp","sdpTransform","originalSdp","newSdp","handler","write","createPipeline","defaultHandlers","run","setHandlers","getHandlers","makeSafeForCSS","replace","adapter","PARTIAL","DISCONNECT_REASONS","GONE","PREFIX","REQUEST","RESPONSE","createWsAction","isReconnect","wsAttemptConnect","wsDisconnect","wsConnectFinished","wsDisconnectFinished","wsReconnectFailed","wsClosed","wsError","lostConnection","receiveServerPing","receiveServerPong","changeConnectivityChecking","changePingInterval","normalizeSipUri","extractDomainFromAddress","addressString","indexOfAtSymbol","lastIndexOf","substr","separateAddressAndDomain","defaultDomainString","extractedDomain","address","extractPrependedData","inputString","prependedDataMatches","match","extractLeadingSpecialCharacters","potentialLeadingChars","actualLeadingChars","withoutVisualSeparators","isPhoneNumber","cleanNumber","phoneNumberMatch","processAddress","processDomain","domainString","indexOf","trim","resultingAddressAndDomain","prepend","leadingChars","linkCallRequest","handleLinkCallRequestError","generateCallUrl","sendRequest","url","response","body","getMessage","callControlResponse","result","isAnonymous","account","endUrl","userType","userId","requestType","checkLevel","checkHandler","upperLevel","toUpperCase","setLevel","levelsChanged","setHandler","handlersChanged","levelMap","handlerMap","DEVICES_CHANGED","INITIALIZE_DEVICES_ERROR","TRACKS_MUTED","TRACKS_UNMUTED","TRACK_RENDERED","TRACK_ENDED","removeTrickleIce","removeBundling","changeMediaDirection","preventDtlsRoleChange","iceOptions","groups","isValid","endpoint","mLine","setup","dtlsRole","request","authorizationError","nextRequestId","generateRequestId","requestId","getCommonOptions","getCpaasAgentHeaderValue","sanitizeRequest","fetchResource","useCustomHeader","injectAgentVersionHeader","customSuffix","customAgentVersionHeaderSuffix","headerValue","logOptions","authHeader","substring","JSON","resource","module","charAt","queryParams","queryString","fetch","SUBSCRIBE","SUBSCRIBE_FINISHED","UNSUBSCRIBE","UNSUBSCRIBE_FINISHED","REGISTER_SUB_SERVICE","PLUGIN_SUBSCRIPTION","PLUGIN_SUBSCRIPTION_FINISHED","PLUGIN_UNSUBSCRIPTION","PLUGIN_UNSUBSCRIPTION_FINISHED","CHANNEL_OPENED","CHANNEL_CLOSED","formatMediaConstraints","mediaConstraints","audioOptions","videoOptions","screenOptions","createMakeResponse","container","CallstackWebrtc","CallReporter","WebRTC","makeResponse","callReport","getReport","operationEvent","getEvent","localOp","eventId","processResponseEvent","addEvent","addData","sessionInfo","answerSdp","receivedAnswer","dispatch","endCallFinish","setError","endEvent","get","makeCallFinish","startTime","Date","now","getOperation","wasHold","wasUnhold","was3xHold","was3xUnhold","wasAddMedia","wasRemoveMedia","wasStartMoh","wasStopMoh","wasNoChange","hadMediaFlowing","hasMediaFlowing","stoppedFlowing","noActiveMediaAdded","some","noMediaRemoved","didChange","allStopped","every","notSending","MEDIA_TRANSITIONS","STOP","SAME","notReceiving","stillStopped","startedFlowing","sameMedia","noUnchangedSend","onlyStartChanges","onlyStartSending","onlyStartReceiving","wasFlowing","allSendOnly","isFlowing","allSending","wasntRemoved","somethingStarted","addedSending","changedSending","wasntAdded","wasChanged","onlyStopSending","onlyAudioChange","inactiveUnchanged","stopSendAudio","noChange","hasUnchanged","unchangedFlowing","changedFlowing","wasSending","wasReceiving","removedFlowing","addedFlowing","websocketNotification","externalNotification","notificationReceived","processNotificationFinish","enableNotificationChannel","registerApplePushNotification","registerAndroidPushNotification","unregisterApplePushNotification","unregisterAndroidPushNotification","enableNotificationChannelFinish","notificationHelper","channel","deferred","pushProvider","registration","channelEnabled","entry","timestamp","shortId","shortName","logInfo","messages","logLevel","logActions","partialDefaultLogActions","defaultActionHandler","actionOnly","collapsed","diff","exposePayloads","getLevel","getTypes","clonedState","fixIceServerUrls","parseConfigs","mergeDefaults","defaultPeerConfig","sdpSemantics","iceServers","iceCollectionIdealTimeout","iceCollectionMaxTimeout","serverTurnCredentials","earlyMedia","resyncOnConnect","mediaBrokerOnly","trickleIceMode","normalizeDestination","ringingFeedbackMode","callAuditTimer","mediaConnectionRetryDelay","v8nValidation","schema","array","iceCandidatePoolSize","optional","positive","iceTransportPolicy","bundlePolicy","certificates","expires","peerIdentity","rtcpMuxPolicy","iceCollectionCheckFunction","boolean","parseOptions","serverUrl","URL","query","search","queryFilterFunc","toLowerCase","key","serverQueryParams","URLSearchParams","keys","delete","newQuery","toString","majorVersion","iceCollectionDelay","maxIceTimeout","createAPI","mediaApi","sessionAdded","sessionRemoved","sessionNewTrack","sessionTrackEnded","sessionTrackReplaced","sessionIceConnectionStateChange","sessionIceGatheringStateChange","sessionIceCandidateCollected","sessionIceCollectionScheduledCheck","sessionAudioEnded","sessionActionHelper","INVALID_CREDENTIALS","CONNECT_FAIL_WS_ERROR","LINK_UNSUBSCRIBE_FAIL","LINK_SUBSCRIBE_FAIL","LINK_EXTEND_SUBSCRIPTION_FAIL","LINK_UPDATE_SUBSCRIPTION_FAIL","UC_SUBSCRIBE_FAIL","UC_REFRESH_TOKEN_FAIL","UC_CREATE_TOKEN_FAIL","UC_EXTEND_SUBSCRIPTION_FAIL","UC_DISCONNECT_FAIL","MISSING_SERVICE","LINK_SUBSCRIBE_UNAVAILABLE","UNKNOWN_ERROR","GENERIC_ERROR","INIT_MEDIA_FAILED","USER_MEDIA_ERROR","NOT_SUPPORTED","INVALID_STATE","INVALID_PARAM","STATE_DESYNC","INVALID_OFFER","NO_ICE_CANDIDATES","SESSION_MISMATCH","BAD_REQUEST","NOT_FOUND","NOT_AUTHENTICATED","FORBIDDEN","MISSING_ARGS","RESPONSE_ERROR","MISSING_PARAMETERS","CREATE_GROUP_FAIL","MARK_READ_FAIL","REMOVE_MEMBERS_FAIL","ADD_MEMBERS_FAIL","SEND_MESSAGE_FAIL","FETCH_MESSAGES_FAIL","FILE_UPLOAD_FAIL","FETCH_CONVERSATIONS_FAIL","INVALID_DESTINATION","INVALID_FILE_PARTS","SET_IS_TYPING_FAIL","FETCH_MWI_FAIL","NOT_PROVISIONED","NOT_SUBSCRIBED","INVALID_INPUT","ALREADY_EXISTS","MEDIA_NOT_FOUND","WS_CONNECTION_ERROR","CPAAS_WSREQUEST_FAIL","CPAAS_WSREVOKE_FAIL","CPAAS_WSREFRESH_FAIL","CPAAS_SERVICE_SUB_FAIL","CPAAS_SERVICE_UNSUB_FAIL","CPAAS_UNSUBSCRIBE_FAIL","connectivityCodes","WS_MESSAGE_ERROR","INVALID_STATUS","INVALID_ACTIVITY","INVALID_REQUEST","REFRESH_CONTACTS_FAIL","DIRECTORY_REQUEST_FAIL","proxyCodes","SET_PROXY_CHANNEL_FAIL","IN_ACTIVE_CALL","mediaTrack","mediaStream","stream","isLocalTrack","constraints","emitter","EventEmitter","onended","isNative","Event","trigger","emit","isUnsolicited","onmute","onunmute","setIsLocal","setStream","newStream","getStream","streamId","label","muted","enabled","readyState","mute","unmute","stop","getConstraints","setConstraints","constr","once","nativeStream","addTrack","has","set","removedTrack","removeTrack","wrappedTrack","getTrack","peer","defaults","iceTimer","rtcConfig","nativePeer","googDscp","customMethods","methods","bind","proxyPeer","iceCandidates","iceLoop","Proxy","prop","receiver","properties","events","eventName","iceCollectionScheduledCheck","proxyBase","elapsedTime","timeFromStart","iceCollectionDuration","iceGatheringState","rtcPeerConnectionConfig","rtcLocalSessionDescription","localDescription","resubscribe","extras","subscribeType","method","subscribeRequest","localization","useTurn","notificationType","supported","forceLogOut","errorCode","authorizationResponse","subscribeResponse","errorInfo","returnValue","subscribedServices","subscriptionParams","parseSpidrServices","subscriptionURL","resubResponse","requestSaga","actions","commonOptions","manualOptions","requestAction","responseAction","connectFlow","extendSubscription","onSubscriptionGone","onConnectionLostEntry","onConnectionLost","connectivityActionTypes","task","finishOrError","disconnectAction","base64","encode","utf8","websocketInfo","websocket","notificationChannel","wsOpenOrError","wsState","connected","resubTriggers","isOnSSO","linkConnection","resubDelay","Math","pow","expiry","takeGoneNotification","notificationMessage","takeResubGoneSubscription","connectWebsocket","disconnectWebsocket","waitForReconnect","timeout","isConnected","reconnected","disconnected","api","callActionHelper","makeCall","sessionCreated","pendingMakeCall","makeAnonymousCall","makeAnonymousCallFinish","callIncoming","sendRingingFeedback","sendRingingFeedbackFinish","callRinging","sessionProgress","callCancelled","answerCall","answerCallFinish","rejectCall","rejectCallFinish","callAccepted","ignoreCall","ignoreCallFinish","endCall","holdCall","holdCallFinish","unholdCall","unholdCallFinish","setCustomParameters","sendCustomParameters","sendCustomParametersFinish","customParametersReceived","addMedia","addMediaFinish","addBasicMedia","removeMedia","removeMediaFinish","removeBasicMedia","sendDTMF","sendDTMFFinish","getStats","getStatsFinish","forwardCall","forwardCallFinish","consultativeTransfer","pendingConsultativeTransfer","consultativeTransferFinish","directTransfer","directTransferFinish","joinStart","pendingJoin","joinFinish","replaceTrack","replaceTrackFinish","pendingOperation","getAvailableCodecs","availableCodecsRetrieved","restartMedia","restartMediaFinish","resync","resyncFinish","playAudio","playAudioPending","playAudioFinish","operationUpdate","callee","callOptions","customOptions","customParameters","customBodies","filePath","operationData","getSubscriptionConfig","getRegisteredServices","getNotificationChannels","getSubscribedServices","getSubscriptions","getSubscriptionExpiry","getWebsocketConfig","getWebsocketId","getPendingOperation","registeredServices","notificationChannels","subscriptions","Array","isArray","channelType","reduce","currentSub","subConfig","authConfig","sub","websocketId","organizeTracks","medias","all","obj","validate","addMediaOperation","CallRequests","Callstack","bandwidth","callBandwidth","finalBandwidth","utils","webrtcAddMedia","callInfo","offer","updateSession","responseError","rollbackErr","rollbackAddMedia","rollbackError","closeCall","local","mediaIds","isVideoInactive","item","isAudioInactive","sdpToYaml","results","finalDiffObject","step","displayBandwidth","displaySdp","fourSpaces","displayHandlers","displayDiffs","sixSpaces","text","formattedFunctionName","slice","indentation","trimEnd","handlerToYaml","eightSpaces","diffed","operationMap","SLOW_ANSWER","notificationMap","CALL_STATUS_ENDED","CALL_STATUS_RINGING","CALL_STATUS_FAILED","RECEIVE_EARLY_MEDIA","SESSION_STATUS_ENDED","getNotificationsInfo","getNotificationConfig","notifications","pushNotificationsRegistration","pushNotificationsDeRegistration","fetchSDP","bundleId","deviceToken","voipDeviceToken","standardDeviceToken","realm","isProduction","bundleID","registrationResponse","responseName","statuscode","responseType","partialUrl","watchRequests","handleRequest","authorizations","handleRequestSaga","__testonly__","linkAuthorization","ucAuthorization","cpaasAuthorization","authIssues","getStatusCode","REQUEST_ERROR","defaultPlugins","basePlugins","fn","callMeAuth","newCallMe","connectivity","linkRequest","root","plugins","create","createCodecRemover","exports","commonIndex","_","noConflict","factory","factoryDefaults","enableReduxDevTools","reduxDevToolsName","pluginFactories","sdkOptions","clonedOptions","common","pluginOptions","bottle","Bottle","sagas","store","middlewares","apis","reducers","initSagas","taskDescriptor","shared","capabilities","primitives","destroyedSDK","loggerMiddleware","destroyedSDKMiddleware","next","plugin","reducer","middleware","init","mixins","baseStamp","propertyDescriptors","objName","rootSaga","composeMiddleware","composeWithoutDevTools","sagaMiddleware","apiFactory","list","endsWith","publicAPI","getCapabilities","destroy","_destroy","cancel","destroyStateReducer","replaceReducer","immediately","defaultType","loggers","settings","defaultLogHandler","String","loggerName","logger","getHandler","getLoggers","createLogger","logFunc","injectables","shouldLog","timeLog","data","timer","timeWarn","createTimer","timers","time","start","timeEnd","elapsed","end","formattedString","tail","styleLog","logType","style","logPlugin","constant","Object","webRTC","webRTCLogManager","components","setLevelEntry","setHandlerEntry","levels","setLogLevel","setLogHandler","getLevelMap","getHandlerMap","err","types","createActionLogger","actionOptions","nextState","excludeActions","predicate","titleFormatter","colors","transformers","setupTransformers","actionPipeline","transformer","actionTransformers","removePayloads","passwordHider","actionTransformer","isSafe","took","parts","toFixed","crypto","fingerprint","generateBandwidthConfigs","limit","configImplementation","pluginInterface","configApi","getConfig","updateConfig","newConfigValues","configs","getConfiguration","iceCollectionInfo","timeoutConfigs","totalTurnServers","configuredIceServers","iceServer","urls","relayCandidates","candidate","component","parsedSdp","readyToStart","sectionRelays","parseInt","sdpMid","mid","wait","eventsImplementation","setupMiddleware","eventMap","actionType","mapper","then","eventReducer","aliases","count","eventEmitter","prototype","subscribeMap","strictMode","checkEvent","define","i","splice","arguments","apply","j","setStrictMode","strict","webrtcPlugin","initWebrtc","initLogLevel","createMediaOperations","createLogOperations","watchManagers","createMiddleware","details","setBrowserDetails","WebRTCLogOperations","operations","updateLogLevel","WEBRTC","createMediaAPI","WebRTCMediaOperations","getById","initializeDevices","browserConstraints","renderTracks","cssSelector","retValue","filteredTrackIds","basicError","removeTracks","muteTracks","affectedTrackIds","unmuteTracks","defaultState","camera","microphone","speaker","mediaReducers","mediaReducer","specificMediaActions","containers","selector","removeContainer","sourceMuted","removeSession","sessionReducers","oldTrackId","newLocalTracks","sessionReducer","specificSessionActions","filteredTracks","renderTrack","speakerId","renderTracksFinish","unrenderTrack","removeTracksFinish","allTracks","muteTracksFinish","unmuteTracksFinish","initializeDevice","setupDeviceInitialization","initializeDeviceFinish","devicesChanged","trackAdded","trackRemoved","trackSourceMuted","trackSourceUnmuted","trackManagerHelper","trackHelper","newMedia","removedMedia","mediaNewTrack","mediaTrackEnded","mediaActionHelper","webrtcLogManager","updateLogHandler","contextHelper","callEvent","watchDeviceEvents","change","checkDevices","devicesChangedAction","devicesChangedEvent","watchTrackManagerEvents","trackAddedAction","trackRemovedAction","watchTrackEvents","trackData","trackSourceMutedAction","trackSourceMutedEvent","trackSourceUnmutedAction","trackSourceUnmutedEvent","watchSessionManagerEvents","sessionAddedAction","sessionRemovedAction","watchSessionEvents","newTrack","newTrackAction","trackEnded","trackReplaced","trackReplacedAction","iceConnectionStateChange","iceConnectionStateChangeAction","iceConnectionState","iceCandidateCollected","iceCandidateCollectedAction","iceGatheringStateChange","iceGatheringStateChangeAction","iceCollectionScheduledCheckAction","audioFileEnded","isSuccess","watchMediaManagerEvents","newMediaAction","removedMediaAction","watchMediaEvents","mediaNewTrackAction","mediaTrackEndedAction","getAssociatedCallEvent","webrtcActionTypes","mediaConnectionState","logOperations","onicecandidate","oniceconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","onsignalingstatechange","ontrack","haveHalf","halfTrickleThreshold","iceCandidate","gatheringState","signalingState","nativeTrack","streams","targetStream","MediaStream","add","addIceCandidate","close","createAnswer","createOffer","findReusableTransceiver","setLocalDescription","setRemoteDescription","remoteDescription","catch","sender","clearTimeout","mediaDirections","answer","transceivers","getTransceivers","transceiver","currentDirection","localDesc","senderTracks","senders","getSenders","errMsg","targetTransceiver","tone","intertoneGap","callback","insertDTMF","handleToneChangeEvent","dtmf","dtmfSender","ontonechange","desc","dtlsMatch","isStarted","isIceCollectionCheckOngoing","localRole","remoteTracksAll","getLocalDescription","active","getRemoteDescription","remoteDesc","getRemoteTracks","getReceivers","isPassedHalfTrickleThreshold","passedHalf","timerPrototype","_startTime","getTime","getAll","browserConstraintsWorkaround","deviceId","setupMedia","remove","createLocal","constraintsWorkaround","getUserMedia","createLocalScreen","getDisplayMedia","createRemote","findTrack","allMedia","peers","Session","unfixedDebounce","debounce","convert","fixed","peerId","dtlsRoleRecord","latestRemoteDescription","setupPeerEventHandlers","recordNewDtlsRole","remoteSdpSessionId","getAllLocalTracks","allLocalTracks","warmup","addTracks","addTrackOrReuseTransceiverPromises","reusableTransceiver","setTransceiversDirection","description","setParameters","rollbackLocalDescription","iceCollectionCheckResult","promises","setNetworkPriority","networkPriority","parameters","getParameters","encodings","encoding","generateOffer","processOffer","previousDtlsRole","generateAnswer","processAnswer","findIndex","restartIce","getDtlsRole","DTMFOptions","sendOptions","targetPeer","leading","recreatePeer","oldPeer","newPeer","oldLocalTrack","getPeer","getLatestRemoteDesc","mids","remoteTrackIds","isReceiving","insertAudio","isReady","playIfReady","play","endOriginalTrack","oldTrack","currentTrackId","Audio","volume","AudioContext","source","createMediaElementSource","dest","createMediaStreamDestination","getAudioTracks","oncanplaythrough","onplay","onerror","setTransceiverDirection","targetDirection","setDirection","getSdpSessionId","oLine","recentDeviceChange","addEventListener","enumerateDevices","device","targetTrack","RTCRtpSender","codecs","entries","element","document","querySelector","rendererId","createElement","height","width","srcObject","src","createObjectURL","autoplay","playsInline","setSinkId","appendChild","index","removeChild","authComponents","anonymousConnect","anonymousDisconnect","baseAuth","noopAPI","normalAPI","apiGetters","isPending","throw","refreshToken","idTokenPayload","preferred_username","_removed","removeXtoken","updateToken","updateConnection","getConnection","subscriptionStates","disconnectReasons","jwt","tokenrealm","subscriptionInfo","maxReAttempts","wsResponse","anonUsername","upperReceived","reqService","requests","anonCallFactory","linkOperations","anonOperations","initPlugin","removeH264Codecs","createAnonApi","createRequests","CallManager","make","destination","participants","to","from","participantAddress","isSlowStart","answerSlow","ignore","forward","turnChanged","servers","hold","unhold","startVideo","screenShare","stopVideo","newTrackId","oldTrackState","iceRestart","resyncCallState","playAudioFile","onPlayingCallback","onPlaying","val","otherCallId","newCallId","usedCallIds","primaryCall","sendDtmf","states","mediaConnectionStates","noop","callEnder","endTime","callReducers","participantName","isCaller","setHandling","isHandling","newState","webrtcId","stateProperties","isRemote","tracksLeft","localTracksLeft","addedTracks","localAdded","removedRemote","removedLocal","localLeft","addedLocal","hasMOH","isJoinedCall","localRemoved","callReducer","specificCallActions","specificWebrtcSessionActions","updatedCall","stateProp","unsetOperation","currentOp","anonAPIs","linkAPI","makeAnonymous","accountToken","toToken","fromToken","isTokenBased","anonOptions","factories","callCancelledNotification","callStatusUpdateEndedNotification","callStatusUpdateFailedNotification","callStatusUpdateRingingNotification","sessionStatusUpdateEndedNotification","incomingCallNotification","remoteAnswerNotification","remoteOfferNotification","resyncSessionStatuses","sessionProgressNotification","setTurnCredentials","callStackMiddlewares","shouldHandlePattern","sessionData","sessionParams","callStatusUpdateFailed","callStatusUpdateRinging","sessionStatusUpdateEnded","notificationParams","calleeNumber","calleeDisplayNumber","establishOffer","negotiationAnswer","negotiationOffer","receiveEarlyMedia","CallOperations","turnCredentials","getSessionsMiddleware","iceCollectionCheck","normalizeIceFailure","callAudit","activeCalls","activeCall","updateCallState","callCollectionCheckMiddleware","callCollectionCheck","callIceCollectionCheck","normalizeIceFailureMiddleware","createActionHandler","sendCallAudit","actionTypesToDoAuditOn","preConnectedState","complexRequests","requestUtils","directTransferSession","callControlRequest","consultativeTransferSessions","otherWrtcsSessionId","joinSessions","firstSessionData","secondSessionData","establishRequests","createSession","report","originator","requestBody","fetchInfo","callMeRequest","notifyChannelId","requestEvent","answerSession","rejectSession","callDispositionRequest","forwardSession","endSession","miscRequests","getSession","updateCallRinging","updateCustomParameters","bodyType","auditCall","negotiationRequests","updateSessionResponse","default","registerOperation","createOperation","turnInfo","iceInfo","credential","remoteAnswer","isNegotiation","createAnonOperations","authActions","authActionTypes","Notifications","anonParticipants","takeAction","anonymousCallEnd","createCallstack","callOperations","callNotifications","initOperation","consultativeTransferOperation","otherCall","currentCall","directTransferOperation","joinOperation","secondaryCall","setupOutgoingSession","currentCallRemoteName","otherCallRemoteName","currentCallRemoteAddress","otherCallRemoteAddress","findLastOngoingEvent","webrtcInfo","offerSdp","newWrtcsSessionId","createMakeOperation","sessionOptions","sessionState","incomingCallOperation","setupIncomingCall","incomingCall","callConfig","receiveCallEvent","setupIncomingCallOperation","CallstackSDP","createSessionError","callConfigOptions","setupOutgoingSessionOperation","finalSdp","setLocalDescriptionEvent","slowValidate","answerOperation","answerWebrtcSession","answerSDP","slowAnswer","createSlowAnswerResponse","slowAnswerResponse","answerWebrtcSessionOperation","answerEvent","eachMedia","endOperation","callStatusEndedOperation","forwardOperation","ignoreOperation","rejectOperation","addMediaValidate","basicValidate","webrtcAddMediaOperation","setLocalError","mediaStates","mediaState","rollbackAddMediaOperation","localTracksToRemove","invalidIndexes","cur","ind","invalidTracks","addBasicMediaOperation","tracksOfKind","addMediaError","createAddMediaResponse","addMediaResponse","affectedLocalTracks","holdOperation","generateOfferError","rollbackHold","rollbackHoldOperation","createHoldResponse","holdResponse","unholdOperation","rollbackUnhold","rollbackUnholdOperation","createUnholdResponse","unholdResponse","affectedRemoteTracks","removeValidate","removeMediaOperation","webrtcRemoveMedia","removeMediaError","rollbackRemoveMedia","webrtcRemoveMediaOperation","rollbackRemoveMediaOperation","removeBasicMediaOperation","trackObj","createRemoveMediaResponse","removeMediaResponse","replaceTrackOperation","webRtcReplaceTrack","webrtcReplaceTrackOperation","webrtcReplaceTrack","noOfTruthyTrackTypes","newTrackKind","oldTrackKind","compatibleTrackKinds","newMedias","allNewTracks","newTracks","replaceTrackError","getAvailableCodecsOperation","errorMsg","iceRestartOperation","race","createMediaRestartResponse","mediaRestartResponse","createDtmfOperation","canSendOutBand","playOutBand","playInBand","gap","Number","createMediaStreamSource","convertTone","splitTones","addTones","matches","targetNode","tones","oscillators","createOscillator","oscNode","createGain","gain","scheduleTone","dur","frequency","setValueAtTime","toneSequence","toneStart","currentTime","numTones","delayTime","hasTelephoneEvent","stringSdp","hasCodec","rtp","codec","updateCallStateOperation","callStateAfterConnect","sessionStatusResponse","resyncCallStateOperation","latestCall","callIceCollectionCheckOperation","latestMainEvent","iceCollectionEvent","setLocalDescEvent","timeline","eventData","getData","relayCollectedEvent","callOperation","getStatsOperation","rtcStatsReport","sdkId","sdk","sdkMetaData","iter","rtcStatValue","stat","createNormalizeIceFailureOperation","isDisconnected","sendCallAuditOperation","timeoutHandle","successDelay","errorDelay","getAuditDuration","lastAudit","prepareRaceTriggers","triggerTimeout","triggerAudit","wrtcsSessionIdToUse","audit","statusVal","handleAuditResult","max","min","auditDuration","latestCallState","repeatingTask","raceTriggers","waitTime","sendCustomParametersOperation","sendRingingFeedbackOperation","callCancelOperation","callCancel","callStatusRingingOperation","receiveRingingEvent","customNames","param","callStatusFailedOperation","finishAction","sessionStatusEndedOperation","sessionStatusEnded","customStatusCode","receiveEarlyMediaOperation","handleSlowUpdateRequestOperation","handleSlowUpdateRequest","slowOffer","handleSlowUpdateResponseOperation","handleSlowUpdateResponse","compareMedia","mediaFlowing","undesired","dir","eventFn","handleUpdateRequestOperation","handleUpdateRequest","isMediaFlowing","sameSession","handleOffer","remote","Id","setMediaInactive","regex","isSameSdpSessionId","hasSameSessionId","currentDesc","sameId","firstSdpSessionId","secondSdpSessionId","createCompareMedia","prevSdpString","sdpString","isNaive","prevSdp","prevMedia","currMedia","sortedMedia","prevUnmatched","currUnmatched","matched","current","summarizeMedia","sdpMedia","ssrcGroups","mediaDirection","msid","ssrcs","ssrc","attribute","summary","matchMedias","matchMediasNaive","prevList","currList","prev","curr","findMatchingSectionId","prevM","mediaList","findMatchingMediaIds","m","currIndex","currM","longerLength","compareSummary","isDebug","pipelineFunc","runPipelineYaml","runPipelineDefault","oldNewSdp","yamlFormat","closeCallOperation","createLocalOperation","getUserMediaEvent","screenShareConstraints","screenShareMedia","audioConstraints","audioMedia","videoConstraints","videoMedia","errMessage","constraint","errorObj","generateOfferOperation","sessionNotFoundMsg","handleOfferOperation","setRemoteDescriptionEvent","receivedAnswerOperation","newRole","changeDtlsRoleTo","role","changeDtlsRole","original","callManager","negotiations","processOperation","createReport","otherCallOperationEvent","otherCallReport","joinedCallId","joinedCallReport","nextTransition","isEnded","processNotification","notificationEvent","op","stackMethod","mediaOffered","aMedia","createHandlers","isPreEstablish","isPendingMake","delayMidCall","opName","negotiationPranswer","callStartPattern","pranswer","createComponent","callReporter","reporter","metricHandlers","registerAllMetricHandlers","deleteReport","durationHandler","metric","startEvents","autoUnregister","startEvent","findLast","subEvent","addMetric","unregisterMetricHandler","joinedCallDurationHandler","relayCandidatesHandler","collectedCandidates","collectedCandidateInformation","candidateInfo","candidates","registerMetricHandler","createReporter","API_TAG","reports","newReport","reportFactory","reportData","metrics","newEvent","onEventEnded","addEventIdToMetric","eventIds","getMetric","getSerializable","createTimelineEvent","currentDate","newSubEvent","getError","defaultValues","reconnectLimit","reconnectDelay","reconnectTimeMultiplier","reconnectTimeLimit","autoReconnect","maxMissedPings","webSocketOAuthMode","baseConnectivity","responsibleParty","eventsMap","wsConnectFlow","connectivityApi","getSocketState","enableConnectivityChecking","enable","resetConnection","pinging","kandy","WS_CHANGE","websocketLifecycle","serverPingFlow","clientPingFlow","chan","wsConnectAction","wsInfo","disconnectWebsocketPattern","connConfig","lastContact","emitTask","wsEmitter","pingFlow","closeWebsocketPattern","cleanupWebSocket","oauthToken","access_token","ws","timeOfLastPing","configPingInterval","maxIdleDuration","serverPing","pingIntervalMillis","connCheck","interval","connAck","_sendWSMessage","timeOfLastPong","shouldCheck","intervalInSeconds","message_type","shouldCheckConnectivity","delayStartTime","serverPong","timeElapsed","timeUntilNextPing","send","connectionAttempt","safeOpenWs","openWebsocket","wsConnectStart","openWs","attemptDuration","remainingDelay","INITIAL_BUFFER_SIZE","wsUrl","WebSocket","validateWS","onOpen","onopen","onError","onclose","onmessage","createWsChannel","buffers","expanding","wsChannel","pushRegistrationSagas","idCacheLength","incomingCallNotificationMode","pushRegistration","enableWebsocketChannelEntry","newChannelState","notificationApi","process","registerApplePush","deferredResult","registerAndroidPush","unregisterApplePush","registrationInfo","unregisterAndroidPush","enableWebsocket","NOTI_ERROR","NOTI_CHANGE","NOTI_RECEIVED","applePushRegistrationEntry","androidPushRegistrationEntry","applePushUnregisterEntry","androidPushUnregisterEntry","registerPushDeviceToken","unregisterPushDeviceToken","normalizeSDP","enableWebsocketChannel","queue","externalNotifications","notificationId","formattedPayload","ids","duplicate","shift","sdpFormat","sdpCompressedBytes","atob","buf","ArrayBuffer","bufView","Uint8Array","strLen","charCodeAt","sdpUnCompressedBytes","fromCharCode","eventDataResponse","actionListeners","returnVal","pattern","singleTake","timeoutId","takeEveryAction","pluginFactory","ucRequest","cpaasRequest","createRequestHelper","responseTypes","json","blob","none","makeRequest","validateOptions","fetchOptions","ok","statusText","parseBody","contentType","responseBody","retryValue","futureDate","invalidUrlMessage","invalidResponseType","expectedType","apiResponse","httpResponse","logFakeAction","doRequest","gen","logState","groupMethod","hidePayload","actionToLog","repeat","str","times","pad","num","maxLength","getHours","getMinutes","getSeconds","getMilliseconds"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgH;AACtD;AACuE;AACxF;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAAqE,EAAE,EAQ1E;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,0FAAQ;;AAEV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6lBAA6lB;;AAE7lB;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAqC,EAAE,EAI1C;;AAEL,kDAAkD,uEAAW;AAC7D;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB,qEAAS;AAC1B;AACA;AACA,iBAAiB,uEAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,KAAqC,EAAE,EAI1C;;AAEH;AACA;AACA,gBAAgB,oEAAK;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yEAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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I;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,iCAAY;AACrB;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,gCAAI;AACf;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,gCAAI;AACf;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa,gCAAM;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,gCAAI;AACf;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,gCAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;AACA;AACA,WAAW,gCAAK;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,4CAAO;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gCAAa,mBAAmB,gCAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,wBAAI;AACf;AACA;AACA;AACA,WAAW,gCAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA;AACA,WAAW,gCAAI;AACf;AACA;AACA;AACA,WAAW,gCAAI;AACf,cAAc,gCAAI;AAClB,gBAAgB,gCAAK;AACrB,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,IAAI,yCAAkB;AACtB,EAAE,gCAAK,mBAAmB,qCAAQ;AAClC,EAAE,gCAAK,SAAS,qCAAQ;AACxB;;AAEA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,wFAAwF,aAAa;AACrG;AACA;;AAEA,SAAS,wBAAI;AACb;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA,SAAS,wBAAI;AACb;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA,SAAS,wBAAI;AACb;AACA;AA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AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yDAAyD,OAAO;AAChE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D,mEAAmE;AACnE,uEAAuE;AACvE;AACA,0DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AA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A;AACA;AACA,oDAAoD;;AAEpD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,uDAAG,E;;ACtNS;AACA;AAC3B,WAAW,GAAG,aAAa,eAAG;AACf,qDAAE,E;;ACHjB;AACe;AACf;AACA,CAAC,E;;ACHgC;AACN;AACsB;;AAEjD;AACA,MAAM,kBAAM;AACZ,WAAW,kBAAM;AACjB;;AAEA;AACA,iDAAiD,GAAG,IAAI;;AAExD;AACA,kCAAkC;;AAElC;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;;AAEA,SAAS,eAAe;AACxB;;AAEe,qDAA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AACA,MAAM,KAA4D,EAAE,EAEjE;;AAEH;AACA;AACA;AACA,GAAG;;AAEH,UAAU,kEAAM;AAChB;AACA;;AAEA;AACA;;AAEe,+DAAM,EAAC;;;;;;;;;;;;;;;;;;;;;ACzBP;AACf;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,C;;ACRkC;AACnB;AACf,MAAM,OAAO;AACb;AACA;AACA;AACA,QAAQ,OAAO;AACf;AACA;AACA;AACA,C;;ACVkC;AACS;AAC5B;AACf,YAAY,YAAW;AACvB,SAAS,OAAO;AAChB,C;;ACL+C;AAChC;AACf,QAAQ,cAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,C;;ACdiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACe;AACf,iBAAiB,sBAAsB;AACvC;AACA;AACA,MAAM,eAAc;AACpB,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,C;;ACrBqE;;AAErE;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,IAAI;AACf,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C;AACA;;AAEA,SAAS,iBAAW;AACpB;;AAEA;AACA,oBAAoB,KAAqC,+BAA+B,SAA4Q;AACpW;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,KAAqC,+BAA+B,SAAuF;AACjL;;AAEA,oBAAoB,iBAAW;AAC/B;;AAEA;AACA,oBAAoB,KAAqC,+BAA+B,SAA0F;AAClL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;;;AAGA;AACA;AACA,sBAAsB,KAAqC,+BAA+B,SAAgN;AAC1S;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA,sBAAsB,KAAqC,+BAA+B,SAAuF;AACjL;;AAEA;AACA,sBAAsB,KAAqC,+BAA+B,SAAgU;AAC1Z;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,KAAqC,+BAA+B,SAA2J;AACvP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;;AAGA;AACA;AACA,sBAAsB,KAAqC,+BAA+B,SAAga;AAC1f;;AAEA;AACA,sBAAsB,KAAqC,+BAA+B,SAA4G;AACtM;;AAEA;AACA,sBAAsB,KAAqC,+BAA+B,SAAoC;AAC9H;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;;;AAGA;AACA;AACA,sBAAsB,KAAqC,gCAAgC,SAAuF;AAClL;;AAEA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAqC,gCAAgC,SAAsF;AACrL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;;AAEA,yBAAyB,iBAAW;;AAEpC;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG,aAAa;;AAEhB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,sBAAsB,KAAqC,gCAAgC,SAA0U;AACra;;AAEA;AACA;AACA,KAAK;AACL,sBAAsB,KAAqC,gCAAgC,SAAqd;AAChjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;;AAEA,QAAQ,KAAqC,EAAE,EAI1C;;AAEL;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;;AAEA;;AAEA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,KAAqC,EAAE,uBAM1C;;AAEL;AACA;;AAEA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,KAAqC,gCAAgC,SAAkV;AAC/a;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,KAAqC,gCAAgC,SAAgN;AACzS;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,sEAAsE,aAAa;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;;AAEA;AACA,4EAA4E,aAAa;AACzF;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,KAAqC,gCAAgC,SAA6H;AAC1N;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,aAAa,cAAa,CAAC,cAAa,GAAG,YAAY;AACvD;AACA,OAAO;AACP;AACA;AACA;;AAEoJ;;;;;;;AChsBpJ,eAAe,mBAAO,CAAC,EAAc;AACrC,eAAe,mBAAO,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CA;AACA,WAAW,iCAAY;AACvB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,4CAAO;AAC1B;AACA,KAAK;AACL;AACA;AACA,GAAG,EAAE;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,yBAAK;AACb,SAAS,2CAAS;AAClB;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,6CAAQ,YAAY,2BAAO;AACpD,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;;AAEA,QAAQ,4CAAO;AACf;AACA;AACA;;AAEA,QAAQ,6CAAQ;AAChB;AACA,+CAA+C,gCAAW;AAC1D;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,UAAU,0CAAK;AACf;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG,EAAE;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,iCAAM;AAC1C;;AAEA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,MAAM,0CAAO;AACb;AACA;AACA;AACA;;AAEA,yBAAyB,gCAA4B;AACrD;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,mDAAiB;AACvC;AACA,GAAG,UAAU,0CAAO;AACpB;AACA,GAAG;AACH;AACA;;AAEA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO,0CAAO,mBAAmB;AACjC;AACA;;AAEA,uBAAuB,gCAA4B;AACnD;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,0CAAO,YAAY,gCAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,iCAAc;AACjC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,yBAAI;AAC3B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,2BAAO;AACpB,cAAc,2BAAO;;AAErB;AACA,SAAS,yBAAK;AACd;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,gCAAiB;AACnB;AACA;;AAEA,4CAA4C,mBAAmB,wBAAI,oCAAoC,wBAAG,mCAAmC,wBAAG,mCAAmC,wBAAI,oCAAoC,wBAAI,oCAAoC,wBAAG,mCAAmC,wBAAI,oCAAoC,wBAAI,oCAAoC,wBAAQ,sCAAsC,wBAAM,sCAAsC,wBAAc,uCAAuC,wBAAW,yCAAyC,wBAAK,qCAAqC,wBAAW,0CAA0C,wBAAW;;AAEtqB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM,iCAAM;AACZ,kBAAkB,yBAAI;;AAEtB;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,yBAAI;AACnB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,iCAAW;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,iCAAO;AAC9B;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,6BAAS;AACb;AACA;AACA,EAAE,6BAAS;AACX;AACA;AACA;AACA,EAAE,6BAAS;AACX,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA,mDAAmD;AACnD,6BAA6B,oCAAoC,GAAG;AACpE,4BAA4B;AAC5B,2BAA2B;AAC3B;;AAEA,IAAI,4BAAQ;AACZ,kBAAkB,6BAAS;AAC3B,mBAAmB,6BAAS;AAC5B;AACA;AACA;AACA;AACA,GAAG,2BAA2B,6BAAS;AACvC;;AAEA;AACA;;AAEA;AACA,WAAW,yBAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB,UAAU,6CAAW;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,6CAAW;AAChC;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,wBAAwB,4BAAQ,GAAG;AACnC;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,QAAQ,KAAqC,EAAE,EAE1C;;AAEL,IAAI,gCAAiB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,uBAAQ;;AAE1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA,wBAAwB,QAAQ,sCAAI;AACpC;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA,MAAM,KAAwE,EAAE,EAE7E;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,yBAAI;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,6CAAW;AACtB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,GAAG;;;AAGH,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa,iDAAiD;AAC9D,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA,OAAO,UAAU,iCAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,yCAAI,wCAAwC,6CAAW;AACxE;AACA,iBAAiB,6CAAW;AAC5B;AACA,OAAO,UAAU,iCAAe;AAChC;AACA,iBAAiB,yCAAI;AACrB;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,QAAQ,4CAAO;AACf;AACA,KAAK,UAAU,6CAAQ;AACvB;AACA;AACA;AACA;AACA,KAAK,2BAA2B,oCAAE;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;AACA,k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,EAAQ;AAC9B;AACA;AACA;AACA;AACA;;;;;;;ACRA,UAAU,mBAAO,CAAC,EAAQ;AAC1B,aAAa,mBAAO,CAAC,GAAW;AAChC,WAAW,mBAAO,CAAC,GAAS;AAC5B,UAAU,mBAAO,CAAC,EAAe;AACjC,aAAa,mBAAO,CAAC,EAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAO,CAAC,EAAQ;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnFA;AACA;AACA,YAAY;AACZ,GAAG;AACH,YAAY;AACZ;AACA;;;;;;;ACNA,eAAe,mBAAO,CAAC,EAAc;AACrC,eAAe,mBAAO,CAAC,EAAc;AACrC,2BAA2B,mBAAO,CAAC,GAA2B;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXa;AACb,aAAa,mBAAO,CAAC,EAAW;AAChC,WAAW,mBAAO,CAAC,EAAS;AAC5B,SAAS,mBAAO,CAAC,EAAc;AAC/B,kBAAkB,mBAAO,CAAC,EAAgB;AAC1C,cAAc,mBAAO,CAAC,EAAQ;;AAE9B;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,GAAG;AACH;;;;;;;ACbA,eAAe,mBAAO,CAAC,EAAQ;AAC/B;;AAEA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA,iCAAiC,SAAS,EAAE;AAC5C,CAAC,YAAY;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS,qBAAqB;AAC3D,iCAAiC,aAAa;AAC9C;AA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AAwB;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,6BAA6B;AAC7B,0BAA0B;AAC1B,0BAA0B;AAC1B,qBAAqB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,8EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qBAAqB;AACrB,0BAA0B;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;AC/Ia;AACb,aAAa,mBAAO,CAAC,EAAW;AAChC,cAAc,mBAAO,CAAC,EAAW;AACjC,WAAW,mBAAO,CAAC,EAAS;AAC5B,YAAY,mBAAO,CAAC,EAAU;AAC9B,WAAW,mBAAO,CAAC,EAAS;AAC5B,kBAAkB,mBAAO,CAAC,GAAiB;AAC3C,YAAY,mBAAO,CAAC,EAAW;AAC/B,iBAAiB,mBAAO,CAAC,GAAgB;AACzC,eAAe,mBAAO,CAAC,EAAc;AACrC,qBAAqB,mBAAO,CAAC,EAAsB;AACnD,SAAS,mBAAO,CAAC,EAAc;AAC/B,WAAW,mBAAO,CAAC,GAAkB;AACrC,kBAAkB,mBAAO,CAAC,EAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC1DA;AACA,cAAc,mBAAO,CAAC,GAAY;AAClC,WAAW,mBAAO,CAAC,GAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRa;AACb;AACA,cAAc,mBAAO,CAAC,EAAW;;AAEjC;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,GAAG,EAAE;AACL;;;;;;;;ACXa;AACb;AACA,cAAc,mBAAO,CAAC,EAAW;AACjC,gBAAgB,mBAAO,CAAC,EAAe;AACvC,UAAU,mBAAO,CAAC,EAAQ;AAC1B,YAAY,mBAAO,CAAC,EAAW;;AAE/B;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,GAAG,EAAE;AACL;;;;;;;;;;;;;AC3BA,MAAMyN,SAAS,UAAf;;AAEO,MAAM7P,wCAAgB6P,SAAS,eAA/B;;AAEA,MAAMzP,8CAAmByP,SAAS,kBAAlC,C;;;;;;;;;;;;;;;;;QC0FSkP,gB,GAAAA,gB;kBA0CQC,Y;QAoCRC,a,GAAAA,a;;AA3KhB;;AAGA;;AACA;;AACA;;AAGA;;;;AANA;AAQA,MAAMjvB,MAAMrI,iBAAWmZ,SAAX,CAAqB,MAArB,CAAZ;;AAEA;;;;;;AALA;AARA;AAiBA,MAAMpZ,iBAAiB;AACrB;AACAw3B,qBAAmB;AACjBC,kBAAc,cADG;AAEjBC,gBAAY;AAFK,GAFE;;AAOrB;AACAC,6BAA2B,IARN;AASrBC,2BAAyB,IATJ;AAUrBC,yBAAuB,IAVF;;AAYrB;AACAtf,eAAa,EAbQ;AAcrB2U,kBAAgB,KAdK;;AAgBrB;AACA4K,cAAY,KAjBS;AAkBrBC,mBAAiB,KAlBI;AAmBrBC,mBAAiB,KAnBI;AAoBrBC,kBAAgB,MApBK;AAqBrBC,wBAAsB,IArBD;AAsBrBC,uBAAqB,MAtBA;AAuBrBC,kBAAgB,KAvBK;AAwBrBC,6BAA2B;;AAG7B;AA3BuB,CAAvB,CA4BA,MAAMC,gBAAgBha,uBAAIia,MAAJ,CAAW;AAC/B;AACAf,qBAAmBlZ,uBAAIia,MAAJ,CAAW;AAC5Bd,kBAAc,uBAAM,CAAC,cAAD,CAAN,CADc;AAE5B;AACA;AACA;AACAC,gBAAYpZ,uBAAIka,KAAJ,EALgB;AAM5BC,0BAAsBna,uBAAIoa,QAAJ,CAAapa,uBAAIqa,QAAJ,EAAb,CANM;AAO5BC,wBAAoBta,uBAAIoa,QAAJ,CAAa,uBAAM,CAAC,KAAD,EAAQ,QAAR,EAAkB,OAAlB,CAAN,CAAb,CAPQ;AAQ5BG,kBAAcva,uBAAIoa,QAAJ,CAAa,uBAAM,CAAC,UAAD,EAAa,YAAb,EAA2B,YAA3B,CAAN,CAAb,CARc;AAS5BI,kBAAcxa,uBAAIoa,QAAJ,CACZpa,uBAAIka,KAAJ,GAAYvF,KAAZ,CAAkBsF,MAAlB,CAAyB;AACvBQ,eAASza,uBAAIoC,MAAJ;AADc,KAAzB,CADY,CATc;AAc5BsY,kBAAc1a,uBAAIoa,QAAJ,CAAapa,uBAAIoC,MAAJ,EAAb,CAdc;AAe5BuY,mBAAe3a,uBAAIoa,QAAJ,CAAa,uBAAM,CAAC,WAAD,EAAc,SAAd,CAAN,CAAb;AAfa,GAAX,CAFY;;AAoB/B;AACAf,6BAA2BrZ,uBAAIqa,QAAJ,EArBI;AAsB/Bf,2BAAyBtZ,uBAAIqa,QAAJ,EAtBM;AAuB/BO,8BAA4B5a,uBAAIoa,QAAJ,CAAapa,uBAAIE,QAAJ,EAAb,CAvBG;AAwB/BqZ,yBAAuBvZ,uBAAI6a,OAAJ,EAxBQ;;AA0B/B;AACA5gB,eAAa+F,uBAAIka,KAAJ,EA3BkB;AA4B/BtL,kBAAgB5O,uBAAI6a,OAAJ,EA5Be;;AA8B/B;AACArB,cAAYxZ,uBAAI6a,OAAJ,EA/BmB;AAgC/BpB,mBAAiBzZ,uBAAI6a,OAAJ,EAhCc;AAiC/BnB,mBAAiB1Z,uBAAI6a,OAAJ,EAjCc;AAkC/BlB,kBAAgB3Z,uBAAIoC,MAAJ,EAlCe;AAmC/BwX,wBAAsB5Z,uBAAI6a,OAAJ,EAnCS;AAoC/BhB,uBAAqB,uBAAM,CAAC,MAAD,EAAS,QAAT,CAAN,CApCU;AAqC/BC,kBAAgB9Z,uBAAIqa,QAAJ,EArCe;AAsC/BN,6BAA2B/Z,uBAAIqa,QAAJ;AAtCI,CAAX,CAAtB;AAwCA,MAAMS,eAAe,uBAAM,MAAN,EAAcd,aAAd,CAArB;;AAEA;;;;;;;AAOO,SAASjB,gBAAT,CAA2BhM,GAA3B,EAAgC;AACrC,MAAIgO,SAAJ;AACA,MAAI;AACFA,gBAAY,IAAIC,GAAJ,CAAQjO,GAAR,CAAZ;AACD,GAFD,CAEE,OAAO3b,KAAP,EAAc;AACdpH,QAAIka,IAAJ,CAAU,yCAAwC6I,GAAI,EAAtD;AACA,WAAOA,GAAP;AACD;AACD,QAAMlpB,WAAWk3B,UAAUl3B,QAA3B;AACA,QAAMo3B,QAAQF,UAAUG,MAAxB;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAOlO,GAAP;AACD;;AAED,MAAIoO,eAAJ;AACA,MAAIt3B,YAAYA,SAASu3B,WAAT,GAAuBhY,UAAvB,CAAkC,MAAlC,CAAhB,EAA2D;AACzD;AACA+X,sBAAkBE,OAAOA,QAAQ,WAAjC;AACD,GAHD,MAGO;AACL;AACAF,sBAAkB,MAAM,IAAxB;AACD;AACD,QAAMG,oBAAoB,IAAIC,eAAJ,CAAoBN,KAApB,CAA1B;AACA,sBAAWK,kBAAkBE,IAAlB,EAAX,EACG/hC,MADH,CACU0hC,eADV,EAEGxc,OAFH,CAEW0c,OAAOC,kBAAkBG,MAAlB,CAAyBJ,GAAzB,CAFlB;;AAIA,QAAMK,WAAWJ,kBAAkBK,QAAlB,EAAjB;AACAZ,YAAUG,MAAV,GAAmBQ,QAAnB;AACA,MAAIX,UAAUG,MAAV,CAAiB5xB,MAAjB,KAA4B2xB,MAAM3xB,MAAtC,EAA8C;AAC5CU,QAAIka,IAAJ,CAAU,0CAAyC6I,GAAI,EAAvD;AACD;;AAED,SAAOgO,UAAUY,QAAV,EAAP;AACD;;AAED;;;;;;AAMe,SAAS3C,YAAT,CAAuBz0B,UAAU,EAAjC,EAAqC;AAClD;AACA,QAAMq3B,eAAe,2BAAa,CAAb,CAArB;AACA,MAAIA,eAAe,CAAnB,EAAsB;AACpB,WAAOr3B,OAAP;AACD;;AAED,MAAIA,QAAQs1B,mBAAR,IAA+B,CAAC,CAAC,MAAD,EAAS,QAAT,EAAmBngC,QAAnB,CAA4B6K,QAAQs1B,mBAApC,CAApC,EAA8F;AAC5F7vB,QAAIka,IAAJ,CAAS,wEAAT;AACA3f,YAAQs1B,mBAAR,GAA8B,MAA9B;AACD;;AAED;AACA;AACA;AACA,MAAIt1B,QAAQs3B,kBAAZ,EAAgC;AAC9B,QAAI,CAACt3B,QAAQ80B,yBAAb,EAAwC;AACtC90B,cAAQ80B,yBAAR,GAAoC90B,QAAQs3B,kBAA5C;AACD;AACD,WAAOt3B,QAAQs3B,kBAAf;AACD;AACD,MAAIt3B,QAAQu3B,aAAR,IAAyB,CAACv3B,QAAQ+0B,uBAAtC,EAA+D;AAC7D,QAAI,CAAC/0B,QAAQ+0B,uBAAb,EAAsC;AACpC/0B,cAAQ+0B,uBAAR,GAAkC/0B,QAAQu3B,aAA1C;AACD;AACD,WAAOv3B,QAAQu3B,aAAf;AACD;AACD,SAAOv3B,OAAP;AACD;;AAED;;;;;;AAMO,SAAS00B,aAAT,CAAwB10B,UAAU,EAAlC,EAAsC;AAC3CA,YAAU,wBAAY7C,cAAZ,EAA4B6C,OAA5B,CAAV;AACA;AACA,MAAI,CAACA,QAAQq2B,0BAAb,EAAyC;AACvCr2B,YAAQq2B,0BAAR,GAAqCA,oCAArC;AACD;AACDE,eAAav2B,OAAb;;AAEA,SAAOA,OAAP;AACD,C;;;;;;ACrLD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,OAAO,eAAe;AACtB,OAAO,sBAAsB;AAC7B,OAAO,cAAc;AACrB,OAAO,gBAAgB;AACvB,OAAO,gBAAgB;AACvB,OAAO,oBAAoB;AAC3B,OAAO,kBAAkB;AACzB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wCAAwC,UAAU;AAClD,gCAAgC;AAChqCAAqC,eAAe,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC,aAAa;AAC7C,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sCAAsC;AACtC,0BAA0B;AAC1B,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iCAAiC;AACjC,iCAAiC,EAAE;AACnkBCheuBw3B,S;;AAZxB;;AAGA;;;;;;AAEA;;;;;;;AANA;AAae,SAASA,SAAT,CAAoBhK,SAApB,EAA+B;AAC5C,QAAM,EAAEpiB,OAAF,EAAWhO,UAAX,EAAuBH,WAAvB,KAAuCuwB,SAA7C;AACA,QAAM/nB,MAAMrI,WAAWmZ,SAAX,CAAqB,QAArB,CAAZ;;AAEA,QAAMkhB,WAAW,qBAAejK,SAAf,CAAjB;;AAEA;;;;;;;;;;;;;;AAcA,WAASxjB,iBAAT,GAA8B;AAC5BvE,QAAIgR,KAAJ,CAAUxZ,cAAc,mBAAxB;AACA,WAAO,kCAA0BmO,QAAQE,QAAR,EAA1B,CAAP;AACD;;AAED,SAAO;AACLb,WAAOgtB,QADF;AAELztB;AAFK,GAAP;AAID;;AAvCD,mB;;;;;;;;;;;;;;;;;QCsBgB0tB,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAIAC,e,GAAAA,e;QAIAC,iB,GAAAA,iB;QAIAC,oB,GAAAA,oB;QAIAC,+B,GAAAA,+B;QAIAC,8B,GAAAA,8B;QAIAC,4B,GAAAA,4B;QAIAC,kC,GAAAA,kC;QAQAC,iB,GAAAA,iB;;AAhEhB;;IAAY7iB,W;;AAGZ;;;;;;AAJA;AAMA,SAAS8iB,mBAAT,CAA8B5rB,IAA9B,EAAoClX,EAApC,EAAwCsW,UAAU,EAAlD,EAAsDwW,OAAO,EAA7D,EAAiE;AAC/D,QAAM1c,SAAS;AACb8G,QADa;AAEbZ,wCACKA,OADL;AAEEtW;AAFF;;AAMF;AARe,GAAf,CASA,IAAI,CAAC,iBAAQ8sB,IAAR,CAAL,EAAoB;AAClB1c,WAAO0c,IAAP,GAAcA,IAAd;AACD;AACD,MAAIxW,QAAQiB,KAAZ,EAAmB;AACjBnH,WAAOmH,KAAP,GAAe,IAAf;AACD;AACD,SAAOnH,MAAP;AACD;;AApBD;AAsBO,SAASgyB,YAAT,CAAuBpiC,EAAvB,EAA2BwP,MAA3B,EAAmC;AACxC,SAAOszB,oBAAoB9iB,YAAYvN,aAAhC,EAA+CzS,EAA/C,EAAmDwP,MAAnD,CAAP;AACD;;AAEM,SAAS6yB,cAAT,CAAyBriC,EAAzB,EAA6BwP,MAA7B,EAAqC;AAC1C,SAAOszB,oBAAoB9iB,YAAYtN,eAAhC,EAAiD1S,EAAjD,EAAqDwP,MAArD,CAAP;AACD;;AAEM,SAAS8yB,eAAT,CAA0BtiC,EAA1B,EAA8BwP,MAA9B,EAAsC;AAC3C,SAAOszB,oBAAoB9iB,YAAYrN,iBAAhC,EAAmD3S,EAAnD,EAAuDwP,MAAvD,CAAP;AACD;;AAEM,SAAS+yB,iBAAT,CAA4BviC,EAA5B,EAAgCwP,MAAhC,EAAwC;AAC7C,SAAOszB,oBAAoB9iB,YAAYpN,mBAAhC,EAAqD5S,EAArD,EAAyDwP,MAAzD,CAAP;AACD;;AAEM,SAASgzB,oBAAT,CAA+BxiC,EAA/B,EAAmCwP,MAAnC,EAA2C;AAChD,SAAOszB,oBAAoB9iB,YAAYnN,sBAAhC,EAAwD7S,EAAxD,EAA4DwP,MAA5D,CAAP;AACD;;AAEM,SAASizB,+BAAT,CAA0CziC,EAA1C,EAA8CwP,MAA9C,EAAsD;AAC3D,SAAOszB,oBAAoB9iB,YAAYjN,mCAAhC,EAAqE/S,EAArE,EAAyEwP,MAAzE,CAAP;AACD;;AAEM,SAASkzB,8BAAT,CAAyC1iC,EAAzC,EAA6CwP,MAA7C,EAAqD;AAC1D,SAAOszB,oBAAoB9iB,YAAYhN,kCAAhC,EAAoEhT,EAApE,EAAwEwP,MAAxE,CAAP;AACD;;AAEM,SAASmzB,4BAAT,CAAuC3iC,EAAvC,EAA2CwP,MAA3C,EAAmD;AACxD,SAAOszB,oBAAoB9iB,YAAY/M,+BAAhC,EAAiEjT,EAAjE,EAAqEwP,MAArE,CAAP;AACD;;AAEM,SAASozB,kCAAT,CAA6C5iC,EAA7C,EAAiDwP,MAAjD,EAAyD;AAC9D,SAAOszB,oBAAoB9iB,YAAY9M,sCAAhC,EAAwElT,EAAxE,EAA4EwP,MAA5E,CAAP;AACD;;AAED;;;;AAIO,SAASqzB,iBAAT,CAA4B7iC,EAA5B,EAAgCwP,MAAhC,EAAwC;AAC7C,SAAO;AACL0H,UAAM8I,YAAYlN,mBADb;AAELwD,sCAAWtW,EAAX,IAAkBwP,MAAlB,CAFK;AAGL+H,WAAOqJ,QAAQpR,OAAO+H,KAAf;AAHF,GAAP;AAKD,C;;;;;;;;;;;;ACvED;;;;AAIO,MAAMlX,gCAAY;AACvB0iC,uBAAqB,kBADE;AAEvBC,yBAAuB,kBAFA;AAGvBC,yBAAuB,kBAHA;AAIvBC,uBAAqB,kBAJE;AAKvBC,iCAA+B,kBALR;AAMvBC,iCAA+B,kBANR;AAOvBC,qBAAmB,kBAPI;AAQvBC,yBAAuB,kBARA;AASvBC,wBAAsB,kBATC;AAUvBC,+BAA6B,mBAVN;AAWvBC,sBAAoB,mBAXG;AAYvBC,mBAAiB,mBAZM;AAavBC,8BAA4B;;AAG9B;;;;AAhByB,CAAlB,CAoBA,MAAMrjC,gCAAY;AACvBsjC,iBAAe,QADQ;AAEvBC,iBAAe,QAFQ;AAGvBC,qBAAmB,QAHI;AAIvBC,oBAAkB,QAJK;AAKvBC,iBAAe,QALQ;AAMvB;AACAC,iBAAe,QAPQ;AAQvB;AACAC,iBAAe,QATQ;AAUvB;AACAC,gBAAc,QAXS;AAYvB;AACAC,iBAAe,QAbQ;AAcvB;AACAC,qBAAmB,SAfI;AAgBvB;AACAC,oBAAkB;;AAGpB;;;;AApByB,CAAlB,CAwBA,MAAM/jC,8CAAmB;AAC9BqjC,iBAAe,eADe;AAE9BW,eAAa,eAFiB;AAG9BC,aAAW,eAHmB;AAI9BC,qBAAmB,eAJW;AAK9BC,aAAW;AAEb;;;AAPgC,CAAzB,CAUA,MAAM9jC,8CAAmB;AAC9B+jC,gBAAc,eADgB;AAE9BC,kBAAgB;AAElB;;;;AAJgC,CAAzB,CAQA,MAAMpkC,oCAAc;AACzBojC,iBAAe,UADU;AAEzBC,iBAAe,UAFU;AAGzBgB,sBAAoB;;AAGtB;;;;AAN2B,CAApB,CAUA,MAAMpkC,0CAAiB;AAC5BqkC,qBAAmB,aADS;AAE5BC,kBAAgB,aAFY;AAG5BC,uBAAqB,aAHO;AAI5BC,oBAAkB,aAJU;AAK5BC,qBAAmB,aALS;AAM5BC,uBAAqB,aANO;AAO5BC,oBAAkB,aAPU;AAQ5BC,4BAA0B,aARE;AAS5BC,uBAAqB,aATO;AAU5BC,sBAAoB,cAVQ;AAW5BC,sBAAoB;;AAGtB;;;;AAd8B,CAAvB,CAkBA,MAAM9kC,8BAAW;AACtB+kC,kBAAgB;;AAGlB;;;;AAJwB,CAAjB,CAQA,MAAM9kC,wCAAgB;AAC3BijC,iBAAe,aADY;AAE3B;AACA8B,mBAAiB,aAHU;AAI3B;AACAC,kBAAgB;;AAGlB;;;;AAR6B,CAAtB,CAYA,MAAM9kC,oCAAc;AACzB+iC,iBAAe,eADU;AAEzB;AACAgC,iBAAe,eAHU;AAIzBC,kBAAgB,eAJS;AAKzBrB,aAAW,eALc;AAMzBR,iBAAe,eANU;AAOzB8B,mBAAiB,eAPQ;AAQzB7B,iBAAe;;AAGjB;;;;AAX2B,CAApB,CAeA,MAAMnjC,gDAAoB;AAC/BilC,uBAAqB,gBADU;AAE/BC,wBAAsB,gBAFS;AAG/BC,uBAAqB,gBAHU;AAI/BC,wBAAsB,gBAJS;AAK/BC,0BAAwB,gBALO;AAM/BC,4BAA0B,gBANK;AAO/BC,0BAAwB;;AAG1B;;;;AAViC,CAA1B,CAcA,MAAMC,gDAAoB;AAC/BC,oBAAkB;;AAGpB;;;;AAJiC,CAA1B,CAQA,MAAMxlC,wCAAgB;AAC3BylC,kBAAgB,YADW;AAE3BC,oBAAkB,YAFS;AAG3BC,mBAAiB,YAHU;AAI3BxC,iBAAe;;AAGjB;;;;AAP6B,CAAtB,CAWA,MAAMljC,kCAAa;AACxB6N,WAAS,SADe;AAExB83B,yBAAuB,SAFC;AAGxBC,0BAAwB,SAHA;AAIxB1C,iBAAe;;AAGjB;;;;AAP0B,CAAnB,CAWA,MAAMjjC,oCAAc;AACzBijC,iBAAe;;AAGjB;;;;AAJ2B,CAApB,CAQA,MAAM2C,kCAAa;AACxB3C,iBAAe,SADS;AAExB4C,0BAAwB,SAFA;AAGxBC,kBAAgB;AAHQ,CAAnB,C;;;;;;;;;;;;kBC3KiB5kB,K;;AAVxB;;AAGA;;;;;;AAEA;;;;;AAKe,SAASA,KAAT,CAAgB6kB,UAAhB,EAA4BC,WAA5B,EAAyC;AACtD,QAAM92B,MAAMrI,iBAAWmZ,SAAX,CAAqB,OAArB,EAA8B+lB,WAAWhnC,EAAzC,CAAZ;AACAmQ,MAAIkX,IAAJ,CAAU,gBAAe2f,WAAWjxB,IAAK,SAAzC;;AAEA;AACA,QAAM/V,KAAKgnC,WAAWhnC,EAAtB;AACA,QAAMkV,QAAQ8xB,UAAd;AACA,MAAIE,SAASD,WAAb;AACA,MAAIE,YAAJ;AACA,MAAIC,cAAc,EAAlB;AACA,QAAMC,UAAU,IAAIC,sBAAJ,EAAhB;;AAEA;;;;AAIApyB,QAAMqyB,OAAN,GAAgBtwB,SAAS;AACvB;AACA;AACA,UAAMuwB,WAAWvwB,iBAAiBwwB,KAAlC;;AAEA,UAAMpS,WAAW8R,eAAe,OAAf,GAAyB,QAA1C;AACA,UAAMO,UAAUF,WAAW,aAAX,GAA2B,WAA3C;AACAr3B,QAAIgR,KAAJ,CAAW,gBAAekU,QAAS,KAAIqS,OAAQ,IAA/C,EAAoDzwB,KAApD;;AAEAowB,YAAQM,IAAR,CAAa,OAAb,EAAsB;AACpB1yB,eAASC,MAAMlV,EADK;AAEpB;;;;;;;;;;AAUA4nC,qBAAeJ;AAZK,KAAtB;AAcD,GAvBD;;AAyBA;;;;;AAKAtyB,QAAM2yB,MAAN,GAAe5wB,SAAS;AACtB9G,QAAIgR,KAAJ,CAAU,iBAAV,EAA6BlK,KAA7B;AACAowB,YAAQM,IAAR,CAAa,OAAb,EAAsB;AACpB1yB,eAASC,MAAMlV,EADK;AAEpBoV,eAAS8xB,OAAOlnC,EAFI;AAGpBmX,eAASgwB;AAHW,KAAtB;AAKD,GAPD;;AASA;;;;;AAKAjyB,QAAM4yB,QAAN,GAAiB7wB,SAAS;AACxB9G,QAAIgR,KAAJ,CAAU,iBAAV,EAA6BlK,KAA7B;AACAowB,YAAQM,IAAR,CAAa,SAAb,EAAwB;AACtB1yB,eAASC,MAAMlV,EADO;AAEtBoV,eAAS8xB,OAAOlnC,EAFM;AAGtBmX,eAASgwB;AAHa,KAAxB;AAKD,GAPD;;AASA,WAASY,UAAT,CAAqB5wB,OAArB,EAA8B;AAC5BgwB,mBAAehwB,OAAf;AACD;;AAED,WAASA,OAAT,GAAoB;AAClB,WAAOgwB,YAAP;AACD;;AAED,WAASa,SAAT,CAAoBC,SAApB,EAA+B;AAC7Bf,aAASe,SAAT;AACD;AACD,WAASC,SAAT,GAAsB;AACpB,WAAOhB,MAAP;AACD;;AAED;;;;;AAKA,WAASlxB,QAAT,GAAqB;AACnB,WAAO;AACLhW,QADK;AAELmoC,gBAAUjB,OAAOlnC,EAFZ;AAGL+V,YAAMb,MAAMa,IAHP;AAILoB,eAASgwB,YAJJ;AAKLiB,aAAOlzB,MAAMkzB,KALR;AAMLC,aAAOnzB,MAAMmzB,KANR;AAOLC,eAASpzB,MAAMozB,OAPV;AAQLjpC,aAAO6V,MAAMqzB;AARR,KAAP;AAUD;;AAED;;;;AAIA,WAASC,IAAT,GAAiB;AACftzB,UAAMozB,OAAN,GAAgB,KAAhB;AACD;;AAED;;;;AAIA,WAASG,MAAT,GAAmB;AACjBvzB,UAAMozB,OAAN,GAAgB,IAAhB;AACD;;AAED;;;;AAIA,WAASI,IAAT,GAAiB;AACf,QAAIxzB,MAAMqzB,UAAN,KAAqB,OAAzB,EAAkC;AAChCp4B,UAAIgR,KAAJ,CAAU,sBAAV;AACA;AACD;;AAEDjM,UAAMwzB,IAAN;AACA;;;;;AAKAxzB,UAAMqyB,OAAN;AACD;;AAED;;;;;AAKA,WAASoB,cAAT,GAA2B;AACzB,WAAOvB,WAAP;AACD;;AAED;;;;;AAKA,WAASwB,cAAT,CAAyBC,MAAzB,EAAiC;AAC/BzB,kBAAcyB,MAAd;AACD;;AAED,WAASle,EAAT,CAAa,GAAG5a,IAAhB,EAAsB;AACpB,WAAOs3B,QAAQ1c,EAAR,CAAW,GAAG5a,IAAd,CAAP;AACD;;AAED,WAAS+4B,IAAT,CAAe,GAAG/4B,IAAlB,EAAwB;AACtB,WAAOs3B,QAAQyB,IAAR,CAAa,GAAG/4B,IAAhB,CAAP;AACD;;AAED,WAAS6a,GAAT,CAAc,GAAG7a,IAAjB,EAAuB;AACrB,WAAOs3B,QAAQzc,GAAR,CAAY,GAAG7a,IAAf,CAAP;AACD;;AAED;;;AAGA,SAAO;AACL/P,MADK;AAEL;AACAgW,YAHK;AAILwyB,QAJK;AAKLC,UALK;AAMLC,QANK;AAOLC,kBAPK;AAQLC,kBARK;AASL;AACAje,MAVK;AAWLC,OAXK;AAYLke,QAZK;AAaL;AACA;AACA;AACA5zB,SAhBK;AAiBL8yB,aAjBK;AAkBLE,aAlBK;AAmBLH,cAnBK;AAoBL5wB;AApBK,GAAP;AAsBD;;AAxMD,a;;;;;;;;;;;;;;;;;;;;;kBCUwBiL,K;;AAZxB;;AAGA;;;;;;AAEA;;;;;;;AAOe,SAASA,KAAT,CAAgB2mB,YAAhB,EAA8B5xB,OAA9B,EAAuC;AACpD,QAAMhH,MAAMrI,iBAAWmZ,SAAX,CAAqB,OAArB,EAA8B8nB,aAAa/oC,EAA3C,CAAZ;AACAmQ,MAAIkX,IAAJ,CAAU,gBAAelQ,UAAU,OAAV,GAAoB,QAAS,SAAtD;;AAEA;AACA,QAAMnX,KAAK+oC,aAAa/oC,EAAxB;AACA,QAAMknC,SAAS6B,YAAf;AACA,QAAM1B,UAAU,IAAIC,sBAAJ,EAAhB;;AAEA;;;;AAIA,QAAMtyB,SAAS,mBAAf;;AAEA;;;;;AAKA,WAASgB,QAAT,GAAqB;AACnB,WAAO;AACLhW,UAAIA,EADC;AAELgV,cAAQ,oBAAWA,OAAOiL,MAAP,EAAX,EAA4B5P,GAA5B,CAAgC6E,SAASA,MAAMc,QAAN,EAAzC,CAFH;AAGLmB,eAASA;AAHJ,KAAP;AAKD;;AAED;;;;;AAKA,WAAS6xB,QAAT,CAAmB9zB,KAAnB,EAA0B;AACxB,QAAIF,OAAOi0B,GAAP,CAAW/zB,MAAMlV,EAAjB,CAAJ,EAA0B;AACxBmQ,UAAIgR,KAAJ,CAAW,UAASjM,MAAMlV,EAAG,0BAAyBA,EAAG,IAAzD;AACA;AACD;;AAED;AACAknC,WAAO8B,QAAP,CAAgB9zB,MAAMA,KAAtB;AACA;AACAF,WAAOk0B,GAAP,CAAWh0B,MAAMlV,EAAjB,EAAqBkV,KAArB;;AAEA;;;AAGAA,UAAMyV,EAAN,CAAS,OAAT,EAAkB,MAAM;AACtB,YAAMwe,eAAeC,YAAYl0B,MAAMlV,EAAlB,CAArB;AACA;AACA,UAAImpC,YAAJ,EAAkB;AAChB9B,gBAAQM,IAAR,CAAa,aAAb,EAA4B;AAC1BvyB,mBAASpV,EADiB;AAE1BiV,mBAASk0B,aAAanpC;AAFI,SAA5B;AAID;AACF,KATD;AAUA;AACAqnC,YAAQM,IAAR,CAAa,WAAb,EAA0B;AACxBvyB,eAASpV,EADe;AAExBiV,eAASC,MAAMlV;AAFS,KAA1B;;AAKA;;;AAGAkV,UAAMyV,EAAN,CAAS,OAAT,EAAkB1T,SAAS;AACzB,YAAMoyB,eAAeC,SAASryB,MAAMhC,OAAf,CAArB;AACA,UAAIo0B,gBAAgBA,aAAan0B,KAA7B,IAAsCm0B,aAAan0B,KAAb,CAAmBmzB,KAA7D,EAAoE;AAClE;AACA;AACAhB,gBAAQM,IAAR,CAAa,aAAb,EAA4B;AAC1BvyB,mBAASpV,EADiB;AAE1BiV,mBAASgC,MAAMhC;AAFW,SAA5B;AAID;AACF,KAVD;;AAYA;;;AAGAC,UAAMyV,EAAN,CAAS,SAAT,EAAoB1T,SAAS;AAC3B,YAAMoyB,eAAeC,SAASryB,MAAMhC,OAAf,CAArB;AACA,UAAIo0B,gBAAgBA,aAAan0B,KAA7B,IAAsCm0B,aAAan0B,KAAb,CAAmBmzB,KAAnB,KAA6B,KAAvE,EAA8E;AAC5E;AACA;AACAhB,gBAAQM,IAAR,CAAa,eAAb,EAA8B;AAC5BvyB,mBAASpV,EADmB;AAE5BiV,mBAASgC,MAAMhC;AAFa,SAA9B;AAID;AACF,KAVD;AAWD;;AAED;;;;;;AAMA,WAASm0B,WAAT,CAAsBn0B,OAAtB,EAA+B;AAC7B,UAAMC,QAAQo0B,SAASr0B,OAAT,CAAd;AACA,QAAIC,KAAJ,EAAW;AACTF,aAAO4sB,MAAP,CAAc3sB,OAAd;AACA,aAAOC,KAAP;AACD;AACF;;AAED;;;;AAIA,WAASwzB,IAAT,GAAiB;AACfp0B,gBAAYwQ,OAAZ,CAAoB5P,SAAS;AAC3BA,YAAMwzB,IAAN;AACD,KAFD;AAGArB,YAAQM,IAAR,CAAa,eAAb,EAA8B,KAAK3nC,EAAnC;AACD;;AAED;;;;;AAKA,WAASsU,SAAT,GAAsB;AACpB,WAAO,oBAAWU,OAAOiL,MAAP,EAAX,CAAP;AACD;;AAED;;;;;;AAMA,WAASqpB,QAAT,CAAmBr0B,OAAnB,EAA4B;AAC1B,WAAOD,OAAOukB,GAAP,CAAWtkB,OAAX,CAAP;AACD;;AAED,WAAS0V,EAAT,CAAa,GAAG5a,IAAhB,EAAsB;AACpB,WAAOs3B,QAAQ1c,EAAR,CAAW,GAAG5a,IAAd,CAAP;AACD;;AAED,WAAS+4B,IAAT,CAAe,GAAG/4B,IAAlB,EAAwB;AACtB,WAAOs3B,QAAQyB,IAAR,CAAa,GAAG/4B,IAAhB,CAAP;AACD;;AAED,WAAS6a,GAAT,CAAc,GAAG7a,IAAjB,EAAuB;AACrB,WAAOs3B,QAAQzc,GAAR,CAAY,GAAG7a,IAAf,CAAP;AACD;;AAED;;;AAGA,SAAO;AACL/P,MADK;AAELgV,UAFK;AAGLmC,WAHK;AAIL;AACAnB,YALK;AAML1B,aANK;AAOLg1B,YAPK;AAQL;AACAN,YATK;AAUL;AACAN,QAXK;AAYL;AACA/d,MAbK;AAcLme,QAdK;AAeLle;AAfK,GAAP;AAiBD;;AApLD,a;;;;;;;;;;;;;;;;;;;;;;;;;kBCuBwB2e,I;;AArBxB;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;AACA;;AAGA;;;;AACA;;;;AAEA;;;;;;;;;;;AAJA;AAZA;;;;AAyBe,SAASA,IAAT,CAAevpC,EAAf,EAAmBG,SAAS,EAA5B,EAAgCqhB,YAAhC,EAA8C;AAC3D,QAAMrR,MAAMrI,iBAAWmZ,SAAX,CAAqB,MAArB,EAA6BjhB,EAA7B,CAAZ;AACAG,WAAS,wBAAYqpC,gBAAZ,EAAsBrpC,MAAtB,CAAT;AACAgQ,MAAIkX,IAAJ,CAAS,oBAAT;;AAEA,QAAMoiB,WAAW,yBAAjB;AACA,QAAMpC,UAAU,IAAIC,sBAAJ,EAAhB;;AAEA;AACAn3B,MAAIgR,KAAJ,CAAU,iCAAV,EAA6ChhB,OAAOupC,SAApD;AACA,QAAMC,aAAa,IAAI3oB,iBAAJ,CAAsB7gB,OAAOupC,SAA7B,EAAwC,EAAEnJ,UAAU,CAAC,EAAEqJ,UAAU,IAAZ,EAAD,CAAZ,EAAxC,CAAnB;;AAEA;AACA,QAAMC,2CACDC,iBADC;AAEJnf,QAAI0c,QAAQ1c,EAAR,CAAWof,IAAX,CAAgB1C,OAAhB,CAFA;AAGJzc,SAAKyc,QAAQzc,GAAR,CAAYmf,IAAZ,CAAiB1C,OAAjB,CAHD;AAIJyB,UAAMzB,QAAQyB,IAAR,CAAaiB,IAAb,CAAkB1C,OAAlB;;AAGR;;;;;;;;;;;;;AAPM,IAAN,CAoBA,MAAMp9B,OAAO;AACX0/B,cADW;AAEXK,eAAWlhC,SAFA;AAGX9I,MAHW;AAIXw1B,cAAU,IAJC;AAKXr1B,UALW;AAMXqhB,gBANW;AAOXrR,OAPW;AAQXs5B,YARW;AASXpC,WATW;AAUX4C,mBAAe,EAVJ;AAWXC,aAASphC;;AAGX;;;;;;;;;AAda,GAAb,CAuBAmB,KAAK+/B,SAAL,GAAiB,IAAIG,KAAJ,CAAUlgC,IAAV,EAAgB;AAC/B;;;;;;;;AAQAsvB,SAAK,UAAU1R,MAAV,EAAkBuiB,IAAlB,EAAwBC,QAAxB,EAAkC;AACrC,UAAI,OAAOpgC,KAAK0/B,UAAL,CAAgBS,IAAhB,CAAP,KAAiC,UAArC,EAAiD;AAC/C;;;;AAIA,YAAI,oBAAYP,aAAZ,EAA2BhqC,QAA3B,CAAoCuqC,IAApC,CAAJ,EAA+C;AAC7C;AACA,iBAAOP,cAAcO,IAAd,EAAoBL,IAApB,CAAyB9/B,IAAzB,CAAP;AACD,SAHD,MAGO;AACL;AACA,iBAAOA,KAAK0/B,UAAL,CAAgBS,IAAhB,EAAsBL,IAAtB,CAA2B9/B,KAAK0/B,UAAhC,CAAP;AACD;AACF,OAZD,MAYO,IAAIE,cAAcO,IAAd,KAAuB,OAAOP,cAAcO,IAAd,CAAP,KAA+B,UAA1D,EAAsE;AAC3E;;;;;AAKA;AACA,eAAOP,cAAcO,IAAd,EAAoBL,IAApB,CAAyB9/B,IAAzB,CAAP;AACD,OARM,MAQA,IAAIqgC,qBAAWF,IAAX,CAAJ,EAAsB;AAC3B;;;;AAIA,YAAI,OAAOE,qBAAWF,IAAX,CAAP,KAA4B,UAAhC,EAA4C;AAC1C;AACA;AACA,iBAAOE,qBAAWF,IAAX,EAAiBL,IAAjB,CAAsB9/B,IAAtB,GAAP;AACD,SAJD,MAIO;AACL;AACA,iBAAOA,KAAK0/B,UAAL,CAAgBS,IAAhB,CAAP;AACD;AACF,OAbM,MAaA,IAAIA,SAAS,YAAT,IAAyBngC,KAAKmgC,IAAL,CAA7B,EAAyC;AAC9C;;;;;AAKA,eAAOngC,KAAKmgC,IAAL,CAAP;AACD,OAPM,MAOA;AACL;AACA,eAAOngC,KAAK0/B,UAAL,CAAgBS,IAAhB,CAAP;AACD;AACF,KAtD8B;;AAwD/B;;;;;;;;;;;AAWAlB,SAAK,UAAUrhB,MAAV,EAAkBuiB,IAAlB,EAAwB9jB,KAAxB,EAA+B+jB,QAA/B,EAAyC;AAC5C,UAAIE,iBAAOH,IAAP,CAAJ,EAAkB;AAChB;AACA;AACA,eAAOG,iBAAOH,IAAP,EAAaL,IAAb,CAAkB9/B,IAAlB,EAAwBqc,KAAxB,CAAP;AACD,OAJD,MAIO,IAAI8jB,SAAS,UAAb,EAAyB;AAC9B;;;;;;;AAOAngC,aAAKurB,QAAL,GAAgBlP,KAAhB;AACA,eAAO,IAAP;AACD,OAVM,MAUA;AACL;AACA,eAAO,mBAAYrc,KAAK0/B,UAAjB,EAA6BS,IAA7B,EAAmC9jB,KAAnC,CAAP;AACD;AACF;AAtF8B,GAAhB,CAAjB;;AAyFA;;;;;;AAMA,OAAK,MAAMkkB,SAAX,IAAwBD,gBAAxB,EAAgC;AAC9BtgC,SAAK+/B,SAAL,CAAeQ,SAAf,IAA4B,MAAM,CAAE,CAApC;AACD;;AAED,SAAOvgC,KAAK+/B,SAAZ;AACD,C;;;;;;;;;;;;kBC9KuBS,2B;AAPxB;;;;;;;AAOe,SAASA,2BAAT,CAAsCC,SAAtC,EAAiD;AAC9D,QAAM,EAAEV,SAAF,EAAaP,QAAb,EAAuBQ,aAAvB,EAAsC5C,OAAtC,EAA+ClnC,MAA/C,KAA0DuqC,SAAhE;;AAEA;AACA,QAAMC,cAAclB,SAASmB,aAAT,EAApB;;AAEAvD,UAAQM,IAAR,CAAa,gBAAb,EAA+B;AAC7BkD,2BAAuBF,WADM;AAE7BV,iBAF6B;AAG7Ba,uBAAmBd,UAAUc,iBAHA;AAI7BC,6BAAyB5qC,MAJI;AAK7B6qC,gCAA4BhB,UAAUiB;AALT,GAA/B;AAOD,C;;;;;;;;;;;;;;;;;;;;;QCCiBpgB,S,GAAAA,S;QA2HAC,W,GAAAA,W;QA6CAogB,W,GAAAA,W;;AA5LlB;;AAGA;;;;AACA;;;;AACA;;AAGA;;AACA;;;;AAFA;AARA;AAYA,MAAM/6B,MAAMrI,iBAAWmZ,SAAX,CAAqB,MAArB,CAAZ;;AAEA;;;;;;;;;AAXA;AAkBO,UAAW4J,SAAX,CAAsB9hB,UAAtB,EAAkC8jB,WAAlC,EAA+Cse,SAAS,EAAxD,EAA4D;AACjE;;;;;AAKA,QAAMC,gBAAgBriC,WAAWyqB,WAAX,GAAyB,WAAzB,GAAuC,MAA7D;AACA,MAAItoB,iBAAiB,EAArB;AACAA,iBAAemgC,MAAf,GAAwB,MAAxB;;AAEAngC,iBAAegoB,GAAf,GACG,GAAEnqB,WAAWiB,QAAS,MAAKjB,WAAWgB,MAAO,IAAGhB,WAAWmB,IAAK,EAAjE,GACC,iBAAgBnB,WAAWoB,OAAQ,EADpC,GAEC,IAAGihC,aAAc,IAAGve,YAAY7jB,QAAS,eAH5C;;AAKAkC,iBAAekoB,IAAf,GAAsB,yBAAe;AACnCkY,sBAAkB;AAChB1K,eAAS73B,WAAW63B,OADJ;AAEhBtwB,eAASvH,WAAWuH,OAFJ;AAGhBi7B,oBAAcxiC,WAAWwiC,YAAX,IAA2B,YAHzB;AAIhBC,eAASziC,WAAWyiC,OAAX,IAAsB,IAJf;AAKhBC,wBAAkB1iC,WAAW0iC,gBAAX,IAA+B,WALjC;AAMhBC,iBAAW,CAAC,iBAAD,CANK;AAOhBC,mBAAa,CAACR,OAAOQ,WAAP,IAAsB,KAAvB,EAA8B7J,QAA9B,EAPG;AAQhBh4B,wBAAkBqhC,OAAOrhC;AART;AADiB,GAAf,CAAtB;;AAaA;AACA;AACAoB,mBAAiB,wBAAYigC,MAAZ,EAAoBjgC,cAApB,CAAjB;;AAEAiF,MAAIkX,IAAJ,CAAU,oBAAmBwF,YAAY7jB,QAAS,EAAlD;AACA;AACA,QAAMmqB,WAAW,MAAM,uBAAQjoB,cAAR,CAAvB;;AAEA,MAAIioB,SAAS5b,KAAb,EAAoB;AAClB,QAAIq0B,YAAYvrC,kBAAU6iC,mBAA1B;AACA,QAAI/P,SAAS7c,OAAT,CAAiB8c,IAArB,EAA2B;AACzB,YAAMA,OAAOD,SAAS7c,OAAT,CAAiB8c,IAA9B;AACA,UAAIxa,UAAJ;AACA,UAAI6U,UAAJ;AACA,UAAI2F,KAAKxa,UAAL,IAAmBwa,KAAK5F,MAA5B,EAAoC;AAClC;;;;;;;AAOA5U,qBAAawa,KAAKxa,UAAlB;AACA,YAAIA,eAAe,GAAnB,EAAwB;AACtB6U,uBAAa2F,KAAK3F,UAAlB;AACAme,sBAAYvrC,kBAAUsjC,0BAAtB;AACD;AACF,OAbD,MAaO,IAAIvQ,KAAKyY,qBAAL,IAA8BzY,KAAKyY,qBAAL,CAA2BjzB,UAA7D,EAAyE;AAC9E;;;;;;AAMAA,qBAAawa,KAAKyY,qBAAL,CAA2BjzB,UAAxC;AACD,OARM,MAQA;AACL;AACAA,qBAAawa,KAAK0Y,iBAAL,CAAuBlzB,UAApC;AACA,YAAIA,eAAe,GAAnB,EAAwB;AACtB6U,uBAAa2F,KAAK0Y,iBAAL,CAAuBre,UAApC;AACAme,sBAAYvrC,kBAAUsjC,0BAAtB;AACD;AACF;AACDxzB,UAAIgR,KAAJ,CAAW,6CAA4CvI,UAAW,GAAlE;;AAEA;AACA,YAAMmzB,YAAY;AAChB1qC,iBAAU,0CAAyCuX,UAAW,GAD9C;AAEhBtX,cAAMsqC;AAFU,OAAlB;AAIA,YAAMI,cAAc;AAClB;AACAz0B,eAAO,IAAIpW,gBAAJ,CAAe4qC,SAAf;AAFW,OAApB;AAIA,UAAIte,cAAcA,aAAa,CAA/B,EAAkC;AAChCue,oBAAYve,UAAZ,GAAyBA,UAAzB;AACD;;AAED,aAAOue,WAAP;AACD,KAjDD,MAiDO;AACL77B,UAAIgR,KAAJ,CAAU,2BAAV,EAAuCgS,SAAS7c,OAAT,CAAiBid,MAAjB,CAAwBlyB,OAA/D;AACA;AACA,aAAO;AACL;AACAkW,eAAO,IAAIpW,gBAAJ,CAAe;AACpBE,mBAAU,6BAA4B8xB,SAAS7c,OAAT,CAAiBid,MAAjB,CAAwBlyB,OAAQ,GADlD;AAEpB;AACAC,gBAAMjB,kBAAU6iC;AAHI,SAAf;AAFF,OAAP;AAQD;AACF,GA/DD,MA+DO;AACL;AACA,UAAM4I,oBAAoB3Y,SAAS7c,OAAT,CAAiB8c,IAAjB,CAAsB0Y,iBAAhD;;AAEA,UAAMG,qBAAqBH,kBAAkBI,kBAAlB,CAAqC57B,OAAhE;AACA,UAAMhH,eAAe,MAAM,oBAAK6iC,4BAAL,EAAyBpjC,WAAWuH,OAApC,EAA6C27B,kBAA7C,CAA3B;AACA97B,QAAIgR,KAAJ,CAAW,8DAA6D7X,aAAaI,MAAO,EAA5F;;AAEA;AACE6N,aAAO,KADT;AAEEjO;AAFF,OAGKwiC,iBAHL;AAKD;AACF;;AAED;;;;;;;;AAQO,UAAWhhB,WAAX,CAAwB/hB,UAAxB,EAAoCqjC,eAApC,EAAqD;AAC1D,QAAMlhC,iBAAiB,EAAvB;AACAA,iBAAemgC,MAAf,GAAwB,QAAxB;;AAEAngC,iBAAegoB,GAAf,GACG,GAAEnqB,WAAWgB,MAAX,CAAkBC,QAAS,MAAKjB,WAAWgB,MAAX,CAAkBA,MAAO,IAAGhB,WAAWgB,MAAX,CAAkBG,IAAK,EAAtF,GAA0FkiC,eAD5F;;AAGAj8B,MAAIkX,IAAJ,CAAS,qBAAT;AACA;AACA,QAAM8L,WAAW,MAAM,uBAAQjoB,cAAR,CAAvB;;AAEA;;;;;;AAMA,MAAIioB,SAAS5b,KAAb,EAAoB;AAClB,QAAI4b,SAAS7c,OAAT,CAAiB8c,IAArB,EAA2B;AACzB;AACA,YAAM,EAAExa,UAAF,KAAiBua,SAAS7c,OAAT,CAAiB8c,IAAjB,CAAsB0Y,iBAA7C;AACA37B,UAAIgR,KAAJ,CAAW,yDAAwDvI,UAAW,GAA9E;AACD,KAJD,MAIO;AACL;AACA,YAAM,EAAEvX,OAAF,KAAc8xB,SAAS7c,OAAT,CAAiBid,MAArC;AACApjB,UAAIgR,KAAJ,CAAU,uCAAV,EAAmD9f,OAAnD;AACD;AACF,GAVD,MAUO;AACL;AACA8O,QAAIgR,KAAJ,CAAU,iCAAV;AACD;AACF;;AAED;;;;;;;;;;;;AAYO,UAAW+pB,WAAX,CAAwBniC,UAAxB,EAAoCJ,YAApC,EAAkD;AACvD,QAAMuC,iBAAiB,EAAvB;AACAA,iBAAemgC,MAAf,GAAwB,KAAxB;;AAEA,MAAI1iC,aAAamB,gBAAjB,EAAmC;AACjCoB,mBAAegoB,GAAf,GACG,GAAEnqB,WAAWgB,MAAX,CAAkBC,QAAS,MAAKjB,WAAWgB,MAAX,CAAkBA,MAAO,IAAGhB,WAAWgB,MAAX,CAAkBG,IAAK,EAAtF,GACC,iBAAgBnB,WAAWgB,MAAX,CAAkBI,OAAQ,EAD3C,GAEC,SAAQpB,WAAWC,QAAS,kCAAiCL,aAAamB,gBAAiB,EAH9F;AAID,GALD,MAKO;AACLoB,mBAAegoB,GAAf,GACG,GAAEnqB,WAAWgB,MAAX,CAAkBC,QAAS,MAAKjB,WAAWgB,MAAX,CAAkBA,MAAO,IAAGhB,WAAWgB,MAAX,CAAkBG,IAAK,EAAtF,GAA0FvB,aAAauqB,GADzG;AAED;;AAED;AACA;AACAhoB,iBAAekoB,IAAf,GAAsB,yBAAe;AACnCkY,sBAAkB;AAChB1K,eAASj4B,aAAai4B,OADN;AAEhBtwB,eAAS3H,aAAa2H,OAFN;AAGhBi7B,oBAAc5iC,aAAa4iC,YAAb,IAA6B,YAH3B;AAIhBC,eAAS7iC,aAAa6iC,OAAb,IAAwB,IAJjB;AAKhBC,wBAAkB9iC,aAAa8iC,gBAAb,IAAiC;AALnC;AADiB,GAAf,CAAtB;;AAUAt7B,MAAIkX,IAAJ,CAAS,qBAAT;AACA;AACA,QAAM8L,WAAW,MAAM,uBAAQjoB,cAAR,CAAvB;;AAEA,MAAIioB,SAAS5b,KAAb,EAAoB;AAClB,QAAI4b,SAAS7c,OAAT,CAAiB8c,IAArB,EAA2B;AACzB;AACA,YAAM,EAAExa,UAAF,KAAiBua,SAAS7c,OAAT,CAAiB8c,IAAjB,CAAsB0Y,iBAA7C;AACA37B,UAAIgR,KAAJ,CAAW,uDAAsDvI,UAAW,GAA5E;;AAEA,UAAIvX,OAAJ,EAAauqC,SAAb;AACA,UAAIzY,SAAS7c,OAAT,CAAiBid,MAAjB,CAAwBjyB,IAAxB,KAAiC,GAAjC,IAAwC,CAAC,CAAD,EAAI,EAAJ,EAAQzB,QAAR,CAAiB+Y,UAAjB,CAA5C,EAA0E;AACxE;;;;;;AAMAvX,kBAAW,uCAAsCuX,UAAW,GAA5D;AACA;AACA;AACA;AACA;AACAgzB,oBAAYhzB,UAAZ;AACD,OAbD,MAaO;AACLvX,kBAAW,uDAAsDuX,UAAW,GAA5E;AACAgzB,oBAAYvrC,kBAAU+iC,6BAAtB;AACD;;AAED,aAAO;AACL;AACA7rB,eAAO,IAAIpW,gBAAJ,CAAe,EAAEE,OAAF,EAAWC,MAAMsqC,SAAjB,EAAf;AAFF,OAAP;AAID,KA5BD,MA4BO;AACL;AACA,YAAM,EAAEvqC,OAAF,KAAc8xB,SAAS7c,OAAT,CAAiBid,MAArC;AACApjB,UAAIgR,KAAJ,CAAU,0CAAV,EAAsD9f,OAAtD;;AAEA,aAAO;AACL;AACAkW,eAAO,IAAIpW,gBAAJ,CAAe;AACpBE,mBAAU,wCAAuCA,OAAQ,GADrC;AAEpB;AACAC,gBAAMjB,kBAAU+iC;AAHI,SAAf;AAFF,OAAP;AAQD;AACF,GA3CD,MA2CO;AACL;AACA,UAAMiJ,gBAAgBlZ,SAAS7c,OAAT,CAAiB8c,IAAjB,CAAsB0Y,iBAA5C;;AAEA,QAAIO,cAAczzB,UAAd,KAA6B,CAA7B,IAAkCyzB,cAAczzB,UAAd,KAA6B,CAAnE,EAAsE;AACpE,YAAMqzB,qBAAqBI,cAAcH,kBAAd,CAAiC57B,OAA5D;AACA,YAAMhH,eAAe,MAAM,oBAAK6iC,4BAAL,EAAyBxjC,aAAa2H,OAAtC,EAA+C27B,kBAA/C,CAA3B;AACA97B,UAAIgR,KAAJ,CAAW,kEAAiE7X,aAAaI,MAAO,EAAhG;;AAEA;AACA;AACE6N,eAAO,KADT;AAEEjO;AAFF,SAGK+iC,aAHL;AAKD,KAXD,MAWO;AACLl8B,UAAIkX,IAAJ,CAAS,2CAAT,EAAsDglB,cAAczzB,UAApE;AACA;AACA,aAAO;AACLrB,eAAO,IAAIpW,gBAAJ,CAAe;AACpBE,mBAAU,8BAA6BgrC,cAAczzB,UAAW,GAD5C;AAEpBtX,gBAAMjB,kBAAU+iC;AAFI,SAAf;AADF,OAAP;AAMD;AACF;AACF,C;;;;;;;;;;;;kBCzQuB3N,O;QAON6W,W,GAAAA,W;;AA7BlB;;AACA;;IAAYC,O;;AACZ;;AAGA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;AAVA;AAuBe,SAAS9W,OAAT,CAAkB/qB,OAAlB,EAA2B8hC,aAA3B,EAA0C;AACvD,SAAO,mBAAKF,WAAL,EAAkB5hC,OAAlB,EAA2B8hC,aAA3B,CAAP;AACD;;AAED;;;;;AAtBA;AAyBO,UAAWF,WAAX,CAAwB5hC,OAAxB,EAAiC+hC,aAAjC,EAAgD;AACrD;;;;;;;AAOA,MAAIA,aAAJ,EAAmB;AACjB/hC,cAAU,yBAAYA,OAAZ,EAAqB+hC,aAArB,CAAV;AACD,GAFD,MAEO;AACL;AACA,UAAMD,gBAAgB,MAAM,mBAAK1W,uBAAL,EAAuBprB,QAAQwoB,GAA/B,CAA5B;;AAEAxoB,cAAU,yBAAYA,OAAZ,EAAqB8hC,aAArB,CAAV;AACD;;AAED;AACA,QAAME,gBAAgB,MAAM,kBAAIH,QAAQ9W,OAAR,CAAgB/qB,OAAhB,CAAJ,CAA5B;AACA,QAAMiiC,iBAAiB,MAAM,mBAC3Bv8B,UAAUA,OAAO8G,IAAP,KAAgBgZ,qBAAhB,IAA4B,aAAI,gBAAJ,EAAsB9f,MAAtB,MAAkCs8B,cAAc5f,IAAd,CAAmB+I,SADhE,CAA7B;;AAIA,SAAO8W,cAAP;AACD,C;;;;;;;;;;;;;;;;;QCGiBC,W,GAAAA,W;QA2CAhhB,O,GAAAA,O;QAgIAM,U,GAAAA,U;QA6BA2gB,kB,GAAAA,kB;QA2EAtgB,kB,GAAAA,kB;QAiDAugB,kB,GAAAA,kB;QAwCAC,qB,GAAAA,qB;QAQAC,gB,GAAAA,gB;;AA5alB;;AAeA;;IAAYT,O;;AACZ;;IAAYvsB,W;;AACZ;;AAGA;;AAGA;;AAGA;;;;AAGA;;AAGA;;AACA;;IAAYitB,uB;;AACZ;;AACA;;AAGA;;;;AACA;;;;AACA;;AAGA;;;;;;AAEA;;;AARA;;;AANA;;;AANA;;;AANA;AApBA;AA+CA,MAAMpkC,WAAWwB,sBAAUU,IAA3B;;AAEA;;;AANA;;;AAdA;;;AANA;;;AARA;AAmCA,MAAMoF,MAAMrI,iBAAWmZ,SAAX,CAAqB,MAArB,CAAZ;;AAEA;;;;;AAKO,UAAW2rB,WAAX,GAA0B;AAC/B,SAAO,IAAP,EAAa;AACX;AACA,UAAMx8B,SAAS,MAAM,mBAAK4P,YAAY4C,OAAjB,CAArB;;AAEA;AACA,UAAMziB,SAAS,MAAM,qBAAO4H,wBAAP,CAArB;;AAEA;AACA,UAAMmlC,OAAO,MAAM,mBAAKthB,OAAL,EAAcxb,MAAd,EAAsBjQ,MAAtB,CAAnB;;AAEA;AACA,UAAMgtC,gBAAgB,MAAM,mBAAK,CAACntB,YAAY+C,gBAAb,EAA+B/C,YAAYkD,UAA3C,CAAL,CAA5B;;AAEA;;;;;;;;;AASA,QAAIiqB,cAAcj2B,IAAd,KAAuB8I,YAAYkD,UAAvC,EAAmD;AACjD,YAAM,qBAAOgqB,IAAP,CAAN;AACD,KAFD,MAEO,IAAIC,cAAcj2B,IAAd,KAAuB8I,YAAY+C,gBAAnC,IAAuD,CAACoqB,cAAc51B,KAA1E,EAAiF;AACtF,YAAM61B,mBAAmB,MAAM,mBAAK,CAACptB,YAAYkD,UAAb,EAAyBlD,YAAYmD,mBAArC,CAAL,CAA/B;;AAEA;AACA,UAAIiqB,iBAAiBl2B,IAAjB,KAA0B8I,YAAYmD,mBAA1C,EAA+D;AAC7D;AACD;;AAED,YAAM,mBAAK+I,UAAL,CAAN;AACD;AACF;AACF;;AAED;;;;;AAKO,UAAWN,OAAX,CAAoBxb,MAApB,EAA4BjQ,MAA5B,EAAoC;AACzC;AACA,MAAI+K,iBAAiB;AACnBP,aAAS;AAEX;AACA;AAJqB,GAArB,CAKA,MAAM,EAAEkiB,WAAF,EAAeniB,OAAf,KAA2B0F,OAAOkG,OAAxC;AACA,MAAIuW,WAAJ,EAAiB;AACf,UAAM,EAAE7jB,QAAF,EAAY4kB,QAAZ,EAAsBC,QAAtB,EAAgCC,SAAhC,KAA8CjB,WAApD;AACA,QAAIiB,SAAJ,EAAe;AACb;AACA;AACA;AACA3d,UAAIkX,IAAJ,CAAS,qCAAT;AACAnc,qBAAeP,OAAf,CAAuB,SAAvB,IAAoCmjB,SAApC;AACD,KAND,MAMO,IAAID,YAAYD,QAAhB,EAA0B;AAC/Bzd,UAAIkX,IAAJ,CAAS,6CAAT;AACAnc,qBAAeP,OAAf,CAAuBE,aAAvB,GAAuC,WAAWwiC,eAAOC,MAAP,CAAcC,cAAKD,MAAL,CAAYzf,WAAW,GAAX,GAAiBD,QAA7B,CAAd,CAAlD;AACD,KAHM,MAGA,IAAI5kB,YAAY4kB,QAAhB,EAA0B;AAC/Bzd,UAAIkX,IAAJ,CAAS,6CAAT;AACAnc,qBAAeP,OAAf,CAAuBE,aAAvB,GAAuC,WAAWwiC,eAAOC,MAAP,CAAcC,cAAKD,MAAL,CAAYtkC,WAAW,GAAX,GAAiB4kB,QAA7B,CAAd,CAAlD;AACD,KAHM,MAGA;AACLzd,UAAIkX,IAAJ,CAAS,8BAAT;AACA,YAAM9P,QAAQ,IAAIpW,gBAAJ,CAAe;AAC3BE,iBAAS,oCADkB;AAE3BC,cAAMjB,kBAAU0iC;AAFW,OAAf,CAAd;AAIA,YAAM,kBAAIwJ,QAAQxgB,eAAR,CAAwB,EAAExU,KAAF,EAAxB,EAAmC1O,QAAnC,CAAJ,CAAN;AACA;AACD;AACF;AACD,MAAI;AACFqC,qBAAiB,wBAAYR,OAAZ,EAAqBQ,cAArB,CAAjB;;AAEA;AACA,UAAM9B,WAAW;AACfJ,gBAAUoH,OAAOkG,OAAP,CAAeuW,WAAf,CAA2B7jB;AAEvC;AAHiB,KAAjB,CAIA,MAAMD,aAAa;AACjBgB,cAAQ;AACNC,kBAAU7J,OAAOwI,YAAP,CAAoBqB,QADxB;AAEND,gBAAQ5J,OAAOwI,YAAP,CAAoBoB,MAFtB;AAGNG,cAAM/J,OAAOwI,YAAP,CAAoBuB,IAHpB;AAINC,iBAAShK,OAAOwI,YAAP,CAAoBwB;AAJvB,OADS;AAOjBnB,gBAAUoH,OAAOkG,OAAP,CAAeuW,WAAf,CAA2B7jB,QAPpB;AAQjB;AACAkC;AATiB,KAAnB;AAWA,UAAM,kBACJqhC,QAAQ1gB,iBAAR,CACE;AACEziB,cADF;AAEEL;AAFF,KADF,EAKEF,QALF,CADI,CAAN;;AAUA,UAAMsqB,WAAW,MAAM,mBAAKtI,mBAAL,EAAgB1qB,OAAOwI,YAAvB,EAAqCkkB,WAArC,EAAkD3hB,cAAlD,CAAvB;;AAEA,QAAIioB,SAAS5b,KAAb,EAAoB;AAClB,YAAM,kBAAIg1B,QAAQxgB,eAAR,CAAwB,EAAExU,OAAO4b,SAAS5b,KAAlB,EAAxB,EAAmD1O,QAAnD,CAAJ,CAAN;AACA;AACD;;AAED;AACA,QAAIgkB,YAAYiB,SAAhB,EAA2B;AACzB;AACA;AACA,aAAO5iB,eAAeP,OAAf,CAAuB,SAAvB,CAAP;AACA;AACAO,qBAAeP,OAAf,CAAuB,WAAvB,IAAsCwoB,SAAS+Y,kBAAT,CAA4Bp3B,SAAlE;AACD;;AAED;AACA/L,eAAWyB,KAAX,GAAmB2oB,SAAS3oB,KAA5B;AACA;AACA,UAAM7B,0CACDwqB,SAAS+Y,kBADR;AAEJ5iC,oBAAc6pB,SAAS7pB,YAFnB;AAGJ4pB,WAAKC,SAASxqB;;AAGhB;AACA;AAPM,MAAN,CAQA,MAAM6kC,2CACDrtC,OAAOstC,SADN;AAEJva,WAAKvqB,aAAa+kC;;AAGpB;AALM,MAAN,CAMA,MAAMC,gBAAgB,MAAM,gCAAiBH,aAAjB,EAAgC3kC,QAAhC,CAA5B;;AAEA,QAAI8kC,cAAcp2B,KAAlB,EAAyB;AACvB,YAAMo2B,cAAcr3B,OAApB;AACD;;AAED,UAAM,kBACJi2B,QAAQxgB,eAAR,CACE;AACEpjB,kBADF;AAEES,cAFF;AAGEL;AAHF,KADF,EAMEF,QANF,CADI,CAAN;AAUD,GA9ED,CA8EE,OAAO0O,KAAP,EAAc;AACd;AACA,UAAM,kBAAIg1B,QAAQxgB,eAAR,CAAwB,EAAExU,KAAF,EAAxB,EAAmC1O,QAAnC,CAAJ,CAAN;AACD,GAjFD,SAiFU;AACR,QAAI,MAAM,yBAAV,EAAuB;AACrB,YAAM,mBAAKqjB,UAAL,CAAN;AACA;AACA;AACA;AACD;AACF;AACF;;AAED;;;;;AAKO,UAAWA,UAAX,GAAyB;AAC9B;AACA,QAAMvjB,eAAe,MAAM,qBAAOV,8BAAP,CAA3B;AACA,QAAMc,aAAa,MAAM,qBAAOb,4BAAP,CAAzB;;AAEA;AACA,MAAIS,gBAAgBI,UAApB,EAAgC;AAC9B;AACA,UAAM,mBAAK+hB,qBAAL,EAAkB/hB,UAAlB,EAA8BJ,aAAauqB,GAA3C,CAAN;AACD;;AAED/iB,MAAIkX,IAAJ,CAAS,0CAAT;AACA,QAAMumB,UAAU,MAAM,qBAAOnlB,8BAAP,EAA2B5f,QAA3B,CAAtB;AACA,MAAI+kC,QAAQC,SAAZ,EAAuB;AACrB19B,QAAIkX,IAAJ,CAAS,+BAAT;AACA;AACA,UAAM,mCAAoBve,SAApB,EAA+BD,QAA/B,CAAN;AACAsH,QAAIkX,IAAJ,CAAS,2CAAT;AACD;;AAED;AACA,QAAM,kBAAIklB,QAAQpgB,kBAAR,EAAJ,CAAN;AACD;;AAED;;;;;AAKO,UAAW0gB,kBAAX,GAAiC;AACtC;AACA;AACA,QAAMiB,gBAAgB,MAAM,4BAAc,CAAC9tB,YAAY+C,gBAAb,EAA+B/C,YAAYoD,uBAA3C,CAAd,CAA5B;;AAEA,SAAO,IAAP,EAAa;AACX,UAAMhT,SAAS,MAAM,mBAAK09B,aAAL,CAArB;;AAEA;AACA,QAAI19B,OAAO8G,IAAP,KAAgB8I,YAAY+C,gBAA5B,IAAgD3S,OAAOmH,KAA3D,EAAkE;AAChE;AACD;;AAED,UAAMw2B,UAAU,MAAM,qBAAOzlC,0BAAP,CAAtB;AACA,QAAIK,eAAe,EAAnB;AACA,QAAII,aAAa,EAAjB;;AAEA,QAAIglC,OAAJ,EAAa;AACX,YAAMC,iBAAiB,MAAM,qBAAO9lC,4BAAP,CAA7B;;AAEAa,mBAAa;AACXgB,gBAAQikC,eAAejkC,MADZ;AAEXS,eAAO4F,OAAOkG,OAAP,CAAevN,UAAf,CAA0ByB;AAFtB,OAAb;AAIA7B,qBAAe,MAAM,qBAAOV,8BAAP,CAArB;AACD,KARD,MAQO;AACLc,mBAAa,MAAM,qBAAOb,4BAAP,CAAnB;AACAS,qBAAe,MAAM,qBAAOV,8BAAP,CAArB;AACD;;AAED,QAAIylB,UAAJ;AACA;AACA,QAAItd,OAAO8G,IAAP,KAAgB8I,YAAYoD,uBAA5B,IAAuDhT,OAAOmH,KAAlE,EAAyE;AACvEmW,mBAAatd,OAAOkG,OAAP,CAAeoX,UAAf,GAA4B,CAAzC;AACD,KAFD,MAEO;AACLA,mBAAa,CAAb;AACD;;AAED;AACA,QAAIugB,aAActlC,aAAai4B,OAAb,GAAuB,IAAxB,GAAgCsN,KAAKC,GAAL,CAAS,CAAT,EAAYzgB,UAAZ,CAAjD;AACA;AACAugB,iBAAaA,aAAa,KAAb,GAAqBA,UAArB,GAAkC,KAA/C;;AAEA;AACA,UAAM,EAAEG,MAAF,KAAa,MAAM,mBAAK;AAC5BA,cAAQ,oBAAMH,UAAN,CADoB;AAE5B/hB,kBAAY,mBAAKlM,YAAYmD,mBAAjB;AAFgB,KAAL,CAAzB;;AAKA;AACA,QAAIirB,MAAJ,EAAY;AACV,YAAMjb,WAAW,MAAM,mBAAK+X,qBAAL,EAAkBniC,UAAlB,EAA8BJ,YAA9B,EAA4ColC,OAA5C,CAAvB;;AAEA,UAAI5a,SAAS5b,KAAb,EAAoB;AAClB,cAAM,kBACJg1B,QAAQngB,mBAAR,CACE;AACE7U,iBAAO4b,SAAS5b,KADlB;AAEEmW;AAFF,SADF,EAKE7kB,QALF,CADI,CAAN;AASD,OAVD,MAUO;AACL;AACA,cAAM,kBAAI0jC,QAAQngB,mBAAR,CAA4B,EAAEsB,UAAF,EAA5B,EAA4C7kB,QAA5C,CAAJ,CAAN;AACD;AACF;AACF;AACF;;AAED;;;;AAIO,UAAW0jB,kBAAX,GAAiC;AACtC,SAAO,IAAP,EAAa;AACX,UAAMnc,SAAS,MAAM,mBAAK4P,YAAYuD,mBAAjB,CAArB;AACApT,QAAIgR,KAAJ,CAAU,+CAAV,EAA2D/Q,OAAOkG,OAAlE;;AAEA,UAAMy3B,UAAU,MAAM,qBAAOzlC,0BAAP,CAAtB;AACA,UAAMS,aAAa,MAAM,qBAAOb,4BAAP,CAAzB;AACA,UAAMS,eAAe,MAAM,qBAAOV,8BAAP,CAA3B;AACAU,iBAAa2H,OAAb,GAAuBF,OAAOkG,OAA9B;;AAEA;AACA,UAAM6c,WAAW,MAAM,mBAAK+X,qBAAL,EAAkBniC,UAAlB,EAA8BJ,YAA9B,EAA4ColC,OAA5C,CAAvB;;AAEA,QAAI5a,SAAS5b,KAAb,EAAoB;AAClBpH,UAAIgR,KAAJ,CAAU,yCAAV;AACA,YAAM,kBACJorB,QAAQ/f,0BAAR,CACE;AACEjV,eAAO,IAAIpW,gBAAJ,CAAe;AACpBE,mBAAS8xB,SAAS9xB,OADE;AAEpBC,gBAAMjB,kBAAU+iC;AAFI,SAAf;AADT,OADF,EAOEv6B,QAPF,CADI,CAAN;AAWD,KAbD,MAaO;AACLsH,UAAIgR,KAAJ,CAAU,6CAAV,EAAyD/Q,OAAOkG,OAAhE;AACA;AACA;AACA,YAAM,kBACJi2B,QAAQ/f,0BAAR,CACE;AACE7jB,sBAAc;AACZ2H,mBAASF,OAAOkG;AADJ;AADhB,OADF,EAMEzN,QANF,CADI,CAAN;AAUD;AACF;AACF;;AAED;;;;;AAKO,UAAWikC,kBAAX,GAAiC;AACtC;AACA;AACA,WAASuB,oBAAT,CAA+Bj+B,MAA/B,EAAuC;AACrC,WACEA,OAAO8G,IAAP,KAAgBtD,mCAAhB,IACAxD,OAAOkG,OAAP,CAAeg4B,mBADf,IAEAl+B,OAAOkG,OAAP,CAAeg4B,mBAAf,CAAmCjjB,SAAnC,KAAiD,MAHnD;AAKD;;AAED;AACA,WAASkjB,yBAAT,CAAoCn+B,MAApC,EAA4C;AAC1C,WACEA,OAAO8G,IAAP,KAAgB8I,YAAYoD,uBAA5B,IACAhT,OAAOmH,KADP;AAEA;AACAnH,WAAOkG,OAAP,CAAehV,IAAf,KAAwB,EAJ1B;AAMD;;AAED,SAAO,IAAP,EAAa;AACX,UAAM,mBAAK,CAAC+sC,oBAAD,EAAuBE,yBAAvB,CAAL,CAAN;;AAEA;AACA;AACA,UAAMX,UAAU,MAAM,qBAAOnlB,8BAAP,EAA2B5f,QAA3B,CAAtB;AACA,QAAI+kC,QAAQC,SAAZ,EAAuB;AACrB,YAAM,mCAAoB/kC,SAApB,EAA+BD,QAA/B,CAAN;AACD;;AAED;AACA,UAAM,kBAAI0jC,QAAQpgB,kBAAR,CAA2B,EAAEqB,QAAQsC,8BAAmBC,IAA7B,EAA3B,CAAJ,CAAN;AACD;AACF;;AAED;;;;AAIO,UAAWgd,qBAAX,GAAoC;AACzC,QAAM,wBAAUE,wBAAwB3tB,mBAAlC,EAAuD0tB,gBAAvD,CAAN;AACD;;AAED;;;;AAIO,UAAWA,gBAAX,GAA+B;AACpC,QAAM,kBAAIT,QAAQpgB,kBAAR,CAA2B,EAAEqB,QAAQsC,8BAAmBrQ,eAA7B,EAA3B,CAAJ,CAAN;AACD,C;;;;;;;;;;;;QCrZiB+uB,gB,GAAAA,gB;QAoBAC,mB,GAAAA,mB;QAqBAC,gB,GAAAA,gB;;AAlElB;;AACA;;AACA;;AAGA;;AACA;;AAGA;;AAEA;;;;;;;;;;;;;;AAZA;AA0BO,UAAWF,gBAAX,CAA6BhB,aAA7B,EAA4C3kC,QAA5C,EAAsD;AAC3D;AACA,QAAM,kBAAI,+BAAiB2kC,aAAjB,EAAgC3kC,QAAhC,CAAJ,CAAN;;AAEA;AACA,QAAM8jC,iBAAiB,MAAM,mBAAKv8B,UAAU;AAC1C,WAAOA,OAAO8G,IAAP,KAAgBiI,gCAAhB,IAAuC/O,OAAO0c,IAAP,CAAYjkB,QAAZ,KAAyBA,QAAvE;AACD,GAF4B,CAA7B;;AAIA;AACA,SAAO8jC,cAAP;AACD;;AAED;;;;;;;;;AA9BA;;;AAJA;AAyCO,UAAW8B,mBAAX,CAAgCn4B,OAAhC,EAAyCzN,QAAzC,EAAmD;AACxD;AACA,QAAM,kBAAI,2BAAayN,OAAb,EAAsBzN,QAAtB,CAAJ,CAAN;;AAEA;AACA,QAAM8jC,iBAAiB,MAAM,mBAAKv8B,UAAU;AAC1C,WAAO,CAACA,OAAO8G,IAAP,KAAgBmI,mCAAhB,IAA0CjP,OAAO8G,IAAP,KAAgBsI,qBAA3D,KAAwEpP,OAAO0c,IAAP,CAAYjkB,QAAZ,KAAyBA,QAAxG;AACD,GAF4B,CAA7B;;AAIA;AACA,SAAO8jC,cAAP;AACD;;AAED;;;;;;;;AAQO,UAAW+B,gBAAX,CAA6BC,UAAU,KAAvC,EAA8C;AACnD,QAAM9lC,WAAW,MAAM,qBAAOL,uBAAP,CAAvB;AACA,QAAM,EAAEqlC,WAAWe,WAAb,KAA6B,MAAM,qBAAOnmB,6BAAP,EAA2B5f,QAA3B,CAAzC;;AAEA,MAAI+lC,WAAJ,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,QAAM,EAAEC,WAAF,KAAkB,MAAM,mBAAK;AACjC;AACAA,iBAAa,mBAAKz+B,UAAUA,OAAO8G,IAAP,KAAgBiI,gCAAhB,IAAuC,CAAC/O,OAAOmH,KAA9D,CAFoB;AAGjC;AACAu3B,kBAAc,mBAAK1+B,UAAUA,OAAO8G,IAAP,KAAgBkgB,kCAAhB,IAAwC,CAAChnB,OAAOmH,KAA/D,CAJmB;AAKjCo3B,aAAS,oBAAMA,OAAN;AALwB,GAAL,CAA9B;;AAQA,SAAO/tB,QAAQiuB,WAAR,CAAP;AACD,C;;;;;;;;;;;;ACpFD,MAAMttC,OAAO,cAAb;kBACeA,I;;;;;;;;;;;;;;;;;kBCseS2gC,S;;AAvexB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;AAcA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;AAYA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;;;;;;;;;AAYA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;;;;;;AAMe,SAASA,SAAT,CAAoBhK,SAApB,EAA+B;AAC5C,QAAM6W,iCACD,yBAAc7W,SAAd,CADC,EAED,uBAAYA,SAAZ,CAFC,EAGD,uBAAYA,SAAZ,CAHC,EAID,oBAASA,SAAT,CAJC,EAKD,yBAAcA,SAAd,CALC,CAAN;;AAQA,SAAO,EAAE54B,MAAMyvC,GAAR,EAAP;AACD,C;;;;;;;;;;;;;;;;;QCjeeC,gB,GAAAA,gB;QAkCAC,Q,GAAAA,Q;QAIAC,c,GAAAA,c;QAIAC,e,GAAAA,e;QAIA3V,c,GAAAA,c;QAIA4V,iB,GAAAA,iB;QAaAC,uB,GAAAA,uB;QAIAC,Y,GAAAA,Y;QAIAC,mB,GAAAA,mB;QAIAC,yB,GAAAA,yB;QAIAC,W,GAAAA,W;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAIAC,U,GAAAA,U;QAIAC,gB,GAAAA,gB;QAIAC,U,GAAAA,U;QAIAC,gB,GAAAA,gB;QAIAC,Y,GAAAA,Y;QAIAC,U,GAAAA,U;QAIAC,gB,GAAAA,gB;QAIAC,O,GAAAA,O;QAIA/W,a,GAAAA,a;QAIAgX,Q,GAAAA,Q;QAIAC,c,GAAAA,c;QAIAC,U,GAAAA,U;QAIAC,gB,GAAAA,gB;QAIAC,mB,GAAAA,mB;QAaAC,oB,GAAAA,oB;QAIAC,0B,GAAAA,0B;QAIAC,wB,GAAAA,wB;QAIAC,Q,GAAAA,Q;QAIAC,c,GAAAA,c;QAIAC,a,GAAAA,a;QAIAC,W,GAAAA,W;QAIAC,iB,GAAAA,iB;QAIAC,gB,GAAAA,gB;QAIAC,Q,GAAAA,Q;QAIAC,c,GAAAA,c;QAIAC,Q,GAAAA,Q;QAeAC,c,GAAAA,c;QAIAC,W,GAAAA,W;QAIAC,iB,GAAAA,iB;QAIAC,oB,GAAAA,oB;QAIAC,2B,GAAAA,2B;QAIAC,0B,GAAAA,0B;QAIAC,c,GAAAA,c;QAIAC,oB,GAAAA,oB;QAIA1pB,I,GAAAA,I;QAIA2pB,S,GAAAA,S;QAIAC,W,GAAAA,W;QAIAC,U,GAAAA,U;QAIAC,Y,GAAAA,Y;QAIAC,kB,GAAAA,kB;QAIAC,gB,GAAAA,gB;QAIAC,kB,GAAAA,kB;QAaAC,wB,GAAAA,wB;QAQA16B,gB,GAAAA,gB;QAIAE,kB,GAAAA,kB;QAIAC,oB,GAAAA,oB;QAIAC,uB,GAAAA,uB;QAIAC,oB,GAAAA,oB;QAIAC,mB,GAAAA,mB;QAIAC,e,GAAAA,e;QAIAo6B,Y,GAAAA,Y;QAIAC,kB,GAAAA,kB;QAIAC,M,GAAAA,M;QAIAC,Y,GAAAA,Y;QAUAC,S,GAAAA,S;QAYAC,gB,GAAAA,gB;QAaAC,e,GAAAA,e;QAYAz6B,U,GAAAA,U;QAeA06B,e,GAAAA,e;;AA7ZhB;;IAAY5yB,W;;AAGZ;;;;;;AAEA;;;;;;;;;;AANA;AAgBO,SAASgvB,gBAAT,CAA2B93B,IAA3B,EAAiClX,EAAjC,EAAqCsW,UAAU,EAA/C,EAAmDwW,OAAO,EAA1D,EAA8D;AACnE;;;;;;;;;;;;;;;;AAgBA,QAAM1c,SAAS;AACb8G,QADa;AAEbZ,wCACKA,OADL;AAEEtW;AAFF;AAKF;AAPe,GAAf,CAQA,IAAI,CAAC,iBAAQ8sB,IAAR,CAAL,EAAoB;AAClB1c,WAAO0c,IAAP,GAAcA,IAAd;AACD;AACD,MAAIxW,QAAQiB,KAAZ,EAAmB;AACjBnH,WAAOmH,KAAP,GAAe,IAAf;AACD;AACD,SAAOnH,MAAP;AACD;;AA7CD;AA+CO,SAAS6+B,QAAT,CAAmBjvC,EAAnB,EAAuB0K,OAAvB,EAAgC;AACrC,SAAOskC,iBAAiBhvB,YAAYhG,SAA7B,EAAwCha,EAAxC,EAA4C0K,OAA5C,CAAP;AACD;;AAEM,SAASwkC,cAAT,CAAyBlvC,EAAzB,EAA6BwP,MAA7B,EAAqC;AAC1C,SAAOw/B,iBAAiBhvB,YAAY9F,eAA7B,EAA8Cla,EAA9C,EAAkDwP,MAAlD,CAAP;AACD;;AAEM,SAAS2/B,eAAT,CAA0BnvC,EAA1B,EAA8B0K,OAA9B,EAAuC;AAC5C,SAAOskC,iBAAiBhvB,YAAY/F,iBAA7B,EAAgDja,EAAhD,EAAoD0K,OAApD,CAAP;AACD;;AAEM,SAAS8uB,cAAT,CAAyBx5B,EAAzB,EAA6BwP,MAA7B,EAAqC;AAC1C,SAAOw/B,iBAAiBhvB,YAAY7F,gBAA7B,EAA+Cna,EAA/C,EAAmDwP,MAAnD,CAAP;AACD;;AAEM,SAAS4/B,iBAAT,CAA4BpvC,EAA5B,EAAgCwP,MAAhC,EAAwC;AAC7C,SAAO;AACL0H,UAAM8I,YAAY5F,mBADb;AAEL9D,aAAS;AACPtW,QADO;AAEP6yC,cAAQrjC,OAAOqjC,MAFR;AAGPhmB,mBAAard,OAAOqd,WAHb;AAIPgL,wBAAkBroB,OAAOqoB,gBAJlB;AAKPib,mBAAatjC,OAAOsjC;AALb;AAFJ,GAAP;AAUD;;AAEM,SAASzD,uBAAT,CAAkCrvC,EAAlC,EAAsCwP,MAAtC,EAA8C;AACnD,SAAOw/B,iBAAiBhvB,YAAY3F,0BAA7B,EAAyDra,EAAzD,EAA6DwP,MAA7D,CAAP;AACD;;AAEM,SAAS8/B,YAAT,CAAuBtvC,EAAvB,EAA2BwP,MAA3B,EAAmC;AACxC,SAAOw/B,iBAAiBhvB,YAAYhZ,aAA7B,EAA4ChH,EAA5C,EAAgDwP,MAAhD,CAAP;AACD;;AAEM,SAAS+/B,mBAAT,CAA8BvvC,EAA9B,EAAkC;AACvC,SAAOgvC,iBAAiBhvB,YAAYrb,qBAA7B,EAAoD3E,EAApD,CAAP;AACD;;AAEM,SAASwvC,yBAAT,CAAoCxvC,EAApC,EAAwCwP,MAAxC,EAAgD;AACrD,SAAOw/B,iBAAiBhvB,YAAY1F,4BAA7B,EAA2Dta,EAA3D,EAA+DwP,MAA/D,CAAP;AACD;;AAEM,SAASigC,WAAT,CAAsBzvC,EAAtB,EAA0BwP,MAA1B,EAAkC;AACvC,SAAOw/B,iBAAiBhvB,YAAYzF,YAA7B,EAA2Cva,EAA3C,EAA+CwP,MAA/C,CAAP;AACD;;AAEM,SAASkgC,eAAT,CAA0B1vC,EAA1B,EAA8BwP,MAA9B,EAAsC;AAC3C,SAAOw/B,iBAAiBhvB,YAAYxF,gBAA7B,EAA+Cxa,EAA/C,EAAmDwP,MAAnD,CAAP;AACD;;AAEM,SAASmgC,aAAT,CAAwB3vC,EAAxB,EAA4BwP,MAA5B,EAAoC;AACzC,SAAOw/B,iBAAiBhvB,YAAYvF,cAA7B,EAA6Cza,EAA7C,EAAiDwP,MAAjD,CAAP;AACD;;AAEM,SAASogC,UAAT,CAAqB5vC,EAArB,EAAyB0K,OAAzB,EAAkC;AACvC,SAAOskC,iBAAiBhvB,YAAYtF,WAA7B,EAA0C1a,EAA1C,EAA8C0K,OAA9C,CAAP;AACD;;AAEM,SAASmlC,gBAAT,CAA2B7vC,EAA3B,EAA+BwP,MAA/B,EAAuCsd,IAAvC,EAA6C;AAClD,SAAOkiB,iBAAiBhvB,YAAYrF,kBAA7B,EAAiD3a,EAAjD,EAAqDwP,MAArD,EAA6Dsd,IAA7D,CAAP;AACD;;AAEM,SAASgjB,UAAT,CAAqB9vC,EAArB,EAAyB0K,OAAzB,EAAkC;AACvC,SAAOskC,iBAAiBhvB,YAAYpF,WAA7B,EAA0C5a,EAA1C,EAA8C0K,OAA9C,CAAP;AACD;;AAEM,SAASqlC,gBAAT,CAA2B/vC,EAA3B,EAA+BwP,MAA/B,EAAuC;AAC5C,SAAOw/B,iBAAiBhvB,YAAYnF,kBAA7B,EAAiD7a,EAAjD,EAAqDwP,MAArD,CAAP;AACD;;AAEM,SAASwgC,YAAT,CAAuBhwC,EAAvB,EAA2BwP,MAA3B,EAAmC;AACxC,SAAOw/B,iBAAiBhvB,YAAYhF,aAA7B,EAA4Chb,EAA5C,EAAgDwP,MAAhD,CAAP;AACD;;AAEM,SAASygC,UAAT,CAAqBjwC,EAArB,EAAyBwP,MAAzB,EAAiC;AACtC,SAAOw/B,iBAAiBhvB,YAAYlF,WAA7B,EAA0C9a,EAA1C,EAA8CwP,MAA9C,CAAP;AACD;;AAEM,SAAS0gC,gBAAT,CAA2BlwC,EAA3B,EAA+BwP,MAA/B,EAAuC;AAC5C,SAAOw/B,iBAAiBhvB,YAAYjF,kBAA7B,EAAiD/a,EAAjD,EAAqDwP,MAArD,CAAP;AACD;;AAEM,SAAS2gC,OAAT,CAAkBnwC,EAAlB,EAAsBwP,MAAtB,EAA8B;AACnC,SAAOw/B,iBAAiBhvB,YAAY/E,QAA7B,EAAuCjb,EAAvC,EAA2CwP,MAA3C,CAAP;AACD;;AAEM,SAAS4pB,aAAT,CAAwBp5B,EAAxB,EAA4BwP,MAA5B,EAAoC;AACzC,SAAOw/B,iBAAiBhvB,YAAY9E,eAA7B,EAA8Clb,EAA9C,EAAkDwP,MAAlD,CAAP;AACD;;AAEM,SAAS4gC,QAAT,CAAmBpwC,EAAnB,EAAuB0K,OAAvB,EAAgC;AACrC,SAAOskC,iBAAiBhvB,YAAY1E,SAA7B,EAAwCtb,EAAxC,EAA4C0K,OAA5C,CAAP;AACD;;AAEM,SAAS2lC,cAAT,CAAyBrwC,EAAzB,EAA6BwP,MAA7B,EAAqC;AAC1C,SAAOw/B,iBAAiBhvB,YAAYzE,gBAA7B,EAA+Cvb,EAA/C,EAAmDwP,MAAnD,CAAP;AACD;;AAEM,SAAS8gC,UAAT,CAAqBtwC,EAArB,EAAyB0K,OAAzB,EAAkC;AACvC,SAAOskC,iBAAiBhvB,YAAYxE,WAA7B,EAA0Cxb,EAA1C,EAA8C0K,OAA9C,CAAP;AACD;;AAEM,SAAS6lC,gBAAT,CAA2BvwC,EAA3B,EAA+BwP,MAA/B,EAAuC;AAC5C,SAAOw/B,iBAAiBhvB,YAAYvE,kBAA7B,EAAiDzb,EAAjD,EAAqDwP,MAArD,CAAP;AACD;;AAEM,SAASghC,mBAAT,CAA8BxwC,EAA9B,EAAkC+yC,aAAlC,EAAiD;AACtD,QAAM3iC,SAAS;AACb8G,UAAM8I,YAAYtE,qBADL;AAEbpF,aAAS;AACPtW,QADO;AAEP;AACAgzC,wBAAkB,uBAAcD,aAAd,IAA+BA,cAAcC,gBAA7C,GAAgED,aAH3E;AAIPE,oBAAc,uBAAcF,aAAd,IAA+BA,cAAcE,YAA7C,GAA4DnqC;AAJnE;AAFI,GAAf;AASA,SAAOsH,MAAP;AACD;;AAEM,SAASqgC,oBAAT,CAA+BzwC,EAA/B,EAAmC0K,OAAnC,EAA4C;AACjD,SAAOskC,iBAAiBhvB,YAAYjb,sBAA7B,EAAqD/E,EAArD,EAAyD0K,OAAzD,CAAP;AACD;;AAEM,SAASgmC,0BAAT,CAAqC1wC,EAArC,EAAyCwP,MAAzC,EAAiD;AACtD,SAAOw/B,iBAAiBhvB,YAAYrE,6BAA7B,EAA4D3b,EAA5D,EAAgEwP,MAAhE,CAAP;AACD;;AAEM,SAASmhC,wBAAT,CAAmC3wC,EAAnC,EAAuCwP,MAAvC,EAA+C;AACpD,SAAOw/B,iBAAiBhvB,YAAYrD,0BAA7B,EAAyD3c,EAAzD,EAA6DwP,MAA7D,CAAP;AACD;;AAEM,SAASohC,QAAT,CAAmB5wC,EAAnB,EAAuBwP,MAAvB,EAA+B;AACpC,SAAOw/B,iBAAiBhvB,YAAYhb,SAA7B,EAAwChF,EAAxC,EAA4CwP,MAA5C,CAAP;AACD;;AAEM,SAASqhC,cAAT,CAAyB7wC,EAAzB,EAA6BwP,MAA7B,EAAqC;AAC1C,SAAOw/B,iBAAiBhvB,YAAYpE,gBAA7B,EAA+C5b,EAA/C,EAAmDwP,MAAnD,CAAP;AACD;;AAEM,SAASshC,aAAT,CAAwB9wC,EAAxB,EAA4BwP,MAA5B,EAAoC;AACzC,SAAOw/B,iBAAiBhvB,YAAY/a,eAA7B,EAA8CjF,EAA9C,EAAkDwP,MAAlD,CAAP;AACD;;AAEM,SAASuhC,WAAT,CAAsB/wC,EAAtB,EAA0BwP,MAA1B,EAAkC;AACvC,SAAOw/B,iBAAiBhvB,YAAY9a,YAA7B,EAA2ClF,EAA3C,EAA+CwP,MAA/C,CAAP;AACD;;AAEM,SAASwhC,iBAAT,CAA4BhxC,EAA5B,EAAgCwP,MAAhC,EAAwC;AAC7C,SAAOw/B,iBAAiBhvB,YAAYnE,mBAA7B,EAAkD7b,EAAlD,EAAsDwP,MAAtD,CAAP;AACD;;AAEM,SAASyhC,gBAAT,CAA2BjxC,EAA3B,EAA+BwP,MAA/B,EAAuC;AAC5C,SAAOw/B,iBAAiBhvB,YAAY7a,kBAA7B,EAAiDnF,EAAjD,EAAqDwP,MAArD,CAAP;AACD;;AAEM,SAAS0hC,QAAT,CAAmBlxC,EAAnB,EAAuBwP,MAAvB,EAA+B;AACpC,SAAOw/B,iBAAiBhvB,YAAY3a,SAA7B,EAAwCrF,EAAxC,EAA4CwP,MAA5C,CAAP;AACD;;AAEM,SAAS2hC,cAAT,CAAyBnxC,EAAzB,EAA6BwP,MAA7B,EAAqC;AAC1C,SAAOw/B,iBAAiBhvB,YAAYlE,gBAA7B,EAA+C9b,EAA/C,EAAmDwP,MAAnD,CAAP;AACD;;AAEM,SAAS4hC,QAAT,CAAmBpxC,EAAnB,EAAuBwP,MAAvB,EAA+BquB,QAA/B,EAAyC;AAC9C,QAAMztB,SAAS;AACb8G,UAAM8I,YAAY5a,SADL;AAEbkR,wCACK9G,MADL;AAEExP;AAFF,MAFa;AAMb8sB,UAAM;AACJ+Q;AADI;AANO,GAAf;;AAWA,SAAOztB,MAAP;AACD;;AAEM,SAASihC,cAAT,CAAyBrxC,EAAzB,EAA6BwP,MAA7B,EAAqC;AAC1C,SAAOw/B,iBAAiBhvB,YAAYjE,gBAA7B,EAA+C/b,EAA/C,EAAmDwP,MAAnD,CAAP;AACD;;AAEM,SAAS8hC,WAAT,CAAsBtxC,EAAtB,EAA0BwP,MAA1B,EAAkC;AACvC,SAAOw/B,iBAAiBhvB,YAAYpb,YAA7B,EAA2C5E,EAA3C,EAA+CwP,MAA/C,CAAP;AACD;;AAEM,SAAS+hC,iBAAT,CAA4BvxC,EAA5B,EAAgCwP,MAAhC,EAAwC;AAC7C,SAAOw/B,iBAAiBhvB,YAAY7E,mBAA7B,EAAkDnb,EAAlD,EAAsDwP,MAAtD,CAAP;AACD;;AAEM,SAASgiC,oBAAT,CAA+BxxC,EAA/B,EAAmCwP,MAAnC,EAA2C;AAChD,SAAOw/B,iBAAiBhvB,YAAYhd,qBAA7B,EAAoDhD,EAApD,EAAwDwP,MAAxD,CAAP;AACD;;AAEM,SAASiiC,2BAAT,CAAsCzxC,EAAtC,EAA0CwP,MAA1C,EAAkD;AACvD,SAAOw/B,iBAAiBhvB,YAAYhE,6BAA7B,EAA4Dhc,EAA5D,EAAgEwP,MAAhE,CAAP;AACD;;AAEM,SAASkiC,0BAAT,CAAqC1xC,EAArC,EAAyCwP,MAAzC,EAAiD;AACtD,SAAOw/B,iBAAiBhvB,YAAY/D,4BAA7B,EAA2Djc,EAA3D,EAA+DwP,MAA/D,CAAP;AACD;;AAEM,SAASmiC,cAAT,CAAyB3xC,EAAzB,EAA6BwP,MAA7B,EAAqC;AAC1C,SAAOw/B,iBAAiBhvB,YAAYjd,eAA7B,EAA8C/C,EAA9C,EAAkDwP,MAAlD,CAAP;AACD;;AAEM,SAASoiC,oBAAT,CAA+B5xC,EAA/B,EAAmCwP,MAAnC,EAA2C;AAChD,SAAOw/B,iBAAiBhvB,YAAY9D,sBAA7B,EAAqDlc,EAArD,EAAyDwP,MAAzD,CAAP;AACD;;AAEM,SAAS0Y,IAAT,CAAeloB,EAAf,EAAmBwP,MAAnB,EAA2B;AAChC,SAAOw/B,iBAAiBhvB,YAAY/c,IAA7B,EAAmCjD,EAAnC,EAAuCwP,MAAvC,CAAP;AACD;;AAEM,SAASqiC,SAAT,CAAoB7xC,EAApB,EAAwBwP,MAAxB,EAAgC;AACrC,SAAOw/B,iBAAiBhvB,YAAY7D,UAA7B,EAAyCnc,EAAzC,EAA6CwP,MAA7C,CAAP;AACD;;AAEM,SAASsiC,WAAT,CAAsB9xC,EAAtB,EAA0BwP,MAA1B,EAAkC;AACvC,SAAOw/B,iBAAiBhvB,YAAY5D,YAA7B,EAA2Cpc,EAA3C,EAA+CwP,MAA/C,CAAP;AACD;;AAEM,SAASuiC,UAAT,CAAqB/xC,EAArB,EAAyBwP,MAAzB,EAAiC;AACtC,SAAOw/B,iBAAiBhvB,YAAY3D,WAA7B,EAA0Crc,EAA1C,EAA8CwP,MAA9C,CAAP;AACD;;AAEM,SAASwiC,YAAT,CAAuBhyC,EAAvB,EAA2BwP,MAA3B,EAAmC;AACxC,SAAOw/B,iBAAiBhvB,YAAY1a,aAA7B,EAA4CtF,EAA5C,EAAgDwP,MAAhD,CAAP;AACD;;AAEM,SAASyiC,kBAAT,CAA6BjyC,EAA7B,EAAiCwP,MAAjC,EAAyC;AAC9C,SAAOw/B,iBAAiBhvB,YAAY1D,oBAA7B,EAAmDtc,EAAnD,EAAuDwP,MAAvD,CAAP;AACD;;AAEM,SAAS0iC,gBAAT,CAA2BlyC,EAA3B,EAA+BwP,MAA/B,EAAuC;AAC5C,SAAOw/B,iBAAiBhvB,YAAY5E,iBAA7B,EAAgDpb,EAAhD,EAAoDwP,MAApD,CAAP;AACD;;AAEM,SAAS2iC,kBAAT,CAA6B3iC,MAA7B,EAAqCquB,QAArC,EAA+C;AACpD,QAAMztB,SAAS;AACb8G,UAAM8I,YAAYta,oBADL;AAEb4Q,wCACK9G,MADL,CAFa;AAKbsd,UAAM;AACJ+Q;AADI;AALO,GAAf;AASA,SAAOztB,MAAP;AACD;;AAEM,SAASgiC,wBAAT,CAAmC5iC,MAAnC,EAA2C;AAChD,SAAOw/B,iBAAiBhvB,YAAYpD,0BAA7B,EAAyD9T,SAAzD,EAAoE0G,MAApE,CAAP;AACD;;AAED;;;;AAIO,SAASkI,gBAAT,CAA2B1X,EAA3B,EAA+BwP,MAA/B,EAAuC;AAC5C,SAAOw/B,iBAAiBhvB,YAAYlD,uBAA7B,EAAsD9c,EAAtD,EAA0DwP,MAA1D,CAAP;AACD;;AAEM,SAASoI,kBAAT,CAA6B5X,EAA7B,EAAiCwP,MAAjC,EAAyC;AAC9C,SAAOw/B,iBAAiBhvB,YAAYjD,yBAA7B,EAAwD/c,EAAxD,EAA4DwP,MAA5D,CAAP;AACD;;AAEM,SAASqI,oBAAT,CAA+B7X,EAA/B,EAAmCwP,MAAnC,EAA2C;AAChD,SAAOw/B,iBAAiBhvB,YAAYhD,uBAA7B,EAAsDhd,EAAtD,EAA0DwP,MAA1D,CAAP;AACD;;AAEM,SAASsI,uBAAT,CAAkC9X,EAAlC,EAAsCwP,MAAtC,EAA8C;AACnD,SAAOw/B,iBAAiBhvB,YAAY/C,0BAA7B,EAAyDjd,EAAzD,EAA6DwP,MAA7D,CAAP;AACD;;AAEM,SAASuI,oBAAT,CAA+B/X,EAA/B,EAAmCwP,MAAnC,EAA2C;AAChD,SAAOw/B,iBAAiBhvB,YAAY9C,uBAA7B,EAAsDld,EAAtD,EAA0DwP,MAA1D,CAAP;AACD;;AAEM,SAASwI,mBAAT,CAA8BhY,EAA9B,EAAkCwP,MAAlC,EAA0C;AAC/C,SAAOw/B,iBAAiBhvB,YAAY7C,sBAA7B,EAAqDnd,EAArD,EAAyDwP,MAAzD,CAAP;AACD;;AAEM,SAASyI,eAAT,CAA0BjY,EAA1B,EAA8BwP,MAA9B,EAAsC;AAC3C,SAAOw/B,iBAAiBhvB,YAAY5C,iBAA7B,EAAgDpd,EAAhD,EAAoDwP,MAApD,CAAP;AACD;;AAEM,SAAS6iC,YAAT,CAAuBryC,EAAvB,EAA2BwP,MAA3B,EAAmC;AACxC,SAAOw/B,iBAAiBhvB,YAAYza,aAA7B,EAA4CvF,EAA5C,EAAgDwP,MAAhD,CAAP;AACD;;AAEM,SAAS8iC,kBAAT,CAA6BtyC,EAA7B,EAAiCwP,MAAjC,EAAyC;AAC9C,SAAOw/B,iBAAiBhvB,YAAYzD,oBAA7B,EAAmDvc,EAAnD,EAAuDwP,MAAvD,CAAP;AACD;;AAEM,SAAS+iC,MAAT,CAAiBvyC,EAAjB,EAAqBwP,MAArB,EAA6B;AAClC,SAAOw/B,iBAAiBhvB,YAAYxa,MAA7B,EAAqCxF,EAArC,EAAyCwP,MAAzC,CAAP;AACD;;AAEM,SAASgjC,YAAT,CAAuBxyC,EAAvB,EAA2BwP,MAA3B,EAAmC;AACxC,SAAOw/B,iBAAiBhvB,YAAYxD,aAA7B,EAA4Cxc,EAA5C,EAAgDwP,MAAhD,CAAP;AACD;;AAED;;;;;;AAMO,SAASijC,SAAT,CAAoBzyC,EAApB,EAAwBkzC,QAAxB,EAAkC;AACvC,SAAO;AACLh8B,UAAM8I,YAAYva,UADb;AAEL6Q,aAAS,EAAEtW,EAAF,EAAMkzC,QAAN;AAFJ,GAAP;AAID;;AAED;;;;;AAKO,SAASR,gBAAT,CAA2B1yC,EAA3B,EAA+B;AACpC,SAAO;AACLkX,UAAM8I,YAAYvD,kBADb;AAELnG,aAAS,EAAEtW,EAAF;AAFJ,GAAP;AAID;;AAED;;;;;;AAMO,SAAS2yC,eAAT,CAA0B3yC,EAA1B,EAA8BuX,KAA9B,EAAqC;AAC1C,SAAO;AACLL,UAAM8I,YAAYtD,iBADb;AAELpG,aAAS;AACPtW,QADO;AAEPuX;AAFO,KAFJ;AAMLA,WAAOA,UAAUzO;AANZ,GAAP;AAQD;;AAED;AACO,SAASoP,UAAT,CAAqBlY,EAArB,EAAyBwP,MAAzB,EAAiC;AACtC,SAAOw/B,iBAAiBhvB,YAAY3E,WAA7B,EAA0Crb,EAA1C,EAA8CwP,MAA9C,CAAP;AACD;;AAED;;;;;;;;;;;AAWO,SAASojC,eAAT,CAA0B5yC,EAA1B,EAA8BoX,SAA9B,EAAyCD,OAAzC,EAAkD,EAAEE,UAAF,EAAc87B,aAAd,EAA6Bva,OAA7B,EAAlD,EAA0F;AAC/F,SAAO;AACL1hB,UAAM8I,YAAYnD,gBADb;AAELvG,aAAS;AACPtW,QADO;AAEPoX,eAFO;AAGPC,gBAHO;AAIP87B,mBAJO;AAKPva,aALO;AAMPzhB;AANO;AAFJ,GAAP;AAWD,C;;;;;;;;;;;;QC1Zei8B,qB,GAAAA,qB;QAWAprC,+B,GAAAA,+B;QASAqrC,qB,GAAAA,qB;QAUAC,uB,GAAAA,uB;QAaAC,qB,GAAAA,qB;QA2BAtrC,mB,GAAAA,mB;QAmBAurC,gB,GAAAA,gB;QAaAC,qB,GAAAA,qB;QAwBAC,kB,GAAAA,kB;QAqBAC,c,GAAAA,c;QA6BAC,mB,GAAAA,mB;;AAhMhB;;AAGA;;AAGA;;AAEA;;;;;;;;;;AANA;AAcO,SAASR,qBAAT,CAAgC/zC,KAAhC,EAAuC;AAC5C,SAAO,mBAAUA,MAAMc,MAAN,CAAawI,YAAvB,CAAP;AACD;;AAED;;;;;;;;;AAfA;AAsBO,SAASX,+BAAT,CAA0C3I,KAA1C,EAAiD;AACtD,SAAOA,MAAMc,MAAN,CAAawI,YAAb,CAA0BC,4BAAjC;AACD;;AAED;;;;;AAKO,SAASyqC,qBAAT,CAAgCh0C,KAAhC,EAAuC;AAC5C,SAAO,mBAAUA,MAAMsJ,YAAN,CAAmBkrC,kBAA7B,CAAP;AACD;;AAED;;;;;AAKA;AACO,SAASP,uBAAT,CAAkCj0C,KAAlC,EAAyC;AAC9C,SAAO,mBAAU;AACfy0C,0BAAsBz0C,MAAMsJ,YAAN,CAAmBmrC,oBAD1B;AAEfC,mBAAe10C,MAAMsJ,YAAN,CAAmBorC;AAFnB,GAAV,CAAP;AAID;;AAED;;;;;;AAMO,SAASR,qBAAT,CAAgCl0C,KAAhC,EAAuC6X,IAAvC,EAA6C;AAClD,QAAMmQ,OAAOpf,oBAAoB5I,KAApB,CAAb;AACA;AACA;AACA,MAAI00C,gBAAgBC,MAAMC,OAAN,CAAc5sB,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAAjD;;AAEA;AACA,MAAInQ,IAAJ,EAAU;AACR68B,oBAAgBA,cAAcn0C,MAAd,CAAqB+I,gBAAgBA,aAAaurC,WAAb,KAA6Bh9B,IAAlE,CAAhB;AACD;;AAED;;AAEA;AACA;AACA;AACA;AACA,SAAO68B,cAAcI,MAAd,CAAqB,CAACzsB,GAAD,EAAM0sB,UAAN,KAAqB;AAC/C,WAAO1sB,IAAI7B,MAAJ,CAAWuuB,WAAW9jC,OAAtB,CAAP;AACD,GAFM,EAEJ,EAFI,CAAP;AAGD;;AAED;;;;;AAKO,SAASrI,mBAAT,CAA8B5I,KAA9B,EAAqC;AAC1C,MAAIA,MAAMsJ,YAAV,EAAwB;AACtB,WAAO,mBAAUtJ,MAAMsJ,YAAN,CAAmBorC,aAA7B,CAAP;AACD,GAFD,MAEO;AACL;AACA;AACA;AACA;AACA,WAAO,mBAAU,oCAAwB10C,KAAxB,CAAV,CAAP;AACD;AACF;;AAED;;;;;;;AAOO,SAASm0C,gBAAT,CAA2Bn0C,KAA3B,EAAkCiR,OAAlC,EAA2C4G,IAA3C,EAAiD;AACtD,MAAI68B,gBAAgB10C,MAAMsJ,YAAN,CAAmBorC,aAAvC;AACAA,kBAAgBA,cAAcn0C,MAAd,CACd+I,gBAAgBA,aAAa2H,OAAb,KAAyBA,OAAzB,IAAoC3H,aAAaurC,WAAb,KAA6Bh9B,IADnE,CAAhB;AAGA,SAAO,mBAAU68B,aAAV,CAAP;AACD;;AAED;;;;;AAKO,SAASN,qBAAT,CAAgCp0C,KAAhC,EAAuC;AAC5C,QAAMg1C,YAAYh1C,MAAMc,MAAN,CAAawI,YAA/B;AACA,QAAM2rC,aAAaj1C,MAAMc,MAAN,CAAauI,cAAhC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMk4B,UACJ0T,WAAW3rC,YAAX,IAA2B2rC,WAAW3rC,YAAX,CAAwBi4B,OAAnD,GAA6D0T,WAAW3rC,YAAX,CAAwBi4B,OAArF,GAA+FyT,UAAUzT,OAD3G;;AAGA,SAAOA,OAAP;AACD;;AAED;;;;;;;;AAQO,SAAS8S,kBAAT,CAA6Br0C,KAA7B,EAAoC;AACzC,QAAMg1C,YAAYh1C,MAAMc,MAAN,CAAawI,YAA/B;AACA,QAAM2rC,aAAaj1C,MAAMc,MAAN,CAAauI,cAAhC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO,wBAAY2rC,UAAU5G,SAAtB,EAAiC6G,WAAW7G,SAA5C,CAAP;AACD;;AAED;;;;;;;AAOO,SAASkG,cAAT,CAAyBt0C,KAAzB,EAAgCiR,OAAhC,EAAyC;AAC9C,MAAIyjC,gBAAgB9rC,oBAAoB5I,KAApB,CAApB;AACA;AACA;AACA00C,kBAAgBC,MAAMC,OAAN,CAAcF,aAAd,IAA+BA,aAA/B,GAA+C,CAACA,aAAD,CAA/D;;AAEA,MAAIQ,GAAJ;AACA,MAAIjkC,OAAJ,EAAa;AACX;AACAikC,UAAMR,cAAch0C,IAAd,CAAmBw0C,OAAOA,IAAIjkC,OAAJ,KAAgB,SAAhB,IAA6BikC,IAAIjkC,OAAJ,CAAYzQ,QAAZ,CAAqByQ,OAArB,CAAvD,CAAN;AACD,GAHD,MAGO;AACL;AACAikC,UAAMR,cAAc,CAAd,CAAN;AACD;;AAED,MAAIQ,OAAO,OAAOA,IAAI7G,mBAAX,KAAmC,QAA9C,EAAwD;AACtD;AACA,UAAM8G,cAAcD,IAAI7G,mBAAJ,CAAwBvkC,KAAxB,CAA8B,aAA9B,EAA6C,CAA7C,CAApB;AACA,WAAOqrC,WAAP;AACD,GAJD,MAIO;AACL;AACD;AACF;;AAED;;;;;AAKO,SAASZ,mBAAT,CAA8Bv0C,KAA9B,EAAqC;AAC1C,SAAOA,MAAMsJ,YAAN,CAAmBupC,gBAA1B;AACD,C;;;;;;;;;;;;;;;;;QCzKqBuC,c,GAAAA,c;;;;AAzBtB;;;;;;;;;;;;;;;;;;;;;;;;;AAyBO,eAAeA,cAAf,CAA+BC,SAAS,EAAxC,EAA4C;AACjD,QAAM57B,aAAa;AACjBE,WAAO,EADU;AAEjBE,WAAO,EAFU;AAGjBE,YAAQ,EAHS;AAIjBu7B,SAAK;AAJY,GAAnB;;AAOA,QAAM,kBAAQA,GAAR,CACJD,OAAOrkC,GAAP,CAAW,MAAMukC,GAAN,IAAa;AACtB,QAAI,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B/0C,QAA7B,CAAsC+0C,IAAI19B,IAA1C,CAAJ,EAAqD;AACnD;AACA,YAAMlC,SAAS,MAAM4/B,IAAIz/B,KAAJ,CAAUb,SAAV,EAArB;AACA;AACAwE,iBAAW87B,IAAI19B,IAAf,IAAuB4B,WAAW87B,IAAI19B,IAAf,EAAqB2O,MAArB,CAA4B7Q,MAA5B,CAAvB;AACA;AACA8D,iBAAW67B,GAAX,GAAiB77B,WAAW67B,GAAX,CAAe9uB,MAAf,CAAsB7Q,MAAtB,CAAjB;AACD,KAPD,MAOO;AACL;AACD;AACF,GAXD,CADI,CAAN;;AAeA,SAAO8D,UAAP;AACD,C;;;;;;;;;;;;QC/Be+7B,Q,GAAAA,Q;kBAwBQC,iB;;AAzCxB;;AACA;;AACA;;AACA;;AAGA;;;;AAGA;;;;AAEA;;;;;;;;AANA;AANA;AAkBO,SAASD,QAAT,CAAmBx1C,KAAnB,EAA0BS,MAA1B,EAAkC+3B,gBAAlC,EAAoDntB,OAApD,EAA6D;AAClE,QAAMpL,OAAO,4BAAYD,KAAZ,EAAmBS,MAAnB,CAAb;AACA;;;;;AAKA,MAAI,CAACR,IAAL,EAAW;AACT,WAAO,IAAI6B,gBAAJ,CAAe;AACpBG,YAAMhB,kBAAU4jC,aADI;AAEpB7iC,eAAS;AAFW,KAAf,CAAP;AAID,GALD,MAKO,IAAI/B,KAAKD,KAAL,KAAeI,uBAAYmC,SAA/B,EAA0C;AAC/C,WAAO,IAAIT,gBAAJ,CAAe;AACpBG,YAAMhB,kBAAU2jC,aADI;AAEpB5iC,eAAU,uBAAsB/B,KAAKD,KAAM,mBAAkBI,uBAAYmC,SAAU;AAF/D,KAAf,CAAP;AAID;AACF;;AAED;;;;;;AA7BA;AAiCe,SAASkzC,iBAAT,CAA4B5c,SAA5B,EAAuC;AACpD,QAAM,EAAEpiB,OAAF,EAAWi/B,YAAX,EAAyBC,SAAzB,EAAoC7c,eAApC,EAAqDpN,SAArD,EAAgEjjB,UAAhE,KAA+EowB,SAArF;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,iBAAe0Y,QAAf,CAAyB9wC,MAAzB,EAAiC+3B,gBAAjC,EAAmDntB,OAAnD,EAA4D;AAC1D,UAAMyF,MAAMrI,WAAWmZ,SAAX,CAAqB,MAArB,EAA6BnhB,MAA7B,CAAZ;AACAqQ,QAAIkX,IAAJ,CAAS,uBAAT;;AAEA,UAAM4B,aAAa,4BAAYnT,QAAQE,QAAR,EAAZ,EAAgClW,MAAhC,CAAnB;AACA,UAAM,EAAEm1C,SAAF,EAAal8B,YAAb,KAA8BrO,OAApC;;AAEA;AACA,UAAM;AACJxK,qBADI;AAEJD,oBAFI;AAGJg1C,iBAAWC,aAHP;AAIJ1hB,iBAJI;AAKJC,aALI;AAMJuf,sBANI;AAOJC;AAPI,QAQFhqB,UARJ;;AAUA,UAAMksB,iBAAiB;AACrBn8B,aAAOi8B,aAAaA,UAAUj8B,KAAvB,GAA+Bi8B,UAAUj8B,KAAzC,GAAiDk8B,cAAcl8B,KADjD;AAErBE,aAAO+7B,aAAaA,UAAU/7B,KAAvB,GAA+B+7B,UAAU/7B,KAAzC,GAAiDg8B,cAAch8B;AAExE;AAJuB,KAAvB,CAKA,MAAM,EAAEsJ,GAAF,EAAOkyB,MAAP,KAAkB,MAAMM,UAAUI,KAAV,CAAgBC,cAAhB,CAA+Bxd,gBAA/B,EAAiD;AAC7E/iB,iBAAW5U,eADkE;AAE7E+0C,iBAAWE,cAFkE;AAG7Ep8B;AAH6E,KAAjD,CAA9B;;AAMA,UAAMu8B,WAAW;AACfr1C,oBADe;AAEfs1C,aAAO/yB,GAFQ;AAGfgR,iBAHe;AAIfC,aAJe;AAKfuf,sBALe;AAMfC;;AAGF;AATiB,KAAjB,CAUA,IAAI;AACF,YAAM8B,aAAaS,aAAb,CAA2BF,QAA3B,CAAN;AACD,KAFD,CAEE,OAAOG,aAAP,EAAsB;AACtBtlC,UAAIkX,IAAJ,CAAS,8BAAT;AACA;AACA,UAAIquB,WAAJ;AACA,UAAI;AACF,cAAMV,UAAUI,KAAV,CAAgBO,gBAAhB,CAAiCz1C,eAAjC,EAAkDw0C,MAAlD,CAAN;AACD,OAFD,CAEE,OAAOkB,aAAP,EAAsB;AACtBzlC,YAAIgR,KAAJ,CAAU,sCAAV,EAAkDy0B,aAAlD;AACA;AACA;AACA;AACA;AACA;AACAF,sBAAcE,aAAd;AACD;;AAED,YAAMvgC,UAAU,sCAAoBA,OAApC;AACA;AACA;AACA,UAAIqgC,eAAergC,YAAY,QAA/B,EAAyC;AACvC;AACA;AACA;AACA,YAAIA,YAAY,QAAZ,IAAwBA,YAAY,QAAxC,EAAkD;AAChDlF,cAAIkX,IAAJ,CAAS,sEAAT;AACA;AACA,gBAAM8Q,gBAAgB0d,SAAhB,CAA0B31C,eAA1B,CAAN;;AAEA;AACA4V,kBAAQqjB,QAAR,CACExyB,qBAAYyyB,aAAZ,CAA0Bt5B,MAA1B,EAAkC;AAChCqX,qBAAS,IADuB;AAEhCE,wBAAY,EAAEwB,YAAY,+CAAd;AAFoB,WAAlC,CADF;;AAOAkS,oBAAU9jB,6BAAV,EAA6B;AAC3BnH,kBAD2B;AAE3BwX,sBAAU;AACRjY,qBAAO4pB,WAAW5pB,KADV;AAERkX,yBAAW0S,WAAW1S,SAFd;AAGRC,0BAAYyS,WAAWzS;AAHf,aAFiB;AAO3Be,mBAAOk+B;AAPoB,WAA7B;AASA,gBAAMA,aAAN;AACD;AACDtlC,YAAIkX,IAAJ,CAAS,sGAAT;AACD;;AAED,YAAMouB,aAAN;AACD;;AAED,QAAIzgC,SAAS,EAAb;AACA0/B,WAAO5vB,OAAP,CAAe3P,SAAS;AACtBH,eAASA,OAAO6Q,MAAP,CAAc1Q,MAAMH,MAAN,CAAa3E,GAAb,CAAiB6E,SAASA,MAAMlV,EAAhC,CAAd,CAAT;AACD,KAFD;;AAIAmQ,QAAIkX,IAAJ,CAAS,qEAAT;AACA;AACA,WAAO;AACL8rB,qBAAe;AACb2C,eAAO,IADM;AAEbC,kBAAUrB,OAAOrkC,GAAP,CAAW8E,SAASA,MAAMnV,EAA1B,CAFG;AAGbgV,cAHa;AAIbigC,mBAAWE;AAJE;AADV,KAAP;AAQD;;AAED,SAAOvE,QAAP;AACD,C;;;;;;;;;;;;kBCxKuBrW,e;;AAPxB;;;;;;AAEA;;;;;AAKe,SAASA,eAAT,CAA0B/X,GAA1B,EAA+B;AAC5C,QAAMuM,YAAYC,uBAAa7H,KAAb,CAAmB3E,GAAnB,CAAlB;;AAEA;AACA,QAAMwzB,kBAAkBjnB,UAAU5Z,KAAV,CACrBvV,MADqB,CACdq2C,QAAQA,KAAK/+B,IAAL,KAAc,OADR,EAErB4jB,KAFqB,CAEf3lB,SAASA,SAASA,MAAMsU,SAAN,KAAoB,UAFvB,CAAxB;;AAIA;AACA,QAAMysB,kBAAkBnnB,UAAU5Z,KAAV,CACrBvV,MADqB,CACdq2C,QAAQA,KAAK/+B,IAAL,KAAc,OADR;AAEtB;AACA;AAHsB,GAIrB4jB,KAJqB,CAIf3lB,SAASA,SAAS,CAAC,UAAD,EAAa,UAAb,EAAyBtV,QAAzB,CAAkCsV,MAAMsU,SAAxC,CAJH,CAAxB;;AAMA,SAAO,CAACusB,eAAD,IAAoB,CAACE,eAA5B;AACD,C,CAxBD,Y;;;;;;;;;;;;;;;;;;ACCA;;;;AACA;;;;AAEA;AAJA;AAKO,MAAMC,gCAAY9uB,QAAQ4H,eAAeC,UAAUknB,WAAWC,mBAClE;;;;cAIWhvB,KAAKvnB,MAAO;YACdunB,KAAKnQ,IAAK;YACVmQ,KAAKivB,IAAK;gBACNjvB,KAAKgO,QAAS;iBACbkhB,iBAAiBlvB,KAAK4tB,SAAtB,CAAiC;;MAE5CuB,WAAWC,UAAX,EAAuBxnB,WAAvB,CAAoC;;MAEpCynB,gBAAgBN,OAAhB,CAAyB;;;QAGvBO,aAAaC,SAAb,EAAwBP,gBAAgBQ,IAAxC,CAA8C;;QAE9CR,gBAAgBxxB,OAAhB,GAA0B2xB,WAAWI,SAAX,EAAsB1nB,MAAtB,CAA1B,GAA0D,uBAAwB;;CAlBnF;;AAsBP;AACO,MAAM4nB,wDAAwB3nB,WACnCA,QAAQ5tB,IAAR,IACA4tB,QACG2S,QADH,GAEGiV,KAFH,CAES,CAFT,EAEY,GAFZ,EAGGpnB,OAHH,CAGW,KAHX,EAGkB,EAHlB,CAFK;;AAOP;AACA,MAAM4mB,mBAAmBtB,aACvBA,aACA,yBAAeA,SAAf,EAA0B,IAA1B,EAAgC,GAAhC,EACGtlB,OADH,CACW,KADX,EACkB,GADlB,EAEGA,OAFH,CAEW,OAFX,EAEoB,GAFpB,CAFF;;AAMA,MAAM6mB,aAAaQ,eAAex0B,OAChCwM,uBACGI,KADH,CACS5M,GADT,EAEGmN,OAFH,CAEW,KAFX,EAEmB,KAAIqnB,WAAY,EAFnC,EAGGC,OAHH,EADF;;AAMA,MAAMC,gBAAgB,CAAC,EAAE31C,IAAF,EAAQs9B,IAAR,EAAD;AACpB;AACC,GAAE4X,UAAW,WAAUl1C,KAAKouB,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAwB;;UAExCgnB,aAAaQ,WAAb,EAA0BtY,IAA1B,CAAgC;CAJ1C;;AAOA,MAAM6X,kBAAkB,iBAAQ,CAACO,WAAD,EAAU,wBAAe,KAAf,CAAV,EAAiC,cAAK,EAAL,CAAjC,EAA2C,aAAIC,aAAJ,CAA3C,CAAR,CAAxB;;AAEA,MAAMP,eAAeK,eAAeI,UAAWA,SAASA,OAAOznB,OAAP,CAAe,KAAf,EAAuB,KAAIqnB,WAAY,EAAvC,CAAT,GAAqD,kBAApG;;AAEA;AACA,MAAMP,aAAa,MAAnB;AACA,MAAMG,YAAY,QAAlB;AACA,MAAMO,cAAc,UAApB,C;;;;;;AC9DA;AACA;AACA,oBAAoB,mBAAO,CAAC,GAAY;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,QAAQ,4BAA4B;AACpC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,6BAA6B;AACpC,WAAW,iCAAiC;AAC5C,UAAU,gCAAgC;AAC1C,WAAW,iCAAiC;AAC5C,OAAO,qCAAqC;AAC5C,SAAS,2CAA2C;AACpD,QAAQ;AACR;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,iBAAiB;AACzB;AACA;AACA,oDAAoD,gBAAgB;AACpE,kDAAkD,cAAc;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ,SAAS;AACjC,gBAAgB,QAAQ,SAAS;AACjC,iBAAiB,OAAO,QAAQ;AAChC,iBAAiB,OAAO,QAAQ;AAChC,gBAAgB,SAAS,OAAO;AAChC,gBAAgB,SAAS,OAAO;AAChyEAAyE;;AAEzE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD,EAAE,UAAU,EAAE;AAC/D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa;AAC5B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACt0BA;;AACA;;;;;;AAMO,MAAME,sCAAe;AAC1B;AACA,GAAC50C,sBAAW4B,IAAZ,GAAmB,MAFO;AAG1B,GAAC5B,sBAAW6B,cAAZ,GAA6B,mBAHH;AAI1B,GAAC7B,sBAAW8B,MAAZ,GAAqB,QAJK;AAK1B+yC,eAAa,YALa;AAM1B,GAAC70C,sBAAW+B,MAAZ,GAAqB,QANK;AAO1B,GAAC/B,sBAAWgC,MAAZ,GAAqB,QAPK;AAQ1B,GAAChC,sBAAWmC,YAAZ,GAA2B,SARD;AAS1B,GAACnC,sBAAWiC,GAAZ,GAAkB,KATQ;AAU1B,GAACjC,sBAAWM,eAAZ,GAA8B,gBAVJ;AAW1B,GAACN,sBAAWO,qBAAZ,GAAoC,sBAXV;AAY1B,GAACP,sBAAWQ,IAAZ,GAAmB,MAZO;AAa1B,GAACR,sBAAWoC,IAAZ,GAAmB,MAbO;AAc1B,GAACpC,sBAAWqC,MAAZ,GAAqB,QAdK;AAe1B,GAACrC,sBAAWuC,SAAZ,GAAwB,UAfE;AAgB1B,GAACvC,sBAAWyC,YAAZ,GAA2B,aAhBD;AAiB1B,GAACzC,sBAAWwC,eAAZ,GAA8B,eAjBJ;AAkB1B,GAACxC,sBAAW0C,kBAAZ,GAAiC,kBAlBP;AAmB1B,GAAC1C,sBAAW6C,aAAZ,GAA4B,cAnBF;AAoB1B,GAAC7C,sBAAW8C,aAAZ,GAA4B,YApBF;AAqB1B,GAAC9C,sBAAW+C,MAAZ,GAAqB,iBArBK;AAsB1B,GAAC/C,sBAAWgD,UAAZ,GAAyB,eAtBC;AAuB1B,GAAChD,sBAAWkC,qBAAZ,GAAoC,qBAvBV;AAwB1B,GAAClC,sBAAWsC,sBAAZ,GAAqC,sBAxBX;AAyB1B,GAACtC,sBAAW4C,SAAZ,GAAwB,UAzBE;AA0B1B,GAAC5C,sBAAW2C,SAAZ,GAAwB,UA1BE;AA2B1B,GAAC3C,sBAAWiD,oBAAZ,GAAmC;;AAGrC;;;AA9B4B,CAArB,CAiCA,MAAM6xC,4CAAkB;AAC7BC,qBAAmB,uBADU;AAE7B/8B,kBAAgB,eAFa;AAG7Bg9B,uBAAqB,yBAHQ;AAI7BC,sBAAoB,wBAJS;AAK7BC,uBAAqB,mBALQ;AAM7BC,wBAAsB;AANO,CAAxB,C;;;;;;;;;;;;QChCSC,oB,GAAAA,oB;QAaAC,qB,GAAAA,qB;;AArBhB;;AAEA;;;;;;AAMO,SAASD,oBAAT,CAA+Bx4C,KAA/B,EAAsCu+B,UAAU90B,SAAhD,EAA2D;AAChE,MAAI80B,OAAJ,EAAa;AACX,WAAOv+B,MAAM04C,aAAN,CAAoBna,OAApB,CAAP;AACD,GAFD,MAEO;AACL,WAAOv+B,MAAM04C,aAAb;AACD;AACF;;AAED;;;;;AAKO,SAASD,qBAAT,CAAgCz4C,KAAhC,EAAuC;AAC5C,SAAO,mBAAUA,MAAMc,MAAN,CAAa43C,aAAvB,CAAP;AACD,C;;;;;;;;;;;;;;;;;;;;;QCAiBC,6B,GAAAA,6B;QAkGAC,+B,GAAAA,+B;QA+CAC,Q,GAAAA,Q;;AAvKlB;;;;AAEA;;;;AAHA;AAIA,MAAM/nC,MAAMrI,iBAAWmZ,SAAX,CAAqB,eAArB,CAAZ;;AAEA;;;;;;;;;;;;;;;;;;AAJA;AAqBO,UAAW+2B,6BAAX,CACLjvC,UADK,EAEL;AACEc,UADF;AAEEi0B,cAFF;AAGEqa,UAHF;AAIEC,aAJF;AAKEC,iBALF;AAMEC,qBANF;AAOExuC,kBAPF;AAQEyuC,OARF;AASEC;AATF,CAFK,EAaL;AACA,QAAM,EAAEzuC,MAAF,KAAahB,UAAnB;AACA+0B,iBAAeA,aAAayD,WAAb,EAAf;AACA,QAAMrO,MACH,GAAEnpB,OAAOC,QAAS,MAAKD,OAAOA,MAAO,IAAGA,OAAOG,IAAK,GAArD,GACC,gBAAeH,OAAOI,OAAQ,GAD/B,GAEC,QAAOpB,WAAWC,QAAS,GAF5B,GAGA,OAHA,GAIA80B,YAJA,GAKA,WANF;AAOA,QAAMuN,SAAS,MAAf;AACA,MAAIjY,OAAO;AACTqlB,cAAUN,QADD;AAET7nC,aAASzG,QAFA;AAGTC,sBAAkBA,gBAHT;AAITyuC,WAAOA,KAJE;AAKTC,kBAAcA;AALL,GAAX;;AAQA,MAAI1a,iBAAiB,OAArB,EAA8B;AAC5B1K,SAAKilB,eAAL,GAAuBA,eAAvB;AACAjlB,SAAKklB,mBAAL,GAA2BA,mBAA3B;AACD,GAHD,MAGO;AACLllB,SAAKglB,WAAL,GAAmBA,WAAnB;AACD;;AAEDhlB,SAAO,yBAAeA,IAAf,CAAP;AACAjjB,MAAIgR,KAAJ,CAAW,kCAAiCkqB,MAAO,IAAGnY,GAAI,EAA1D;;AAEA,QAAMC,WAAW,MAAM,uBAAQ,EAAED,GAAF,EAAOmY,MAAP,EAAejY,IAAf,EAAR,CAAvB;;AAEA,MAAIslB,oBAAJ;AACA,QAAMC,eAAe7a,eAAe,4BAApC;AACA,MAAI3K,SAAS7c,OAAT,CAAiB8c,IAAjB,IAAyBD,SAAS7c,OAAT,CAAiB8c,IAAjB,CAAsBulB,YAAtB,CAA7B,EAAkE;AAChED,2BAAuBvlB,SAAS7c,OAAT,CAAiB8c,IAAjB,CAAsBulB,YAAtB,CAAvB;AACD;;AAED,MAAIxlB,SAAS5b,KAAb,EAAoB;AAClBpH,QAAIkX,IAAJ,CAAS,yDAAT;AACA,QAAIqxB,oBAAJ,EAA0B;AACxB;AACA,YAAM9/B,aAAa8/B,qBAAqB9/B,UAAxC;AACAzI,UAAIgR,KAAJ,CAAW,+EAA8EvI,UAAW,EAApG;;AAEA,aAAO;AACLrB,eAAO,IADF;AAEL7N,gBAAQkP,UAFH;AAGLi+B,cAAO,iEAAgEj+B,UAAW;AAH7E,OAAP;AAKD,KAVD,MAUO;AACL;AACA,YAAM,EAAEvX,OAAF,KAAc8xB,SAAS7c,OAAT,CAAiBid,MAArC;AACApjB,UAAIgR,KAAJ,CAAW,2EAA0E9f,OAAQ,GAA7F;;AAEA,aAAO;AACLkW,eAAO,IADF;AAEL7N,gBAAQypB,SAAS7c,OAAT,CAAiBid,MAAjB,CAAwBjyB,IAF3B;AAGLu1C,cAAO,kEAAiE1jB,SAAS7c,OAAT,CAAiBid,MAAjB,CAAwBlyB,OAAQ;AAHnG,OAAP;AAKD;AACF,GAvBD,MAuBO,IAAIq3C,wBAAwBA,qBAAqB9/B,UAArB,KAAoC,CAAhE,EAAmE;AACxEzI,QAAIkX,IAAJ,CAAU,iEAAgEqxB,qBAAqBE,UAAW,EAA1G;AACA;AACA,WAAO;AACLrhC,aAAO,IADF;AAEL7N,cAAQgvC,qBAAqBE,UAFxB;AAGL/B,YAAO,kEAAiE6B,qBAAqB9/B,UAAW;AAHnG,KAAP;AAKD,GARM,MAQA;AACLzI,QAAIkX,IAAJ,CAAS,8DAAT;AACA;AACE9P,aAAO;AADT,OAEKmhC,oBAFL;AAID;AACF;;AAED;;;;;;;;AAQO,UAAWT,+BAAX,CAA4ClvC,UAA5C,EAAwD,EAAEg1B,YAAF,EAAxD,EAA0E;AAC/E,QAAM,EAAEh0B,MAAF,KAAahB,UAAnB;AACA,QAAMmqB,MAAO,GAAEnpB,OAAOC,QAAS,MAAKD,OAAOA,MAAO,IAAGA,OAAOG,IAAK,GAAE6zB,YAAa,EAAhF;AACA,QAAMsN,SAAS,QAAf;AACA,QAAMwN,eAAe,MAArB;;AAEA1oC,MAAIgR,KAAJ,CAAW,oCAAmCkqB,MAAO,IAAGnY,GAAI,EAA5D;AACA,QAAMC,WAAW,MAAM,uBAAQ,EAAED,GAAF,EAAOmY,MAAP,EAAewN,YAAf,EAAR,CAAvB;;AAEA,MAAI1lB,SAAS5b,KAAb,EAAoB;AAClBpH,QAAIkX,IAAJ,CAAS,2DAAT;AACA,QAAI8L,SAAS7c,OAAT,CAAiB8c,IAArB,EAA2B;AACzB;AACA,YAAM,EAAExa,UAAF,KAAiBua,SAAS7c,OAAT,CAAiB8c,IAAxC;AACAjjB,UAAIgR,KAAJ,CAAW,0EAAyEvI,UAAW,GAA/F;AACA;AACA,aAAO;AACLrB,eAAO,IADF;AAEL7N,gBAAQkP,UAFH;AAGLi+B,cAAO,mEAAkEj+B,UAAW;AAH/E,OAAP;AAKD,KAVD,MAUO;AACL;AACA,YAAM,EAAEvX,OAAF,KAAc8xB,SAAS7c,OAAT,CAAiBid,MAArC;AACApjB,UAAIgR,KAAJ,CAAW,sEAAqE9f,OAAQ,EAAxF;AACA;AACA,aAAO;AACLkW,eAAO,IADF;AAEL7N,gBAAQypB,SAAS7c,OAAT,CAAiBid,MAAjB,CAAwBjyB,IAF3B;AAGLu1C,cAAO,sEAAqEx1C,OAAQ;AAH/E,OAAP;AAKD;AACF,GAvBD,MAuBO;AACL8O,QAAIkX,IAAJ,CAAS,gEAAT;AACA;AACA,WAAO;AACL9P,aAAO;AADF,KAAP;AAGD;AACF;;AAED;;;;;;AAMO,UAAW2gC,QAAX,CAAqBnvC,UAArB,EAAiC+vC,UAAjC,EAA6C;AAClD,QAAM,EAAE/uC,MAAF,KAAahB,UAAnB;AACA,QAAMsiC,SAAS,KAAf;AACA,QAAMnY,MAAO,GAAEnpB,OAAOC,QAAS,MAAKD,OAAOA,MAAO,IAAGA,OAAOG,IAAK,GAAE4uC,UAAW,EAA9E;AACA3oC,MAAIgR,KAAJ,CAAW,iCAAgCkqB,MAAO,IAAGnY,GAAI,EAAzD;;AAEA,QAAMC,WAAW,MAAM,uBAAQ;AAC7BD,OAD6B;AAE7BmY;AAF6B,GAAR,CAAvB;;AAKA,MAAI,CAAClY,SAAS5b,KAAd,EAAqB;AACnBpH,QAAIkX,IAAJ,CAAS,2BAAT;AACA;AACA,WAAO8L,SAAS7c,OAAT,CAAiB8c,IAAxB;AACD,GAJD,MAIO;AACLjjB,QAAIgR,KAAJ,CAAW,kCAAiC,yBAAegS,SAAS5b,KAAxB,CAA+B,EAA3E;AACD;AACF,C;;;;;;;;;;;;;kBCtKuBwhC,a;QAsCNC,a,GAAAA,a;;AAzDlB;;IAAYh5B,W;;AACZ;;IAAYusB,O;;AACZ;;;;AACA;;IAAY0M,c;;AACZ;;AAGA;;AAGA;;AAGA;;;;;;AAEA;;;;;;AANA;AAVA;AAoBe,SAASF,aAAT,CAAwBlwC,QAAxB,EAAkC;AAC/C;AACA,MAAI,CAAC,CAAC,MAAD,EAAS,IAAT,EAAe,OAAf,EAAwBC,SAAxB,EAAmCjJ,QAAnC,CAA4CgJ,QAA5C,CAAL,EAA4D;AAC1D,UAAMggB,MAAM,yCAAN,CAAN;AACD;AACD,SAAO,UAAWkwB,aAAX,GAA4B;AACjC,UAAM,wBAAU/4B,YAAYiQ,OAAtB,EAA+BipB,iBAA/B,EAAkDrwC,QAAlD,CAAN;AACD,GAFD;AAGD;;AAED;;;;;AAjBA;;;AANA;AA0BA,UAAWqwC,iBAAX,CAA8BrwC,QAA9B,EAAwCuH,MAAxC,EAAgD;AAC9C,QAAMmjB,SAAS,MAAM,mBAAKylB,aAAL,EAAoBnwC,QAApB,EAA8BuH,MAA9B,CAArB;;AAEA;AACA;AACA,MAAIvH,YAAY,CAAC,2BAAa0gB,UAAb,CAAwB,GAAxB,CAAjB,EAA+C;AAC7C;AACA;AACA,UAAMhS,QAAQ0hC,eAAgB,GAAEpwC,QAAS,eAA3B,EAA2C0qB,MAA3C,CAAd;;AAEA,QAAIhc,KAAJ,EAAW;AACT,YAAM,kBAAIg1B,QAAQ7W,kBAAR,CAA2Bne,KAA3B,CAAJ,CAAN;AACD;AACF;;AAED,QAAM,kBAAIg1B,QAAQpZ,QAAR,CAAiB/iB,OAAO0c,IAAP,CAAY+I,SAA7B,EAAwCtC,MAAxC,EAAgD,CAAC,CAACA,OAAOhc,KAAzD,CAAJ,CAAN;AACD;;AAED;;;;;;;AAOO,UAAWyhC,aAAX,CAA0BnwC,QAA1B,EAAoCuH,MAApC,EAA4C;AACjD,QAAMD,MAAMrI,iBAAWmZ,SAAX,CAAqB,SAArB,EAAgC7Q,OAAO0c,IAAP,CAAY+I,SAA5C,CAAZ;;AAEA,QAAMU,aAAa,4BAAgBnmB,OAAOkG,OAAvB,CAAnB;AACAnG,MAAIgR,KAAJ,CAAW,uBAAsB/Q,OAAO0c,IAAP,CAAY+I,SAAU,GAAvD,EAA2DU,UAA3D;;AAEA;AACA,QAAMhD,SAAS,MAAM,2BAAYnjB,OAAOkG,OAAnB,EAA4BlG,OAAO0c,IAAP,CAAY+I,SAAxC,CAArB;;AAEA1lB,MAAIgR,KAAJ,CAAW,0BAAyB/Q,OAAO0c,IAAP,CAAY+I,SAAU,GAA1D,EAA8DtC,MAA9D;;AAEA,SAAOA,MAAP;AACD;;AAED;AACO,MAAM4lB,sCAAe,EAAEJ,aAAF,EAAiBG;AAC7C;;AAD4B,CAArB,C;;;;;;;;;;;;;;;;;QC7DSE,iB,GAAAA,iB;QAyDAC,e,GAAAA,e;QAoCAC,kB,GAAAA,kB;;AApGhB;;;;;;AAEA;;;;;AAKO,SAASF,iBAAT,CAA4BjmB,QAA5B,EAAsC;AAC3C,MAAI,CAACA,SAAS5b,KAAd,EAAqB;AACnB;AACD;;AAED;;;;;;;;;;;;;;;AAeA;AACA,QAAMgiC,aAAa,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CAAnB;;AAEA,QAAM3gC,aAAa4gC,cAAcrmB,QAAd,CAAnB;;AAEA;;;AAGA,MAAIA,SAASI,MAAT,CAAgBjyB,IAAhB,KAAyB,GAA7B,EAAkC;AAChC,WAAO,IAAIH,gBAAJ,CAAe;AACpBG,YAAMjB,kBAAU0iC,mBADI;AAEpB1hC,eAAS;AAFW,KAAf,CAAP;AAID;;AAED;;;;AAIA,MAAI8xB,SAASI,MAAT,CAAgBjyB,IAAhB,KAAyB,GAAzB,KAAiC6xB,SAASC,IAAT,KAAkBtqB,SAAlB,IAA+BywC,WAAW15C,QAAX,CAAoB+Y,UAApB,CAAhE,CAAJ,EAAsG;AACpG,QAAIvX,UAAU,6DAAd;AACA,QAAIuX,UAAJ,EAAgB;AACdvX,iBAAY,iBAAgBuX,UAAW,EAAvC;AACD;AACD,WAAO,IAAIzX,gBAAJ,CAAe;AACpBG,YAAMjB,kBAAU0iC,mBADI;AAEpB1hC,eAASA;AAFW,KAAf,CAAP;AAID;AACF;;AAED;;;;;;AA/DA;;;;;AAqEO,SAASg4C,eAAT,CAA0BlmB,QAA1B,EAAoC;AACzC;;;;;;;;;AASA;;;;AAIA,QAAMI,SAASJ,SAASI,MAAxB;AACA,MAAIA,OAAOjyB,IAAP,KAAgB,GAAhB,IAAuBiyB,OAAOlyB,OAAP,KAAmB,cAA9C,EAA8D;AAC5D,QAAIA,UAAU,6DAAd;;AAEA,UAAMuX,aAAa4gC,cAAcrmB,QAAd,CAAnB;;AAEA,QAAIva,UAAJ,EAAgB;AACdvX,iBAAY,iBAAgBuX,UAAW,EAAvC;AACD;;AAED,WAAO,IAAIzX,gBAAJ,CAAe;AACpBG,YAAMjB,kBAAU0iC,mBADI;AAEpB1hC;AAFoB,KAAf,CAAP;AAID;AACF;;AAED;;;;;AAKO,SAASi4C,kBAAT,CAA6BnmB,QAA7B,EAAuC;AAC5C;;;AAGA,MAAIA,SAASI,MAAT,CAAgBjyB,IAAhB,KAAyB,GAA7B,EAAkC;AAChC,WAAO,IAAIH,gBAAJ,CAAe;AACpBG,YAAMjB,kBAAU0iC,mBADI;AAEpB1hC,eAAS;AAFW,KAAf,CAAP;AAID;AACF;;AAED;;;;;AAKA,SAASm4C,aAAT,CAAwBrmB,QAAxB,EAAkC;AAChC,MAAIva,UAAJ;AACA;;;AAGA,MAAIua,SAASC,IAAb,EAAmB;AACjB,QAAID,SAASC,IAAT,CAAcxa,UAAlB,EAA8B;AAC5B;AACAA,mBAAaua,SAASC,IAAT,CAAcxa,UAA3B;AACD,KAHD,MAGO;AACL;AACA;AACA;AACA,4BAAcua,SAASC,IAAvB,EAA6BtO,OAA7B,CAAqCwB,SAAS;AAC5C,YAAIA,MAAM1N,UAAV,EAAsB;AACpBA,uBAAa0N,MAAM1N,UAAnB;AACD;AACF,OAJD;AAKD;AACF;AACD,SAAOA,UAAP;AACD,C;;;;;;;;;;;;AC/ID;;;;;;;;;;;;;;AAcO,MAAM6gC,wCAAgB,eAAtB,C;;;;;;ACdP;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvCA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AAEA;;;;AAEA,MAAMC,iBAAiB,CACrB,GAAGC,qBADkB,EAErB,EAAEp4C,MAAM,gBAAR,EAA0Bq4C,IAAIC,gBAA9B,EAFqB,EAGrB,EAAEt4C,MAAM,QAAR,EAAkBq4C,IAAIjlC,gBAAtB,EAHqB,EAIrB,EAAEpT,MAAM,MAAR,EAAgBq4C,IAAIE,mBAApB,EAJqB,EAKrB,EAAEv4C,MAAM,cAAR,EAAwBq4C,IAAIG,cAA5B,EALqB,EAMrB,EAAEx4C,MAAM,eAAR,EAAyBq4C,IAAI7B,cAA7B,EANqB,EAOrB,EAAEx2C,MAAM,SAAR,EAAmBq4C,IAAII,oBAAvB,EAPqB,CAAvB;;AAUA,SAASC,IAAT,CAAevvC,UAAU,EAAzB,EAA6BwvC,UAAU,EAAvC,EAA2C;AACzC,SAAO,oBAAYxvC,OAAZ,EAAqB,CAAC,GAAGgvC,cAAJ,EAAoB,GAAGQ,OAAvB,CAArB,CAAP;AACD;;AAED;AACAD,KAAKE,MAAL,GAAcF,IAAd;;AAEAA,KAAK75B,WAAL,GAAmB;AACjBg6B;AAEF;AACA;AAJmB,CAAnB,CAKAxjB,OAAOyjB,OAAP,GAAiBJ,IAAjB,C;;;;;;;;;;;;kBC8FwBK,W;;AATxB;;AACA;;AAEA;AACA;AACA;AACA;AA9HA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;AASA;;;;;;;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;;;AAUA,IAAIC,KAAJ,EAAOA,MAAEC,UAAF;;AAEQ,SAASF,WAAT,CAAsB5vC,UAAU,EAAhC,EAAoCwvC,UAAU,EAA9C,EAAkD;AAC/D,SAAO,sBAAQA,OAAR,EAAiBxvC,OAAjB,CAAP;AACD,C;;;;;;;;;;;;;;;;;;;;;QCzFe+vC,O,GAAAA,O;;AAzChB;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AAGA;;AACA;;AAGA;;AAGA;;;;AAJA;;;AAJA;AASA,MAAMtqC,MAAMrI,iBAAWmZ,SAAX,CAAqB,SAArB,CAAZ;;AAFA;AAhBA;;;AAoBA,MAAMy5B,kBAAkB;AACtBC,uBAAqB,KADC;AAEtBC,qBAAmB;;AAGrB;AALwB,CAAxB,CAMA,MAAMza,gBAAgBha,uBAAIia,MAAJ,CAAW;AAC/Bua,uBAAqBx0B,uBAAI6a,OAAJ,EADU;AAE/B4Z,qBAAmBz0B,uBAAIoC,MAAJ;AAFY,CAAX,CAAtB;AAIA,MAAM0Y,eAAe,uBAAM,QAAN,EAAgBd,aAAhB,CAArB;;AAEA;;;;;;;;;;AAUO,SAASsa,OAAT,CAAkBI,eAAlB,EAAmCC,aAAa,EAAhD,EAAoD;AACzD;AACA,QAAM3wC,UAAU,0BAAhB;AACAgG,MAAIkX,IAAJ,CAAU,gBAAeld,OAAQ,EAAjC;;AAEA;AACA,QAAM4wC,gBAAgB,mBAAUD,UAAV,CAAtB;AACA;AACA,MAAI,EAAEE,QAAQtwC,OAAV,KAAwCqwC,aAA5C;AAAA,MAA0BE,aAA1B,0CAA4CF,aAA5C;;AAEArwC,YAAU,wBAAYgwC,eAAZ,EAA6BhwC,OAA7B,CAAV;AACAu2B,eAAav2B,OAAb;;AAEA;AACA,QAAMwwC,SAAS,IAAIC,kBAAJ,EAAf;;AAEA,MAAIC,QAAQ,EAAZ;AACA,MAAIC,KAAJ;AACA,MAAIC,cAAc,EAAlB;AACA,QAAMC,OAAO,EAAb;AACA,MAAIC,WAAW,EAAf;AACA,MAAIC,YAAY,EAAhB;AACA,MAAIC,cAAJ;AACA,QAAMC,SAAS,EAAf;AACA,MAAI7lC,UAAU;AACZoiB,eAAWgjB,OAAOhjB,SADN;AAEZ0jB,kBAAc,EAFF;AAGZ7M,SAAK,EAHO;AAIZ8M,gBAAY,EAJA;AAKZ7lC,eAAY;AACV,UAAI,CAACqlC,KAAL,EAAY;AACV,cAAMxyB,MAAM,gDAAN,CAAN;AACD;AACD,UAAIizB,YAAJ,EAAkB;AAChB,cAAMjzB,MAAM,sDAAN,CAAN;AACD;AACD,aAAOwyB,MAAMrlC,QAAN,EAAP;AACD,KAbW;AAcZmjB,aAAU,GAAGppB,IAAb,EAAmB;AACjB,UAAI,CAACsrC,KAAL,EAAY;AACV,cAAMxyB,MAAM,gDAAN,CAAN;AACD;AACD,aAAOwyB,MAAMliB,QAAN,CAAe,GAAGppB,IAAlB,CAAP;AACD,KAnBW;AAoBZ8a,cAAW+uB,EAAX,EAAe;AACb,UAAI,CAACyB,KAAL,EAAY;AACV,cAAMxyB,MAAM,gDAAN,CAAN;AACD;AACD,aAAOwyB,MAAMxwB,SAAN,CAAgB+uB,EAAhB,CAAP;AACD;AAzBW,GAAd;;AA4BA;AACAsB,SAAO50B,KAAP,CAAa,SAAb,EAAwBxQ,OAAxB;;AAEA;AACA,MAAIimC,gBAAJ;;AAEA,MAAID,eAAe,KAAnB;AACA,MAAIE,yBAAyBX,SAASY,QAAQ7rC,UAAU;AACtD,QAAI0rC,YAAJ,EAAkB;AAChB,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAOG,KAAK7rC,MAAL,CAAP;AACD;AACF,GAND;;AAQA;AACA,MAAI8pC,UAAU,aAAI,UAAUgC,MAAV,EAAkB;AAClC;AACA,QAAI,CAACA,MAAD,IAAW,CAACA,OAAOtC,EAAnB,IAAyB,OAAOsC,OAAOtC,EAAd,KAAqB,UAAlD,EAA8D;AAC5D,aAAO,KAAP;AACD;;AAED;AACA;AACA,WAAOsC,OAAOtC,EAAP,CAAUqB,cAAciB,OAAO36C,IAArB,CAAV,EAAsC25C,MAAtC,CAAP;AACD,GATa,EASXL,eATW,CAAd;;AAWA;AACAX,YAAUA,QAAQt6C,MAAR,CAAes8C,UAAUt7B,QAAQs7B,MAAR,CAAzB,CAAV;;AAEA;AACA;AACAhC,UAAQp1B,OAAR,CAAgB,UAAUo3B,MAAV,EAAkB;AAChC,QAAIA,OAAON,YAAX,EAAyB;AACvB9lC,cAAQ8lC,YAAR,GAAuB9lC,QAAQ8lC,YAAR,CAAqB/1B,MAArB,CAA4Bq2B,OAAON,YAAnC,CAAvB;AACD;AACD,QAAIM,OAAOC,OAAX,EAAoB;AAClBX,eAASU,OAAO36C,IAAhB,IAAwB26C,OAAOC,OAA/B;AACD;AACD,QAAID,OAAOE,UAAX,EAAuB;AACrB,UAAIF,OAAO36C,IAAP,KAAgB,MAApB,EAA4B;AAC1Bw6C,2BAAmBG,OAAOE,UAA1B;AACD,OAFD,MAEO;AACLd,oBAAYljC,IAAZ,CAAiB,MAAM8jC,OAAOE,UAAP,CAAkBtmC,OAAlB,CAAvB,EADK,CAC8C;AACpD;AACF;AACD,QAAIomC,OAAOnN,GAAX,EAAgB;AACdwM,WAAKnjC,IAAL,CAAU8jC,OAAOnN,GAAjB;AACD;AACD,QAAImN,OAAOG,IAAX,EAAiB;AACfZ,gBAAUrjC,IAAV,CAAe8jC,OAAOG,IAAtB;AACD;AACD,QAAIH,OAAOd,KAAX,EAAkB;AAChBA,cAAQA,MAAMv1B,MAAN,CAAaq2B,OAAOd,KAApB,CAAR;AACD;AACD;AACA,QAAIc,OAAOI,MAAX,EAAmB;AACjB;AACA;AACA,YAAMC,YAAY;AAChBC,6BAAqB;AACnB1mC,mBAAS;AACPyjB,kBAAO;AACL,qBAAOzjB,OAAP;AACD;AAHM;AADU;AADL,OAAlB;AASA,WAAK,MAAM2mC,OAAX,IAAsBP,OAAOI,MAA7B,EAAqC;AACnC,YAAIJ,OAAOI,MAAP,CAAc/rC,cAAd,CAA6BksC,OAA7B,CAAJ,EAA2C;AACzC;AACA,cAAI,CAAC3mC,QAAQ+lC,UAAR,CAAmBtrC,cAAnB,CAAkCksC,OAAlC,CAAL,EAAiD;AAC/C3mC,oBAAQ+lC,UAAR,CAAmBY,OAAnB,IAA8BF,SAA9B;AACD;AACDzmC,kBAAQ+lC,UAAR,CAAmBY,OAAnB,IAA8B,uBAAQ3mC,QAAQ+lC,UAAR,CAAmBY,OAAnB,CAAR,EAAqCP,OAAOI,MAAP,CAAcG,OAAd,CAArC,CAA9B;AACD;AACF;AACF;;AAED;;;;;;;;AAQA,QAAIP,OAAOP,MAAX,EAAmB;AACjB,WAAK,MAAMna,GAAX,IAAkB0a,OAAOP,MAAzB,EAAiC;AAC/B,YAAIA,OAAOna,GAAP,CAAJ,EAAiB;AACfrxB,cAAIgR,KAAJ,CAAW,oBAAmBqgB,GAAI,SAAQA,GAAI,SAAQ0a,OAAO36C,IAAK,GAAlE;AACAo6C,iBAAOna,GAAP,IAAc0a,OAAOP,MAAP,CAAcna,GAAd,CAAd;AACD,SAHD,MAGO;AACLma,iBAAOna,GAAP,IAAc0a,OAAOP,MAAP,CAAcna,GAAd,CAAd;AACD;AACF;AACF;AACF,GAjED;;AAmEA,MAAIua,gBAAJ,EAAsB;AACpB;AACAT,gBAAYljC,IAAZ,CAAiB,MAAM2jC,iBAAiBjmC,OAAjB,CAAvB;AACD;;AAED;AACA,YAAW4mC,QAAX,GAAuB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAK,MAAML,IAAX,IAAmBZ,SAAnB,EAA8B;AAC5B;AACA;AACA;AACA,aAAQY,KAAKV,MAAL,CAAR;AACD;AACD;AACA,SAAK,MAAM9rC,IAAX,IAAmBurC,KAAnB,EAA0B;AACxB,YAAM,mBAAK,wBAAYvrC,IAAZ,CAAL,CAAN;AACD;AACF;;AAED;AACA,QAAM8sC,oBAAoBjyC,QAAQiwC,mBAAR,GACtB,iDAAoB,EAAEp5C,MAAMmJ,QAAQkwC,iBAAhB,EAApB,CADsB,GAEtBgC,cAFJ;;AAIA;AACA,MAAInB,UAAUhsC,MAAV,GAAmB2rC,MAAM3rC,MAAzB,GAAkC,CAAtC,EAAyC;AACvC,QAAIotC,iBAAiB,0BAArB;;AAEA;AACAxB,YAAQ,wBACN,4BAAgBG,QAAhB,CADM,EAENmB,kBAAkB,4BAAgBX,sBAAhB,EAAwCa,cAAxC,EAAwD,GAAGvB,WAA3D,CAAlB,CAFM,CAAR;;AAKAI,qBAAiBmB,eAAettB,GAAf,CAAmBmtB,QAAnB,CAAjB;AACD,GAVD,MAUO;AACL;AACArB,YAAQ,wBACN,4BAAgBG,QAAhB,CADM,EAENmB,kBAAkB,4BAAgBX,sBAAhB,EAAwC,GAAGV,WAA3C,CAAlB,CAFM,CAAR;AAID;;AAED;AACA;AACA;AACA;AACA;AACAC,OAAKz2B,OAAL,CAAag4B,cAAc;AACzBhnC,YAAQi5B,GAAR,GAAc,eAAMj5B,QAAQi5B,GAAd,EAAmB+N,WAAWhnC,OAAX,CAAnB,CAAd;AACD,GAFD;AAGAolC,SAAO6B,IAAP,GAAcj4B,OAAd,CAAsBvjB,QAAQ;AAC5B;AACA,QAAIA,KAAKggC,WAAL,GAAmByb,QAAnB,CAA4B,KAA5B,CAAJ,EAAwC;AACtC,YAAMjO,MAAMmM,OAAOhjB,SAAP,CAAiB32B,IAAjB,CAAZ;AACAuU,cAAQi5B,GAAR,GAAc,eAAMj5B,QAAQi5B,GAAd,EAAmBA,GAAnB,CAAd;AACD;AACF,GAND;;AAQA;AACA;AACAmM,SAAOxqC,OAAP,CAAewqC,OAAOhjB,SAAtB;;AAEA;AACA,QAAM+kB,uCACDnnC,QAAQi5B,GADP;AAEJ1vC,WAAO;AACLk6B,WAAK,YAAY;AACf,eAAO8hB,MAAMrlC,QAAN,EAAP;AACD,OAHI;AAIL6U,iBAAW,UAAU,GAAG9a,IAAb,EAAmB;AAC5B,eAAOsrC,MAAMxwB,SAAN,CAAgB,GAAG9a,IAAnB,CAAP;AACD;AANI,KAFH;AAUJ;;;;;;AAMAmtC,sBAAmB;AACjB,aAAOpnC,QAAQ8lC,YAAf;AACD,KAlBG;AAmBJ;;;;;;;AAOA11B,iBAAc;AACZ,aAAO/b,OAAP;AACD,KA5BG;AA6BJ;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BAgzC,cAAW;AACT;AACA;AACA;;AAEA,YAAMC,WAAW,MAAM;AACrB,YAAItB,YAAJ,EAAkB;;AAElB;AACA,YAAIJ,cAAJ,EAAoBA,eAAe2B,MAAf;;AAEpB;AACA,iBAASC,mBAAT,CAA8Bj+C,KAA9B,EAAqC+Q,MAArC,EAA6C;AAC3C,iBAAO,EAAP;AACD;AACDirC,cAAMkC,cAAN,CAAqBD,mBAArB;;AAEA;AACAxB,uBAAe,IAAf;AACD,OAdD;;AAgBA;AACA;AACA;AACA,YAAM0B,cAAc,CAApB;AACA3sC,iBAAWusC,QAAX,EAAqBI,WAArB;AACD;AApFG,IAAN;;AAuFA;AACA,SAAOP,SAAP;AACD,C;;;;;;AC/VD,mBAAO,CAAC,GAAiC;AACzC,iBAAiB,mBAAO,CAAC,EAAqB;;;;;;;ACD9C;AACA,cAAc,mBAAO,CAAC,EAAW;;AAEjC,0CAA0C,SAAS,mBAAO,CAAC,GAAkB,GAAG;;;;;;;;ACHnE;AACb;AACA,kBAAkB,mBAAO,CAAC,EAAgB;AAC1C,cAAc,mBAAO,CAAC,EAAgB;AACtC,WAAW,mBAAO,CAAC,GAAgB;AACnC,UAAU,mBAAO,CAAC,EAAe;AACjC,eAAe,mBAAO,CAAC,EAAc;AACrC,cAAc,mBAAO,CAAC,EAAY;AAClC;;AAEA;AACA,6BAA6B,mBAAO,CAAC,EAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU,EAAE;AAChD,mBAAmB,sCAAsC;AACzD,CAAC,qCAAqC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;ACrCD;AACA;AACA,gBAAgB,mBAAO,CAAC,EAAe;AACvC,eAAe,mBAAO,CAAC,EAAc;AACrC,sBAAsB,mBAAO,CAAC,GAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAY,eAAe;AAChC;AACA,KAAK;AACL;AACA;;;;;;;ACtBA,gBAAgB,mBAAO,CAAC,EAAe;AACvC;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNa;;AAEb,cAAc,mBAAO,CAAC,EAAO;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAkB,iBAAiB,wBAAwB,6BAA6B,kCAAkC,uCAAuC,oBAAoB,oBAAoB,kCAAkC,MAAM,EAAE,WAAW,cAAc,SAAS,gBAAgB,kCAAkC,wBAAwB,EAAE,SAAS,gBAAgB,6BAA6B,sBAAsB,EAAE,SAAS,gBAAgB,kCAAkC,MAAM;AAC5f,SAAS,gBAAgB,2CAA2C,MAAM,EAAE,WAAW,qBAAqB,SAAS,gBAAgB,0CAA0C,kBAAkB,kCAAkC,MAAM,uBAAuB,SAAS,gBAAgB,6CAA6C,MAAM,kBAAkB,SAAS,gBAAgB,mCAAmC,MAAM,aAAa,SAAS,oBAAoB,8BAA8B,qBAAqB,MAAM;AACngB,SAAS,oBAAoB,yBAAyB,qBAAqB,IAAI,iBAAiB,SAAS,gBAAgB,kCAAkC,MAAM,yBAAyB,SAAS,cAAc,mBAAmB,cAAc,uBAAuB,kBAAkB,MAAM,2BAA2B,0BAA0B,IAAI,oBAAoB,gCAAgC,YAAY,yBAAyB,SAAS,kBAAkB,+BAA+B;AAC7e,yBAAyB,MAAM,uBAAuB,SAAS,cAAc,aAAa,gBAAgB,yBAAyB,qBAAqB,cAAc,mBAAmB,uBAAuB,cAAc,mBAAmB,uBAAuB,sBAAsB,2BAA2B,wBAAwB,IAAI,gBAAgB,eAAe,cAAc,IAAI,iBAAiB,SAAS,gBAAgB,0BAA0B,MAAM,EAAE,cAAc;AAChe,CAAC,SAAS,gBAAgB,wBAAwB,MAAM,WAAW,SAAS,gBAAgB,uBAAuB,eAAe,EAAE,cAAc,4CAA4C,cAAc,mBAAmB,aAAa,gBAAgB,uBAAuB,YAAY,EAAE,gBAAgB,gBAAgB,gBAAgB,wBAAwB,sBAAsB,EAAE,SAAS,gBAAgB,mBAAmB,oBAAoB,EAAE,SAAS,gBAAgB,uBAAuB,IAAI;AACvf,SAAS,cAAc,iBAAiB,gBAAgB,sBAAsB,cAAc,kBAAkB,cAAc,kBAAkB,cAAc,eAAe,mBAAmB,iBAAiB,SAAS,cAAc,yBAAyB,+BAA+B,aAAa,IAAI,gBAAgB,mBAAmB,gBAAgB,gBAAgB,iCAAiC,MAAM,EAAE,WAAW,kCAAkC,SAAS,cAAc;AAC/d,6BAA6B,SAAS,IAAI,cAAc,yBAAyB,6BAA6B,aAAa,IAAI,kBAAkB,yBAAyB,MAAM,sBAAsB,SAAS,kBAAkB,cAAc,IAAI,sBAAsB,SAAS,cAAc,uBAAuB,cAAc,sBAAsB,cAAc,mBAAmB,0BAA0B,EAAE,SAAS,cAAc,yBAAyB,WAAW,KAAK,SAAS,cAAc;AAC/e,CAAC,cAAc,uBAAuB,u2CAAu2C,2DAA2D,+BAA+B,uTAAuT,kDAAkD,+CAA+C,sGAAsG,iCAAiC,MAAM,aAAa,OAAO,+4BAA+4B,EAAE,svBAAsvB,EAAE;AACzqH,8KAA8K,UAAU,qLAAqL,QAAQ;AACrX;AACA;AACA;AACA;AACA,wMAAwM,KAAK,UAAU,WAAW,WAAW,aAAa,YAAY,EAAE,KAAK,MAAM,WAAW,WAAW,aAAa,YAAY,MAAM,KAAK,sEAAsE,iMAAiM,KAAwB;AAC5mB,IAAI,+CAA+C,8CAA8C,WAAW,iLAAiL,cAAc,sCAAsC,2BAA2B,yCAAyC,gBAAgB,cAAc,gBAAgB;AACnc,mCAAmC,eAAe,yIAAyI,cAAc,+BAA+B,6MAA6M,cAAc,sBAAsB,mBAAmB;AAC5e,kBAAkB,kCAAkC,SAAS,cAAc,qMAAqM,oDAAoD,SAAS,OAAO,SAAS,EAAE,KAAK,oBAAoB,MAAM,EAAE,wCAAwC,aAAa,YAAY,oBAAoB,SAAS,SAAS,SAAS;AAChf,8BAA8B,iBAAiB,MAAM,EAAE,WAAW,qBAAqB,cAAc,4BAA4B,aAAa,eAAe,2CAA2C,0BAA0B,eAAe,oBAAoB,OAAO,WAAW,kBAAkB,2BAA2B,eAAe,oBAAoB,gCAAgC,iBAAiB,oBAAoB,2DAA2D;AACve,8BAA8B,iBAAiB,MAAM,EAAE,WAAW,qBAAqB,cAAc,6BAA6B,eAAe,8BAA8B,oEAAoE,eAAe,8BAA8B,qBAAqB,eAAe,8BAA8B,iBAAiB,8BAA8B,sDAAsD,eAAe,8BAA8B,iBAAiB,MAAM;AAC3gB,WAAW,qBAAqB,cAAc,2BAA2B,2CAA2C,eAAe,2BAA2B,0BAA0B,eAAe,yBAAyB,eAAe,yBAAyB,iBAAiB,0BAA0B,gDAAgD,eAAe,8BAA8B,yBAAyB,MAAM,gBAAgB,eAAe,oCAAoC;AAClf,4BAA4B,eAAe,yCAAyC,cAAc,iCAAiC,eAAe,kCAAkC,0BAA0B,eAAe,4BAA4B,eAAe,4BAA4B,iBAAiB,oBAAoB,oBAAoB,iBAAiB,mEAAmE,0BAA0B,wCAAwC;AACnf,0GAA0G,0JAA0J,SAAS,eAAe,eAAe,wBAAwB,iBAAiB,kCAAkC,eAAe,iBAAiB,mBAAmB,gDAAgD,mBAAmB;AAC5e,kDAAkD,iBAAiB,mBAAmB,IAAI,2BAA2B,SAAS,qBAAqB,4BAA4B,cAAc,IAAI,iBAAiB,wBAAwB,iBAAiB,wBAAwB,mBAAmB,2BAA2B,kDAAkD,SAAS,iBAAiB,0CAA0C,MAAM,qBAAqB,SAAS,mBAAmB;AAC9e,uBAAuB,yBAAyB,2BAA2B,2CAA2C,mBAAmB,YAAY,MAAM,6BAA6B,KAAK,2BAA2B,wBAAwB,wBAAwB,YAAY,+CAA+C,KAAK,wBAAwB,aAAa,cAAc,eAAe,cAAc,uCAAuC,uBAAuB;AACtd,yBAAyB,EAAE,mCAAmC,4BAA4B,wCAAwC,IAAI,eAAe,YAAY,mBAAmB,kBAAkB,mBAAmB,eAAe,oBAAoB,YAAY,IAAI,EAAE,yBAAyB,oCAAoC,SAAS,mBAAmB,yCAAyC,qBAAqB,aAAa,IAAI,qBAAqB;AAC3c,eAAe,mEAAmE,OAAO,MAAM,EAAE,4BAA4B,4BAA4B,YAAY,IAAI,wBAAwB,UAAU,yBAAyB,SAAS,iBAAiB,SAAS,4BAA4B,oBAAoB,IAAI,mBAAmB,wBAAwB,MAAM,EAAE,kBAAkB,qDAAqD,SAAS,qBAAqB,eAAe;AACle,+CAA+C,IAAI,UAAU,SAAS,iBAAiB,SAAS,4BAA4B,oBAAoB,IAAI,uBAAuB,oBAAoB,wBAAwB,MAAM,EAAE,WAAW,wDAAwD,SAAS,iBAAiB,qBAAqB,iBAAiB,qBAAqB,iBAAiB,uBAAuB,gBAAgB,EAAE,iBAAiB,UAAU,uBAAuB,aAAa;AAChf,mBAAmB,mBAAmB,WAAW,yBAAyB,eAAe,uDAAuD,iBAAiB,WAAW,iBAAiB,6BAA6B,iBAAiB,2BAA2B,mBAAmB,6BAA6B,mBAAmB,gEAAgE,IAAI,EAAE,WAAW,wFAAwF;AAClf,gBAAgB,OAAO,kBAAkB,EAAE,sBAAsB,wCAAwC,QAAQ,IAAI,EAAE,WAAW,sCAAsC,wBAAwB,SAAS,qBAAqB,4BAA4B,cAAc,IAAI,mBAAmB,oBAAoB,6BAA6B,0BAA0B,eAAe,wBAAwB,eAAe,wBAAwB,eAAe,wBAAwB;AAC/d,+EAA+E,yBAAyB,8CAA8C,0BAA0B,2BAA2B,aAAa,mBAAmB,UAAU,yEAAyE,YAAY,gEAAgE,SAAS,oCAAoC,mCAAmC;AAC1d,CAAC,eAAe,wBAAwB,qBAAqB,wBAAwB,oBAAoB,YAAY,IAAI,EAAE,WAAW,+CAA+C,KAAK,MAAM,EAAE,OAAO,yBAAyB,YAAY,6BAA6B,KAAK,aAAa,0BAA0B,0CAA0C,SAAS,eAAe,kDAAkD,eAAe,wBAAwB,eAAe;AACje,CAAC,eAAe,wCAAwC,eAAe,2FAA2F,eAAe,uBAAuB,SAAS,6DAA6D,SAAS,eAAe,uBAAuB,iBAAiB,+DAA+D,SAAS,iBAAiB,WAAW,iBAAiB,iCAAiC;AACpe,gBAAgB,IAAI,eAAe,YAAY,4DAA4D,yBAAyB,iBAAiB,4CAA4C,cAAc,2CAA2C,uBAAuB,0BAA0B,0CAA0C,KAAK,kCAAkC,wBAAwB,KAAK,2BAA2B,mCAAmC,wBAAwB;AAC/e,MAAM,wCAAwC,gJAAgJ,mDAAmD,iBAAiB,eAAe,sCAAsC,mBAAmB,2BAA2B,yBAAyB,iCAAiC,GAAG,OAAO,SAAS,6CAA6C,OAAO;AACte,YAAY,qBAAqB,gBAAgB,iBAAiB,EAAE,iBAAiB,4BAA4B,eAAe,EAAE,mBAAmB,6BAA6B,MAAM,EAAE,qBAAqB,wBAAwB,SAAS,eAAe,mBAAmB,gBAAgB,qBAAqB,gCAAgC,sCAAsC,MAAM,+BAA+B,kBAAkB,sCAAsC,SAAS,iBAAiB,6BAA6B,IAAI;AACrhB,WAAW,gBAAgB,QAAQ,8BAA8B,SAAS,iBAAiB,0BAA0B,qBAAqB,8CAA8C,IAAI,mBAAmB,SAAS,iBAAiB,SAAS,0BAA0B,mCAAmC,SAAS,SAAS,iBAAiB,2BAA2B,eAAe,iBAAiB,iBAAiB,YAAY,8BAA8B,qBAAqB,mBAAmB;AAChf,kCAAkC,eAAe,EAAE,mBAAmB,gEAAgE,SAAS,WAAW,iDAAiD,EAAE,iBAAiB,SAAS,eAAe,iBAAiB,mBAAmB,oBAAoB,iEAAiE,gBAAgB,MAAM,aAAa,SAAS,iBAAiB,MAAM,4BAA4B,qBAAqB,MAAM;AACze,6BAA6B,qCAAqC,KAAK,IAAI,EAAE,qBAAqB,yCAAyC,SAAS,oBAAoB,qBAAqB,6BAA6B,kBAAkB,OAAO,2CAA2C,IAAI,EAAE,+DAA+D,gBAAgB,4EAA4E,YAAY,gBAAgB,iBAAiB,iCAAiC,MAAM;AACnhB,sBAAsB,iBAAiB,QAAQ,kBAAkB,SAAS,eAAe,uCAAuC,eAAe,+BAA+B,2BAA2B,iCAAiC,WAAW,8BAA8B,mBAAmB,sCAAsC,cAAc,eAAe,mBAAmB,iBAAiB,kBAAkB,cAAc,OAAO,MAAM,EAAE,sBAAsB,4BAA4B,mBAAmB,IAAI;AACrgB,uBAAuB,4CAA4C,SAAS,iBAAiB,wDAAwD,qBAAqB,4BAA4B,qBAAqB,4BAA4B,2BAA2B,EAAE,iDAAiD,iBAAiB,QAAQ,wDAAwD,6CAA6C,IAAI,mBAAmB,eAAe;AACze,qBAAqB,MAAM,qBAAqB,MAAM,mCAAmC,uBAAuB,mBAAmB,wCAAwC,MAAM,EAAE,qBAAqB,SAAS,eAAe,kBAAkB,eAAe,gCAAgC,iBAAiB,qCAAqC,mBAAmB,eAAe,wCAAwC,iBAAiB,sBAAsB;AACxc,mBAAmB,eAAe,sCAAsC,kCAAkC,iBAAiB,4EAA4E,eAAe,6CAA6C,iCAAiC,eAAe,4BAA4B,iBAAiB,wEAAwE,iBAAiB,UAAU;AACnc,iEAAiE,iEAAiE,SAAS,mBAAmB,6DAA6D,MAAM,EAAE,oBAAoB,MAAM,iBAAiB,8BAA8B,uBAAuB,qBAAqB,8EAA8E,MAAM,WAAW,KAAK,MAAM,0BAA0B,KAAK,IAAI,eAAe;AACpf,CAAC,qBAAqB,mFAAmF,MAAM,WAAW,YAAY,MAAM,aAAa,KAAK,MAAM,8BAA8B,SAAS,iBAAiB,oBAAoB,iBAAiB,MAAM,WAAW,SAAS,qBAAqB,SAAS,QAAQ,EAAE,wBAAwB,MAAM,EAAE,oCAAoC,sCAAsC,SAAS,iBAAiB,qBAAqB,iBAAiB;AAC7e,CAAC,iBAAiB,qBAAqB,4BAA4B,yBAAyB,eAAe,wBAAwB,gDAAgD,6FAA6F,MAAM,EAAE,WAAW,cAAc,SAAS,EAAE,iBAAiB,qBAAqB,oBAAoB,wBAAwB,oCAAoC,gCAAgC,EAAE,UAAU,eAAe;AAC7e,uCAAuC,IAAI,EAAE,iBAAiB,0BAA0B,UAAU,mBAAmB,aAAa,yEAAyE,mBAAmB,SAAS,eAAe,mBAAmB,QAAQ,uEAAuE,iBAAiB,eAAe,mBAAmB,yCAAyC,eAAe,kBAAkB,gBAAgB;AACre,oBAAoB,0BAA0B,+BAA+B,oCAAoC,yCAAyC,8CAA8C,mDAAmD,wDAAwD,qCAAqC,kBAAkB,mBAAmB,aAAa,+CAA+C,IAAI,mBAAmB;AAChd,+GAA+G,YAAY,SAAS,eAAe,uBAAuB,YAAY,WAAW,cAAc,sBAAsB,oBAAoB,eAAe,2BAA2B,eAAe,sBAAsB,sCAAsC,mBAAmB,IAAI,EAAE,WAAW,yCAAyC,8CAA8C,YAAY,MAAM;AAC3f,OAAO,mCAAmC,wHAAwH,kBAAkB,uBAAuB,mDAAmD,qCAAqC,MAAM,qBAAqB,UAAU,EAAE,iCAAiC,aAAa,uCAAuC,IAAI,mBAAmB,0BAA0B;AAChd,aAAa,mDAAmD,0BAA0B,qIAAqI,wDAAwD,SAAS,iBAAiB,qBAAqB,qBAAqB,GAAG,iBAAiB,qBAAqB,MAAM,yBAAyB,uBAAuB,kBAAkB;AAC5c,oCAAoC,UAAU,eAAe,sBAAsB,qCAAqC,WAAW,uBAAuB,gBAAgB,EAAE,EAAE,EAAE,iBAAiB,kBAAkB,eAAe,0BAA0B,uBAAuB,+CAA+C,qBAAqB,aAAa,mGAAmG,MAAM,WAAW,KAAK,IAAI;AACje,uBAAuB,mBAAmB,SAAS,eAAe,uBAAuB,qHAAqH,eAAe,qBAAqB,wEAAwE,iCAAiC,2CAA2C,6CAA6C,2CAA2C;AAC9d,UAAU,eAAe,YAAY,qBAAqB,+CAA+C,6BAA6B,0EAA0E,aAAa,eAAe,mBAAmB,YAAY,wCAAwC,6BAA6B,WAAW,6CAA6C,mBAAmB,sFAAsF;AACjf,MAAM,wCAAwC,gNAAgN,qBAAqB,8BAA8B,qBAAqB,6CAA6C,yBAAyB,+DAA+D,eAAe,iBAAiB;AAC3e,iCAAiC,4BAA4B,0BAA0B,0BAA0B,8BAA8B,0BAA0B,MAAM,EAAE,kBAAkB,2CAA2C,UAAU,cAAc,KAAK,MAAM,MAAM,sBAAsB,mDAAmD,GAAG,KAAK,OAAO,8BAA8B,KAAK,OAAO,iCAAiC,2BAA2B,UAAU;AAC/d,sBAAsB,qEAAqE,yCAAyC,oDAAoD,+BAA+B,gBAAgB,mBAAmB,wCAAwC,eAAe,iBAAiB,iBAAiB,4BAA4B,qBAAqB,4CAA4C,SAAS,yBAAyB,8BAA8B;AAChf,YAAY,IAAI,EAAE,WAAW,qCAAqC,0BAA0B,0BAA0B,SAAS,sBAAsB,YAAY,MAAM,EAAE,OAAO,kBAAkB,2CAA2C,mCAAmC,KAAK,MAAM,wBAAwB,UAAU,oCAAoC,kIAAkI;AACne,cAAc,eAAe,2BAA2B,eAAe,mBAAmB,eAAe,mBAAmB,eAAe,uDAAuD,IAAI,EAAE,oBAAoB,+BAA+B,SAAS,eAAe,iDAAiD,cAAc,qBAAqB,qEAAqE,iBAAiB,iBAAiB;AAC9c,CAAC,eAAe,2BAA2B,IAAI,EAAE,kBAAkB,iBAAiB,SAAS,iBAAiB,aAAa,iBAAiB,eAAe,4BAA4B,IAAI,QAAQ,SAAS,UAAU,iBAAiB,qCAAqC,mBAAmB,wBAAwB,MAAM,EAAE,oBAAoB,eAAe,gBAAgB,MAAM,qBAAqB,MAAM,uBAAuB,MAAM,6BAA6B,OAAO,eAAe,eAAe;AAClf,2BAA2B,mBAAmB,UAAU,6BAA6B,MAAM,EAAE,eAAe,8BAA8B,OAAO,8EAA8E,eAAe,sCAAsC,yFAAyF,eAAe,gDAAgD,WAAW,mBAAmB,oBAAoB,UAAU;AACxe,iCAAiC,uBAAuB,uFAAuF,qBAAqB,gCAAgC,qBAAqB,qBAAqB,sBAAsB,iBAAiB,eAAe,eAAe,UAAU,qEAAqE,iCAAiC,eAAe,sCAAsC,iBAAiB;AACze,qFAAqF,mBAAmB,mBAAmB,eAAe,4EAA4E,iBAAiB,kBAAkB,eAAe,iHAAiH,eAAe,eAAe,mFAAmF;AAC1e,mBAAmB,uDAAuD,kBAAkB,YAAY,oBAAoB,eAAe,oBAAoB,eAAe,uBAAuB,mDAAmD,eAAe,qBAAqB,iBAAiB,mBAAmB,iDAAiD,eAAe,uBAAuB,gCAAgC,YAAY,SAAS,iBAAiB;AAC7d,mBAAmB,+BAA+B,WAAW,MAAM,WAAW,6CAA6C,gLAAgL,eAAe,SAAS,wCAAwC,SAAS,eAAe,kBAAkB,mBAAmB,6CAA6C,oDAAoD,MAAM;AAC/gB,KAAK,kBAAkB,MAAM,WAAW,8BAA8B,iBAAiB,qCAAqC,iBAAiB,4CAA4C,IAAI,EAAE,WAAW,oBAAoB,SAAS,iBAAiB,4EAA4E,mBAAmB,WAAW,+BAA+B,eAAe,YAAY,kBAAkB,sBAAsB,YAAY,+BAA+B;AAC/e,6BAA6B,iBAAiB,0BAA0B,gBAAgB,MAAM,EAAE,qBAAqB,iBAAiB,oBAAoB,eAAe,sCAAsC,WAAW,8BAA8B,eAAe,YAAY,IAAI,kBAAkB,UAAU,IAAI,YAAY,WAAW,SAAS,iBAAiB,wBAAwB,gBAAgB,2BAA2B,WAAW,eAAe,oCAAoC;AACze,2FAA2F,mBAAmB,oCAAoC,yBAAyB,oBAAoB,8BAA8B,IAAI,qBAAqB,SAAS,eAAe,2CAA2C,MAAM,EAAE,WAAW,cAAc,SAAS,cAAc,uBAAuB,eAAe,qCAAqC,IAAI,qBAAqB;AACrd,CAAC,mBAAmB,yBAAyB,iDAAiD,mBAAmB,yBAAyB,uDAAuD,iBAAiB,0CAA0C,iBAAiB,uCAAuC,qBAAqB,yBAAyB,sEAAsE,mBAAmB,yBAAyB,eAAe;AACne,yCAAyC,mBAAmB,yBAAyB,eAAe,UAAU,oEAAoE,eAAe,sCAAsC,eAAe,uCAAuC,iBAAiB,wDAAwD,eAAe,uCAAuC,MAAM,EAAE,WAAW,aAAa,SAAS,eAAe,0BAA0B;AAC9e,yBAAyB,eAAe,sBAAsB,mCAAmC,eAAe,yCAAyC,iBAAiB,+BAA+B,eAAe,yBAAyB,kBAAkB,mBAAmB,yBAAyB,eAAe,QAAQ,6EAA6E,iBAAiB,iCAAiC,iBAAiB;AACtd,CAAC,mBAAmB,kDAAkD,mBAAmB,8CAA8C,iBAAiB,SAAS,0BAA0B,yBAAyB,cAAc,MAAM,EAAE,WAAW,gCAAgC,iBAAiB,eAAe,4BAA4B,mBAAmB,yBAAyB,uGAAuG;AACpe,eAAe,mBAAmB,uBAAuB,iBAAiB,yBAAyB,MAAM,cAAc,4BAA4B,SAAS,iBAAiB,kBAAkB,mBAAmB,0BAA0B,iBAAiB,uBAAuB,mBAAmB,uBAAuB,SAAS,eAAe,4BAA4B,iBAAiB,oCAAoC,eAAe,yBAAyB,sBAAsB;AACre,2DAA2D,mBAAmB,yBAAyB,uDAAuD,iBAAiB,0CAA0C,iBAAiB,oCAAoC,eAAe,4BAA4B,iBAAiB,oCAAoC,iBAAiB,2DAA2D,eAAe,0BAA0B,QAAQ;AAC3e,oCAAoC,kBAAkB,iBAAiB,EAAE,iBAAiB,0BAA0B,YAAY,iCAAiC,gBAAgB,EAAE,iBAAiB,0BAA0B,iBAAiB,0BAA0B,eAAe,WAAW,wBAAwB,iBAAiB,cAAc,iBAAiB,YAAY,cAAc,gBAAgB,cAAc,0CAA0C,cAAc;AAC3d,6CAA6C,OAAO,oDAAoD,cAAc,YAAY,eAAe,iBAAiB,eAAe,EAAE,YAAY,mDAAmD,QAAQ,gBAAgB,yBAAyB,cAAc,uBAAuB,oBAAoB,QAAQ,mFAAmF,4BAA4B,0BAA0B;AAC7e,CAAC,cAAc,6CAA6C,mBAAmB,iBAAiB,wCAAwC,iBAAiB,8BAA8B,iBAAiB,qBAAqB,iBAAiB,sBAAsB,mBAAmB,qCAAqC,iBAAiB,8BAA8B,iBAAiB,8BAA8B,qBAAqB,gCAAgC,eAAe;AAC9d,+CAA+C,iBAAiB,8BAA8B,qBAAqB,0FAA0F,mBAAmB,qCAAqC,2BAA2B,mBAAmB,qCAAqC,2BAA2B,iBAAiB,kCAAkC,eAAe,uBAAuB,mBAAmB;AAC/d,mBAAmB,eAAe,uBAAuB,eAAe,oBAAoB,oCAAoC,YAAY,wCAAwC,mBAAmB,iBAAiB,wCAAwC,iBAAiB,yCAAyC,0BAA0B,yCAAyC,mBAAmB,0DAA0D,iBAAiB,MAAM;AACje,0BAA0B,wDAAwD,mBAAmB,QAAQ,2BAA2B,sCAAsC,mBAAmB,QAAQ,2BAA2B,sCAAsC,mBAAmB,cAAc,YAAY,gCAAgC,cAAc,8BAA8B,cAAc,sBAAsB,qBAAqB,cAAc,gBAAgB;AAC1d,CAAC,aAAa,WAAW,kCAAkC,cAAc,+BAA+B,aAAa,2BAA2B,aAAa,uBAAuB,aAAa,kBAAkB,6BAA6B,qBAAqB,iCAAiC,4BAA4B,mCAAmC,yCAAyC;AAC9Y,uBAAuB,eAAe,gBAAgB,iBAAiB,wEAAwE,iBAAiB,mDAAmD,4BAA4B,sBAAsB,gCAAgC,mCAAmC,eAAe,yCAAyC,kBAAkB,gBAAgB,iBAAiB,2BAA2B,gCAAgC;AAC9e,8BAA8B,0CAA0C,wBAAwB,eAAe,eAAe,iBAAiB,yCAAyC,+BAA+B,iBAAiB,yCAAyC,8CAA8C,uBAAuB,6BAA6B,EAAE,mBAAmB,cAAc,yCAAyC;AAC/b,QAAQ,+BAA+B,EAAE,eAAe,eAAe,iBAAiB,mBAAmB,cAAc,8BAA8B,mBAAmB,mBAAmB,eAAe,gBAAgB,iBAAiB,6CAA6C,eAAe,mBAAmB,iBAAiB,gDAAgD,iBAAiB,8BAA8B,iBAAiB,2BAA2B,eAAe;AACve,CAAC,eAAe,oBAAoB,eAAe,wCAAwC,eAAe,qCAAqC,eAAe,oBAAoB,wGAAwG,YAAY,8BAA8B,6BAA6B,wCAAwC,SAAS,iBAAiB,eAAe,mBAAmB,2BAA2B,iBAAiB;AACjf,CAAC,eAAe,mBAAmB,YAAY,iFAAiF,eAAe,gCAAgC,eAAe,mBAAmB,YAAY,kCAAkC,eAAe,mCAAmC,eAAe,8CAA8C,eAAe,eAAe,6CAA6C,eAAe,mCAAmC;AAC3e,4BAA4B,mBAAmB,kDAAkD,eAAe,oBAAoB,eAAe,0BAA0B,aAAa,eAAe,gBAAgB,eAAe,eAAe,eAAe,2CAA2C,eAAe,8BAA8B,YAAY,qBAAqB,8CAA8C,2DAA2D;AACxe,4BAA4B,eAAe,mDAAmD,eAAe,2CAA2C,eAAe,aAAa,eAAe,wBAAwB,eAAe,wBAAwB,eAAe,eAAe,iCAAiC,+BAA+B,YAAY,8BAA8B,eAAe,uBAAuB,4BAA4B,oBAAoB,iBAAiB;AACjf,kBAAkB,uBAAuB,eAAe,0BAA0B,eAAe,+BAA+B,mBAAmB,UAAU,iDAAiD,eAAe,wCAAwC,OAAO,iBAAiB,2DAA2D,eAAe,mBAAmB,eAAe,oCAAoC,eAAe,wBAAwB,iBAAiB,YAAY;AACjf,CAAC,iBAAiB,uBAAuB,iBAAiB,uBAAuB,iBAAiB,kCAAkC,iBAAiB,kCAAkC,iBAAiB,wBAAwB,iBAAiB,wBAAwB,eAAe,8BAA8B,eAAe,8BAA8B,mBAAmB,wBAAwB,iBAAiB,iBAAiB,2BAA2B,iBAAiB;AAC5d,CAAC,eAAe,yBAAyB,eAAe,4BAA4B,iBAAiB,SAAS,sCAAsC,iBAAiB,IAAI,iBAAiB,SAAS,sCAAsC,iBAAiB,IAAI,iBAAiB,uBAAuB,iBAAiB,oBAAoB,0BAA0B,UAAU,EAAE,oCAAoC,iBAAiB,EAAE,mBAAmB,UAAU,oBAAoB,iBAAiB,MAAM,EAAE;AAClf,qCAAqC,SAAS,mBAAmB,2BAA2B,qBAAqB,wDAAwD,mBAAmB,8BAA8B,sBAAsB,uBAAuB,yCAAyC,iCAAiC,kBAAkB,IAAI,iBAAiB,wBAAwB,mBAAmB,+BAA+B,qBAAqB;AACvd,0BAA0B,eAAe,6BAA6B,eAAe,6BAA6B,mBAAmB,gGAAgG,mBAAmB,yDAAyD,mBAAmB;AACpU,QAAQ,QAAQ,gBAAgB,WAAW,mDAAmD,eAAe,eAAe,+BAA+B,eAAe,kDAAkD,mBAAmB,gBAAgB,eAAe,wBAAwB,QAAQ,yCAAyC,eAAe,gDAAgD,eAAe,oDAAoD,mBAAmB;AAC5e,eAAe,qBAAqB,cAAc,iCAAiC,mBAAmB,gBAAgB,eAAe,4BAA4B,mBAAmB,gBAAgB,eAAe,4BAA4B,mBAAmB,8DAA8D,mBAAmB,iDAAiD,cAAc,2BAA2B,yCAAyC,mBAAmB;AACze,uHAAuH,mBAAmB,iFAAiF,mBAAmB,yBAAyB,mCAAmC,SAAS,eAAe;AAClU,kCAAkC,iGAAiG,QAAQ,qFAAqF,QAAQ,IAAI,wCAAwC,MAAM,+BAA+B,oBAAoB,UAAU,IAAI,yDAAyD,gCAAgC,2BAA2B,EAAE,oFAAoF,oBAAoB,iCAAiC,MAAM,qBAAqB;AACrnB,oBAAoB,sCAAsC,EAAE,4BAA4B,SAAS,eAAe,2BAA2B,eAAe,2BAA2B,mBAAmB,qCAAqC,2BAA2B,kBAAkB,sCAAsC,mBAAmB,kDAAkD,2BAA2B,WAAW,oCAAoC,mBAAmB;AACle,2BAA2B,WAAW,gCAAgC,iBAAiB,cAAc,UAAU,oCAAoC,gEAAgE,QAAQ,eAAe,SAAS,WAAW,WAAW,iBAAiB,aAAa,gBAAgB,wCAAwC,oBAAoB,6BAA6B,yBAAyB,UAAU,gEAAgE,YAAY;AAC/f,wBAAwB,+BAA+B,uBAAuB,uBAAuB,WAAW,eAAe,gDAAgD,mBAAmB,2DAA2D,eAAe,gCAAgC,2BAA2B,4CAA4C,qBAAqB,oBAAoB,aAAa,MAAM,EAAE,WAAW,yCAAyC,EAAE;AACve,oBAAoB,eAAe,kBAAkB,UAAU,iBAAiB,0BAA0B,eAAe,SAAS,eAAe,2CAA2C,eAAe,oBAAoB,iBAAiB,sBAAsB,mBAAmB,sBAAsB,sEAAsE,8CAA8C,uBAAuB,WAAW,qCAAqC;AAC1e,SAAS,0BAA0B,iDAAiD,gCAAgC,kBAAkB,8CAA8C,EAAE,IAAI,cAAc,mCAAmC,eAAe,eAAe,8BAA8B,eAAe,EAAE,eAAe,4BAA4B,eAAe,mBAAmB,0BAA0B,cAAc,SAAS,cAAc,SAAS,cAAc,SAAS,cAAc;AAClf,CAAC,cAAc,SAAS,iBAAiB,8BAA8B,oBAAoB,cAAc,iBAAiB,MAAM,MAAM,SAAS,eAAe,6CAA6C,eAAe,WAAW,eAAe,eAAe,iCAAiC,iBAAiB,sCAAsC,eAAe,eAAe,iBAAiB,oBAAoB,eAAe,iCAAiC,iBAAiB;AAC/d,CAAC,eAAe,6BAA6B,iBAAiB,kCAAkC,uDAAuD,iPAAiP,uDAAuD,+BAA+B;AAC9d,IAAI,8BAA8B,WAAW,MAAM,IAAI,WAAW,+bAA+b;AACjgB,cAAc,mBAAmB,mBAAmB,mBAAmB,cAAc,YAAY,wBAAwB,GAAG,oBAAoB,0DAA0D,KAAK;AAC/M,wUAAwU,iEAAiE,qBAAqB,wBAAwB,wBAAwB;AAC9c,YAAY,EAAE,6BAA6B,0BAA0B,8CAA8C,iBAAiB,sBAAsB,iBAAiB,sBAAsB,+CAA+C,oBAAoB,GAAG,sBAAsB,aAAa,EAAE,oBAAoB,SAAS,UAAU,gJAAgJ;AACne,eAAe,kBAAkB,kBAAkB,kBAAkB,kBAAkB,kBAAkB,SAAS,EAAE,+CAA+C,0BAA0B,6BAA6B,SAAS,uEAAuE,kCAAkC,IAAI,sBAAsB,oCAAoC,sBAAsB,YAAY,yDAAyD;AACre,YAAY,qDAAqD,oBAAoB,cAAc,sCAAsC,oBAAoB,sBAAsB,oEAAoE,oBAAoB,sBAAsB,gFAAgF,gCAAgC,mCAAmC,4BAA4B,oBAAoB,cAAc;AAClf,yBAAyB,oBAAoB,YAAY,8CAA8C,oBAAoB,YAAY,wDAAwD,sBAAsB,wBAAwB,oBAAoB,mBAAmB,oBAAoB,YAAY,wCAAwC,oBAAoB,YAAY,kDAAkD,8BAA8B,8BAA8B;AAC1e,aAAa,oBAAoB,2DAA2D,gBAAgB,2GAA2G,2BAA2B,2CAA2C,iCAAiC,gBAAgB,wBAAwB,8BAA8B,4CAA4C,sCAAsC,wBAAwB;AAC9e,wBAAwB,4BAA4B,IAAI,wBAAwB,UAAU,wBAAwB,iBAAiB,YAAY,cAAc,sBAAsB,oBAAoB,eAAe,sFAAsF,oBAAoB,qBAAqB,uBAAuB,SAAS,aAAa,kBAAkB,MAAM,qBAAqB,wBAAwB,YAAY,aAAa,kBAAkB;AAClf,CAAC,qBAAqB,sBAAsB,iBAAiB,wBAAwB,wBAAwB,EAAE,YAAY,wBAAwB,2DAA2D,eAAe,sBAAsB,8BAA8B,MAAM,2BAA2B,mBAAmB,EAAE,sBAAsB,gCAAgC,sBAAsB,gCAAgC,sBAAsB,wBAAwB;AACje,YAAY,mBAAmB,iBAAiB,mBAAmB,wDAAwD,iJAAiJ,YAAY,sBAAsB,uCAAuC,0CAA0C,sBAAsB,cAAc,0BAA0B,gBAAgB,0BAA0B;AACve,CAAC,gCAAgC,QAAQ,iCAAiC,8BAA8B,MAAM,wCAAwC,MAAM,EAAE,kBAAkB,iDAAiD,SAAS,oBAAoB,8BAA8B,wBAAwB,8DAA8D,+BAA+B,0FAA0F;AAC3e,UAAU,0BAA0B,YAAY,sBAAsB,SAAS,oBAAoB,SAAS,kBAAkB,qCAAqC,yCAAyC,mBAAmB,IAAI,YAAY,SAAS,sBAAsB,iBAAiB,SAAS,4CAA4C,uCAAuC,wBAAwB,oCAAoC,wBAAwB,oCAAoC;AACnf,oCAAoC,wBAAwB,0BAA0B,wBAAwB,oCAAoC,2CAA2C,IAAI,gBAAgB,SAAS,0BAA0B,sBAAsB,uBAAuB,2BAA2B,IAAI,wCAAwC,mBAAmB,kBAAkB,sBAAsB,mBAAmB,kBAAkB;AACxc,WAAW,sCAAsC,WAAW,uCAAuC,WAAW,uCAAuC,WAAW,IAAI;AACpK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0PAA0P,SAAS,0BAA0B,iCAAiC,IAAI,IAAI,SAAS,8FAA8F,mBAAmB,kCAAkC;AACle,sBAAsB,sDAAsD,8EAA8E,8CAA8C,IAAI,qCAAqC,uCAAuC,+CAA+C,yBAAyB,4BAA4B,mBAAmB,6BAA6B,wBAAwB,sCAAsC;AAC1e,4BAA4B,2BAA2B,8BAA8B,qCAAqC,4BAA4B,2BAA2B,kDAAkD,kCAAkC,uBAAuB,+BAA+B,6BAA6B,mCAAmC,8BAA8B,yCAAyC;AAClc,iBAAiB,EAAE,kCAAkC,8BAA8B,kCAAkC,QAAQ,WAAW,0IAA0I,yCAAyC,6CAA6C,iCAAiC,qBAAqB,+BAA+B;AAC7b,8BAA8B,2FAA2F,0BAA0B,oBAAoB,kDAAkD,iEAAiE,UAAU,mBAAmB,mBAAmB,2BAA2B,2BAA2B,aAAa,0EAA0E,EAAE;AACzd,yFAAyF,0BAA0B,gBAAgB,uBAAuB,mBAAmB,6BAA6B,2BAA2B,6BAA6B,GAAG,gCAAgC,WAAW,MAAM,gBAAgB,sCAAsC,cAAc,GAAG,sBAAsB,sBAAsB;AACza,qOAAqO,SAAS,KAAkE,UAAU,mCAAO,WAAW,UAAU;AAAA,oGAAC,EAAE,SAAyC,CAAC,a;;;;;;;AC3InY,cAAc,mBAAO,CAAC,GAAY;AAClC,qBAAqB,mBAAO,CAAC,GAAe;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA,sBAAsB,yCAAyC;AAC/D,mBAAmB,yCAAyC;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC,mBAAmB,gBAAgB;AACnC;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;;;;;;;ACxjBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,aAAa;AAC7B,oBAAoB,aAAa;AACjC,kBAAkB,aAAa;AAC/B,sBAAsB,aAAa;AACnC,kBAAkB,aAAa;AAC/B,sBAAsB,aAAa;AACnC,iBAAiB,aAAa;AAC9B,oBAAoB,aAAa;AACjC,eAAe,aAAa;AAC5B,mBAAmB,aAAa;AAChC,cAAc,aAAa;AAC3B,mBAAmB,aAAa;AAChC,cAAc,aAAa;AAC3B,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrWA;AACA;AACA;AACA,UAAU;AACV;AACA;;;;;;;ACLA,cAAc,mBAAO,CAAC,GAAiB;AACvC,iBAAiB,mBAAO,CAAC,GAAoB;AAC7C,eAAe,mBAAO,CAAC,GAAkB;AACzC,cAAc,mBAAO,CAAC,GAAiB;AACvC,mBAAmB,mBAAO,CAAC,GAAsB;;AAEjD,aAAa,mBAAO,CAAC,GAAoB;AACzC,YAAY,mBAAO,CAAC,GAAmB;;AAEvC;;AAEA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;;AAE9C;AACA;AACA,qEAAqE;;AAErE;;AAEA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA,WAAW,0DAA0D;AACrE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,WAAW,eAAe;AACrC,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,WAAW;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,WAAW,gBAAgB;AAC3B,aAAa,MAAM;AACnB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,oCAAoC,uCAAuC;AAC3E;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,MAAM;AACnB,cAAc,OAAO;AACrB,cAAc,gBAAgB;AAC9B,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,EAAE;AACf,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;;;;;;;;AC5LA,iBAAiB,mBAAO,CAAC,GAAY;;AAErC;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,GAAU;;;;;;;ACHnC;;;;;;;ACAA,oBAAoB,mBAAO,CAAC,GAAwB;AACpD,eAAe,mBAAO,CAAC,GAAkB;AACzC,cAAc,mBAAO,CAAC,GAAiB;;AAEvC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;;;;;;AClDA;AACA;AACA;AACA;;;;;;;;ACHA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,qE;;;;;;ACjnBf,mBAAO,CAAC,EAAiC;AACzC,mBAAO,CAAC,EAAgC;AACxC,mBAAO,CAAC,GAA6B;AACrC,mBAAO,CAAC,GAAwB;AAChC,mBAAO,CAAC,GAAgC;AACxC,mBAAO,CAAC,GAA4B;AACpC,iBAAiB,mBAAO,CAAC,EAAkB;;;;;;;ACN3C,gBAAgB,mBAAO,CAAC,EAAe;AACvC,cAAc,mBAAO,CAAC,EAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBa;AACb,aAAa,mBAAO,CAAC,EAAkB;AACvC,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C,qBAAqB,mBAAO,CAAC,EAAsB;AACnD;;AAEA;AACA,mBAAO,CAAC,EAAS,qBAAqB,mBAAO,CAAC,EAAQ,4BAA4B,aAAa,EAAE;;AAEjG;AACA,qDAAqD,4BAA4B;AACjF;AACA;;;;;;;ACZA,SAAS,mBAAO,CAAC,EAAc;AAC/B,eAAe,mBAAO,CAAC,EAAc;AACrC,cAAc,mBAAO,CAAC,EAAgB;;AAEtC,iBAAiB,mBAAO,CAAC,EAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZa;AACb,uBAAuB,mBAAO,CAAC,GAAuB;AACtD,WAAW,mBAAO,CAAC,GAAc;AACjC,gBAAgB,mBAAO,CAAC,EAAc;AACtC,gBAAgB,mBAAO,CAAC,EAAe;;AAEvC;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,GAAgB;AACzC,gCAAgC;AAChC,cAAc;AACd,iBAAiB;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;;;;;;ACjCA,8BAA8B;;;;;;;;ACAjB;AACb,cAAc,mBAAO,CAAC,EAAY;AAClC,aAAa,mBAAO,CAAC,EAAW;AAChC,UAAU,mBAAO,CAAC,EAAQ;AAC1B,cAAc,mBAAO,CAAC,GAAY;AAClC,cAAc,mBAAO,CAAC,EAAW;AACjC,eAAe,mBAAO,CAAC,EAAc;AACrC,gBAAgB,mBAAO,CAAC,EAAe;AACvC,iBAAiB,mBAAO,CAAC,GAAgB;AACzC,YAAY,mBAAO,CAAC,EAAW;AAC/B,yBAAyB,mBAAO,CAAC,GAAwB;AACzD,WAAW,mBAAO,CAAC,GAAS;AAC5B,gBAAgB,mBAAO,CAAC,GAAc;AACtC,iCAAiC,mBAAO,CAAC,GAA2B;AACpE,cAAc,mBAAO,CAAC,GAAY;AAClC,gBAAgB,mBAAO,CAAC,GAAe;AACvC,qBAAqB,mBAAO,CAAC,GAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,EAAE,mBAAO,CAAC,EAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,kCAAkC;AACrD,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,uCAAuC;AACtD;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH,kBAAkB,yBAAyB,KAAK;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,wBAAwB;AACxB,gBAAgB;AAChB,oBAAoB;AACpB,wBAAwB;AACxB,gBAAgB;AAChB,oBAAoB;AACpB;AACA,uBAAuB,mBAAO,CAAC,GAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D,oBAAoB;AAC9E,mBAAO,CAAC,EAAsB;AAC9B,mBAAO,CAAC,GAAgB;AACxB,UAAU,mBAAO,CAAC,EAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gDAAgD,mBAAO,CAAC,GAAgB;AACxE;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;AC7RD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACfA,aAAa,mBAAO,CAAC,EAAW;AAChC,gBAAgB,mBAAO,CAAC,GAAS;AACjC;AACA;AACA;AACA,aAAa,mBAAO,CAAC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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,gCAAgC;AAChG;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,EAAE,mBAAO,CAAC,GAAgB;AAC1B,EAAE,mBAAO,CAAC,EAAe;AACzB;;AAEA,sBAAsB,mBAAO,CAAC,EAAY;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0DAA0D,kBAAkB;;AAE5E;AACA;AACA;AACA,oBAAoB,uBAAuB;;AAE3C,oDAAoD,6BAA6B;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,0BAA0B,eAAe,EAAE;AAC3C,0BAA0B,gBAAgB;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,8CAA8C,YAAY,EAAE;;AAE5D;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO,QAAQ,iCAAiC;AACpG,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,oCAAoC,mBAAO,CAAC,EAAS;AACrD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrPA;AACA,cAAc,mBAAO,CAAC,EAAgB;AACtC,WAAW,mBAAO,CAAC,GAAgB;AACnC,UAAU,mBAAO,CAAC,EAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACdA;AACA,gBAAgB,mBAAO,CAAC,EAAe;AACvC,WAAW,mBAAO,CAAC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uDAAuD,WAAW,EAAE;AACpE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,4BAA4B,mBAAmB,EAAE;AACjD,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,6BAA6B,oDAAoD;AACjF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA2C,0BAA0B,EAAE;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B;AAC5B,0CAA0C,EAAE;AAC5C,2BAA2B;AAC3B,gCAAgC,EAAE;AAClC,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AAC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cAAc,mBAAO,CAAC,GAAW;AACjC;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC,uCAAuC;AACvC;;AAEA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,6BAA6B;AAClD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,8EAA8E;AAC9E,GAAG;AACH;;AAEA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;;;;;AC3HA,cAAc,mBAAO,CAAC,GAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;;;;;;;;;;;;;;;;;;ACjHA;;IAAY8b,W;;AACZ;;AACA;;;;;;AAEA,MAAMw7B,WAAW,EAAjB;;AAEAA,SAASx7B,YAAYG,aAArB,IAAsC;AACpC87B,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAO,wBAAY/Q,KAAZ,EAAmB+Q,OAAOkG,OAA1B,CAAP;AACD;AAHmC,CAAtC;;AAMAklC,SAASx7B,YAAYO,gBAArB,IAAyC;AACvC07B,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,sCACK/Q,KADL;AAEEC,uCACKD,MAAMC,IADX;AAEE8gB,qBAAahQ,OAAOkG,OAAP,CAAe8J;AAF9B;AAFF;AAOD;AATsC,CAAzC;;AAYA;AACA,MAAM+7B,UAAU,iCAAcX,QAAd,EAAwB,EAAxB,CAAhB;kBACeW,O;;;;;;;;;;;;;;;;;kBCVSiH,oB;;AAfxB;;;;AACA;;AACA;;IAAYpjC,W;;AAEZ;;;;AAGA;;;;;;AACA,MAAM7P,MAAMrI,iBAAWmZ,SAAX,CAAqB,QAArB,CAAZ;;AAEA;;;;;;;AAJA;AAPA;AAgBe,SAASmiC,oBAAT,CAA+B14C,UAAU,EAAzC,EAA6CwwC,MAA7C,EAAqD;AAClE;AACA;AACA,QAAM7T,UAAU,6BAAhB;AACA,QAAM+U,aAAaiH,gBAAgBhc,OAAhB,CAAnB;;AAEA;AACA;AACA6T,SAAO50B,KAAP,CAAa,WAAb,EAA0B,SAASyE,SAAT,CAAoB7T,IAApB,EAA0BnH,IAA1B,EAAgC;AACxDI,QAAIkX,IAAJ,CAAU,mBAAkBnQ,IAAK,EAAjC,EAAoCnH,IAApC;AACAs3B,YAAQM,IAAR,CAAazwB,IAAb,EAAmBnH,IAAnB;AACD,GAHD;;AAKA,SAAO;AACLxO,UAAMsgD,oBAAgBtgD,IADjB;AAEL66C,gBAAYA,UAFP;AAGLrN,SAAK8S,oBAAgB9S,GAHhB;AAILoN,aAAS0F,oBAAgB1F;AAJpB,GAAP;AAMD;;AAED;;;;AAIA,SAASkH,eAAT,CAA0Bhc,OAA1B,EAAmC;AACjC;;;;AAIA,SAAO,SAAS+U,UAAT,CAAqBtmC,OAArB,EAA8B;AACnC,QAAIwtC,WAAW,EAAf;;AAEA;;;;;;AAMA,WAAOrH,QAAQ7rC,UAAU;AACvB,cAAQA,OAAO8G,IAAf;AACE,aAAK8I,YAAYoL,SAAjB;AACEic,kBAAQ1c,EAAR,CAAWva,OAAOkG,OAAP,CAAe+U,SAA1B,EAAqCjb,OAAOkG,OAAP,CAAe6U,QAApD;AACA;AACF,aAAKnL,YAAYsL,UAAjB;AACE+b,kBAAQzc,GAAR,CAAYxa,OAAOkG,OAAP,CAAe+U,SAA3B,EAAsCjb,OAAOkG,OAAP,CAAe6U,QAArD;AACA;AACF,aAAKnL,YAAYuL,gBAAjB;AACE8b,kBAAQxc,SAAR,CAAkBza,OAAOkG,OAAzB;AACA;AACF,aAAK0J,YAAYwL,kBAAjB;AACE6b,kBAAQvc,WAAR,CAAoB1a,OAAOkG,OAA3B;AACA;AACF,aAAK0J,YAAY2L,YAAjB;AACE0b,kBAAQ3b,KAAR,CAActb,OAAOkG,OAAP,CAAe+U,SAA7B,EAAwCjb,OAAOkG,OAAP,CAAeoV,KAAvD;AACA;AACF,aAAK1L,YAAYyL,WAAjB;AACEtb,cAAIkX,IAAJ,CAAU,mBAAkBjX,OAAOkG,OAAP,CAAe+U,SAAU,EAArD,EAAwDjb,OAAOkG,OAAP,CAAevG,IAAf,CAAoB,CAApB,CAAxD;AACAs3B,kBAAQM,IAAR,CAAav3B,OAAOkG,OAAP,CAAe+U,SAA5B,EAAuC,GAAGjb,OAAOkG,OAAP,CAAevG,IAAzD;AACA;AACF,aAAKiQ,YAAYkL,UAAjB;AACE,eAAK,MAAMq4B,UAAX,IAAyBnzC,OAAOkG,OAAhC,EAAyC;AACvC,gBAAIlG,OAAOkG,OAAP,CAAe/F,cAAf,CAA8BgzC,UAA9B,CAAJ,EAA+C;AAC7C,oBAAMC,SAASpzC,OAAOkG,OAAP,CAAeitC,UAAf,CAAf;AACA,kBAAID,SAAS/yC,cAAT,CAAwBgzC,UAAxB,CAAJ,EAAyC;AACvCD,yBAASC,UAAT,EAAqBnrC,IAArB,CAA0BorC,MAA1B;AACD,eAFD,MAEO;AACLF,yBAASC,UAAT,IAAuB,CAACC,MAAD,CAAvB;AACD;AACF;AACF;AACD;AACF;AACE,cAAIF,SAAS/yC,cAAT,CAAwBH,OAAO8G,IAA/B,CAAJ,EAA0C;AACxC;AACA;AACA,kBAAMf,YAAYL,QAAQE,QAAR,EAAlB;AACA,gBAAIud,SAAS0oB,KAAK7rC,MAAL,CAAb;AACA,kBAAM/Q,QAAQyW,QAAQE,QAAR,EAAd;;AAEA;AACA;AACA;AACA,gBAAI,CAACud,MAAD,IAAW,CAACA,OAAOkwB,IAAvB,EAA6B;AAC3BlwB,uBAAS,kBAAQ7iB,OAAR,CAAgB6iB,MAAhB,CAAT;AACD;AACDA,mBAAOkwB,IAAP,CAAY,YAAY;AACtB,mBAAK,MAAMD,MAAX,IAAqBF,SAASlzC,OAAO8G,IAAhB,CAArB,EAA4C;AAC1C;AACA;AACA,oBAAIqzB,SAASiZ,OAAOpzC,MAAP,EAAe,EAAE+F,SAAF,EAAa9W,KAAb,EAAf,CAAb;AACA,oBAAI,CAACkrC,MAAL,EAAa;AACXA,2BAAS,EAAT;AACD,iBAFD,MAEO,IAAI,CAACyJ,MAAMC,OAAN,CAAc1J,MAAd,CAAL,EAA4B;AACjCA,2BAAS,CAACA,MAAD,CAAT;AACD;AACD,qBAAK,MAAMtzB,KAAX,IAAoBszB,MAApB,EAA4B;AAC1B,sBAAI,OAAOtzB,KAAP,KAAiB,WAArB,EAAkC;AAChC,wBAAI,CAACA,MAAMlH,IAAX,EAAiB;AACfkH,4BAAMlH,IAAN,GAAa,EAAb;AACD;AACD+F,4BAAQqjB,QAAR,CAAiB,wBAAUliB,MAAMC,IAAhB,EAAsBD,MAAMlH,IAA5B,CAAjB;AACD;AACF;AACF;AACF,aAnBD;AAoBA,mBAAOwjB,MAAP;AACD;AACD;AApEJ;;AAuEA,aAAO0oB,KAAK7rC,MAAL,CAAP;AACD,KAzED;AA0ED,GAnFD;AAoFD,C;;;;;;;;;;;;;ACjID;;;;AACA;;;;;;AAEA;;;;AAJA;AAQA,MAAM7O,OAAO,QAAb;;kBAEe;AACbA,MADa;AAEbwtC,oBAFa;AAGboN;AAHa,C;;;;;;;;;;;;kBCGSpN,G;;AAZxB;;AAEA;;AAHA;AAKA,MAAM5+B,MAAMrI,iBAAWmZ,SAAX,CAAqB,QAArB,CAAZ;;AAEA;;;;;;AAMe,SAAS8tB,GAAT,CAAc,EAAE5V,QAAF,EAAd,EAA4B;AACzC,MAAI4V,MAAM,EAAV;;AAEA;;;;;;;;;;;;;;;AAeAA,MAAIpkB,EAAJ,GAAS,UAAUzT,IAAV,EAAgBiU,QAAhB,EAA0B;AACjChb,QAAIgR,KAAJ,CAAUxZ,oBAAc,MAAxB,EAAgCuP,IAAhC;AACAiiB,aAAS,iBAAGjiB,IAAH,EAASiU,QAAT,CAAT;AACD,GAHD;;AAKA;;;;;;;;;;AAUA4jB,MAAInkB,GAAJ,GAAU,UAAU1T,IAAV,EAAgBiU,QAAhB,EAA0B;AAClChb,QAAIgR,KAAJ,CAAUxZ,oBAAc,OAAxB,EAAiCuP,IAAjC;AACAiiB,aAAS,kBAAIjiB,IAAJ,EAAUiU,QAAV,CAAT;AACD,GAHD;;AAKA;;;;;;;;;AASA4jB,MAAIlkB,SAAJ,GAAgB,UAAUM,QAAV,EAAoB;AAClChb,QAAIgR,KAAJ,CAAUxZ,oBAAc,WAAxB;AACAwxB,aAAS,wBAAUhO,QAAV,CAAT;AACD,GAHD;;AAKA;;;;;;;;;AASA4jB,MAAIjkB,WAAJ,GAAkB,UAAUK,QAAV,EAAoB;AACpChb,QAAIgR,KAAJ,CAAUxZ,oBAAc,aAAxB;AACAwxB,aAAS,0BAAYhO,QAAZ,CAAT;AACD,GAHD;;AAKA,SAAO4jB,GAAP;AACD,C;;;;;;;;;;;;;;;;;kBCtDuBoN,O;;AAzBxB;;IAAYn8B,W;;AAGZ;;;;;;AAJA;AAMA,SAAS0jC,YAAT,CAAuBrkD,QAAQ,EAAEskD,SAAS,EAAX,EAAeC,OAAO,CAAtB,EAA/B,EAA0DxzC,MAA1D,EAAkE;AAChE,UAAQA,OAAO8G,IAAf;AACE,SAAK8I,YAAYoL,SAAjB;AACE,aAAO,gBAAO,OAAP,EAAgB,aAAI,CAAJ,CAAhB,EAAwB/rB,KAAxB,CAAP;AACF,SAAK2gB,YAAYsL,UAAjB;AACE,aAAO,gBAAO,OAAP,EAAgB,aAAI,CAAC,CAAL,CAAhB,EAAyBjsB,KAAzB,CAAP;AACF,SAAK2gB,YAAY2L,YAAjB;AACE,aAAO,gBAAO,SAAP,EAAkB,gBAAOvb,OAAOkG,OAAP,CAAeoV,KAAtB,CAAlB,EAAgDrsB,KAAhD,CAAP;AACF;AACE,aAAOA,KAAP;AARJ;AAUD;;AAED;;;;;;;;;AAhBA;AAuBe,SAAS88C,OAAT,CAAkB98C,QAAQ,EAA1B,EAA8B+Q,MAA9B,EAAsC;AACnD;AACA,MAAI,CAAC,kBAASA,OAAO8G,IAAhB,EAAsB8I,WAAtB,CAAL,EAAyC;AACvC,WAAO3gB,KAAP;AACD;;AAED,oCACKA,KADL;AAEE,KAAC+Q,OAAOkG,OAAP,CAAe+U,SAAhB,GAA4Bq4B,aAAarkD,MAAM+Q,OAAOkG,OAAP,CAAe+U,SAArB,CAAb,EAA8Cjb,MAA9C;AAF9B;AAID,C;;;;;;;;;;;;;;;;;kBCzBuByzC,Y;;;;AAXxB;;;;;;;;;;;AAWe,SAASA,YAAT,CAAuBC,YAAY,EAAnC,EAAuC;AACpD,MAAIR,WAAW,EAAf;AACA,MAAIS,eAAe,EAAnB;AACA,MAAIC,aAAa,KAAjB;;AAEA;;;AAGA,WAASC,UAAT,CAAqB/sC,IAArB,EAA2B;AACzB,QAAI8sC,cAAc,CAACV,SAASpsC,IAAT,CAAnB,EAAmC;AACjC,YAAM,IAAI2R,KAAJ,CAAU,yBAAyB3R,IAAnC,CAAN;AACD;AACF;;AAED,SAAO,sBAAc4sC,SAAd,EAAyB;AAC9B;;;;;;AAMAI,YAAQ,UAAUhtC,IAAV,EAAgB;AACtBosC,eAASpsC,IAAT,IAAiBosC,SAASpsC,IAAT,KAAkB,EAAnC;AACD,KAT6B;;AAW9B;;;;;;;;AAQAwU,WAAO,UAAUxU,IAAV,EAAgBwU,KAAhB,EAAuB;AAC5Bu4B,iBAAW/sC,IAAX;;AAEAosC,eAAS53B,KAAT,IAAkB43B,SAASpsC,IAAT,IAAiBosC,SAASpsC,IAAT,KAAkB,EAArD;AACD,KAvB6B;;AAyB9B;;;;;;;;;AASAyT,QAAI,UAAUzT,IAAV,EAAgBiU,QAAhB,EAA0B;AAC5B84B,iBAAW/sC,IAAX,EACC,CAACosC,SAASpsC,IAAT,IAAiBosC,SAASpsC,IAAT,KAAkB,EAApC,EAAwCkB,IAAxC,CAA6C+S,QAA7C;AACF,KArC6B;;AAuC9B;;;;;;;;AAQAP,SAAK,UAAU1T,IAAV,EAAgBiU,QAAhB,EAA0B;AAC7B84B,iBAAW/sC,IAAX;;AAEA,UAAI6lC,OAAOuG,SAASpsC,IAAT,KAAkB,EAA7B;AACA,UAAIitC,IAAIpH,KAAKttC,MAAb;AACA,aAAO00C,GAAP,EAAY;AACV,YAAIh5B,aAAa4xB,KAAKoH,CAAL,CAAjB,EAA0B;AACxBpH,eAAKqH,MAAL,CAAYD,CAAZ,EAAe,CAAf;AACD;AACF;AACF,KAzD6B;;AA2D9B;;;;;;;;AAQAxc,UAAM,UAAUzwB,IAAV,EAAgB;AACpB+sC,iBAAW/sC,IAAX;;AAEA,UAAInH,OAAOikC,MAAM8P,SAAN,CAAgB/M,KAAhB,CAAsBz3C,IAAtB,CAA2B+kD,SAA3B,EAAsC,CAAtC,CAAX;AACA,UAAItH,OAAOuG,SAASpsC,IAAT,KAAkB,EAA7B;AACA,UAAIitC,IAAI,CAAR;;AAEA,aAAOA,IAAIpH,KAAKttC,MAAhB,EAAwB00C,GAAxB,EAA6B;AAC3BpH,aAAKoH,CAAL,EAAQG,KAAR,CAAcx7C,SAAd,EAAyBiH,IAAzB;AACD;AACD,WAAK,IAAIw0C,IAAI,CAAb,EAAgBA,IAAIR,aAAat0C,MAAjC,EAAyC80C,GAAzC,EAA8C;AAC5CR,qBAAaQ,CAAb,EAAgBjlD,IAAhB,CAAqBwJ,SAArB,EAAgCoO,IAAhC,EAAsCnH,IAAtC;AACD;AACF,KAhF6B;;AAkF9B;;;;;;;AAOA8a,eAAW,UAAUM,QAAV,EAAoB;AAC7B,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC44B,qBAAa3rC,IAAb,CAAkB+S,QAAlB;AACD,OAFD,MAEO;AACL,cAAM,IAAItC,KAAJ,CAAU,yBAAV,CAAN;AACD;AACF,KA/F6B;;AAiG9B;;;;;;;AAOAiC,iBAAa,UAAUK,QAAV,EAAoB;AAC/B,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,YAAIg5B,IAAIJ,aAAat0C,MAArB;AACA,eAAO00C,GAAP,EAAY;AACV,cAAIh5B,aAAa44B,aAAaI,CAAb,CAAjB,EAAkC;AAChCJ,yBAAaK,MAAb,CAAoBD,CAApB,EAAuB,CAAvB;AACD;AACF;AACF,OAPD,MAOO;AACL,cAAM,IAAIt7B,KAAJ,CAAU,yBAAV,CAAN;AACD;AACF,KAnH6B;;AAqH9B;;;;;;AAMA27B,mBAAe,UAAUC,MAAV,EAAkB;AAC/BT,mBAAaS,MAAb;AACD;AA7H6B,GAAzB,CAAP;AA+HD,C;;;;;;;;;;;;kBClIuBC,Y;QA4CRC,U,GAAAA,U;QAeEC,Y,GAAAA,Y;;AAhFlB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAGA;;AACA;;AAGA;;;;;;AAdA;AAgBA,MAAMz0C,MAAMrI,kBAAWmZ,SAAX,CAAqB,QAArB,CAAZ;;AAEA;;;;;;AALA;;;AAJA;AAae,SAASyjC,YAAT,CAAuBh6C,UAAU,EAAjC,EAAqCwwC,MAArC,EAA6C;AAC1D,QAAM,EAAEv6B,YAAF,EAAgBG,cAAhB,KAAmC,gDAAzC;AACA,MAAI,CAACH,YAAD,IAAiB,CAACG,cAAtB,EAAsC;AACpC3Q,QAAIka,IAAJ,CACE,2GADF;AAGA;AACD;;AAED;AACA,QAAMo1B,SAAS,4BAAf;;AAEA;AACAvE,SAAOT,OAAP,CAAe,WAAf,EAA4BvY,eAA5B;AACAgZ,SAAOT,OAAP,CAAe,uBAAf,EAAwCoK,eAAxC;AACA3J,SAAOT,OAAP,CAAe,qBAAf,EAAsCqK,cAAtC;;AAEA;AACA5J,SAAOT,OAAP,CAAe,QAAf,EAAyB,MAAMgF,OAAOn9B,QAAtC;;AAEA;AACA44B,SAAO/rC,KAAP,CAAaw1C,UAAb;;AAEA;AACAzJ,SAAO/rC,KAAP,CAAay1C,YAAb;;AAEA;AACA1J,SAAO/rC,KAAP,CAAa41C,kBAAb;;AAEA,SAAO;AACLxjD,UAAM,QADD;AAEL46C,aAAS0F,oBAAgB1F,OAFpB;AAGLC,gBAAY4I,oBAHP;AAILrJ,YAAQ;AACN8D;AADM;AAJH,GAAP;AAQD;;AAED;;;;;AAKO,SAASkF,UAAT,CAAqBzsB,SAArB,EAAgC;AACrC,QAAM,EAAEpwB,UAAF,EAAcgO,OAAd,KAA0BoiB,SAAhC;AACA,QAAM/nB,MAAMrI,WAAWmZ,SAAX,CAAqB,QAArB,CAAZ;;AAEA;AACA,QAAMgkC,UAAU,qCAAhB;AACA90C,MAAIkX,IAAJ,CAAU,oBAAmB49B,QAAQ5vC,OAAQ,aAAY4vC,QAAQ96C,OAAQ,GAAzE;AACA2L,UAAQqjB,QAAR,CAAiBnb,qBAAYknC,iBAAZ,CAA8BD,OAA9B,CAAjB;AACD;;AAED;;;;;AAKO,UAAWL,YAAX,CAAyB1sB,SAAzB,EAAoC;AACzC,QAAM,EAAEitB,qBAAqBC,UAAvB,KAAsCltB,SAA5C;AACA;AACA,QAAM5iB,QAAQ,yBAAS,QAAT,CAAd;AACA;AACA;AACA8vC,aAAWC,cAAX,CAA0B,EAAEC,QAAQhwC,KAAV,EAA1B;AACD,C;;;;;;;;;;;;;ACxFD;;;;AACA;;;;;;kBAEe;AACb/T,QAAM,QADO;AAEbwtC,oBAFa;AAGboN;AAHa,C;;;;;;;;;;;;kBCQSoJ,c;;AAVxB;;AACA;;IAAY1vC,U;;;;AAEZ;;;;;;;AAJA;AAWe,SAAS0vC,cAAT,CAAyBrtB,SAAzB,EAAoC;AACjD,QAAM,EAAEpiB,OAAF,EAAW0vC,uBAAuBJ,UAAlC,EAA8Ct9C,UAA9C,EAA0DH,WAA1D,EAAuEojB,SAAvE,KAAqFmN,SAA3F;AACA,QAAM/nB,MAAMrI,WAAWmZ,SAAX,CAAqB,OAArB,CAAZ;;AAEA,SAAO;AACL;;;;;;;;;;;;AAYA9M,iBAAc;AACZhE,UAAIgR,KAAJ,CAAUxZ,cAAc,kBAAxB;AACA,aAAO,2BAAWmO,QAAQE,QAAR,EAAX,CAAP;AACD,KAhBI;;AAkBL;;;;;;;;;AASAyvC,YAASrwC,OAAT,EAAkB;AAChBjF,UAAIgR,KAAJ,CAAUxZ,cAAc,iBAAxB,EAA2CyN,OAA3C;AACA,aAAO,6BAAaU,QAAQE,QAAR,EAAb,EAAiCZ,OAAjC,CAAP;AACD,KA9BI;;AAgCL;;;;;;;;;AASAb,iBAAcU,OAAd,EAAuB;AACrB9E,UAAIgR,KAAJ,CAAUxZ,cAAc,sBAAxB,EAAgDsN,OAAhD;AACA,aAAO,6BAAaa,QAAQE,QAAR,EAAb,EAAiCf,OAAjC,CAAP;AACD,KA5CI;;AA8CL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,UAAMywC,iBAAN,CAAyBte,WAAzB,EAAsC;AACpCj3B,UAAIgR,KAAJ,CAAUxZ,cAAc,2BAAxB,EAAqDy/B,WAArD;AACA,YAAMue,qBAAqB;AACzB3sC,eAAOouB,gBAAgBt+B,SAAhB,GAA4B,IAA5B,GAAmCs+B,YAAYpuB,KAD7B;AAEzBE,eAAOkuB,gBAAgBt+B,SAAhB,GAA4B,IAA5B,GAAmCs+B,YAAYluB;AAF7B,OAA3B;;AAKA,UAAI;AACF,cAAMksC,WAAWM,iBAAX,CAA6BC,kBAA7B,CAAN;AACD,OAFD,CAEE,OAAOpuC,KAAP,EAAc;AACdwT,kBAAUlV,WAAW4e,wBAArB,EAA+C,EAAEld,KAAF,EAA/C,EADc,CAC4C;AAC1D;AACD;;AAEDwT,gBAAUlV,WAAW2e,eAArB,EAAsC,EAAtC,EAdoC,CAcM;AAC3C,KA9GI;;AAgHL;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,UAAMoxB,YAAN,CAAoB7uC,QAApB,EAA8B8uC,WAA9B,EAA2Cn7C,UAAU,EAArD,EAAyD;AACvDyF,UAAIgR,KAAJ,CAAUxZ,cAAc,sBAAxB,EAAgDoP,QAAhD,EAA0D8uC,WAA1D,EAAuEn7C,OAAvE;AACA,UAAIo7C,QAAJ;AACA,UAAI;AACFA,mBAAW,MAAMV,WAAWQ,YAAX,CAAwB7uC,QAAxB,EAAkC8uC,WAAlC,EAA+Cn7C,OAA/C,CAAjB;AACD,OAFD,CAEE,OAAO6M,KAAP,EAAc;AACdwT,kBAAUlV,WAAW+e,cAArB,EAAqC,EAAE7d,UAAUQ,MAAMwuC,gBAAlB,EAAoCxuC,OAAOA,MAAMyuC,UAAjD,EAArC;AACA;AACD;;AAEDj7B,gBAAUlV,WAAW+e,cAArB,EAAqCkxB,QAArC;AACD,KAtJI;;AAwJL;;;;;;;;;;;;;;AAcA,UAAMG,YAAN,CAAoBlvC,QAApB,EAA8B8uC,WAA9B,EAA2C;AACzC11C,UAAIgR,KAAJ,CAAUxZ,cAAc,sBAAxB,EAAgDoP,QAAhD,EAA0D8uC,WAA1D;AACA,YAAMT,WAAWa,YAAX,CAAwBlvC,QAAxB,EAAkC8uC,WAAlC,CAAN;AACD,KAzKI;;AA2KL;;;;;;;;;;;;;;;;;;;;;;;AAuBA,UAAMK,UAAN,CAAkBnvC,QAAlB,EAA4B;AAC1B5G,UAAIgR,KAAJ,CAAUxZ,cAAc,oBAAxB,EAA8CoP,QAA9C;AACA,UAAIovC,gBAAJ;;AAEA,UAAI;AACFA,2BAAmB,MAAMf,WAAWc,UAAX,CAAsBnvC,QAAtB,CAAzB;AACD,OAFD,CAEE,OAAOQ,KAAP,EAAc;AACd;AACAwT,kBAAUlV,WAAW6e,YAArB,EAAmC;AACjC3d,oBAAUQ,MAAMR,QADiB;AAEjC/B,kBAAQuC,MAAMR,QAFmB;AAGjCQ,iBAAOA,MAAMyuC;AAHoB,SAAnC;AAKA;AACD;AACD;AACAj7B,gBAAUlV,WAAW6e,YAArB,EAAmC,EAAE3d,UAAUovC,gBAAZ,EAA8BnxC,QAAQmxC,gBAAtC,EAAnC;AACD,KAnNI;;AAqNL;;;;;;;;;;;;;;;AAeA,UAAMC,YAAN,CAAoBrvC,QAApB,EAA8B;AAC5B5G,UAAIgR,KAAJ,CAAUxZ,cAAc,sBAAxB,EAAgDoP,QAAhD;AACA,UAAIovC,gBAAJ;;AAEA,UAAI;AACFA,2BAAmB,MAAMf,WAAWgB,YAAX,CAAwBrvC,QAAxB,CAAzB;AACD,OAFD,CAEE,OAAOQ,KAAP,EAAc;AACd;AACAwT,kBAAUlV,WAAW8e,cAArB,EAAqC;AACnC5d,oBAAUQ,MAAMR,QADmB;AAEnC/B,kBAAQuC,MAAMR,QAFqB;AAGnCQ,iBAAOA,MAAMyuC;AAHsB,SAArC;AAKA;AACD;AACD;AACAj7B,gBAAUlV,WAAW8e,cAArB,EAAqC,EAAE5d,UAAUovC,gBAAZ,EAA8BnxC,QAAQmxC,gBAAtC,EAArC;AACD;AArPI,GAAP;AAuPD,C;;;;;;;;;;;;;kBCzPc,UAAU9mD,QAAQ,EAAlB,EAAsB+Q,MAAtB,EAA8B;AAC3C,SAAO;AACLwE,aAAS,uBAAQvV,MAAMuV,OAAd,EAAuBxE,MAAvB,CADJ;AAEL4E,YAAQ,sBAAO3V,MAAM2V,MAAb,EAAqB5E,MAArB,CAFH;AAGLyE,cAAU,wBAASxV,MAAMwV,QAAf,EAAyBzE,MAAzB,CAHL;AAIL+E,WAAO,qBAAM9V,MAAM8V,KAAZ,EAAmB/E,MAAnB,CAJF;AAKLiF,aAAS,uBAAQhW,MAAMgW,OAAd,EAAuBjF,MAAvB;AALJ,GAAP;AAOD,C;;AArBD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;ACHA;;IAAY4P,W;;AAGZ;;;;AAEA;;;AANA;AASA,MAAMw7B,WAAW,EAAjB;;AAEA;;;AARA;AASAA,SAASx7B,YAAYxO,cAArB,IAAuC;AACrCyqC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAOA,OAAOkG,OAAd;AACD;AAHoC,CAAvC;;AAMA;AACAklC,SAASx7B,YAAYtO,yBAArB,IAAkD;AAChDuqC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAOA,OAAOkG,OAAd;AACD;AAH+C,CAAlD;;AAMA;AACA,MAAM+vC,eAAe;AACnBC,UAAQ,EADW;AAEnBC,cAAY,EAFO;AAGnBC,WAAS;AAHU,CAArB;;AAMA,MAAMrK,UAAU,iCAAcX,QAAd,EAAwB6K,YAAxB,CAAhB;kBACelK,O;;;;;;;;;;;;;;;;;AChCf;;IAAYn8B,W;;AAGZ;;AACA;;;;;;AAEA;;;AAJA;AAKA,MAAMw7B,WAAW,EAAjB;;AAEA;AAVA;AAWAA,SAASx7B,YAAY5M,SAArB,IAAkC;AAChC6oC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAO,gBAAO/Q,KAAP,6BACF+Q,OAAOkG,OADL,EAAP;AAGD;AAL+B,CAAlC;;AAQA;AACAklC,SAASx7B,YAAY3M,aAArB,IAAsC;AACpC4oC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,UAAM2gC,cAAc57B,SAASA,MAAMnV,EAAN,KAAaoQ,OAAOkG,OAAP,CAAetW,EAAzD;AACA,WAAO,gBAAO+wC,WAAP,EAAoB1xC,KAApB,CAAP;AACD;AAJmC,CAAtC;;AAOA;AACA,MAAMonD,gBAAgB,EAAtB;;AAEAA,cAAczmC,YAAYzM,eAA1B,IAA6C;AAC3C0oC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,sCACK/Q,KADL;AAEE2V,cAAQ,gBAAO3V,MAAM2V,MAAb,EAAqB,CAAC5E,OAAOkG,OAAP,CAAerB,OAAhB,CAArB;AAFV;AAID;AAN0C,CAA7C;;AASA;AACAwxC,cAAczmC,YAAYxM,iBAA1B,IAA+C;AAC7CyoC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,UAAMg5B,cAAcn0B,WAAWA,YAAY7E,OAAOkG,OAAP,CAAerB,OAA1D;AACA,sCACK5V,KADL;AAEE2V,cAAQ,gBAAOo0B,WAAP,EAAoB/pC,MAAM2V,MAA1B;AAFV;AAID;AAP4C,CAA/C;AASA,MAAM0xC,eAAe,iCAAcD,aAAd,EAA6B,EAA7B,CAArB;;AAEA,MAAME,uBAAuB,kCAAe3mC,YAAYzM,eAA3B,EAA4CyM,YAAYxM,iBAAxD,CAA7B;;AAEAgoC,SAASmL,oBAAT,IAAiC,CAACtnD,KAAD,EAAQ+Q,MAAR,KAAmB;AAClD,SAAO/Q,MAAMgR,GAAN,CAAU8E,SAAS;AACxB,QAAIA,MAAMnV,EAAN,KAAaoQ,OAAOkG,OAAP,CAAetW,EAAhC,EAAoC;AAClC,aAAO0mD,aAAavxC,KAAb,EAAoB/E,MAApB,CAAP;AACD,KAFD,MAEO;AACL,aAAO+E,KAAP;AACD;AACF,GANM,CAAP;AAOD,CARD;;AAUA;;;;AAIA,MAAMgnC,UAAU,iCAAcX,QAAd,EAAwB,EAAxB,CAAhB;kBACeW,O;;;;;;;;;;;;;;;;;ACnEf;;IAAYn8B,W;;AAGZ;;AACA;;;;;;AAFA;AAIA,MAAMw7B,WAAW,EAAjB;;AAEA;AATA;AAUAA,SAASx7B,YAAYpO,WAArB,IAAoC;AAClCqqC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAO,gBAAO/Q,KAAP,EAAc+Q,OAAOkG,OAArB,CAAP;AACD;AAHiC,CAApC;;AAMA;;;;;;;;;;;;;;;;;;;;;;;AAuBAklC,SAASx7B,YAAYnO,aAArB,IAAsC;AACpCoqC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAO/Q,MAAMgR,GAAN,CAAU6E,SAAS;AACxB,UAAI9E,OAAOkG,OAAP,CAAerB,OAAf,KAA2BC,MAAMD,OAArC,EAA8C;AAC5C,0CACKC,KADL;AAEE7V,iBAAO;AAFT;AAID,OALD,MAKO;AACL,eAAO6V,KAAP;AACD;AACF,KATM,CAAP;AAUD;AAZmC,CAAtC;;AAeA;AACAsmC,SAASx7B,YAAYjO,oBAArB,IAA6C;AAC3CkqC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAO/Q,MAAMgR,GAAN,CAAU6E,SAAS;AACxB,UAAI9E,OAAOkG,OAAP,CAAeS,QAAf,CAAwBlX,QAAxB,CAAiCqV,MAAMD,OAAvC,CAAJ,EAAqD;AACnD,0CACKC,KADL;AAEE0xC,sBAAY,gBAAO1xC,MAAM0xC,UAAb,EAAyBx2C,OAAOkG,OAAP,CAAeuwC,QAAxC;AAFd;AAID,OALD,MAKO;AACL,eAAO3xC,KAAP;AACD;AACF,KATM,CAAP;AAUD;AAZ0C,CAA7C;;AAeA;AACAsmC,SAASx7B,YAAY/N,oBAArB,IAA6C;AAC3CgqC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB;AACA,UAAM02C,kBAAkB5uB,aAAaA,cAAc9nB,OAAOkG,OAAP,CAAeuwC,QAAlE;AACA,WAAOxnD,MAAMgR,GAAN,CAAU6E,SAAS;AACxB,UAAI9E,OAAOkG,OAAP,CAAeS,QAAf,CAAwBlX,QAAxB,CAAiCqV,MAAMD,OAAvC,CAAJ,EAAqD;AACnD,0CACKC,KADL;AAEE0xC,sBAAY,gBAAOE,eAAP,EAAwB5xC,MAAM0xC,UAA9B;AAFd;AAID,OALD,MAKO;AACL,eAAO1xC,KAAP;AACD;AACF,KATM,CAAP;AAUD;AAd0C,CAA7C;;AAiBA;AACAsmC,SAASx7B,YAAY7N,kBAArB,IAA2C;AACzC8pC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAO/Q,MAAMgR,GAAN,CAAU6E,SAAS;AACxB,UAAI9E,OAAOkG,OAAP,CAAeS,QAAf,CAAwBlX,QAAxB,CAAiCqV,MAAMD,OAAvC,CAAJ,EAAqD;AACnD,0CACKC,KADL;AAEEmzB,iBAAO;AAFT;AAID,OALD,MAKO;AACL,eAAOnzB,KAAP;AACD;AACF,KATM,CAAP;AAUD;AAZwC,CAA3C;;AAeAsmC,SAASx7B,YAAY3N,oBAArB,IAA6C;AAC3C4pC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAO/Q,MAAMgR,GAAN,CAAU6E,SAAS;AACxB,UAAI9E,OAAOkG,OAAP,CAAeS,QAAf,CAAwBlX,QAAxB,CAAiCqV,MAAMD,OAAvC,CAAJ,EAAqD;AACnD,0CACKC,KADL;AAEEmzB,iBAAO;AAFT;AAID,OALD,MAKO;AACL,eAAOnzB,KAAP;AACD;AACF,KATM,CAAP;AAUD;AAZ0C,CAA7C;;AAeAsmC,SAASx7B,YAAY1N,kBAArB,IAA2C;AACzC2pC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAO/Q,MAAMgR,GAAN,CAAU6E,SAAS;AACxB,UAAI9E,OAAOkG,OAAP,CAAeS,QAAf,CAAwBlX,QAAxB,CAAiCqV,MAAMD,OAAvC,CAAJ,EAAqD;AACnD,0CACKC,KADL;AAEE6xC,uBAAa;AAFf;AAID,OALD,MAKO;AACL,eAAO7xC,KAAP;AACD;AACF,KATM,CAAP;AAUD;AAZwC,CAA3C;;AAeAsmC,SAASx7B,YAAYzN,oBAArB,IAA6C;AAC3C0pC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAO/Q,MAAMgR,GAAN,CAAU6E,SAAS;AACxB,UAAI9E,OAAOkG,OAAP,CAAeS,QAAf,CAAwBlX,QAAxB,CAAiCqV,MAAMD,OAAvC,CAAJ,EAAqD;AACnD,0CACKC,KADL;AAEE6xC,uBAAa;AAFf;AAID,OALD,MAKO;AACL,eAAO7xC,KAAP;AACD;AACF,KATM,CAAP;AAUD;AAZ0C,CAA7C;;AAeA;;;;AAIA,MAAMinC,UAAU,iCAAcX,QAAd,EAAwB,EAAxB,CAAhB;kBACeW,O;;;;;;;;;;;;;;;;;ACzJf;;IAAYn8B,W;;AAGZ;;AACA;;;;;;AAFA;AAIA,MAAMw7B,WAAW,EAAjB,C,CAPA;;;AASAA,SAASx7B,YAAYvN,aAArB,IAAsC;AACpCwpC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAO,gBAAO/Q,KAAP,EAAc+Q,OAAOkG,OAArB,CAAP;AACD;AAHmC,CAAtC;;AAMAklC,SAASx7B,YAAYtN,eAArB,IAAwC;AACtCupC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,UAAM42C,gBAAgBjyC,WAAWA,QAAQ/U,EAAR,KAAeoQ,OAAOkG,OAAP,CAAetW,EAA/D;AACA,WAAO,gBAAOgnD,aAAP,EAAsB3nD,KAAtB,CAAP;AACD;AAJqC,CAAxC;;AAOA,MAAM4nD,kBAAkB,EAAxB;;AAEAA,gBAAgBjnC,YAAYrN,iBAA5B,IAAiD;AAC/CspC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,QAAIA,OAAOkG,OAAP,CAAew/B,KAAnB,EAA0B;AACxB,wCACKz2C,KADL;AAEE4W,qBAAa,gBAAO5W,MAAM4W,WAAb,EAA0B,CAAC7F,OAAOkG,OAAP,CAAerB,OAAhB,CAA1B;AAFf;AAID,KALD,MAKO;AACL,wCACK5V,KADL;AAEEoX,sBAAc,gBAAOpX,MAAMoX,YAAb,EAA2B,CAACrG,OAAOkG,OAAP,CAAerB,OAAhB,CAA3B;AAFhB;AAID;AACF;AAb8C,CAAjD;;AAgBAgyC,gBAAgBjnC,YAAYpN,mBAA5B,IAAmD;AACjDqpC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,UAAMg5B,cAAcn0B,WAAWA,YAAY7E,OAAOkG,OAAP,CAAerB,OAA1D;AACA,QAAI7E,OAAOkG,OAAP,CAAew/B,KAAnB,EAA0B;AACxB,wCACKz2C,KADL;AAEE4W,qBAAa,gBAAOmzB,WAAP,EAAoB/pC,MAAM4W,WAA1B;AAFf;AAID,KALD,MAKO;AACL,wCACK5W,KADL;AAEEoX,sBAAc,gBAAO2yB,WAAP,EAAoB/pC,MAAMoX,YAA1B;AAFhB;AAID;AACF;AAdgD,CAAnD;;AAiBAwwC,gBAAgBjnC,YAAYnN,sBAA5B,IAAsD;AACpDopC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB;AACA,UAAMg5B,cAAcn0B,WAAWA,YAAY7E,OAAOkG,OAAP,CAAe4wC,UAA1D;AACA,UAAMC,iBAAiB,gBAAO/d,WAAP,EAAoB/pC,MAAM4W,WAA1B,CAAvB;AACA;AACA,QAAIkxC,eAAe10B,OAAf,CAAuBriB,OAAOkG,OAAP,CAAerB,OAAtC,MAAmD,CAAC,CAAxD,EAA2D;AACzDkyC,qBAAe/uC,IAAf,CAAoBhI,OAAOkG,OAAP,CAAerB,OAAnC;AACD;AACD,sCACK5V,KADL;AAEE4W,mBAAakxC;AAFf;AAID;AAbmD,CAAtD;;AAgBA,MAAMC,iBAAiB,iCAAcH,eAAd,EAA+B,EAA/B,CAAvB;;AAEA,MAAMI,yBAAyB,kCAC7BrnC,YAAYrN,iBADiB,EAE7BqN,YAAYpN,mBAFiB,EAG7BoN,YAAYnN,sBAHiB,CAA/B;;AAMA2oC,SAAS6L,sBAAT,IAAmC,CAAChoD,KAAD,EAAQ+Q,MAAR,KAAmB;AACpD,SAAO/Q,MAAMgR,GAAN,CAAU0E,WAAW;AAC1B,QAAIA,QAAQ/U,EAAR,KAAeoQ,OAAOkG,OAAP,CAAetW,EAAlC,EAAsC;AACpC,aAAOonD,eAAeryC,OAAf,EAAwB3E,MAAxB,CAAP;AACD,KAFD,MAEO;AACL,aAAO2E,OAAP;AACD;AACF,GANM,CAAP;AAOD,CARD;;AAUA;;;;AAIA,MAAMonC,UAAU,iCAAcX,QAAd,EAAwB,EAAxB,CAAhB;kBACeW,O;;;;;;;;;;;;;AC/Ff;;IAAYn8B,W;;AAGZ;;;;AAEA;;;AANA;AASA,MAAMw7B,WAAW,EAAjB;;AAEA;;;AARA;AASAA,SAASx7B,YAAYvM,mBAArB,IAA4C;AAC1CwoC,OAAM58C,KAAN,EAAa+Q,MAAb,EAAqB;AACnB,WAAOA,OAAOkG,OAAd;AACD;AAHyC,CAA5C;;AAMA,MAAM6lC,UAAU,iCAAcX,QAAd,EAAwB,EAAxB,CAAhB;kBACeW,O;;;;;;;;;;;;;;;;;;;;;kBCNS0I,qB;;AAZxB;;AAGA;;AACA;;;;;;AAEA;;;;;;;;AAJA;AAUe,SAASA,qBAAT,CAAgC3sB,SAAhC,EAA2C;AACxD,QAAM,EAAEG,MAAF,EAAUviB,OAAV,EAAmBhO,UAAnB,KAAkCowB,SAAxC;AACA,QAAM/nB,MAAMrI,WAAWmZ,SAAX,CAAqB,OAArB,CAAZ;;AAEA;;;;;;;;AAQA,iBAAe2kC,YAAf,CAA6B7uC,QAA7B,EAAuC8vC,QAAvC,EAAiDn8C,OAAjD,EAA0D;AACxD,UAAM,EAAEyuB,QAAF,KAAerjB,OAArB;AACA;AACAqjB,aACEtb,sBAAa+nC,YAAb,CAA0B7uC,QAA1B;AACE8vC;AADF,OAEKn8C,OAFL,EADF;;AAOA;AACA,UAAMsK,SAAS,MAAMqjB,OAAOnjB,KAAP,CAAaZ,SAAb,CAAuByC,QAAvB,CAArB;AACA,UAAMuwC,iBAAiBtyC,OAAOpV,MAAP,CAAcsV,SAAS,CAAC,qBAAYA,KAAZ,CAAxB,CAAvB;AACA,QAAIoB,UAAU,EAAd;;AAEA;AACA,QACES;AACA;AACAA,wBAAoBi9B,KAFpB;AAGA;AACAj9B,aAAStH,MAAT,GAAkB,CAJlB;AAKA;AACAo3C,YANA;AAOA;AACA;AACC,sBAASA,QAAT,KAAsB,aAAaA,QATpC,CADF,EAWE;AACA12C,UAAIkX,IAAJ,CAAU,iCAAgCw/B,QAAS,GAAnD,EAAuD9vC,QAAvD;;AAEA;AACA,YAAM,kBAAQ49B,GAAR,CACJ2S,eAAej3C,GAAf,CAAmB,MAAM6E,KAAN,IAAe;AAChC,cAAMmjB,OAAOjX,QAAP,CAAgBmmC,WAAhB,CAA4BryC,KAA5B,EAAmC2xC,QAAnC,EAA6Cn8C,QAAQ88C,SAArD,CAAN;AACD,OAFD,CADI,CAAN;;AAMAr3C,UAAIkX,IAAJ,CACE,8BADF,EAEEigC,eAAej3C,GAAf,CAAmB6E,SAASA,MAAMlV,EAAlC,CAFF;;AAKAsW,gBAAU,EAAEuwC,QAAF,EAAV;AACD,KA3BD,MA2BO;AACL,YAAMxlD,UAAU,kFAAhB;;AAEA8O,UAAIkX,IAAJ,CACEhmB,OADF,EAEEimD,eAAej3C,GAAf,CAAmB6E,SAASA,MAAMlV,EAAlC,CAFF;;AAKAsW,cAAQiB,KAAR,GAAgB,IAAIpW,gBAAJ,CAAe;AAC7BE,eAD6B;AAE7BC,cAAML,oBAAYijC;AAFW,OAAf,CAAhB;;AAKA;AACA;AACA,YAAM3sB,QAAQ;AACZyuC,oBAAY1vC,QAAQiB,KADR;AAEZwuC,0BAAkBuB,eAAej3C,GAAf,CAAmB6E,SAASA,MAAMlV,EAAlC;;AAGpB;AALc,OAAd,CAMAm5B,SACEtb,sBAAa4pC,kBAAb,CACEH,eAAej3C,GAAf,CAAmB6E,SAASA,MAAMlV,EAAlC,CADF,EAEEsW,OAFF,CADF;;AAOA,YAAMiB,KAAN;AACD;;AAED;AACA4hB,aACEtb,sBAAa4pC,kBAAb,CACEH,eAAej3C,GAAf,CAAmB6E,SAASA,MAAMlV,EAAlC,CADF,EAEEsW,OAFF,CADF;;AAOA,WAAO;AACLS,gBAAUuwC,eAAej3C,GAAf,CAAmB6E,SAASA,MAAMlV,EAAlC,CADL;AAEL6mD;AAFK,KAAP;AAID;;AAED;;;;;;AAMA,iBAAeZ,YAAf,CAA6BlvC,QAA7B,EAAuC8vC,QAAvC,EAAiD;AAC/C,UAAM,EAAE1tB,QAAF,KAAerjB,OAArB;AACA;AACAqjB,aAAStb,sBAAaooC,YAAb,CAA0BlvC,QAA1B,EAAoC,EAAE8vC,QAAF,EAApC,CAAT;;AAEA12C,QAAIkX,IAAJ,CAAU,kCAAiCw/B,QAAS,GAApD,EAAwD9vC,QAAxD;;AAEA;AACA,UAAM,kBAAQ49B,GAAR,CACJ59B,SAAS1G,GAAT,CAAa,MAAMrQ,EAAN,IAAY;AACvB,YAAMq4B,OAAOjX,QAAP,CAAgBsmC,aAAhB,CAA8B1nD,EAA9B,EAAkC6mD,QAAlC,CAAN;AACD,KAFD,CADI,CAAN;;AAMA12C,QAAIkX,IAAJ,CAAS,6BAAT,EAAwCtQ,QAAxC;;AAEA;AACAoiB,aAAStb,sBAAa8pC,kBAAb,CAAgC5wC,QAAhC,EAA0C,EAAE8vC,QAAF,EAA1C,CAAT;AACD;;AAED;;;;;;AAMA,iBAAeX,UAAf,CAA2BnvC,QAA3B,EAAqC;AACnC,UAAM,EAAEoiB,QAAF,KAAerjB,OAArB;AACA;AACAqjB,aAAStb,sBAAaqoC,UAAb,CAAwBnvC,QAAxB,CAAT;;AAEA5G,QAAIkX,IAAJ,CAAS,kBAAT,EAA6BtQ,QAA7B;;AAEA,QACEA;AACA;AACAA,wBAAoBi9B,KAFpB;AAGA;AACAj9B,aAAStH,MAAT,GAAkB,CALpB,EAME;AACA;AACA,YAAMm4C,YAAY,MAAMvvB,OAAOnjB,KAAP,CAAaZ,SAAb,EAAxB;AACA,YAAMU,SAAS4yC,UAAUhoD,MAAV,CAAiBsV,SAAS6B,SAASlX,QAAT,CAAkBqV,MAAMlV,EAAxB,CAA1B,CAAf;;AAEA;AACA,wBAAQ20C,GAAR,CAAY3/B,OAAO3E,GAAP,CAAW6E,SAASA,MAAMszB,IAAN,EAApB,CAAZ;;AAEA,YAAM2d,mBAAmBnxC,OAAO3E,GAAP,CAAW6E,SAASA,MAAMlV,EAA1B,CAAzB;AACAmQ,UAAIkX,IAAJ,CAAS,2BAAT,EAAsC8+B,gBAAtC;;AAEA;AACAhtB,eAAStb,sBAAagqC,gBAAb,CAA8B1B,gBAA9B,CAAT;AACA,aAAOA,gBAAP;AACD,KApBD,MAoBO;AACL,YAAM9kD,UAAU,qEAAhB;;AAEA8O,UAAIkX,IAAJ,CAAShmB,OAAT,EAAkB0V,QAAlB;;AAEA,YAAMT,UAAU,EAAhB;AACAA,cAAQiB,KAAR,GAAgB,IAAIpW,gBAAJ,CAAe;AAC7BE,eAD6B;AAE7BC,cAAML,oBAAYijC;AAFW,OAAf,CAAhB;;AAKA;AACA/K,eAAStb,sBAAagqC,gBAAb,CAA8B9wC,QAA9B,EAAwCT,OAAxC,CAAT;;AAEA,YAAMiB,QAAQ;AACZyuC,oBAAY1vC,QAAQiB,KADR;AAEZR;AAFY,OAAd;AAIA,YAAMQ,KAAN;AACD;AACF;;AAED;;;;;;AAMA,iBAAe6uC,YAAf,CAA6BrvC,QAA7B,EAAuC;AACrC,UAAM,EAAEoiB,QAAF,KAAerjB,OAArB;AACA;AACAqjB,aAAStb,sBAAauoC,YAAb,CAA0BrvC,QAA1B,CAAT;;AAEA5G,QAAIkX,IAAJ,CAAS,oBAAT,EAA+BtQ,QAA/B;;AAEA,QACEA;AACA;AACAA,wBAAoBi9B,KAFpB;AAGA;AACAj9B,aAAStH,MAAT,GAAkB,CALpB,EAME;AACA;AACA,YAAMm4C,YAAY,MAAMvvB,OAAOnjB,KAAP,CAAaZ,SAAb,EAAxB;AACA,YAAMU,SAAS4yC,UAAUhoD,MAAV,CAAiBsV,SAAS6B,SAASlX,QAAT,CAAkBqV,MAAMlV,EAAxB,CAA1B,CAAf;;AAEA;AACA,wBAAQ20C,GAAR,CAAY3/B,OAAO3E,GAAP,CAAW6E,SAASA,MAAMuzB,MAAN,EAApB,CAAZ;;AAEA,YAAM0d,mBAAmBnxC,OAAO3E,GAAP,CAAW6E,SAASA,MAAMlV,EAA1B,CAAzB;AACAmQ,UAAIkX,IAAJ,CAAS,6BAAT,EAAwC8+B,gBAAxC;;AAEA;AACAhtB,eAAStb,sBAAaiqC,kBAAb,CAAgC3B,gBAAhC,CAAT;AACA,aAAOA,gBAAP;AACD,KApBD,MAoBO;AACL,YAAM9kD,UAAU,uEAAhB;;AAEA8O,UAAIkX,IAAJ,CAAShmB,OAAT,EAAkB0V,QAAlB;;AAEA,YAAMT,UAAU,EAAhB;AACAA,cAAQiB,KAAR,GAAgB,IAAIpW,gBAAJ,CAAe;AAC7BE,eAD6B;AAE7BC,cAAML,oBAAYijC;AAFW,OAAf,CAAhB;;AAKA;AACA/K,eAAStb,sBAAaiqC,kBAAb,CAAgC/wC,QAAhC,EAA0CT,OAA1C,CAAT;;AAEA,YAAMiB,QAAQ;AACZyuC,oBAAY1vC,QAAQiB,KADR;AAEZR;AAFY,OAAd;AAIA,YAAMQ,KAAN;AACD;AACF;;AAED;;;;;AAKA,iBAAemuC,iBAAf,CAAkCC,kBAAlC,EAAsD;AACpD,UAAM,EAAExsB,QAAF,KAAerjB,OAArB;AACA;AACAqjB,aAASvb,uBAAcmqC,gBAAd,CAA+BpC,kBAA/B,CAAT;;AAEA,QAAI;AACF;AACA,YAAM/wC,UAAU,MAAMyjB,OAAOzjB,OAAP,CAAeozC,yBAAf,CAAyCrC,kBAAzC,CAAtB;AACA,UAAI/wC,QAAQ2C,KAAZ,EAAmB;AACjB;AACA,cAAM3C,OAAN;AACD,OAHD,MAGO;AACLzE,YAAIkX,IAAJ,CAAS,mCAAT,EAA8CzS,OAA9C;;AAEA;AACAukB,iBAASvb,uBAAcqqC,sBAAd,CAAqC,EAAErzC,OAAF,EAArC,CAAT;AACD;AACF,KAZD,CAYE,OAAO2C,KAAP,EAAc;AACdpH,UAAIkX,IAAJ,CAAU,iDAAgD9P,MAAMlW,OAAQ,GAAxE;;AAEA;AACA83B,eAASvb,uBAAcqqC,sBAAd,CAAqC,EAAE1wC,KAAF,EAArC,CAAT;AACA,YAAMA,KAAN;AACD;AACF;;AAED,SAAO;AACLquC,gBADK;AAELK,gBAFK;AAGLC,cAHK;AAILE,gBAJK;AAKLV;AALK,GAAP;AAOD,C,CA/RD,iB;;;;;;;;;;;;QCGgBwC,c,GAAAA,c;QAOAH,gB,GAAAA,gB;QAcAE,sB,GAAAA,sB;;AAvBhB;;IAAYjoC,W;;;;AAEL,SAASkoC,cAAT,CAAyBtzC,OAAzB,EAAkC;AACvC,SAAO;AACLsC,UAAM8I,YAAYxO,cADb;AAEL8E,aAAS1B;AAFJ,GAAP;AAID,C,CARD;AAUO,SAASmzC,gBAAT,CAA2BpC,kBAA3B,EAA+C;AACpD,SAAO;AACLzuC,UAAM8I,YAAYvO,kBADb;AAEL6E,aAASqvC;AAFJ,GAAP;AAID;;AAED;;;;;;;AAOO,SAASsC,sBAAT,CAAiC,EAAErzC,OAAF,EAAW2C,KAAX,EAAjC,EAAqD;AAC1D,SAAO;AACLjB,aAASiB,SAAS3C,OADb;AAEL2C,WAAOqJ,QAAQrJ,KAAR,CAFF;AAGLL,UAAM8I,YAAYtO;AAHb,GAAP;AAKD,C;;;;;;;;;;;;;;;;;QChBey2C,U,GAAAA,U;QAIAC,Y,GAAAA,Y;QAkBAlC,U,GAAAA,U;QAIA2B,gB,GAAAA,gB;QAIAzB,Y,GAAAA,Y;QAIA0B,kB,GAAAA,kB;QAIAO,gB,GAAAA,gB;QAIAC,kB,GAAAA,kB;QAIA1C,Y,GAAAA,Y;QAOA6B,kB,GAAAA,kB;QAOAxB,Y,GAAAA,Y;QAOA0B,kB,GAAAA,kB;;AAhFhB;;IAAY3nC,W;;;;;;AAEZ,SAASuoC,kBAAT,CAA6BrxC,IAA7B,EAAmCjC,OAAnC,EAA4CqB,UAAU,EAAtD,EAA0DwW,OAAO,EAAjE,EAAqE;AACnE,SAAO;AACL5V,QADK;AAELZ,wCACKA,OADL;AAEErB;AAFF,MAFK;AAML6X;AANK,GAAP;AAQD,C,CAZD;AAcO,SAASq7B,UAAT,CAAqBlzC,OAArB,EAA8BzF,MAA9B,EAAsC;AAC3C,SAAO+4C,mBAAmBvoC,YAAYpO,WAA/B,EAA4CqD,OAA5C,EAAqDzF,MAArD,CAAP;AACD;;AAEM,SAAS44C,YAAT,CAAuBnzC,OAAvB,EAAgCzF,MAAhC,EAAwC;AAC7C,SAAO+4C,mBAAmBvoC,YAAYnO,aAA/B,EAA8CoD,OAA9C,EAAuDzF,MAAvD,CAAP;AACD;;AAED,SAASg5C,WAAT,CAAsBtxC,IAAtB,EAA4BZ,UAAU,EAAtC,EAA0CwW,OAAO,EAAjD,EAAqD;AACnD,QAAM1c,SAAS;AACb8G,QADa;AAEbZ,WAFa;AAGbwW;AAHa,GAAf;;AAMA,MAAIxW,QAAQiB,KAAZ,EAAmB;AACjBnH,WAAOmH,KAAP,GAAe,IAAf;AACD;;AAED,SAAOnH,MAAP;AACD;;AAEM,SAAS81C,UAAT,CAAqBnvC,QAArB,EAA+B;AACpC,SAAOyxC,YAAYxoC,YAAY9N,WAAxB,EAAqC6E,QAArC,CAAP;AACD;;AAEM,SAAS8wC,gBAAT,CAA2B9wC,QAA3B,EAAqCvH,MAArC,EAA6C;AAClD,SAAOg5C,YAAYxoC,YAAY7N,kBAAxB,2BAA8C4E,UAAUA,QAAxD,IAAqEvH,MAArE,EAAP;AACD;;AAEM,SAAS42C,YAAT,CAAuBrvC,QAAvB,EAAiC;AACtC,SAAOyxC,YAAYxoC,YAAY5N,aAAxB,EAAuC2E,QAAvC,CAAP;AACD;;AAEM,SAAS+wC,kBAAT,CAA6B/wC,QAA7B,EAAuCvH,MAAvC,EAA+C;AACpD,SAAOg5C,YAAYxoC,YAAY3N,oBAAxB,2BAAgD0E,UAAUA,QAA1D,IAAuEvH,MAAvE,EAAP;AACD;;AAEM,SAAS64C,gBAAT,CAA2BtxC,QAA3B,EAAqCvH,MAArC,EAA6C;AAClD,SAAOg5C,YAAYxoC,YAAY1N,kBAAxB,2BAA8CyE,UAAUA,QAAxD,IAAqEvH,MAArE,EAAP;AACD;;AAEM,SAAS84C,kBAAT,CAA6BvxC,QAA7B,EAAuCvH,MAAvC,EAA+C;AACpD,SAAOg5C,YAAYxoC,YAAYzN,oBAAxB,2BAAgDwE,UAAUA,QAA1D,IAAuEvH,MAAvE,EAAP;AACD;;AAEM,SAASo2C,YAAT,CAAuB7uC,QAAvB,EAAiCvH,MAAjC,EAAyC;AAC9C,SAAOg5C,YAAYxoC,YAAYlO,aAAxB;AACLiF;AADK,KAEFvH,MAFE,EAAP;AAID;;AAEM,SAASi4C,kBAAT,CAA6B1wC,QAA7B,EAAuCvH,MAAvC,EAA+C;AACpD,SAAOg5C,YAAYxoC,YAAYjO,oBAAxB;AACLgF;AADK,KAEFvH,MAFE,EAAP;AAID;;AAEM,SAASy2C,YAAT,CAAuBlvC,QAAvB,EAAiCvH,MAAjC,EAAyC;AAC9C,SAAOg5C,YAAYxoC,YAAYhO,aAAxB;AACL+E;AADK,KAEFvH,MAFE,EAAP;AAID;;AAEM,SAASm4C,kBAAT,CAA6B5wC,QAA7B,EAAuCvH,MAAvC,EAA+C;AACpD,SAAOg5C,YAAYxoC,YAAY/N,oBAAxB;AACL8E;AADK,KAEFvH,MAFE,EAAP;AAID,C;;;;;;;;;;;;;;;;;QC7Dei5C,Q,GAAAA,Q;QAIAC,Y,GAAAA,Y;QAIAC,a,GAAAA,a;QAIAC,e,GAAAA,e;;AApChB;;IAAY5oC,W;;AAGZ;;;;;;AAJA;AAMA,SAAS6oC,iBAAT,CAA4B3xC,IAA5B,EAAkClX,EAAlC,EAAsCsW,UAAU,EAAhD,EAAoDwW,OAAO,EAA3D,EAA+D;AAC7D,QAAM1c,SAAS;AACb8G,QADa;AAEbZ,wCACKA,OADL;AAEEtW;AAFF;;AAMF;AARe,GAAf,CASA,IAAI,CAAC,iBAAQ8sB,IAAR,CAAL,EAAoB;AAClB1c,WAAO0c,IAAP,GAAcA,IAAd;AACD;AACD,MAAIxW,QAAQiB,KAAZ,EAAmB;AACjBnH,WAAOmH,KAAP,GAAe,IAAf;AACD;AACD,SAAOnH,MAAP;AACD;;AApBD;AAsBO,SAASq4C,QAAT,CAAmBzoD,EAAnB,EAAuBwP,MAAvB,EAA+B;AACpC,SAAOq5C,kBAAkB7oC,YAAY5M,SAA9B,EAAyCpT,EAAzC,EAA6CwP,MAA7C,CAAP;AACD;;AAEM,SAASk5C,YAAT,CAAuB1oD,EAAvB,EAA2BwP,MAA3B,EAAmC;AACxC,SAAOq5C,kBAAkB7oC,YAAY3M,aAA9B,EAA6CrT,EAA7C,EAAiDwP,MAAjD,CAAP;AACD;;AAEM,SAASm5C,aAAT,CAAwB3oD,EAAxB,EAA4BwP,MAA5B,EAAoC;AACzC,SAAOq5C,kBAAkB7oC,YAAYzM,eAA9B,EAA+CvT,EAA/C,EAAmDwP,MAAnD,CAAP;AACD;;AAEM,SAASo5C,eAAT,CAA0B5oD,EAA1B,EAA8BwP,MAA9B,EAAsC;AAC3C,SAAOq5C,kBAAkB7oC,YAAYxM,iBAA9B,EAAiDxT,EAAjD,EAAqDwP,MAArD,CAAP;AACD,C;;;;;;;;;;;;QC5Be01C,iB,GAAAA,iB;;AAVhB;;IAAYllC,W;;;;AAEZ;;;;;;;;AAQO,SAASklC,iBAAT,CAA4BD,OAA5B,EAAqC;AAC1C,SAAO;AACL/tC,UAAM8I,YAAYvM,mBADb;AAEL6C,aAAS2uC;AAFJ,GAAP;AAID,C,CAhBD,iB;;;;;;;;;;;;kBCMwBH,mB;AANxB;;;;;;AAMe,SAASA,mBAAT,CAA8B5sB,SAA9B,EAAyC;AACtD,QAAM,EAAEG,MAAF,KAAaH,SAAnB;AACA,QAAM4wB,mBAAmBzwB,OAAO9V,IAAhC;;AAEA;;;;;AAKA,iBAAe8iC,cAAf,CAA+Bj1C,MAA/B,EAAuC;AACrC;AACA,QAAIA,OAAOkG,OAAP,CAAegvC,MAAnB,EAA2B;AACzB,YAAMwD,iBAAiB50B,QAAjB,CAA0B9jB,OAAOkG,OAAP,CAAegvC,MAAzC,CAAN;AACA,YAAM5H,UAAU,MAAMoL,iBAAiB7K,UAAjB,EAAtB;;AAEAP,cAAQrtC,GAAR,CAAY0tC,UAAUA,OAAO7pB,QAAP,CAAgB9jB,OAAOkG,OAAP,CAAegvC,MAA/B,CAAtB;AACD;AACF;;AAED;;;;;AAKA,iBAAeyD,gBAAf,CAAiC34C,MAAjC,EAAyC;AACvC;AACA,QAAIA,OAAOkG,OAAP,CAAegvC,MAAnB,EAA2B;AACzB,YAAMwD,iBAAiB10B,UAAjB,CAA4BhkB,OAAOkG,OAAP,CAAegvC,MAA3C,CAAN;AACA,YAAM5H,UAAU,MAAMoL,iBAAiB7K,UAAjB,EAAtB;;AAEAP,cAAQrtC,GAAR,CAAY0tC,UAAUA,OAAO3pB,UAAP,CAAkBhkB,OAAOkG,OAAP,CAAegvC,MAAjC,CAAtB;AACD;AACF;;AAED,SAAO;AACL;AACAD,kBAFK;AAGL0D;AAHK,GAAP;AAKD,C;;;;;;;;;;;;kBC7BuBhE,a;;AAfxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;AASe,SAASA,aAAT,CAAwB7sB,SAAxB,EAAmC;AAChD,QAAM,EAAEG,MAAF,EAAUviB,OAAV,EAAmBiV,SAAnB,KAAiCmN,SAAvC;;AAEA;AACA;AACA,QAAM8wB,gBAAgB,CAAC54C,MAAD,EAAS6G,KAAT,KAAmB;AACvC;AACA;AACA;AACA;AACA,UAAMgyC,YAAY,sCAAuBnzC,OAAvB,EAAgC1F,MAAhC,CAAlB;AACA0F,YAAQqjB,QAAR,CAAiB/oB,MAAjB;AACA;AACA,QAAI6G,KAAJ,EAAW;AACT8T,gBAAU9T,MAAMC,IAAhB,EAAsBD,MAAMlH,IAA5B;AACD;AACD;AACA,QAAIk5C,SAAJ,EAAe;AACbl+B,gBAAUk+B,UAAU/xC,IAApB,EAA0B+xC,UAAUl5C,IAApC;AACD;AACF,GAfD;AAgBA;AACA;AACA;AACA,yBAAkBsoB,OAAOzjB,OAAzB,EAAkCo0C,aAAlC;AACA,8BAAwB3wB,OAAOnjB,KAA/B,EAAsC8zC,aAAtC;AACA,8BAAwB3wB,OAAOljB,KAA/B,EAAsC6zC,aAAtC;AACA,gCAA0B3wB,OAAOvW,cAAjC,EAAiDknC,aAAjD;AACD,C,CA5CD,oB;;;;;;;;;;;;kBCkBwBE,iB;;AAjBxB;;AACA;;IAAYrzC,U;;;;AAEZ;;;;;;;;;;;;;;AAJA;AAkBe,SAASqzC,iBAAT,CAA4BthD,OAA5B,EAAqCunB,OAArC,EAA8C;AAC3D;AACA,QAAMg6B,SAAS,MAAM;AACnB;AACA;AACAvhD,YAAQwhD,YAAR,GAAuB3F,IAAvB,CAA4B7uC,WAAW;AACrC,YAAMy0C,uBAAuBzrC,uBAAcsqC,cAAd,CAA6BtzC,OAA7B,CAA7B;AACA,YAAM00C,sBAAsB;AAC1BpyC,cAAMrB,WAAW2e,eADS;AAE1BzkB,cAAM;AAFoB,OAA5B;AAIAof,cAAQk6B,oBAAR,EAA8BC,mBAA9B;AACD,KAPD;AAQD,GAXD;;AAaA1hD,UAAQ+iB,EAAR,CAAW,QAAX,EAAqBw+B,MAArB;;AAEA;AACA,QAAMr+B,cAAc,MAAM;AACxBljB,YAAQgjB,GAAR,CAAY,QAAZ,EAAsBu+B,MAAtB;AACD,GAFD;;AAIA,SAAOr+B,WAAP;AACD,C;;;;;;;;;;;;kBC7BuBy+B,uB;;AAXxB;;AACA;;;;;;AAEA;;;;;;;;AAJA;AAYe,SAASA,uBAAT,CAAkC3hD,OAAlC,EAA2CunB,OAA3C,EAAoD;AACjE;AACA,QAAMg5B,aAAanoD,MAAM;AACvB,UAAMkV,QAAQtN,QAAQ2xB,GAAR,CAAYv5B,EAAZ,CAAd;AACA,UAAMX,QAAQ6V,MAAMc,QAAN,EAAd;;AAEA;AACA;AACA;AACA3W,UAAM0nD,WAAN,GAAoB1nD,MAAMgpC,KAA1B;AACAhpC,UAAMgpC,KAAN,GAAc,CAAChpC,MAAMipC,OAArB;;AAEA,WAAOjpC,MAAMipC,OAAb;AACA,WAAOjpC,MAAMW,EAAb;;AAEA;AACA,yBAAiBkV,KAAjB,EAAwBia,OAAxB;;AAEA;AACA,UAAMq6B,mBAAmB3rC,sBAAasqC,UAAb,CAAwBnoD,EAAxB,EAA4BX,KAA5B,CAAzB;AACA8vB,YAAQq6B,gBAAR;AACD,GAnBD;;AAqBA;AACA,QAAMpB,eAAepoD,MAAM;AACzB;AACA,UAAMypD,qBAAqB5rC,sBAAauqC,YAAb,CAA0BpoD,EAA1B,CAA3B;AACAmvB,YAAQs6B,kBAAR;AACD,GAJD;;AAMA;AACA7hD,UAAQ+iB,EAAR,CAAW,KAAX,EAAkBw9B,UAAlB;AACAvgD,UAAQ+iB,EAAR,CAAW,QAAX,EAAqBy9B,YAArB;;AAEA;AACA,QAAMt9B,cAAc,MAAM;AACxBljB,YAAQgjB,GAAR,CAAY,KAAZ,EAAmBu9B,UAAnB;AACAvgD,YAAQgjB,GAAR,CAAY,QAAZ,EAAsBw9B,YAAtB;AACD,GAHD;;AAKA,SAAOt9B,WAAP;AACD,C;;;;;;;;;;;;kBC1CuB4+B,gB;;AAVxB;;AACA;;IAAY7zC,U;;;;AAEZ;;;;;;;AAJA;AAWe,SAAS6zC,gBAAT,CAA2Bx0C,KAA3B,EAAkCia,OAAlC,EAA2C;AACxD;AACA;AACA;AACA,QAAMk5B,mBAAmBsB,aAAa;AACpC,UAAMC,yBAAyB/rC,sBAAawqC,gBAAb,CAA8B,CAACsB,UAAU10C,OAAX,CAA9B,EAAmD;AAChFG,eAASu0C,UAAUv0C,OAD6D;AAEhF+B,eAASwyC,UAAUxyC;AAF6D,KAAnD,CAA/B;AAIA,UAAM0yC,wBAAwB;AAC5B3yC,YAAMrB,WAAWvD,kBADW;AAE5BvC,YAAM;AACJgH,kBAAU,CAAC4yC,UAAU10C,OAAX,CADN;AAEJA,iBAAS00C,UAAU10C,OAFf;AAGJkC,iBAASwyC,UAAUxyC,OAHf;AAIJnX,YAAI2pD,UAAUv0C;AAJV;AAOR;AAT8B,KAA9B,CAUA+Z,QAAQy6B,sBAAR,EAAgCC,qBAAhC;AACD,GAhBD;;AAkBA;AACA,QAAMvB,qBAAqBqB,aAAa;AACtC,UAAMG,2BAA2BjsC,sBAAayqC,kBAAb,CAAgC,CAACqB,UAAU10C,OAAX,CAAhC,EAAqD;AACpFG,eAASu0C,UAAUv0C,OADiE;AAEpF+B,eAASwyC,UAAUxyC;AAFiE,KAArD,CAAjC;AAIA,UAAM4yC,0BAA0B;AAC9B7yC,YAAMrB,WAAWtD,oBADa;AAE9BxC,YAAM;AACJgH,kBAAU,CAAC4yC,UAAU10C,OAAX,CADN;AAEJA,iBAAS00C,UAAU10C,OAFf;AAGJkC,iBAASwyC,UAAUxyC,OAHf;AAIJnX,YAAI2pD,UAAUv0C;AAJV;AAOR;AATgC,KAAhC,CAUA+Z,QAAQ26B,wBAAR,EAAkCC,uBAAlC;AACD,GAhBD;;AAkBA,QAAMj/B,cAAc,MAAM;AACxB5V,UAAM0V,GAAN,CAAU,OAAV,EAAmBE,WAAnB;AACA5V,UAAM0V,GAAN,CAAU,OAAV,EAAmBy9B,gBAAnB;AACAnzC,UAAM0V,GAAN,CAAU,SAAV,EAAqB09B,kBAArB;AACD,GAJD;;AAMA;AACA;AACA;AACApzC,QAAMyV,EAAN,CAAS,OAAT,EAAkBG,WAAlB;AACA5V,QAAMyV,EAAN,CAAS,OAAT,EAAkB09B,gBAAlB;AACAnzC,QAAMyV,EAAN,CAAS,SAAT,EAAoB29B,kBAApB;;AAEA,SAAOx9B,WAAP;AACD,C;;;;;;;;;;;;kBCtDuBk/B,yB;;AAXxB;;AACA;;;;;;AAEA;;;;;;;;AAJA;AAYe,SAASA,yBAAT,CAAoCpiD,OAApC,EAA6CunB,OAA7C,EAAsD;AACnE;AACA,QAAMiT,eAAepiC,MAAM;AACzB,UAAM+U,UAAUnN,QAAQ2xB,GAAR,CAAYv5B,EAAZ,CAAhB;AACA,UAAMX,QAAQ0V,QAAQiB,QAAR,EAAd;AACA,WAAO3W,MAAMW,EAAb;;AAEA;AACA,2BAAmB+U,OAAnB,EAA4Boa,OAA5B;;AAEA;AACA,UAAM86B,qBAAqBnsC,wBAAeskB,YAAf,CAA4BpiC,EAA5B,EAAgCX,KAAhC,CAA3B;AACA8vB,YAAQ86B,kBAAR;AACD,GAXD;;AAaA;AACA,QAAM5nB,iBAAiBriC,MAAM;AAC3B;AACA,UAAMkqD,uBAAuBpsC,wBAAeukB,cAAf,CAA8BriC,EAA9B,CAA7B;AACAmvB,YAAQ+6B,oBAAR;AACD,GAJD;;AAMAtiD,UAAQ+iB,EAAR,CAAW,aAAX,EAA0ByX,YAA1B;AACAx6B,UAAQ+iB,EAAR,CAAW,iBAAX,EAA8B0X,cAA9B;AACA,QAAMvX,cAAc,MAAM;AACxBljB,YAAQgjB,GAAR,CAAY,aAAZ,EAA2BwX,YAA3B;AACAx6B,YAAQgjB,GAAR,CAAY,iBAAZ,EAA+ByX,cAA/B;AACD,GAHD;AAIA,SAAOvX,WAAP;AACD,C;;;;;;;;;;;;kBC9BuBq/B,kB;;AAVxB;;AAEA;;;;;;;;AAQe,SAASA,kBAAT,CAA6Bp1C,OAA7B,EAAsCoa,OAAtC,EAA+C;AAC5D;AACA,QAAMi7B,WAAW,CAAC,EAAEtU,KAAF,EAAS7gC,OAAT,EAAD,KAAwB;AACvC;AACA,UAAMo1C,iBAAiBvsC,wBAAewkB,eAAf,CAA+BvtB,QAAQ/U,EAAvC,EAA2C;AAChE81C,WADgE;AAEhE7gC;AAFgE,KAA3C,CAAvB;AAIAka,YAAQk7B,cAAR;AACD,GAPD;;AASA,QAAMC,aAAa,CAAC,EAAExU,KAAF,EAAS7gC,OAAT,EAAkB2yB,aAAlB,EAAD,KAAuC;AACxD;;;;;;AAMAzY,YACErR,wBAAeykB,iBAAf,CAAiCxtB,QAAQ/U,EAAzC,EAA6C;AAC3C81C,WAD2C;AAE3C7gC,aAF2C;AAG3C2yB;AAH2C,KAA7C,CADF;AAOD,GAdD;;AAgBA,QAAM2iB,gBAAgB,CAAC,EAAErD,UAAF,EAAcjyC,OAAd,EAAD,KAA6B;AACjD;AACA,UAAMu1C,sBAAsB1sC,wBAAe0kB,oBAAf,CAAoCztB,QAAQ/U,EAA5C,EAAgD;AAC1EknD,gBAD0E;AAE1EjyC;AAF0E,KAAhD,CAA5B;AAIAka,YAAQq7B,mBAAR;AACD,GAPD;;AASA,QAAMC,2BAA2B7V,OAAO;AACtC;AACA,UAAM8V,iCAAiC5sC,wBAAe2kB,+BAAf,CAA+C1tB,QAAQ/U,EAAvD,EAA2D;AAChG2qD,0BAAoB/V,IAAI+V;AADwE,KAA3D,CAAvC;AAGAx7B,YAAQu7B,8BAAR;AACD,GAND;;AAQA,QAAME,wBAAwBhW,OAAO;AACnC;AACA,UAAMiW,8BAA8B/sC,wBAAe6kB,4BAAf,CAA4C5tB,QAAQ/U,EAApD,EAAwD40C,GAAxD,CAApC;AACAzlB,YAAQ07B,2BAAR;AACD,GAJD;;AAMA,QAAMC,0BAA0BlW,OAAO;AACrC;AACA,UAAMmW,gCAAgCjtC,wBAAe4kB,8BAAf,CAA8C3tB,QAAQ/U,EAAtD,EAA0D40C,GAA1D,CAAtC;AACAzlB,YAAQ47B,6BAAR;AACD,GAJD;;AAMA,QAAMtgB,8BAA8BmK,OAAO;AACzC;AACA,UAAMoW,oCAAoCltC,wBAAe8kB,kCAAf,CAAkD7tB,QAAQ/U,EAA1D,EAA8D40C,GAA9D,CAA1C;AACAzlB,YAAQ67B,iCAAR;AACD,GAJD;;AAMA;AACA,QAAMC,iBAAiBC,aAAa;AAClC/7B,YAAQrR,wBAAe+kB,iBAAf,CAAiC9tB,QAAQ/U,EAAzC,EAA6C,EAAEuX,OAAO,CAAC2zC,SAAV,EAA7C,CAAR;AACD,GAFD;;AAIAn2C,UAAQ4V,EAAR,CAAW,WAAX,EAAwBy/B,QAAxB;AACAr1C,UAAQ4V,EAAR,CAAW,aAAX,EAA0B2/B,UAA1B;AACAv1C,UAAQ4V,EAAR,CAAW,gBAAX,EAA6B4/B,aAA7B;AACAx1C,UAAQ4V,EAAR,CAAW,+BAAX,EAA4C8/B,wBAA5C;AACA11C,UAAQ4V,EAAR,CAAW,8BAAX,EAA2CmgC,uBAA3C;AACA/1C,UAAQ4V,EAAR,CAAW,4BAAX,EAAyCigC,qBAAzC;AACA71C,UAAQ4V,EAAR,CAAW,kCAAX,EAA+C8f,2BAA/C;AACA11B,UAAQ4V,EAAR,CAAW,gBAAX,EAA6BsgC,cAA7B;;AAEA,QAAMngC,cAAc,MAAM;AACxB/V,YAAQ6V,GAAR,CAAY,WAAZ,EAAyBw/B,QAAzB;AACAr1C,YAAQ6V,GAAR,CAAY,aAAZ,EAA2B0/B,UAA3B;AACAv1C,YAAQ6V,GAAR,CAAY,gBAAZ,EAA8B2/B,aAA9B;AACAx1C,YAAQ6V,GAAR,CAAY,+BAAZ,EAA6C6/B,wBAA7C;AACA11C,YAAQ6V,GAAR,CAAY,8BAAZ,EAA4CkgC,uBAA5C;AACA/1C,YAAQ6V,GAAR,CAAY,4BAAZ,EAA0CggC,qBAA1C;AACA71C,YAAQ6V,GAAR,CAAY,kCAAZ,EAAgD6f,2BAAhD;AACA11B,YAAQ6V,GAAR,CAAY,gBAAZ,EAA8BqgC,cAA9B;AACD,GATD;AAUA,SAAOngC,WAAP;AACD,C,CAlGD,iB;;;;;;;;;;;;kBCWwBqgC,uB;;AAVxB;;AACA;;;;;;AAEA;;;;;;;AAJA;AAWe,SAASA,uBAAT,CAAkCvjD,OAAlC,EAA2CunB,OAA3C,EAAoD;AACjE,QAAMs5B,WAAWzoD,MAAM;AACrB,UAAMmV,QAAQvN,QAAQ2xB,GAAR,CAAYv5B,EAAZ,CAAd;;AAEA;AACA,yBAAiBmV,KAAjB,EAAwBga,OAAxB;;AAEA;AACA,UAAMi8B,iBAAiBrtC,sBAAa0qC,QAAb,CAAsBzoD,EAAtB,EAA0B;AAC/C81C,aAAO3gC,MAAMa,QAAN,GAAiBmB,OADuB;AAE/CnC,cAAQG,MAAMb,SAAN,GAAkBjE,GAAlB,CAAsB6E,SAASA,MAAMlV,EAArC;AAFuC,KAA1B,CAAvB;AAIAmvB,YAAQi8B,cAAR;AACD,GAZD;;AAcA,QAAM1C,eAAe1oD,MAAM;AACzB;AACA,UAAMqrD,qBAAqBttC,sBAAa2qC,YAAb,CAA0B1oD,EAA1B,CAA3B;AACAmvB,YAAQk8B,kBAAR;AACD,GAJD;;AAMAzjD,UAAQ+iB,EAAR,CAAW,WAAX,EAAwB89B,QAAxB;AACA7gD,UAAQ+iB,EAAR,CAAW,eAAX,EAA4B+9B,YAA5B;;AAEA,QAAM59B,cAAc,MAAM;AACxBljB,YAAQgjB,GAAR,CAAY,WAAZ,EAAyB69B,QAAzB;AACA7gD,YAAQgjB,GAAR,CAAY,eAAZ,EAA6B89B,YAA7B;AACD,GAHD;AAIA,SAAO59B,WAAP;AACD,C;;;;;;;;;;;;kBC7BuBwgC,gB;;AAVxB;;AAEA;;;;;;;;AAQe,SAASA,gBAAT,CAA2Bn2C,KAA3B,EAAkCga,OAAlC,EAA2C;AACxD;AACA,QAAMi7B,WAAW,CAAC,EAAEh1C,OAAF,EAAWH,OAAX,EAAD,KAA0B;AACzC;AACA,UAAMs2C,sBAAsBxtC,sBAAa4qC,aAAb,CAA2BvzC,OAA3B,EAAoC,EAAEH,OAAF,EAApC,CAA5B;AACAka,YAAQo8B,mBAAR;AACD,GAJD;;AAMA,QAAMjB,aAAa,CAAC,EAAEl1C,OAAF,EAAWH,OAAX,EAAD,KAA0B;AAC3C;AACA,UAAMu2C,wBAAwBztC,sBAAa6qC,eAAb,CAA6BxzC,OAA7B,EAAsC,EAAEH,OAAF,EAAtC,CAA9B;AACAka,YAAQq8B,qBAAR;AACD,GAJD;;AAMA,QAAM1gC,cAAc,MAAM;AACxB3V,UAAMyV,GAAN,CAAU,eAAV,EAA2BE,WAA3B;AACA3V,UAAMyV,GAAN,CAAU,WAAV,EAAuBw/B,QAAvB;AACAj1C,UAAMyV,GAAN,CAAU,aAAV,EAAyB0/B,UAAzB;AACD,GAJD;;AAMA;AACA;AACA;AACAn1C,QAAMwV,EAAN,CAAS,eAAT,EAA0BG,WAA1B;AACA3V,QAAMwV,EAAN,CAAS,WAAT,EAAsBy/B,QAAtB;AACAj1C,QAAMwV,EAAN,CAAS,aAAT,EAAwB2/B,UAAxB;;AAEA,SAAOx/B,WAAP;AACD,C,CAvCD,iB;;;;;;;;;;;;kBCIwB2gC,sB;;AAJxB;;AACA;;AACA;;IAAYC,iB;;;;AAEG,SAASD,sBAAT,CAAiC31C,OAAjC,EAA0C1F,MAA1C,EAAkD;AAC/D,UAAQA,OAAO8G,IAAf;AACE,SAAKw0C,kBAAkB34C,mCAAvB;AAA4D;AAC1D,cAAMzT,OAAO,yCAAyBwW,QAAQE,QAAR,EAAzB,EAA6C5F,OAAOkG,OAAP,CAAetW,EAA5D,CAAb;AACA,YAAIV,IAAJ,EAAU;AACR,iBAAO;AACL4X,kBAAMxP,mCADD;AAELqI,kBAAM,EAAEjQ,QAAQR,KAAKU,EAAf,EAAmBsX,UAAU,EAAEjY,OAAOC,KAAKqsD,oBAAd,EAA7B;AAFD,WAAP;AAID;AACF;AATH;AAWD,C;;;;;;;;;;;;kBCRuB3G,gB;;AARxB;;AAEA;;;;;;AAMe,SAASA,gBAAT,CAA2BlvC,OAA3B,EAAoC;AACjD,QAAM81C,gBAAgB91C,QAAQoiB,SAAR,CAAkBitB,mBAAxC;AACA;;;;AAIA,SAAOlJ,QAAQ7rC,UAAU;AACvB;;;;;;;;AAQA;AACA,QAAIA,OAAO8G,IAAP,KAAgByX,0BAApB,EAAmC;AACjC;AACAi9B,oBAAcvG,cAAd,CAA6Bj1C,MAA7B;AACD;;AAED,QAAIA,OAAO8G,IAAP,KAAgB2X,4BAApB,EAAqC;AACnC;AACA+8B,oBAAc7C,gBAAd,CAA+B34C,MAA/B;AACD;;AAED,WAAO6rC,KAAK7rC,MAAL,CAAP;AACD,GArBD;AAsBD,C;;;;;;ACpCD,mBAAO,CAAC,EAAiC;AACzC,mBAAO,CAAC,EAAgC;AACxC,mBAAO,CAAC,GAA6B;AACrC,mBAAO,CAAC,GAAoB;AAC5B,mBAAO,CAAC,GAA4B;AACpC,mBAAO,CAAC,GAAuB;AAC/B,mBAAO,CAAC,GAAyB;AACjC,iBAAiB,mBAAO,CAAC,EAAkB;;;;;;;;ACP9B;AACb,aAAa,mBAAO,CAAC,GAAsB;AAC3C,eAAe,mBAAO,CAAC,GAAwB;AAC/C;;AAEA;AACA,iBAAiB,mBAAO,CAAC,GAAe;AACxC,yBAAyB,mEAAmE;AAC5F,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;;;;;;AClBD;AACA,cAAc,mBAAO,CAAC,EAAW;;AAEjC,uCAAuC,SAAS,mBAAO,CAAC,GAAuB,UAAU;;;;;;;ACHzF;AACA,mBAAO,CAAC,GAAsB;;;;;;;ACD9B;AACA,mBAAO,CAAC,GAAwB;;;;;;;ACDhC,kBAAkB,YAAY,mBAAO,CAAC,GAAgC,sB;;;;;;ACAtE,mBAAO,CAAC,GAA+B;AACvC,iBAAiB,mBAAO,CAAC,EAAqB;;;;;;;ACD9C;AACA,SAAS,mBAAO,CAAC,EAAc;AAC/B,WAAW,mBAAO,CAAC,GAAgB;AACnC,qBAAqB,mBAAO,CAAC,GAAe;AAC5C,UAAU,mBAAO,CAAC,EAAQ;AAC1B,cAAc,mBAAO,CAAC,EAAW;AACjC,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C,eAAe,mBAAO,CAAC,EAAc;AACrC,eAAe,mBAAO,CAAC,EAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,+BAA+B,WAAW;;;;;;;;;;;;;;AChC1C;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe;AACby7C,wCADa;AAEbC,gEAFa;AAGbC,8DAHa;AAIbC,kDAJa;AAKbC,wDALa;AAMbC;AANa,C;;;;;;;;;;;;kBCESL,c;;AATxB;;AAEA;;;;;;;AAOe,SAASA,cAAT,CAAyB1gC,QAAzB,EAAmC;AAChD,QAAM,EAAEwe,UAAF,EAAcK,SAAd,EAAyB7pC,MAAzB,EAAiCspC,QAAjC,EAA2CpC,OAA3C,EAAoD4C,aAApD,EAAmE95B,GAAnE,KAA2E,IAAjF;;AAEA;;;;;;;;;AASAw5B,aAAWkiB,cAAX,GAA4B50C,SAAS;AACnC9G,QAAIgR,KAAJ,CACG,uCAAsChhB,OAAO2/B,cAAP,KAA0B7hB,gBAAKC,WAAL,CAAiBC,IAAK,KADzF,EAEElH,MAAM0rC,SAFR;;AAKA;AACA,QAAI1rC,MAAM0rC,SAAN,KAAoB,IAAxB,EAA8B;AAC5B1Y,oBAAc7xB,IAAd,CAAmBnB,MAAM0rC,SAAzB;AACD;;AAED;AACA,UAAMhY,cAAclB,SAASmB,aAAT,EAApB;AACAvD,YAAQM,IAAR,CAAa,uBAAb,EAAsC;AACpCkD,6BAAuBF,WADa;AAEpCV,mBAFoC;AAGpCa,yBAAmBd,UAAUc,iBAHO;AAIpCC,+BAAyB5qC,MAJW;AAKpC6qC,kCAA4BhB,UAAUiB;AALF,KAAtC;;AAQA,QAAI9qC,OAAO2/B,cAAP,KAA0B7hB,gBAAKC,WAAL,CAAiBC,IAA/C,EAAqD;AACnD;AACA;AACA,UAAIlH,MAAM0rC,SAAV,EAAqB;AACnB;AACAx3B,iBAASlU,KAAT;AACD;AACF,KAPD,MAOO,IAAI9W,OAAO2/B,cAAP,KAA0B7hB,gBAAKC,WAAL,CAAiBE,IAA/C,EAAqD;AAC1D;AACA;AACA,YAAM+tC,WAAWhsD,OAAOisD,oBAAP,CAA4B;AAC3C5pC,aAAKwnB,UAAUiB,gBAAV,CAA2BzoB,GADW;AAE3C6pC,sBAAcp1C,MAAM0rC,SAFuB;AAG3C/D,cAAMjU;AAHqC,OAA5B,CAAjB;;AAMA,UAAIwhB,QAAJ,EAAc;AACZh8C,YAAIgR,KAAJ,CAAU,8DAAV;AACAhhB,eAAO2/B,cAAP,GAAwB7hB,gBAAKC,WAAL,CAAiBC,IAAzC;AACAkpB,gBAAQM,IAAR,CAAa,oBAAb;AACD,OAJD,MAIO;AACLx3B,YAAIgR,KAAJ,CAAU,4CAAV;AACD;AACF;AACF,GA7CD;;AA+CA,SAAO,IAAP;AACD,C;;;;;;;;;;;;kBC9DuB2qC,0B;AAPxB;;;;;;;AAOe,SAASA,0BAAT,CAAqC3gC,QAArC,EAA+C;AAC5D,QAAM,EAAEwe,UAAF,EAAcx5B,GAAd,KAAsB,IAA5B;;AAEAw5B,aAAWmiB,0BAAX,GAAwC,UAAU70C,KAAV,EAAiB;AACvD9G,QAAIgR,KAAJ,CAAW,iDAAgDwoB,WAAWghB,kBAAmB,EAAzF;AACAx/B,aAASlU,KAAT;AACD,GAHD;;AAKA,SAAO,IAAP;AACD,C;;;;;;;;;;;;kBCPuB80C,yB;;AATxB;;AAEA;;;;;;;AAOe,SAASA,yBAAT,CAAoC5gC,QAApC,EAA8C;AAC3D,QAAM,EAAEwe,UAAF,EAAcF,QAAd,EAAwBt5B,GAAxB,KAAgC,IAAtC;;AAEA;;;;;AAKAw5B,aAAWoiB,yBAAX,GAAuC90C,SAAS;AAC9C,UAAMq1C,iBAAiBr1C,MAAM4Q,MAAN,CAAaijB,iBAApC;AACA36B,QAAIgR,KAAJ,CAAW,qCAAoCmrC,cAAe,GAA9D;;AAEA,QAAIA,mBAAmBruC,gBAAKI,mBAAL,CAAyBC,SAAhD,EAA2D;AACzDmrB,eAASoV,KAAT;AACA;AACD,KAHD,MAGO,IAAIyN,mBAAmBruC,gBAAKI,mBAAL,CAAyBE,QAAhD,EAA0D;AAC/DpO,UAAIgR,KAAJ,CAAW,aAAYsoB,SAASmB,aAAT,EAAyB,+BAAhD;AACAnB,eAASf,IAAT;AACD;AACD;AACAvd,aAASlU,KAAT;AACD,GAbD;;AAeA,SAAO,IAAP;AACD,C;;;;;;;;;;;;kBC1BuB+0C,mB;AAPxB;;;;;;;AAOe,SAASA,mBAAT,CAA8B7gC,QAA9B,EAAwC;AACrD,QAAM,EAAEwe,UAAF,EAAcx5B,GAAd,KAAsB,IAA5B;;AAEAw5B,aAAWqiB,mBAAX,GAAiC,UAAU/0C,KAAV,EAAiB;AAChD9G,QAAIgR,KAAJ,CAAU,wCAAV;AACAgK,aAASlU,KAAT;AACD,GAHD;;AAKA,SAAO,IAAP;AACD,C;;;;;;;;;;;;kBCTuBg1C,sB;AAPxB;;;;;;;AAOe,SAASA,sBAAT,CAAiC9gC,QAAjC,EAA2C;AACxD,QAAM,EAAEwe,UAAF,EAAcx5B,GAAd,KAAsB,IAA5B;;AAEAw5B,aAAWsiB,sBAAX,GAAoC,UAAUh1C,KAAV,EAAiB;AACnD9G,QAAIgR,KAAJ,CAAW,6CAA4CwoB,WAAW4iB,cAAe,EAAjF;AACAphC,aAASlU,KAAT;AACD,GAHD;;AAKA,SAAO,IAAP;AACD,C;;;;;;;;;;;;kBCTuBi1C,O;AAPxB;;;;;;;AAOe,SAASA,OAAT,CAAkB/gC,QAAlB,EAA4B;AACzC,QAAM,EAAEwe,UAAF,EAAcnoB,YAAd,EAA4BrR,GAA5B,KAAoC,IAA1C;;AAEAw5B,aAAWuiB,OAAX,GAAqBj1C,SAAS;AAC5B;;;;;;AAMA;AACA,UAAM,EAAE/B,OAAOs3C,WAAT,EAAsBC,OAAtB,KAAkCx1C,KAAxC;AACA9G,QAAIgR,KAAJ,CAAW,iBAAgBqrC,YAAYz2C,IAAK,UAASy2C,YAAYxsD,EAAG,GAApE;;AAEA;;;;;;;;;AASA,QAAI0sD,YAAJ;AACA,QAAID,QAAQh9C,MAAR,KAAmB,CAAvB,EAA0B;AACxBi9C,qBAAe,IAAIC,WAAJ,CAAgB,CAACH,WAAD,CAAhB,CAAf;AACAr8C,UAAIgR,KAAJ,CAAU,iDAAV;AACD,KAHD,MAGO;AACLurC,qBAAeD,QAAQ,CAAR,CAAf;AACAt8C,UAAIgR,KAAJ,CAAW,8CAA6CurC,aAAa1sD,EAAG,GAAxE;AACD;;AAED;AACA;AACA,UAAMkV,QAAQsM,aAAaorC,GAAb,CAAiBJ,WAAjB,EAA8BE,YAA9B,EAA4C,KAA5C,CAAd;;AAEAvhC,aAASjW,KAAT;AACD,GAlCD;;AAoCA,SAAO,IAAP;AACD,C;;;;;;;;;;;;;AC/CD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAM40B,UAAU;AACd+iB,4CADc;AAEd7jB,8BAFc;AAGd8jB,wBAHc;AAIdC,sCAJc;AAKdC,oCALc;AAMdC,4DANc;AAOdj3C,8BAPc;AAQdo7B,8BARc;AASdhI,oCATc;AAUd4I,sCAVc;AAWdd,8BAXc;AAYdgc,oDAZc;AAadC;AAbc,CAAhB;;kBAgBerjB,O;;;;;;;;;;;;;;;;;kBCxBS+iB,e;;;;AANxB;;;;;;AAMe,SAASA,eAAT,CAA0BlK,SAA1B,EAAqC;AAClD,QAAM,EAAEhZ,UAAF,EAAcK,SAAd,EAAyBhqC,EAAzB,EAA6BmQ,GAA7B,KAAqC,IAA3C;AACAA,MAAIkX,IAAJ,CAAS,uBAAT;;AAEA,SAAO,sBAAY,CAAC3W,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIq5B,UAAUojB,iBAAV,CAA4Bl2C,IAA5B,IAAoC8yB,UAAUojB,iBAAV,CAA4B5qC,GAApE,EAAyE;AACvEmnB,iBACGkjB,eADH,CACmBlK,SADnB,EAEGc,IAFH,CAEQ/yC,OAFR,EAGG28C,KAHH,CAGS18C,MAHT;AAID,KALD,MAKO;AACLR,UAAIkX,IAAJ,CAAS,+DAAT;AACA;AACA1W,aAAO,IAAIkY,KAAJ,CAAW,QAAO7oB,EAAG,gEAArB,CAAP;AACD;AACF,GAXM,CAAP;AAYD,C;;;;;;;;;;;;kBChBuBgpC,Q;AANxB;;;;;;AAMe,SAASA,QAAT,CAAmB9zB,KAAnB,EAA0B;AACvC,QAAM,EAAEy0B,UAAF,EAAcx5B,GAAd,KAAsB,IAA5B;AACAA,MAAIkX,IAAJ,CAAU,cAAanS,MAAMA,KAAN,CAAYa,IAAK,SAAxC;;AAEA,MAAIu3C,MAAJ;AACA,MAAI;AACFA,aAAS3jB,WAAWX,QAAX,CAAoB9zB,MAAMA,KAA1B,EAAiCA,MAAMgzB,SAAN,EAAjC,CAAT;AACD,GAFD,CAEE,OAAOiY,GAAP,EAAY;AACZ;AACAhwC,QAAIkX,IAAJ,CAAU,wBAAuB84B,IAAI9+C,OAAQ,EAA7C;AACD;AACD;AACA,SAAOisD,MAAP;AACD,C;;;;;;;;;;;;kBCfuBR,K;AAJxB;;;;AAIe,SAASA,KAAT,GAAkB;AAC/B,QAAM,EAAEnjB,UAAF,EAAc3pC,EAAd,EAAkBqnC,OAAlB,EAA2B6C,OAA3B,EAAoC/5B,GAApC,KAA4C,IAAlD;AACAA,MAAIkX,IAAJ,CAAS,eAAT;;AAEA,MAAI6iB,OAAJ,EAAa;AACX;AACAqjB,iBAAarjB,OAAb;AACD;;AAEDP,aAAWmjB,KAAX;AACAzlB,UAAQM,IAAR,CAAa,aAAb,EAA4B3nC,EAA5B;AACD,C;;;;;;;;;;;;;;;;;kBCDuB+sD,Y;;AAdxB;;AAEA;;AACA;;;;AAEA;;;;;;;;;AASe,SAASA,YAAT,CAAuBriD,UAAU,EAAjC,EAAqC;AAClD,QAAM,EAAEi/B,UAAF,EAAcxpC,MAAd,EAAsBq1B,QAAtB,EAAgCrlB,GAAhC,KAAwC,IAA9C;AACAA,MAAIkX,IAAJ,CAAS,wBAAT;;AAEA;AACA;AACA,SAAO3c,QAAQ8iD,eAAf;;AAEA,SAAO,sBAAY,CAAC98C,OAAD,EAAUC,MAAV,KAAqB;AACtCg5B,eACGojB,YADH,CACgBriD,OADhB,EAEG+4C,IAFH,CAEQgK,UAAU;AACd,YAAMrtC,cAAc,EAApB;;AAEA;;;;AAIAA,kBAAYhI,IAAZ,CAAiB6c,+BAAjB;;AAEA,UAAI90B,OAAO2/B,cAAP,KAA0B7hB,gBAAKC,WAAL,CAAiBtU,IAA/C,EAAqD;AACnD;AACAwW,oBAAYhI,IAAZ,CAAiB0c,0BAAjB;AACD;AACD,UAAI30B,OAAO40B,cAAX,EAA2B;AACzB;AACA3U,oBAAYhI,IAAZ,CAAiB2c,wBAAjB;AACD;AACD,UAAIrqB,QAAQ8iD,eAAZ,EAA6B;AAC3B;AACAptC,oBAAYhI,IAAZ,CAAiB,oCAAqB1N,QAAQ8iD,eAA7B,CAAjB;AACD;AACD,UAAIptC,YAAY3Q,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B;AACAg+C,eAAOjrC,GAAP,GAAa,2BAAYpC,WAAZ,EAAyBqtC,OAAOjrC,GAAhC,EAAqC;AAChDtL,gBAAMu2C,OAAOv2C,IADmC;AAEhDme,oBAAUpX,gBAAKO,QAAL,CAAczY,KAFwB;AAGhDyvB,oBAAUA;AAHsC,SAArC,CAAb;AAKD;;AAEDrlB,UAAIkX,IAAJ,CAAS,iCAAT;AACA3W,cAAQ+8C,MAAR;AACD,KAlCH,EAmCGJ,KAnCH,CAmCS18C,MAnCT;AAoCD,GArCM,CAAP;AAsCD,C;;;;;;AC5DD,mBAAO,CAAC,GAAiC;AACzC,iBAAiB,mBAAO,CAAC,EAAqB;;;;;;;ACD9C;AACA,eAAe,mBAAO,CAAC,EAAc;AACrC,WAAW,mBAAO,CAAC,EAAS;;AAE5B,mBAAO,CAAC,GAAe;AACvB;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;kBCMuBq8C,W;;AAdxB;;AAEA;;AACA;;;;AAEA;;;;;;;;;AASe,SAASA,WAAT,CAAsBtiD,UAAU,EAAhC,EAAoC;AACjD,QAAM,EAAEi/B,UAAF,EAAcxpC,MAAd,EAAsBgQ,GAAtB,KAA8B,IAApC;AACAA,MAAIkX,IAAJ,CAAS,uBAAT;;AAEA;AACA;AACA,SAAO3c,QAAQ8iD,eAAf;;AAEA,SAAO,sBAAY,CAAC98C,OAAD,EAAUC,MAAV,KAAqB;AACtCg5B,eACGqjB,WADH,CACetiD,OADf,EAEG+4C,IAFH,CAEQlO,SAAS;AACb,YAAMn1B,cAAc,EAApB;AACA,UAAIjgB,OAAO2/B,cAAP,KAA0B7hB,gBAAKC,WAAL,CAAiBtU,IAA/C,EAAqD;AACnD;AACAwW,oBAAYhI,IAAZ,CAAiB0c,0BAAjB;AACD;AACD,UAAI30B,OAAO40B,cAAX,EAA2B;AACzB;AACA3U,oBAAYhI,IAAZ,CAAiB2c,wBAAjB;AACD;AACD,UAAIrqB,QAAQ8iD,eAAZ,EAA6B;AAC3B;AACAptC,oBAAYhI,IAAZ,CAAiB,oCAAqB1N,QAAQ8iD,eAA7B,CAAjB;AACD;AACD,UAAIptC,YAAY3Q,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B;AACA8lC,cAAM/yB,GAAN,GAAY,2BAAYpC,WAAZ,EAAyBm1B,MAAM/yB,GAA/B,EAAoC;AAC9CtL,gBAAMq+B,MAAMr+B,IADkC;AAE9Cme,oBAAUpX,gBAAKO,QAAL,CAAczY;AAFsB,SAApC,CAAZ;AAID;;AAEDoK,UAAIkX,IAAJ,CAAS,gCAAT;AACA3W,cAAQ6kC,KAAR;AACD,KA1BH,EA2BG8X,KA3BH,CA2BS18C,MA3BT;AA4BD,GA7BM,CAAP;AA8BD,C;;;;;;;;;;;;kBC1CuBs8C,uB;AAVxB;;;;;;;;;;AAUe,SAASA,uBAAT,CAAkCl3C,IAAlC,EAAwC;AACrD,QAAM,EAAEi0B,SAAF,KAAgB,IAAtB;;AAEA,QAAM0jB,eAAe1jB,UAAU2jB,eAAV,EAArB;AACA,SAAOD,aAAa3tD,IAAb,CACL6tD,eACEA,YAAYN,MAAZ,CAAmBp4C,KAAnB,IAA4B,IAA5B,IACA04C,YAAYvjB,QADZ,IAEAujB,YAAYvjB,QAAZ,CAAqBn1B,KAFrB,IAGA04C,YAAYvjB,QAAZ,CAAqBn1B,KAArB,CAA2Ba,IAA3B,KAAoCA,IAHpC,IAIA63C,YAAYC,gBANT,CAM0B;AAN1B,GAAP;AAQD,C;;;;;;;;;;;;kBCjBuB73C,Q;AALxB;;;;;AAKe,SAASA,QAAT,GAAqB;AAClC,QAAM,EAAEg0B,SAAF,EAAa7pC,MAAb,EAAqBH,EAArB,KAA4B,IAAlC;;AAEA,SAAO;AACLA,MADK;AAELG,YAAQA,MAFH;AAGL2tD,eAAW9jB,UAAUiB,gBAHhB;AAILshB,oBAAgBviB,UAAUuiB,cAJrB;AAKLt2C,iBAAa+zB,UAAU/zB,WALlB;AAMLQ,kBAAcuzB,UAAUvzB,YANnB;AAOLs3C,kBAAc/jB,UAAU+jB;AAPnB,GAAP;AASD,C;;;;;;;;;;;;;;;;;kBCXuB3c,Q;;;;AANxB;;;;;;AAMe,SAASA,QAAT,CAAmBn8B,OAAnB,EAA4B;AACzC,QAAM,EAAE00B,UAAF,EAAcK,SAAd,EAAyB75B,GAAzB,KAAiC,IAAvC;AACAA,MAAIkX,IAAJ,CAAU,iBAAgBpS,UAAU,YAAV,GAAyB,GAAI,EAAvD;AACA;AACA;;AAEA;AACA,MAAIA,OAAJ,EAAa;AACX,WAAO,sBAAY,CAACvE,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAMq9C,UAAUhkB,UAAUikB,UAAV,EAAhB;AACA;AACA,YAAMX,SAASU,QAAQjuD,IAAR,CAAautD,UAAUA,OAAOp4C,KAAP,CAAalV,EAAb,KAAoBiV,OAA3C,CAAf;AACA,UAAIq4C,MAAJ,EAAY;AACVA,eACGlc,QADH,GAEGqS,IAFH,CAEQ/yC,OAFR,EAGG28C,KAHH,CAGS18C,MAHT;AAID,OALD,MAKO;AACL,cAAMu9C,SAAU,oCAAmCj5C,OAAQ,EAA3D;AACA9E,YAAIkX,IAAJ,CAAS6mC,MAAT;AACAv9C,eAAO,IAAIkY,KAAJ,CAAUqlC,MAAV,CAAP;AACD;AACF,KAdM,CAAP;AAeD,GAhBD,MAgBO;AACL;AACA,WAAOvkB,WAAWyH,QAAX,EAAP;AACD;AACF,C;;;;;;;;;;;;kBC5BuBhI,W;AALxB;;;;;AAKe,SAASA,WAAT,CAAsBn0B,OAAtB,EAA+B;AAC5C,QAAM,EAAE00B,UAAF,EAAcK,SAAd,EAAyB75B,GAAzB,KAAiC,IAAvC;AACAA,MAAIkX,IAAJ,CAAU,kBAAiBpS,OAAQ,GAAnC;;AAEA,QAAMC,QAAQ80B,UAAU+jB,YAAV,CAAuBhuD,IAAvB,CAA4BmV,SAASA,MAAMlV,EAAN,KAAaiV,OAAlD,CAAd;AACA,MAAI,CAACC,KAAL,EAAY;AACV/E,QAAIkX,IAAJ,CAAU,oBAAmBpS,OAAQ,wBAArC;AACA;AACD,GAHD,MAGO,IAAI+0B,UAAUuiB,cAAV,KAA6B,SAAjC,EAA4C;AACjDp8C,QAAIkX,IAAJ,CAAS,sCAAT;AACA;AACD;;AAED;AACA,QAAMimC,SAAStjB,UACZikB,UADY,GAEZruD,MAFY,CAEL0tD,UAAUA,OAAOp4C,KAAP,KAAiB,IAFtB,EAGZnV,IAHY,CAGPutD,UAAUA,OAAOp4C,KAAP,CAAalV,EAAb,KAAoBiV,OAHvB,CAAf;AAIA00B,aAAWP,WAAX,CAAuBkkB,MAAvB;AACD,C;;;;;;;;;;;;;;;;;kBChBuBtb,Y;;;;AARxB;;;;;;;;AAQe,SAASA,YAAT,CAAuBoY,QAAvB,EAAiC1/C,OAAjC,EAA0C;AACvD,QAAM,EAAEs/B,SAAF,EAAa75B,GAAb,KAAqB,IAA3B;AACAA,MAAIkX,IAAJ,CAAU,mBAAkB3c,QAAQuK,OAAQ,aAAYm1C,SAASr0C,IAAK,SAAtE;;AAEA,SAAO,sBAAY,CAACrF,OAAD,EAAUC,MAAV,KAAqB;AACtC;AACA,UAAMw9C,oBAAoBnkB,UACvB2jB,eADuB,GAEvB5tD,IAFuB,CAElB6tD,eAAeA,YAAYN,MAAZ,CAAmBp4C,KAAnB,IAA4B04C,YAAYN,MAAZ,CAAmBp4C,KAAnB,CAAyBlV,EAAzB,KAAgC0K,QAAQuK,OAFjE,CAA1B;;AAIA,UAAMq4C,SAASa,oBAAoBA,kBAAkBb,MAAtC,GAA+CxkD,SAA9D;;AAEA,QAAIwkD,MAAJ,EAAY;AACVA,aACGtb,YADH,CACgBoY,QADhB,EAEG3G,IAFH,CAEQ/yC,OAFR,EAGG28C,KAHH,CAGS91C,SAAS;AACdpH,YAAIkX,IAAJ,CAAU,4BAA2B9P,MAAMlW,OAAQ,EAAnD;AACAsP,eAAO4G,KAAP;AACD,OANH;AAOD,KARD,MAQO;AACLpH,UAAIkX,IAAJ,CAAU,iDAAgD3c,QAAQuK,OAAQ,GAA1E;AACAtE,aAAO,IAAIkY,KAAJ,CAAW,oBAAmBne,QAAQuK,OAAQ,aAA9C,CAAP;AACD;AACF,GApBM,CAAP;AAqBD,C;;;;;;;;;;;;kBCrBuBi8B,Q;AAZxB;;;;;;;;;;;;AAYe,SAASA,QAAT,CAAmB,EAAEkd,IAAF,EAAQx9C,WAAW,GAAnB,EAAwBy9C,eAAe,EAAvC,EAAnB,EAAgE,EAAEC,QAAF,EAAYr5C,OAAZ,EAAhE,EAAuF;AACpG,QAAM,EAAE+0B,SAAF,EAAa75B,GAAb,KAAqB,IAA3B;AACAA,MAAIkX,IAAJ,CAAS,qBAAT,EAAgC+mC,IAAhC;;AAEA,MAAI,CAACpkB,UAAUikB,UAAf,EAA2B;AACzB99C,QAAIkX,IAAJ,CAAS,oEAAT;AACA,WAAO,KAAP;AACD;AACD,QAAM2mC,UAAUhkB,UAAUikB,UAAV,EAAhB;AACA;AACA,MAAIh5C,OAAJ,EAAa;AACX,UAAMq4C,SAASU,QAAQjuD,IAAR,CAAautD,UAAUA,OAAOp4C,KAAP,CAAalV,EAAb,KAAoBiV,OAA3C,CAAf;AACA,QAAI,CAACq4C,MAAL,EAAa;AACXn9C,UAAIkX,IAAJ,CAAU,8CAA6CpS,OAAQ,GAA/D;AACA,aAAO,KAAP;AACD;AACDs5C,eAAWjB,MAAX,EAAmBc,IAAnB,EAAyBx9C,QAAzB,EAAmCy9C,YAAnC,EAAiDC,QAAjD,EAA2Dn+C,GAA3D;AACA,WAAO,IAAP;AACD,GARD,MAQO;AACL,QAAIojB,MAAJ;AACA,SAAK,IAAI4wB,IAAI,CAAb,EAAgBA,IAAI6J,QAAQv+C,MAA5B,EAAoC00C,GAApC,EAAyC;AACvC5wB,eAASg7B,WAAWP,QAAQ7J,CAAR,CAAX,EAAuBiK,IAAvB,EAA6Bx9C,QAA7B,EAAuCy9C,YAAvC,EAAqDC,QAArD,EAA+Dn+C,GAA/D,CAAT;AACA,UAAIojB,MAAJ,EAAY;AACV,eAAO,IAAP;AACD;AACF;;AAEDpjB,QAAIkX,IAAJ,CAAS,4DAAT;AACA,WAAO,KAAP;AACD;AACF;;AAED;;;;;;;;;;AAUA,SAASknC,UAAT,CAAqBjB,MAArB,EAA6Bc,IAA7B,EAAmCx9C,QAAnC,EAA6Cy9C,YAA7C,EAA2DC,QAA3D,EAAqEn+C,GAArE,EAA0E;AACxE;;;;;;AAMA,WAASq+C,qBAAT,CAAgCv3C,KAAhC,EAAuC;AACrC,QAAIA,MAAMm3C,IAAN,KAAe,EAAnB,EAAuB;AACrBj+C,UAAIgR,KAAJ,CAAU,kBAAkBlK,MAAMm3C,IAAlC;AACD,KAFD,MAEO;AACLj+C,UAAIgR,KAAJ,CAAU,wBAAV;AACD;AACF;;AAED,MAAImsC,OAAOmB,IAAX,EAAiB;AACf,UAAMC,aAAapB,OAAOmB,IAA1B;AACA,QAAIH,QAAJ,EAAc;AACZI,iBAAWC,YAAX,GAA0BL,QAA1B;AACD,KAFD,MAEO;AACLI,iBAAWC,YAAX,GAA0BH,qBAA1B;AACD;AACD,QAAI;AACFE,iBAAWH,UAAX,CAAsBH,IAAtB,EAA4Bx9C,QAA5B,EAAsCy9C,YAAtC;AACA,aAAO,IAAP;AACD,KAHD,CAGE,OAAOlO,GAAP,EAAY;AACZhwC,UAAIgR,KAAJ,CAAUg/B,IAAI9+C,OAAd;AACA,aAAO,KAAP;AACD;AACF,GAdD,MAcO;AACL8O,QAAIgR,KAAJ,CAAU,gEAAV;AACA,WAAO,KAAP;AACD;AACF,C;;;;;;;;;;;;;;;;;kBC1EuB+rC,mB;;AAbxB;;AAGA;;;;;;AAEA;;;;;;;;AAQe,SAASA,mBAAT,CAA8B0B,IAA9B,EAAoC;AACjD,QAAM,EAAEjlB,UAAF,EAAcK,SAAd,EAAyB7pC,MAAzB,EAAiCH,EAAjC,EAAqCqnC,OAArC,EAA8CoC,QAA9C,EAAwDt5B,GAAxD,KAAgE,IAAtE;;AAEA;AACAA,MAAIkX,IAAJ,CAAU,6BAA4BunC,KAAK13C,IAAK,OAAM8yB,UAAUuiB,cAAe,SAA/E;AACAp8C,MAAIgR,KAAJ,CAAW,6BAA4BytC,KAAK13C,IAAK,GAAjD,EAAqD03C,KAAKpsC,GAA1D;;AAEA;;;;;;;AAOA,MAAI,CAAC,KAAKgT,QAAN,IAAkBo5B,KAAK13C,IAAL,KAAc,QAApC,EAA8C;AAC5C,UAAM23C,YAAYD,KAAKpsC,GAAL,CAASsP,KAAT,CAAe,sBAAf,CAAlB;AACA,QAAI+8B,SAAJ,EAAe;AACb1+C,UAAIgR,KAAJ,CAAW,uBAAsB0tC,UAAU,CAAV,CAAa,GAA9C;AACA,WAAKr5B,QAAL,GAAgBq5B,UAAU,CAAV,CAAhB;AACD;AACF;;AAED,SAAO,sBAAY,CAACn+C,OAAD,EAAUC,MAAV,KAAqB;AACtC;AACA;AACA;AACA02B,YAAQyB,IAAR,CAAa,oBAAb,EAAmC,MAAM;AACvC,UAAIW,SAASqlB,SAAT,EAAJ,EAA0B;AACxB;AACA;AACA3+C,YAAIgR,KAAJ,CAAW,QAAOsoB,SAASmB,aAAT,EAAyB,kDAA3C;AACD;AACDl6B;AACD,KAPD;;AASAi5B,eACGujB,mBADH,CACuB0B,IADvB,EAEGnL,IAFH,CAEQ,MAAM;AACVtzC,UAAIkX,IAAJ,CAAS,qCAAT;AACAlX,UAAIgR,KAAJ,CAAW,gBAAe6oB,UAAUuiB,cAAe,GAAnD;;AAEA,UAAIpsD,OAAO2/B,cAAP,KAA0B7hB,gBAAKC,WAAL,CAAiBC,IAA/C,EAAqD;AACnD;AACAhO,YAAIgR,KAAJ,CAAU,0CAAV;AACAkmB,gBAAQM,IAAR,CAAa,oBAAb;AACD,OAJD,MAIO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA92B,mBAAW,MAAM;AACf,cAAIm5B,UAAUc,iBAAV,KAAgC,UAApC,EAAgD;AAC9C;AACA36B,gBAAIgR,KAAJ,CAAU,6DAAV;AACAkmB,oBAAQM,IAAR,CAAa,oBAAb;AACD,WAJD,MAIO;AACLx3B,gBAAIgR,KAAJ,CAAW,uCAAsChhB,OAAO2/B,cAAe,IAAvE;AACA;AACA;AACAkK,sBAAU+kB,2BAAV,GAAwC,IAAxC;AACA,uDAA4B,IAA5B;AACD;AACF,SAZD,EAYG,EAZH;AAaD;AACF,KAjCH,EAkCG1B,KAlCH,CAkCSlN,OAAO;AACZhwC,UAAIkX,IAAJ,CAAS,kCAAT;AACAlX,UAAIgR,KAAJ,CAAW,QAAOnhB,EAAG,KAAImgD,GAAI,EAA7B;AACA;AACA;AACAxvC,aAAOwvC,GAAP;AACD,KAxCH;AAyCD,GAtDM,CAAP;AAuDD;;AAxFD,S;;;;;;;;;;;;;;;;;kBCGwBgN,oB;;;;AALxB;;;;;AAKe,SAASA,oBAAT,CAA+ByB,IAA/B,EAAqC;AAClD,QAAM,EAAEjlB,UAAF,EAAcK,SAAd,EAAyBhqC,EAAzB,EAA6BmQ,GAA7B,KAAqC,IAA3C;;AAEA;AACAA,MAAIkX,IAAJ,CAAU,8BAA6BunC,KAAK13C,IAAK,OAAM8yB,UAAUuiB,cAAe,SAAhF;AACAp8C,MAAIgR,KAAJ,CAAW,8BAA6BytC,KAAK13C,IAAK,GAAlD,EAAsD03C,KAAKpsC,GAA3D;;AAEA;;;;;;;AAOA,MAAI,CAAC,KAAKgT,QAAN,IAAkBo5B,KAAK13C,IAAL,KAAc,QAApC,EAA8C;AAC5C,UAAM23C,YAAYD,KAAKpsC,GAAL,CAASsP,KAAT,CAAe,sBAAf,CAAlB;AACA,QAAI+8B,SAAJ,EAAe;AACb,YAAMG,YAAYH,UAAU,CAAV,MAAiB,QAAjB,GAA4B,SAA5B,GAAwC,QAA1D;AACA1+C,UAAIgR,KAAJ,CAAW,uBAAsB6tC,SAAU,0BAAyBH,UAAU,CAAV,CAAa,aAAjF;AACA,WAAKr5B,QAAL,GAAgBw5B,SAAhB;AACD;AACF;;AAED;AACA;AACA,SAAO,sBAAY,CAACt+C,OAAD,EAAUC,MAAV,KAAqB;AACtCg5B,eACGwjB,oBADH,CACwByB,IADxB,EAEGnL,IAFH,CAEQ,MAAM;AACVtzC,UAAIkX,IAAJ,CAAS,sCAAT;AACAlX,UAAIgR,KAAJ,CAAW,gBAAe6oB,UAAUuiB,cAAe,GAAnD;AACA77C;AACD,KANH,EAOG28C,KAPH,CAOSlN,OAAO;AACZhwC,UAAIkX,IAAJ,CAAS,mCAAT;AACAlX,UAAIgR,KAAJ,CAAW,QAAOnhB,EAAG,KAAImgD,GAAI,EAA7B;AACA;AACA;AACAxvC,aAAOwvC,GAAP;AACD,KAbH;AAcD,GAfM,CAAP;AAgBD,C;;;;;;;;;;;;;AC9CD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe,EAAElV,4CAAF,EAAoBh1B,kCAApB,EAAiCm3C,8CAAjC,EAAoD32C,0CAApD,EAAkEw4C,uCAAlE,EAAmFlB,oCAAnF,E;;;;;;;;;;;;kBCHSmB,mB;AAJxB;;;;AAIe,SAASA,mBAAT,GAAgC;AAC7C,QAAM,EAAEvlB,UAAF,EAAcx5B,GAAd,KAAsB,IAA5B;AACAA,MAAIkX,IAAJ,CAAS,4BAAT;;AAEA,QAAMymC,YAAYnkB,WAAWsB,gBAA7B;AACA;;;;;;;AAOA,MAAI6iB,aAAaA,UAAUtrC,GAAvB,IAA8BsrC,UAAU52C,IAA5C,EAAkD;AAChD,WAAO42C,SAAP;AACD,GAFD,MAEO;AACL,WAAOhlD,SAAP;AACD;AACF,C;;;;;;;;;;;;kBCjBuBmN,W;AAJxB;;;;AAIe,SAASA,WAAT,GAAwB;AACrC,QAAM,EAAE+zB,SAAF,EAAaxoB,YAAb,EAA2BrR,GAA3B,KAAmC,IAAzC;AACAA,MAAIkX,IAAJ,CAAS,uBAAT;;AAEA;AACA,SACE2iB,UACGikB,UADH;AAEE;;;;;;;;AAFF,GAUGruD,MAVH,CAUU0tD,UAAU1sC,QAAQ0sC,OAAOp4C,KAAf,CAVpB,EAWG7E,GAXH,CAWOi9C,UAAU9rC,aAAa+X,GAAb,CAAiB+zB,OAAOp4C,KAAP,CAAalV,EAA9B,CAXjB,EAYGJ,MAZH,CAYUsV,SAAS;AACf;AACA;AACA,WAAOA,SAASA,MAAMc,QAAN,GAAiB3W,KAAjB,KAA2B,MAApC,IAA8C6V,MAAMgzB,SAAN,GAAkBinB,MAAvE;AACD,GAhBH,CADF;AAmBD,C;;;;;;;;;;;;kBCxBuBC,oB;AAJxB;;;;AAIe,SAASA,oBAAT,GAAiC;AAC9C,QAAM,EAAEzlB,UAAF,EAAcx5B,GAAd,KAAsB,IAA5B;AACAA,MAAIkX,IAAJ,CAAS,6BAAT;;AAEA,QAAMgoC,aAAa1lB,WAAWyjB,iBAA9B;AACA;;;;;;;AAOA,MAAIiC,cAAcA,WAAW7sC,GAAzB,IAAgC6sC,WAAWn4C,IAA/C,EAAqD;AACnD,WAAOm4C,UAAP;AACD,GAFD,MAEO;AACL,WAAOvmD,SAAP;AACD;AACF,C;;;;;;;;;;;;kBCjBuBwmD,e;AAJxB;;;;AAIe,SAASA,eAAT,GAA4B;AACzC,QAAM,EAAEtlB,SAAF,EAAaxoB,YAAb,EAA2BrR,GAA3B,KAAmC,IAAzC;AACAA,MAAIkX,IAAJ,CAAS,wBAAT;;AAEA;AACA,SACE2iB,UACGulB,YADH;AAEE;;;;;;;;AAFF,GAUG3vD,MAVH,CAUUyqC,YAAYzpB,QAAQypB,SAASn1B,KAAjB,CAVtB,EAWG7E,GAXH,CAWOg6B,YAAY7oB,aAAa+X,GAAb,CAAiB8Q,SAASn1B,KAAT,CAAelV,EAAhC,CAXnB,EAYGJ,MAZH,CAYUsV,SAAS;AACf;AACA;AACA,WAAOA,SAASA,MAAMc,QAAN,GAAiB3W,KAAjB,KAA2B,MAApC,IAA8C6V,MAAMgzB,SAAN,GAAkBinB,MAAvE;AACD,GAhBH,CADF;AAmBD,C;;;;;;;;;;;;kBCxBuBG,e;AAJxB;;;;AAIe,SAASA,eAAT,GAA4B;AACzC,QAAM,EAAEtlB,SAAF,EAAaxoB,YAAb,EAA2BrR,GAA3B,KAAmC,IAAzC;AACAA,MAAIkX,IAAJ,CAAS,wBAAT;;AAEA;AACA,SACE2iB,UACGulB,YADH;AAEE;;;;;;;;AAFF,GAUG3vD,MAVH,CAUUyqC,YAAYzpB,QAAQypB,SAASn1B,KAAjB,CAVtB,EAWG7E,GAXH,CAWOg6B,YAAY7oB,aAAa+X,GAAb,CAAiB8Q,SAASn1B,KAAT,CAAelV,EAAhC,CAXnB,EAYGJ,MAZH,CAYUsV,SAAS;AACf;AACA,WAAOA,SAASA,MAAMc,QAAN,GAAiB3W,KAAjB,KAA2B,MAA3C;AACD,GAfH,CADF;AAkBD,C;;;;;;;;;;;;kBCpBuB0uD,Y;AAPxB;;;;;;;AAOe,SAASA,YAAT,GAAyB;AACtC,QAAM,EAAE/jB,SAAF,EAAa75B,GAAb,KAAqB,IAA3B;AACAA,MAAIkX,IAAJ,CAAS,wBAAT;;AAEA;AACA,SACE2iB,UACGikB,UADH;AAEE;;;;;;;;AAFF,GAUGruD,MAVH,CAUU0tD,UAAU1sC,QAAQ0sC,OAAOp4C,KAAf,CAVpB,EAWG7E,GAXH,CAWOi9C,UAAUA,OAAOp4C,KAXxB,CADF;AAcD,C;;;;;;AC1BD,qCAAa,GAAG,IAAsD,EAAE,mBAAmB,KAAK,UAAgO,CAAC,aAAa,0BAA0B,mBAAmB,kBAAkB,gBAAgB,UAAU,UAAU,0CAA0C,gBAAgB,OAAC,OAAO,oBAAoB,8CAA8C,kCAAkC,YAAY,YAAY,mCAAmC,iBAAiB,eAAe,sBAAsB,oBAAoB,kDAAkD,WAAW,YAAY,SAAS,SAAS,KAAK;AAC5zB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,oDAAoD,6DAA6D;AACjH,yBAAyB;;AAEzB,CAAC,EAAE,yBAAyB;AAC5B;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnsHAAsH;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q,2CAA2C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAE/M;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,iDAAiD,SAAS,uBAAuB,EAAE;AACnF;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,CAAC,EAAE,0DAA0D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,CAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG,cAAc;AACvH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA,gDAAgD;AAChD;AACA;AACA,yDAAyD,sBAAsB,IAAI;AACnF;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA,CAAC,EAAE,iBAAiB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,CAAC,EAAE,sBAAsB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q,kCAAkC,0BAA0B,0CAA0C,gBAAgB,OAAO,kBAAkB,EAAE,aAAa,EAAE,OAAO,wBAAwB,EAAE;;AAEjM,2CAA2C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAE/M;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,KAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,CAAC,EAAE,uDAAuD;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,cAAc;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA,2FAA2F,aAAa;AACxG;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,2BAA2B,gBAAgB,gDAAgD;AAC3F;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP,sCAAsC,wBAAwB;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP,sCAAsC,wBAAwB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,cAAc;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAE/M;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,GAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA,CAAC,GAAG;AACJ;AACA;;AAEA;;AAEA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,0BAA0B;AAC1B;AACA;AACA;AACA,4DAA4D;AAC5D,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;A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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,CAAC,CAAC,MAA8B,GAAG,SAAc;;;;;;;;;;;;;kBClLzBmiC,e;;AAtBxB;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;IAAYC,c;;AACZ;;IAAYC,c;;AAEZ;;;;AAEA;;;;AAGA;;AAGA;;;;;;AAEA;;;;;AANA;AAdA;AAuBe,SAASF,eAAT,CAA0B9tD,UAAU,EAApC,EAAwCwwC,MAAxC,EAAgD;AAC7D;;;;;AAKA,WAASyd,UAAT,CAAqBzgC,SAArB,EAAgC;AAC9B,UAAM,EAAEpiB,OAAF,EAAWhO,UAAX,KAA0BowB,SAAhC;AACA,UAAM/nB,MAAMrI,WAAWmZ,SAAX,CAAqB,MAArB,CAAZ;;AAEA,UAAM,EAAEN,YAAF,EAAgBG,cAAhB,KAAm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AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,eAAe;AACzD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oEAAoE,OAAO,KAAK;AAChF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,wBAAwB;AACxC;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA,aAAa,mBAAO,CAAC,GAAa;AAClC;;AAEA;AACA;;AAEA;;AAEA,sBAAsB;AACtB;AACA,sBAAsB,2CAA2C,EAAE;AACnE;;AAEA;;;;;;;;ACpOA,8CAAa;;AAEb;AACA;AACA,kBAAkB,cAAc;AAChC;;AAEA;AACA;AACA,kBAAkB,aAAa,EAAE,EAAE,KAAK;AACxC;;AAEA;AACA;AACA,kBAAkB,aAAa,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO;AAC9D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;;AAEA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,GAAe;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B,qBAAqB,SAAS;AAC9B;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;AClKD,oBAAoB,mBAAO,CAAC,GAAe;AAC3C,cAAc,mBAAO,CAAC,GAAS;;AAE/B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wDAAwD,uCAAuC;AAC/F,sDAAsD,qCAAqC;;AAE3F;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF,CAAC;;AAED;;;;;;;;AChvJA,oBAAoB,mBAAO,CAAC,GAAe;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B;;AAE3B;;AAEA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,SAAS;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;AC/Fa;AACb;AACA;AACA;AACA;;;;;;;;ACJa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACtCa;AACb,0CAA0C,EAAE,GAAG,QAAQ,IAAI,EAAE,WAAW,EAAE,UAAU,uEAAuE;AAC3J;AACA;AACA,qCAAqC,EAAE,EAAE,QAAQ,KAAK,WAAW,EAAE;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,6DAA6D,MAAM,cAAc,KAAK;AACtF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG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AEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA,kCAAkC;AAClC,iCAAiC;AACjC,iCAAiC;AACjC,4BAA4B;AAC5B,iCAAiC;;AAEjC;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA,2BAA2B;AAC3B,oBAAoB;AACpB,6BAA6B;AAC7B;;;;AAIA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,WAAW;AACX,WAAW;AACX,YAAY;AACZ,QAAQ;AACR,mBAAmB;;AAEnB,gBAAgB,oBAAoB;AACpC;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;;AAE/C,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,UAAU,EAAE;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;;AAE/B;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C,uBAAuB;AACvB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB,qBAAqB;;AAErB,8CAA8C;AAC9C,eAAe;AACf,WAAW;AACX,QAAQ;;AAER;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA,oBAAoB,UAAU;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,QAAQ;AACR,WAAW;AACX,aAAa;AACb,WAAW;AACX,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA,aAAa;AACb,QAAQ,kBAAkB;AAC1B;AACA,eAAe,oCAAoC;AACnD;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,oBAAoB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,QAAQ;;AAER;AACA,aAAa,eAAe,QAAQ,iCAAiC;AACrE,aAAa,eAAe,QAAQ,iCAAiC;AACrE,aAAa,gBAAgB,OAAO,+BAA+B;;AAEnE;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,YAAY;;AAEZ;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,2BAA2B;;AAE3B,WAAW;AACX,SAAS;AACT,aAAa;AACb,WAAW;AACX,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,OAAO;AACP;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,kCAAkC;AAClC;AACA,eAAe;AACf;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA,oCAAoC;AACpC;AACA,OAAO;;AAEP;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA,WAAW;AACX,oBAAoB;AACpB,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,QAAQ,OAAO,wBAAwB;;AAE9E;AACA;AACA;AACA,eAAe;AACf;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;;AAE9B,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;;AAEnB,QAAQ;AACR,mBAAmB;AACnB,aAAa;;AAEb,wCAAwC;;AAExC,gBAAgB;AAChB,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;;AAEA,KAAK;;AAEL,+BAA+B,kCAAkC;AACjE;;AAEA,KAAK;AACL;;AAEA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;;AAEnB,QAAQ;AACR,mBAAmB;AACnB,aAAa;;AAEb,wCAAwC;;AAExC,gBAAgB;AAChB,oBAAoB;AACpB,oBAAoB;;AAEpB,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA,KAAK;AACL,UAAU,iCAAiC,EAAE;;AAE7C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC,WAAW;;AAEX;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,gCAAgC;AAChC,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;;AAEA,wCAAwC;AACxC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI,MAAM,GAAG,MAAM,GAAG;AAChD;AACA;AACA;AACA,SAAS,IAAI,KAAK,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iBAAiB;AACjB,WAAW;;AAEX,wDAAwD;AACxD,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iBAAiB;AACjB,WAAW;;AAEX,4BAA4B;AAC5B,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,wBAAwB;;AAE1D,GAAG;AACH;AACA,4CAA4C;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA,sBAAsB;AACtB;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,oEAAoE;;;;;AAK3E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,0BAA0B;AAC1B;AACA,0BAA0B;AAC1B;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;;AAE1B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;;AAE5B,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,qBAAqB,cAAc;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,YAAY;AAC/B,kBAAkB,UAAU;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC,wBAAwB;AACxB,YAAY;AACZ,UAAU;AACV,+BAA+B;AAC/B,gCAAgC;AAChC;AACA;;AAEA,wBAAwB;;AAExB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;;AAE3D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,kCAAkC;AAClC,kCAAkC;AAClC;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,mCAAmC;AACnC;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,aAAa;;AAEb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;;AAEnE;AACA,yDAAyD;AACzD;;AAEA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,aAAa;;AAEb;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb,WAAW;AACX,mBAAmB;;AAEnB;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oEAAoE;AACpE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa;;AAEb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB;AACrB,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,mBAAmB;AACnB,kBAAkB;AAClB,0BAA0B;AAC1B,4BAA4B;AAC5B,uBAAuB;AACvB,mBAAmB;AACnB,gBAAgB;AAChB,qBAAqB;AACrB,mBAAmB;AACnB,6BAA6B;AAC7B,uBAAuB;;AAEvB,kBAAkB;AAClB,kBAAkB;AAClB,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;AAEnB,iBAAiB;AACjB,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,sBAAsB;AACtB,2BAA2B;AAC3B,oBAAoB;AACpB,uBAAuB;AACvB,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB,oBAAoB;;AAEpB;AACA;;AAEA,sBAAsB;;AAEtB;;AAEA;;AAEA,2CAA2C;AAC3C,6CAA6C;AAC7C,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,0BAA0B;AAC1B,+CAA+C;AAC/C;;AAEA,oBAAoB;AACpB,oBAAoB;AACpB;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB,mBAAmB;;AAEnB,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;AACnB,kBAAkB;;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;;AAErB,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA,6BAA6B,eAAe;AAC5C,oBAAoB,uBAAuB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;;AAEA,aAAa;;AAEb;AACA;AACA,qBAAqB;AACrB,yBAAyB;AACzB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;;AAEA;AACA;;AAEA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK,oDAAoD,EAAE,aAAa,0BAA0B;;;AAGlG;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA,kCAAkC;;;AAGlC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA,mBAAmB,qBAAqB,UAAU;;AAElD;AACA;AACA,oBAAoB,0BAA0B,gBAAgB,UAAU;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,0BAA0B,UAAU;;AAExD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,kBAAkB;;AAE3C;AACA;AACA,kDAAkD,OAAO;;AAEzD;AACA;AACA,gBAAgB,YAAY;;AAE5B;AACA;AACA,kBAAkB,YAAY;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA,8BAA8B;AAC9B;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe;;AAElB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB;AAClB,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,cAAc;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,8CAA8C;;AAEnE;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,WAAW;AACX,WAAW;AACX,UAAU;AACV,UAAU;AACV;AACA,WAAW;AACX;AACA,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ;AACA,eAAe;AACf,WAAW;AACX,WAAW;AACX,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,WAAW;AACX,SAAS;AACT;AACA,UAAU;AACV,WAAW;AACX,WAAW;AACX;;;AAGA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,gCAAgC;AAChC;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB,qCAAqC;AACrC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uCAAuC;AACvC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kBAAkB;AAClB;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB,cAAc;AACd,cAAc;AACd,uBAAuB;AACvB,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,WAAW;AACX,WAAW;AACX,UAAU;AACV,WAAW;AACX,WAAW;AACX,kBAAkB;AAClB,iBAAiB;AACjB,YAAY;AACZ,6CAA6C,eAAe;AAC5D,4CAA4C,eAAe;AAC3D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,eAAe,aAAa;AAC5B;AACA;;AAEA;AACA;AACA,qBAAqB,UAAU;AAC/B,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA,kBAAkB;AAClB,sCAAsC,2BAA2B;AACjE,uCAAuC;AACvC,wCAAwC;AACxC;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA,eAAe,WAAW;AAC1B,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;;AAEA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA,GAAG,OAAO;AACV;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX,UAAU;AACV,YAAY;AACZ,qBAAqB;AACrB,cAAc;AACd,WAAW;AACX,WAAW;AACX,mBAAmB;AACnB,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;;;AAGA,sBAAsB;AACtB,uBAAuB;AACvB,sBAAsB;AACtB,oBAAoB;AACpB,uBAAuB;AACvB,uBAAuB;AACvB,sBAAsB;AACtB,yBAAyB;AACzB,sBAAsB;AACtB,wBAAwB;AACxB,sBAAsB;AACtB,0BAA0B;AAC1B,4BAA4B;AAC5B,4BAA4B;AAC5B,2BAA2B;AAC3B,0BAA0B;AAC1B,2BAA2B;AAC3B,6BAA6B;AAC7B,8BAA8B;AAC9B,8BAA8B;AAC9B,6BAA6B;AAC7B,gCAAgC;AAChC,8BAA8B;AAC9B,iCAAiC;AACjC,+BAA+B;AAC/B,6BAA6B;AAC7B,uBAAuB;AACvB,wBAAwB;AACxB,sBAAsB;AACtB,qBAAqB;AACrB,qBAAqB;AACrB,sBAAsB;;AAEtB;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,oBAAoB;AACpB,gBAAgB;AAChB;AACA,wBAAwB;AACxB,iBAAiB;AACjB;AACA,gBAAgB;AAChB,iBAAiB;AACjB,iBAAiB;AACjB;AACA,mBAAmB;;AAEnB;AACA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,qBAAqB;;AAErB;AACA,gBAAgB;AAChB,gBAAgB;;AAEhB;AACA,kBAAkB;AAClB,kBAAkB;;AAElB;AACA,iBAAiB;;AAEjB;AACA,sBAAsB;AACtB,uBAAuB;AACvB,mBAAmB;AACnB,oBAAoB;;AAEpB;AACA,iBAAiB;AACjB,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,mBAAmB;;AAEnB,mCAAmC;AACnC,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qBAAqB;AACrB,sBAAsB;AACtB,gBAAgB;AAChB,gBAAgB;AAChB,eAAe;AACf;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,gCAAgC,yBAAyB;AACzD;AACA;AACA,gBAAgB;AAChB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA,gCAAgC,yBAAyB;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,cAAc,yBAAyB;AACvC,sBAAsB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;;AAGpB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;;AAE9C,kEAAkE,UAAU;;AAE5E;AACA;AACA,sBAAsB,uBAAuB;;AAE7C,kEAAkE,UAAU;;AAE5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,oBAAoB;AACpB,WAAW;AACX,UAAU;AACV,iBAAiB;AACjB,WAAW;AACX,WAAW;AACX,gBAAgB;AAChB,WAAW;AACX,WAAW;AACX;AACA,eAAe;AACf,mCAAmC;AACnC,aAAa;AACb,mCAAmC;AACnC,UAAU;AACV,UAAU;AACV,iCAAiC;AACjC;;AAEA,QAAQ;;AAER;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,qBAAqB,EAAE;;;AAGnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,4BAA4B,aAAa;AACzC,2BAA2B,iBAAiB;AAC5C,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oEAAoE;AACpE;AACA;AACA;;AAEA,sCAAsC,OAAO;AAC7C;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,OAAO;;AAExC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,kEAAkE;AAClE;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,OAAO;AACzD;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,oEAAoE;AACpE;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,OAAO;AACzD;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT,iCAAiC,kBAAkB;AACnD;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,gCAAgC,yBAAyB;AACzD;AACA,+BAA+B,yBAAyB;;AAExD;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,yBAAyB;AACzD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA,8BAA8B;AAC9B;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe;;AAElB;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,qCAAqC;;AAE5C,OAAO,uCAAuC;;;;AAI9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyO;;;;;;;;;;;;;;;;;;kBCztNjN0uC,gB;;;;AAHxB;;;AAGe,SAASA,gBAAT,CAA2B9J,MAA3B,EAAmC;AAChD;AACA,QAAMolC,kBAAkB,EAAxB;;AAEA;;;;;;;AAOA,QAAMlkC,aAAatmC,WAAWmmC,QAAQ7rC,UAAU;AAC9C;AACA,UAAMmwE,YAAYtkC,KAAK7rC,MAAL,CAAlB;;AAEA,QA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OAAnC,GAA6CN,YAAYc,cAAzE;AACAd,oBAAYc,cAAZ,GAA6B,eAAMmxC,IAAN,EAAY3xC,OAAZ,CAA7B;AACAN,oBAAYvB,QAAZ,GAAuBA,QAAvB;AACA;AACA,eAAO,MAAM,0BAAc8tB,QAAd,EAAwBvsB,WAAxB,CAAb;AACD;AA9CM;AADJ,GAAP;AAkDD,C;;;;;;;ACnED;;;;;;;;;AASA;;;;;;;;;;AAUA;;;;;;;;;AASA;;;;;;;;;;AAUA;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,YAAY,SAAS;AACrB;AACO;AACP;AACA,2DAA2D,aAAa;;AAExE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;;ACtGA;AACiC","file":"webrtc.anonymous.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebRTC\"] = factory();\n\telse\n\t\troot[\"WebRTC\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 189);\n","import { TASK_CANCEL, TERMINATE, SAGA_LOCATION, SAGA_ACTION, IO, SELF_CANCELLATION } from '@redux-saga/symbols';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { array, notUndef, pattern, multicast, channel, undef, effect, task, func, buffer, string, object } from '@redux-saga/is';\nimport delayP from '@redux-saga/delay-p';\n\nvar konst = function konst(v) {\n  return function () {\n    return v;\n  };\n};\nvar kTrue =\n/*#__PURE__*/\nkonst(true);\n\nvar noop = function noop() {};\n\nif (process.env.NODE_ENV !== 'production' && typeof Proxy !== 'undefined') {\n  noop =\n  /*#__PURE__*/\n  new Proxy(noop, {\n    set: function set() {\n      throw internalErr('There was an attempt to assign a property to internal `noop` function.');\n    }\n  });\n}\nvar identity = function identity(v) {\n  return v;\n};\nvar hasSymbol = typeof Symbol === 'function';\nvar asyncIteratorSymbol = hasSymbol && Symbol.asyncIterator ? Symbol.asyncIterator : '@@asyncIterator';\nfunction check(value, predicate, error) {\n  if (!predicate(value)) {\n    throw new Error(error);\n  }\n}\nvar assignWithSymbols = function assignWithSymbols(target, source) {\n  _extends(target, source);\n\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(source).forEach(function (s) {\n      target[s] = source[s];\n    });\n  }\n};\nvar flatMap = function flatMap(mapper, arr) {\n  var _ref;\n\n  return (_ref = []).concat.apply(_ref, arr.map(mapper));\n};\nfunction remove(array, item) {\n  var index = array.indexOf(item);\n\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nfunction once(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    fn();\n  };\n}\n\nvar kThrow = function kThrow(err) {\n  throw err;\n};\n\nvar kReturn = function kReturn(value) {\n  return {\n    value: value,\n    done: true\n  };\n};\n\nfunction makeIterator(next, thro, name) {\n  if (thro === void 0) {\n    thro = kThrow;\n  }\n\n  if (name === void 0) {\n    name = 'iterator';\n  }\n\n  var iterator = {\n    meta: {\n      name: name\n    },\n    next: next,\n    throw: thro,\n    return: kReturn,\n    isSagaIterator: true\n  };\n\n  if (typeof Symbol !== 'undefined') {\n    iterator[Symbol.iterator] = function () {\n      return iterator;\n    };\n  }\n\n  return iterator;\n}\nfunction logError(error, _ref2) {\n  var sagaStack = _ref2.sagaStack;\n\n  /*eslint-disable no-console*/\n  console.error(error);\n  console.error(sagaStack);\n}\nvar internalErr = function internalErr(err) {\n  return new Error(\"\\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\\n  in redux-saga code and not yours. Thanks for reporting this in the project's github repo.\\n  Error: \" + err + \"\\n\");\n};\nvar createSetContextWarning = function createSetContextWarning(ctx, props) {\n  return (ctx ? ctx + '.' : '') + \"setContext(props): argument \" + props + \" is not a plain object\";\n};\nvar FROZEN_ACTION_ERROR = \"You can't put (a.k.a. dispatch from saga) frozen actions.\\nWe have to define a special non-enumerable property on those actions for scheduling purposes.\\nOtherwise you wouldn't be able to communicate properly between sagas & other subscribers (action ordering would become far less predictable).\\nIf you are using redux and you care about this behaviour (frozen actions),\\nthen you might want to switch to freezing actions in a middleware rather than in action creator.\\nExample implementation:\\n\\nconst freezeActions = store => next => action => next(Object.freeze(action))\\n\"; // creates empty, but not-holey array\n\nvar createEmptyArray = function createEmptyArray(n) {\n  return Array.apply(null, new Array(n));\n};\nvar wrapSagaDispatch = function wrapSagaDispatch(dispatch) {\n  return function (action) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(action, function (ac) {\n        return !Object.isFrozen(ac);\n      }, FROZEN_ACTION_ERROR);\n    }\n\n    return dispatch(Object.defineProperty(action, SAGA_ACTION, {\n      value: true\n    }));\n  };\n};\nvar shouldTerminate = function shouldTerminate(res) {\n  return res === TERMINATE;\n};\nvar shouldCancel = function shouldCancel(res) {\n  return res === TASK_CANCEL;\n};\nvar shouldComplete = function shouldComplete(res) {\n  return shouldTerminate(res) || shouldCancel(res);\n};\nfunction createAllStyleChildCallbacks(shape, parentCallback) {\n  var keys = Object.keys(shape);\n  var totalCount = keys.length;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(totalCount, function (c) {\n      return c > 0;\n    }, 'createAllStyleChildCallbacks: get an empty array or object');\n  }\n\n  var completedCount = 0;\n  var completed;\n  var results = array(shape) ? createEmptyArray(totalCount) : {};\n  var childCallbacks = {};\n\n  function checkEnd() {\n    if (completedCount === totalCount) {\n      completed = true;\n      parentCallback(results);\n    }\n  }\n\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || shouldComplete(res)) {\n        parentCallback.cancel();\n        parentCallback(res, isErr);\n      } else {\n        results[key] = res;\n        completedCount++;\n        checkEnd();\n      }\n    };\n\n    chCbAtKey.cancel = noop;\n    childCallbacks[key] = chCbAtKey;\n  });\n\n  parentCallback.cancel = function () {\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCallbacks[key].cancel();\n      });\n    }\n  };\n\n  return childCallbacks;\n}\nfunction getMetaInfo(fn) {\n  return {\n    name: fn.name || 'anonymous',\n    location: getLocation(fn)\n  };\n}\nfunction getLocation(instrumented) {\n  return instrumented[SAGA_LOCATION];\n}\n\nvar BUFFER_OVERFLOW = \"Channel's Buffer overflow!\";\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\nvar ON_OVERFLOW_EXPAND = 4;\nvar zeroBuffer = {\n  isEmpty: kTrue,\n  put: noop,\n  take: noop\n};\n\nfunction ringBuffer(limit, overflowAction) {\n  if (limit === void 0) {\n    limit = 10;\n  }\n\n  var arr = new Array(limit);\n  var length = 0;\n  var pushIndex = 0;\n  var popIndex = 0;\n\n  var push = function push(it) {\n    arr[pushIndex] = it;\n    pushIndex = (pushIndex + 1) % limit;\n    length++;\n  };\n\n  var take = function take() {\n    if (length != 0) {\n      var it = arr[popIndex];\n      arr[popIndex] = null;\n      length--;\n      popIndex = (popIndex + 1) % limit;\n      return it;\n    }\n  };\n\n  var flush = function flush() {\n    var items = [];\n\n    while (length) {\n      items.push(take());\n    }\n\n    return items;\n  };\n\n  return {\n    isEmpty: function isEmpty() {\n      return length == 0;\n    },\n    put: function put(it) {\n      if (length < limit) {\n        push(it);\n      } else {\n        var doubledLimit;\n\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n\n          case ON_OVERFLOW_SLIDE:\n            arr[pushIndex] = it;\n            pushIndex = (pushIndex + 1) % limit;\n            popIndex = pushIndex;\n            break;\n\n          case ON_OVERFLOW_EXPAND:\n            doubledLimit = 2 * limit;\n            arr = flush();\n            length = arr.length;\n            pushIndex = arr.length;\n            popIndex = 0;\n            arr.length = doubledLimit;\n            limit = doubledLimit;\n            push(it);\n            break;\n\n          default: // DROP\n\n        }\n      }\n    },\n    take: take,\n    flush: flush\n  };\n}\n\nvar none = function none() {\n  return zeroBuffer;\n};\nvar fixed = function fixed(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_THROW);\n};\nvar dropping = function dropping(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_DROP);\n};\nvar sliding = function sliding(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_SLIDE);\n};\nvar expanding = function expanding(initialSize) {\n  return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);\n};\n\nvar buffers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  none: none,\n  fixed: fixed,\n  dropping: dropping,\n  sliding: sliding,\n  expanding: expanding\n});\n\nvar TAKE = 'TAKE';\nvar PUT = 'PUT';\nvar ALL = 'ALL';\nvar RACE = 'RACE';\nvar CALL = 'CALL';\nvar CPS = 'CPS';\nvar FORK = 'FORK';\nvar JOIN = 'JOIN';\nvar CANCEL = 'CANCEL';\nvar SELECT = 'SELECT';\nvar ACTION_CHANNEL = 'ACTION_CHANNEL';\nvar CANCELLED = 'CANCELLED';\nvar FLUSH = 'FLUSH';\nvar GET_CONTEXT = 'GET_CONTEXT';\nvar SET_CONTEXT = 'SET_CONTEXT';\n\nvar effectTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  TAKE: TAKE,\n  PUT: PUT,\n  ALL: ALL,\n  RACE: RACE,\n  CALL: CALL,\n  CPS: CPS,\n  FORK: FORK,\n  JOIN: JOIN,\n  CANCEL: CANCEL,\n  SELECT: SELECT,\n  ACTION_CHANNEL: ACTION_CHANNEL,\n  CANCELLED: CANCELLED,\n  FLUSH: FLUSH,\n  GET_CONTEXT: GET_CONTEXT,\n  SET_CONTEXT: SET_CONTEXT\n});\n\nvar TEST_HINT = '\\n(HINT: if you are getting these errors in tests, consider using createMockTask from @redux-saga/testing-utils)';\n\nvar makeEffect = function makeEffect(type, payload) {\n  var _ref;\n\n  return _ref = {}, _ref[IO] = true, _ref.combinator = false, _ref.type = type, _ref.payload = payload, _ref;\n};\n\nvar isForkEffect = function isForkEffect(eff) {\n  return effect(eff) && eff.type === FORK;\n};\n\nvar detach = function detach(eff) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(eff, isForkEffect, 'detach(eff): argument must be a fork effect');\n  }\n\n  return makeEffect(FORK, _extends({}, eff.payload, {\n    detached: true\n  }));\n};\nfunction take(patternOrChannel, multicastPattern) {\n  if (patternOrChannel === void 0) {\n    patternOrChannel = '*';\n  }\n\n  if (process.env.NODE_ENV !== 'production' && arguments.length) {\n    check(arguments[0], notUndef, 'take(patternOrChannel): patternOrChannel is undefined');\n  }\n\n  if (pattern(patternOrChannel)) {\n    if (notUndef(multicastPattern)) {\n      /* eslint-disable no-console */\n      console.warn(\"take(pattern) takes one argument but two were provided. Consider passing an array for listening to several action types\");\n    }\n\n    return makeEffect(TAKE, {\n      pattern: patternOrChannel\n    });\n  }\n\n  if (multicast(patternOrChannel) && notUndef(multicastPattern) && pattern(multicastPattern)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel,\n      pattern: multicastPattern\n    });\n  }\n\n  if (channel(patternOrChannel)) {\n    if (notUndef(multicastPattern)) {\n      /* eslint-disable no-console */\n      console.warn(\"take(channel) takes one argument but two were provided. Second argument is ignored.\");\n    }\n\n    return makeEffect(TAKE, {\n      channel: patternOrChannel\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    throw new Error(\"take(patternOrChannel): argument \" + patternOrChannel + \" is not valid channel or a valid pattern\");\n  }\n}\nvar takeMaybe = function takeMaybe() {\n  var eff = take.apply(void 0, arguments);\n  eff.payload.maybe = true;\n  return eff;\n};\nfunction put(channel$1, action) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      check(channel$1, notUndef, 'put(channel, action): argument channel is undefined');\n      check(channel$1, channel, \"put(channel, action): argument \" + channel$1 + \" is not a valid channel\");\n      check(action, notUndef, 'put(channel, action): argument action is undefined');\n    } else {\n      check(channel$1, notUndef, 'put(action): argument action is undefined');\n    }\n  }\n\n  if (undef(action)) {\n    action = channel$1; // `undefined` instead of `null` to make default parameter work\n\n    channel$1 = undefined;\n  }\n\n  return makeEffect(PUT, {\n    channel: channel$1,\n    action: action\n  });\n}\nvar putResolve = function putResolve() {\n  var eff = put.apply(void 0, arguments);\n  eff.payload.resolve = true;\n  return eff;\n};\nfunction all(effects) {\n  var eff = makeEffect(ALL, effects);\n  eff.combinator = true;\n  return eff;\n}\nfunction race(effects) {\n  var eff = makeEffect(RACE, effects);\n  eff.combinator = true;\n  return eff;\n} // this match getFnCallDescriptor logic\n\nvar validateFnDescriptor = function validateFnDescriptor(effectName, fnDescriptor) {\n  check(fnDescriptor, notUndef, effectName + \": argument fn is undefined or null\");\n\n  if (func(fnDescriptor)) {\n    return;\n  }\n\n  var context = null;\n  var fn;\n\n  if (array(fnDescriptor)) {\n    context = fnDescriptor[0];\n    fn = fnDescriptor[1];\n    check(fn, notUndef, effectName + \": argument of type [context, fn] has undefined or null `fn`\");\n  } else if (object(fnDescriptor)) {\n    context = fnDescriptor.context;\n    fn = fnDescriptor.fn;\n    check(fn, notUndef, effectName + \": argument of type {context, fn} has undefined or null `fn`\");\n  } else {\n    check(fnDescriptor, func, effectName + \": argument fn is not function\");\n    return;\n  }\n\n  if (context && string(fn)) {\n    check(context[fn], func, effectName + \": context arguments has no such method - \\\"\" + fn + \"\\\"\");\n    return;\n  }\n\n  check(fn, func, effectName + \": unpacked fn argument (from [context, fn] or {context, fn}) is not a function\");\n};\n\nfunction getFnCallDescriptor(fnDescriptor, args) {\n  var context = null;\n  var fn;\n\n  if (func(fnDescriptor)) {\n    fn = fnDescriptor;\n  } else {\n    if (array(fnDescriptor)) {\n      context = fnDescriptor[0];\n      fn = fnDescriptor[1];\n    } else {\n      context = fnDescriptor.context;\n      fn = fnDescriptor.fn;\n    }\n\n    if (context && string(fn) && func(context[fn])) {\n      fn = context[fn];\n    }\n  }\n\n  return {\n    context: context,\n    fn: fn,\n    args: args\n  };\n}\n\nvar isNotDelayEffect = function isNotDelayEffect(fn) {\n  return fn !== delay;\n};\n\nfunction call(fnDescriptor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    var arg0 = typeof args[0] === 'number' ? args[0] : 'ms';\n    check(fnDescriptor, isNotDelayEffect, \"instead of writing `yield call(delay, \" + arg0 + \")` where delay is an effect from `redux-saga/effects` you should write `yield delay(\" + arg0 + \")`\");\n    validateFnDescriptor('call', fnDescriptor);\n  }\n\n  return makeEffect(CALL, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction apply(context, fn, args) {\n  if (args === void 0) {\n    args = [];\n  }\n\n  var fnDescriptor = [context, fn];\n\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('apply', fnDescriptor);\n  }\n\n  return makeEffect(CALL, getFnCallDescriptor([context, fn], args));\n}\nfunction cps(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('cps', fnDescriptor);\n  }\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return makeEffect(CPS, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction fork(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('fork', fnDescriptor);\n    check(fnDescriptor, function (arg) {\n      return !effect(arg);\n    }, 'fork: argument must not be an effect');\n  }\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return makeEffect(FORK, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction spawn(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('spawn', fnDescriptor);\n  }\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  return detach(fork.apply(void 0, [fnDescriptor].concat(args)));\n}\nfunction join(taskOrTasks) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      throw new Error('join(...tasks) is not supported any more. Please use join([...tasks]) to join multiple tasks.');\n    }\n\n    if (array(taskOrTasks)) {\n      taskOrTasks.forEach(function (t) {\n        check(t, task, \"join([...tasks]): argument \" + t + \" is not a valid Task object \" + TEST_HINT);\n      });\n    } else {\n      check(taskOrTasks, task, \"join(task): argument \" + taskOrTasks + \" is not a valid Task object \" + TEST_HINT);\n    }\n  }\n\n  return makeEffect(JOIN, taskOrTasks);\n}\nfunction cancel(taskOrTasks) {\n  if (taskOrTasks === void 0) {\n    taskOrTasks = SELF_CANCELLATION;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      throw new Error('cancel(...tasks) is not supported any more. Please use cancel([...tasks]) to cancel multiple tasks.');\n    }\n\n    if (array(taskOrTasks)) {\n      taskOrTasks.forEach(function (t) {\n        check(t, task, \"cancel([...tasks]): argument \" + t + \" is not a valid Task object \" + TEST_HINT);\n      });\n    } else if (taskOrTasks !== SELF_CANCELLATION && notUndef(taskOrTasks)) {\n      check(taskOrTasks, task, \"cancel(task): argument \" + taskOrTasks + \" is not a valid Task object \" + TEST_HINT);\n    }\n  }\n\n  return makeEffect(CANCEL, taskOrTasks);\n}\nfunction select(selector) {\n  if (selector === void 0) {\n    selector = identity;\n  }\n\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  if (process.env.NODE_ENV !== 'production' && arguments.length) {\n    check(arguments[0], notUndef, 'select(selector, [...]): argument selector is undefined');\n    check(selector, func, \"select(selector, [...]): argument \" + selector + \" is not a function\");\n  }\n\n  return makeEffect(SELECT, {\n    selector: selector,\n    args: args\n  });\n}\n/**\n  channel(pattern, [buffer])    => creates a proxy channel for store actions\n**/\n\nfunction actionChannel(pattern$1, buffer$1) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(pattern$1, pattern, 'actionChannel(pattern,...): argument pattern is not valid');\n\n    if (arguments.length > 1) {\n      check(buffer$1, notUndef, 'actionChannel(pattern, buffer): argument buffer is undefined');\n      check(buffer$1, buffer, \"actionChannel(pattern, buffer): argument \" + buffer$1 + \" is not a valid buffer\");\n    }\n  }\n\n  return makeEffect(ACTION_CHANNEL, {\n    pattern: pattern$1,\n    buffer: buffer$1\n  });\n}\nfunction cancelled() {\n  return makeEffect(CANCELLED, {});\n}\nfunction flush(channel$1) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(channel$1, channel, \"flush(channel): argument \" + channel$1 + \" is not valid channel\");\n  }\n\n  return makeEffect(FLUSH, channel$1);\n}\nfunction getContext(prop) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(prop, string, \"getContext(prop): argument \" + prop + \" is not a string\");\n  }\n\n  return makeEffect(GET_CONTEXT, prop);\n}\nfunction setContext(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(props, object, createSetContextWarning(null, props));\n  }\n\n  return makeEffect(SET_CONTEXT, props);\n}\nvar delay =\n/*#__PURE__*/\ncall.bind(null, delayP);\n\nexport { apply as $, ALL as A, logError as B, CALL as C, wrapSagaDispatch as D, identity as E, FORK as F, GET_CONTEXT as G, buffers as H, detach as I, JOIN as J, take as K, fork as L, cancel as M, call as N, delay as O, PUT as P, actionChannel as Q, RACE as R, SELECT as S, TAKE as T, sliding as U, race as V, effectTypes as W, takeMaybe as X, put as Y, putResolve as Z, all as _, CPS as a, cps as a0, spawn as a1, join as a2, select as a3, cancelled as a4, flush as a5, getContext as a6, setContext as a7, CANCEL as b, check as c, ACTION_CHANNEL as d, expanding as e, CANCELLED as f, FLUSH as g, SET_CONTEXT as h, internalErr as i, getMetaInfo as j, kTrue as k, createAllStyleChildCallbacks as l, createEmptyArray as m, none as n, once as o, assignWithSymbols as p, makeIterator as q, remove as r, shouldComplete as s, noop as t, flatMap as u, getLocation as v, createSetContextWarning as w, asyncIteratorSymbol as x, shouldCancel as y, shouldTerminate as z };\n","// Call plugin.\nimport { CALL_STATES } from '../constants'\n\n/**\n * Call selectors.\n * Handles retrieving data from the `state.call.calls` substate.\n */\n\n/**\n * Get the list of all calls this session.\n * @method getCalls\n * @param  {Object} state Redux state.\n * @return {Array} A list of all call objects.\n */\nexport function getCalls (state) {\n  // TODO: cloneDeep?\n  return state.call.calls\n}\n\n/**\n * Retrieves the list of all on-going calls.\n * @method getActiveCalls\n * @param {Object} state Redux state.\n * @return {Array} A list of call objects.\n */\nexport function getActiveCalls (state) {\n  const endedStates = [CALL_STATES.ENDED, CALL_STATES.CANCELLED]\n\n  return getCalls(state).filter(call => !endedStates.includes(call.state))\n}\n\n/**\n * Get the call object of a specific call.\n * @method getCallById\n * @param  {Object} state Redux state.\n * @param  {string} callId The call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallById (state, callId) {\n  return getCalls(state).find(call => call.id === callId)\n}\n\n/**\n * Get the call object with a specific wrtcsSessionId (backend ID).\n * @method getCallByWrtcsSessionId\n * @param  {Object} state Redux state.\n * @param  {string} wrtcsSessionId The call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallByWrtcsSessionId (state, wrtcsSessionId) {\n  return getCalls(state).find(call => call.wrtcsSessionId === wrtcsSessionId)\n}\n\n/**\n * Get the call object with a specific webrtcSessionId.\n * @method getCallByWebrtcSessionId\n * @param  {Object} state Redux state.\n * @param  {string} webrtcSessionId The call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallByWebrtcSessionId (state, webrtcSessionId) {\n  return getCalls(state).find(call => call.webrtcSessionId === webrtcSessionId)\n}\n\n/**\n * Retrieve the call plugin's options.\n * @method getOptions\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getOptions (state) {\n  return state.config.call\n}\n\n/**\n * Retrieve TURN server/credential information.\n */\nexport function getTurnInfo (state) {\n  return state.call.turn\n}\n","import { TASK, SAGA_ACTION, MULTICAST, IO } from '@redux-saga/symbols';\n\nvar undef = function undef(v) {\n  return v === null || v === undefined;\n};\nvar notUndef = function notUndef(v) {\n  return v !== null && v !== undefined;\n};\nvar func = function func(f) {\n  return typeof f === 'function';\n};\nvar number = function number(n) {\n  return typeof n === 'number';\n};\nvar string = function string(s) {\n  return typeof s === 'string';\n};\nvar array = Array.isArray;\nvar object = function object(obj) {\n  return obj && !array(obj) && typeof obj === 'object';\n};\nvar promise = function promise(p) {\n  return p && func(p.then);\n};\nvar iterator = function iterator(it) {\n  return it && func(it.next) && func(it.throw);\n};\nvar iterable = function iterable(it) {\n  return it && func(Symbol) ? func(it[Symbol.iterator]) : array(it);\n};\nvar task = function task(t) {\n  return t && t[TASK];\n};\nvar sagaAction = function sagaAction(a) {\n  return Boolean(a && a[SAGA_ACTION]);\n};\nvar observable = function observable(ob) {\n  return ob && func(ob.subscribe);\n};\nvar buffer = function buffer(buf) {\n  return buf && func(buf.isEmpty) && func(buf.take) && func(buf.put);\n};\nvar pattern = function pattern(pat) {\n  return pat && (string(pat) || symbol(pat) || func(pat) || array(pat) && pat.every(pattern));\n};\nvar channel = function channel(ch) {\n  return ch && func(ch.take) && func(ch.close);\n};\nvar stringableFunc = function stringableFunc(f) {\n  return func(f) && f.hasOwnProperty('toString');\n};\nvar symbol = function symbol(sym) {\n  return Boolean(sym) && typeof Symbol === 'function' && sym.constructor === Symbol && sym !== Symbol.prototype;\n};\nvar multicast = function multicast(ch) {\n  return channel(ch) && ch[MULTICAST];\n};\nvar effect = function effect(eff) {\n  return eff && eff[IO];\n};\n\nexport { array, buffer, channel, effect, func, iterable, iterator, multicast, notUndef, number, object, observable, pattern, promise, sagaAction, string, stringableFunc, symbol, task, undef };\n","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};","var _ = require('./lodash.min').runInContext();\nmodule.exports = require('./fp/_baseConvert')(_, _);\n","export const NO_CODE = 'NO_CODE'\n\n/**\n * The Basic Error object. Provides information about an error that occurred in the SDK.\n * @public\n * @static\n * @typedef {Object} BasicError\n * @memberof api\n * @property {string} code The code of the error. If no code is known, this will be 'NO_CODE'.\n * @property {string} message A human-readable message to describe the error. If no message is known, this will be 'An error occurred'.\n */\n\nexport {\n  authCodes,\n  callCodes,\n  callHistoryCodes,\n  groupsCodes,\n  messagingCodes,\n  mwiCodes,\n  sipEventCodes,\n  clickToCallCodes,\n  bridgeCodes,\n  subscriptionCodes,\n  presenceCodes,\n  usersCodes,\n  webrtcCodes\n} from './codes'\n\nexport default class BasicError {\n  constructor ({ message, code }) {\n    this.name = 'BasicError'\n    this.code = code || NO_CODE\n    this.message = message ? `${message}` : 'An error occurred.'\n  }\n}\n","/**\n * Call states\n * Call states used in the cpaas and link call plugins\n * @name CALL_STATES\n */\nexport const CALL_STATES = {\n  INITIATING: 'Initiating',\n  INITIATED: 'Initiated',\n  EARLY_MEDIA: 'Early Media',\n  RINGING: 'Ringing',\n  CANCELLED: 'Cancelled',\n  CONNECTED: 'Connected',\n  ON_HOLD: 'On Hold',\n  ENDED: 'Ended'\n}\n\n/**\n * Possible states a call's media can be in.\n * Describes whether media is flowing or if an endpoint is preventing media flow.\n * @name CALL_MEDIA_STATES\n * @type {Object}\n * @property {string} CONNECTED Both call endpoints allow for media to flow.\n * @property {string} LOCAL_HOLD Local endpoint disallows media from flowing.\n * @property {string} REMOTE_HOLD Remote endpoint disallows media from flowing.\n * @property {string} DUAL_HOLD Both endpoints disallow media from flowing.\n */\nexport const CALL_MEDIA_STATES = {\n  CONNECTED: 'Connected',\n  LOCAL_HOLD: 'Local Hold',\n  REMOTE_HOLD: 'Remote Hold',\n  DUAL_HOLD: 'Dual Hold'\n}\n\n/**\n * Possible states for a Call's media connection.\n * @name CALL_MEDIA_CONNECTION_STATES\n */\nexport const CALL_MEDIA_CONNECTION_STATES = {\n  NEW: 'new',\n  CHECKING: 'checking',\n  CONNECTED: 'connected',\n  COMPLETED: 'completed',\n  FAILED: 'failed',\n  DISCONNECTED: 'disconnected',\n  CLOSED: 'closed'\n}\n\n/**\n * Call operations that require negotiation.\n * @name OPERATIONS\n * @type {Object}\n * @property {string} CHANGE_MEDIA Media flow remains the same, includes non-flow related media changes.\n * @property {string} HOLD_MEDIA   Media flow stops. May include non-flow related media changes.\n * @property {string} UNHOLD_MEDIA Media flow restarts. May include non-flow related media changes.\n * @property {string} MUSIC_ON_HOLD Media flow changes to sendonly.\n */\nexport const OPERATIONS = {\n  CHANGE_MEDIA: 'Change Media',\n  HOLD_MEDIA: 'Hold Media',\n  UNHOLD_MEDIA: 'Unhold Media',\n  MUSIC_ON_HOLD: 'Music on hold'\n}\n\n/**\n * Complex call operations.\n * @name COMPLEX_OPERATIONS\n * @type {Object}\n * @property {string} DIRECT_TRANSFER\n * @property {string} CONSULTATIVE_TRANSFER\n * @property {string} JOIN\n */\nexport const COMPLEX_OPERATIONS = {\n  DIRECT_TRANSFER: 'Direct Transfer',\n  CONSULTATIVE_TRANSFER: 'Consultative Transfer',\n  JOIN: 'Join'\n}\n\n/**\n * Complex call operation messages.\n * @name COMPLEX_OPERATION_MESSAGES\n * @type {Object}\n * @property {string} DIRECT_TRANSFER_SUCCESS Success message for direct transfer.\n * @property {string} CONSULTATIVE_TRANSFER_SUCCESS Success message for consultative transfer (matches reasonText from notification).\n * @property {string} JOIN_SUCCESS Success message for join.\n * @property {string} DIRECT_TRANSFER_FAILURE Failure message for direct transfer.\n * @property {string} CONSULTATIVE_TRANSFER_FAILURE Failure message for consultative transfer.\n * @property {string} JOIN_FAILURE Failure message for join.\n */\nexport const COMPLEX_OPERATION_MESSAGES = {\n  DIRECT_TRANSFER_SUCCESS: 'Direct Transfer Successful',\n  CONSULTATIVE_TRANSFER_SUCCESS: 'Transfer Successful',\n  JOIN_SUCCESS: 'Join Successful',\n  DIRECT_TRANSFER_FAILURE: 'Direct Transfer Failed',\n  CONSULTATIVE_TRANSFER_FAILURE: 'Transfer Failed',\n  JOIN_FAILURE: 'Join Failed'\n}\n\n/**\n * Status codes that match success messages.\n * @name STATUS_CODES\n * @type {Object}\n * @property {number} DIRECT_TRANSFER_SUCCESS Status code for successful direct transfer.\n * @property {number} CONSULTATIVE_TRANSFER_SUCCESS Status code for successful consultative transfer.\n * @property {number} JOIN_SUCCESS Status code for successful join.\n * @property {number} DIRECT_TRANSFER_FAILURE Status code for failed direct transfer.\n * @property {number} CONSULTATIVE_TRANSFER_FAILURE Status code for failed consultative transfer.\n * @property {number} JOIN_FAILURE Status code for failed join.\n */\nexport const STATUS_CODES = {\n  DIRECT_TRANSFER_SUCCESS: 9905,\n  CONSULTATIVE_TRANSFER_SUCCESS: 9905,\n  JOIN_SUCCESS: 9906,\n  DIRECT_TRANSFER_FAILURE: -1,\n  CONSULTATIVE_TRANSFER_FAILURE: -1,\n  JOIN_FAILURE: -2\n}\n\n/**\n * Call direction\n * Indication of which direction the call is going\n * @name CALL_DIRECTION\n */\nexport const CALL_DIRECTION = {\n  INCOMING: 'incoming',\n  OUTGOING: 'outgoing'\n}\n\n/*\n * A conversion from MediaDeviceInfo.kind values to their more common terms.\n * See: https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/kind\n */\nexport const WEBRTC_DEVICE_KINDS = {\n  audioinput: 'microphone',\n  videoinput: 'camera',\n  audiooutput: 'speaker'\n}\n\n/**\n * Result types for the Ice Collection Check Function.\n * @name ICE_COLLECTION_RESULT_TYPES\n */\nexport const ICE_COLLECTION_RESULT_TYPES = {\n  START_CALL: 'StartCall',\n  WAIT: 'Wait',\n  ERROR: 'Error'\n}\n","/**\n * Blocking operations that can be performed on a call.\n * ie. no two of these operations, either local or remote,\n *    can be performed at the same time.\n * TODO: Should all operations just be listed here? Probably.\n */\nexport const OPERATIONS = {\n  // Establishment.\n  MAKE: 'MAKE',\n  MAKE_ANONYMOUS: 'MAKE_ANONYMOUS',\n  ANSWER: 'ANSWER',\n  REJECT: 'REJECT',\n  IGNORE: 'IGNORE',\n  END: 'END',\n  SEND_RINGING_FEEDBACK: 'SEND_RINGING_FEEDBACK',\n  // TODO: Make sure these constants and actionTypes are in-sync with each\n  //    other. Use one to build the other.\n  FORWARD_CALL: 'FORWARD_CALL',\n  // Midcall.\n  HOLD: 'HOLD',\n  UNHOLD: 'UNHOLD',\n  SEND_CUSTOM_PARAMETERS: 'SEND_CUSTOM_PARAMETERS',\n  ADD_MEDIA: 'ADD_MEDIA',\n  ADD_BASIC_MEDIA: 'ADD_BASIC_MEDIA',\n  REMOVE_MEDIA: 'REMOVE_MEDIA',\n  REMOVE_BASIC_MEDIA: 'REMOVE_BASIC_MEDIA',\n  GET_STATS: 'GET_STATS',\n  SEND_DTMF: 'SEND_DTMF',\n  CONSULTATIVE_TRANSFER: 'CONSULTATIVE_TRANSFER',\n  DIRECT_TRANSFER: 'DIRECT_TRANSFER',\n  JOIN: 'JOIN',\n  REPLACE_TRACK: 'REPLACE_TRACK',\n  MEDIA_RESTART: 'MEDIA_RESTART',\n  RESYNC: 'RESYNC',\n  PLAY_AUDIO: 'PLAY_AUDIO',\n  GET_AVAILABLE_CODECS: 'GET_AVAILABLE_CODECS',\n  // Remote-only.\n  START_MOH: 'START_MOH',\n  STOP_MOH: 'STOP_MOH',\n  SLOW_START: 'SLOW_START'\n}\n\n/*\n * Endpoints that can perform operations.\n */\nexport const ENDPOINTS = {\n  LOCAL: 'LOCAL',\n  REMOTE: 'REMOTE'\n  // SERVER: 'SERVER' ?\n}\n\n/*\n * Statuses of an operation.\n */\nexport const OP_STATUS = {\n  ONGOING: 'ONGOING', // The operation is ongoing locally.\n  PENDING: 'PENDING' // The operation is pending remotely.\n}\n\n/*\n * Transitions of an operation.\n */\nexport const OP_TRANSITIONS = {\n  START: 'START', // The operation is starting.\n  UPDATE: 'UPDATE', // The operation is ongoing.\n  FINISH: 'FINISH' // The operation has finished.\n}\n\n/*\n * Operations that don't have a corresponding finish operation\n */\nexport const NO_FINISH_OPS = [\n  OPERATIONS.ADD_BASIC_MEDIA,\n  OPERATIONS.REMOVE_BASIC_MEDIA,\n  OPERATIONS.GET_AVAILABLE_CODECS,\n  OPERATIONS.MAKE_ANONYMOUS\n]\n","import * as callActionsImport from './call'\nimport * as turnActionsImport from './turn'\n\n// Apparently the following doesn't work:\n//      export * as newName from './place';\n// So import everything from each file, then re-export.\nexport const callActions = callActionsImport\nexport const turnActions = turnActionsImport\n","var createSymbol = function createSymbol(name) {\n  return \"@@redux-saga/\" + name;\n};\n\nvar CANCEL =\n/*#__PURE__*/\ncreateSymbol('CANCEL_PROMISE');\nvar CHANNEL_END_TYPE =\n/*#__PURE__*/\ncreateSymbol('CHANNEL_END');\nvar IO =\n/*#__PURE__*/\ncreateSymbol('IO');\nvar MATCH =\n/*#__PURE__*/\ncreateSymbol('MATCH');\nvar MULTICAST =\n/*#__PURE__*/\ncreateSymbol('MULTICAST');\nvar SAGA_ACTION =\n/*#__PURE__*/\ncreateSymbol('SAGA_ACTION');\nvar SELF_CANCELLATION =\n/*#__PURE__*/\ncreateSymbol('SELF_CANCELLATION');\nvar TASK =\n/*#__PURE__*/\ncreateSymbol('TASK');\nvar TASK_CANCEL =\n/*#__PURE__*/\ncreateSymbol('TASK_CANCEL');\nvar TERMINATE =\n/*#__PURE__*/\ncreateSymbol('TERMINATE');\nvar SAGA_LOCATION =\n/*#__PURE__*/\ncreateSymbol('LOCATION');\n\nexport { CANCEL, CHANNEL_END_TYPE, IO, MATCH, MULTICAST, SAGA_ACTION, SAGA_LOCATION, SELF_CANCELLATION, TASK, TASK_CANCEL, TERMINATE };\n","/**\n * A call operation has either started, been updated, or finished.\n *\n * Information about ongoing call operations are stored with the call\n *    information (see the {@link call.getById} API). This event indicates that\n *    an operation's information has been changed.\n *\n * Local call operations will be tracked from start to finish. An operation may\n *    be updated as it progresses, based on the status of the operation. The\n *    operation status may be ongoing or pending, depending if the operation is\n *    waiting on activity on the local or remote end of the call, respectively.\n *\n * Except in the case of slow-start operations, remote operations will only be\n *    tracked as a \"finish\", to indicate that it occurred.\n * @public\n * @memberof call\n * @event call:operation\n * @param {Object} params\n * @param {string} params.operation The call operation causing this event.\n * @param {string} params.transition The transition reason for the operation change.\n * @param {boolean} params.isLocal Flag indicating whether the operation was local or not.\n * @param {Object} [params.previous] The operation information before this change.\n *    If the transition is to \"start\" the operation, there will be no previous information.\n * @param {string} [params.previous.operation] The operation that was ongoing.\n * @param {string} [params.previous.status] The operation status before this change.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const CALL_OPERATION = 'call:operation'\n\n/**\n * An outgoing call has been started.\n *\n * Information about the Call can be retrieved using the {@link call.getById}\n *    API.\n *\n * @public\n * @memberof call\n * @event call:start\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const CALL_STARTED = 'call:start'\n\n/**\n * A new joined call has been started.\n *\n * Information about the Call can be retrieved using the {@link call.getById}\n *    API.\n *\n * @public\n * @memberof call\n * @requires link_call\n * @event call:join\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const CALL_JOIN = 'call:join'\n\n/**\n * A new incoming call has been received.\n *\n * Information about the Call can be retrieved using the {@link call.getById}\n *    API.\n *\n * @public\n * @memberof call\n * @event call:receive\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n * @example\n * client.on('call:receive', function(params) {\n *     // We have received a call, prompt the user to respond.\n *     promptUser(client.call.getById(params.callId));\n * });\n */\nexport const CALL_INCOMING = 'call:receive'\n\n/**\n * A Call's state has changed.\n *\n * See {@link call.states} for information about call states.\n * @public\n * @memberof call\n * @event call:stateChange\n * @param {Object} params\n * @param {string} params.callId The ID of the Media object that was operated on.\n * @param {Object} params.previous The call's properties before the operation changed it.\n * @param {string} params.previous.state The previous state of the call.\n * @param {Object} [params.transition]\n * @param {number} [params.transition.statusCode] The status code associated with the particular state change's reason.\n * @param {string} [params.transition.reasonText] The reason for the state change.\n * @param {boolean} [params.previous.localHold] The previous local hold state. Present when the state change was a hold/unhold operation.\n * @param {boolean} [params.previous.remoteHold] The previous remote hold state. Present when the state change was a hold/unhold operation.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n * @example\n * client.on('call:stateChange', function (params) {\n *     const call = client.call.getById(params.callId)\n *     const prevState = params.previous.state\n *     log(`Call changed from ${prevState} to ${call.state} state.`)\n *\n *     // Handle the event depending on the new call state.\n *     switch (call.state) {\n *         case client.call.states.CONNECTED:\n *             // Handle being on call with media.\n *             break\n *         case client.call.states.ENDED:\n *             // Handle call ending.\n *             break\n *         ...\n *     }\n * })\n */\nexport const CALL_STATE_CHANGE = 'call:stateChange'\n\n/**\n * New media has been added to the call.\n * @public\n * @memberof call\n * @event call:newMedia\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {boolean} params.local Whether the new media is local or not.\n * @param {Array} params.tracks The list of new Tracks.\n * @param {string} params.mediaId The ID of the Media object the Tracks belong to.\n */\nexport const CALL_ADDED_MEDIA = 'call:newMedia'\n\n/**\n * Media has been removed from the call.\n * @public\n * @memberof call\n * @event call:removedMedia\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {boolean} params.local Whether the removed Media was local or not.\n * @param {Array} params.tracks The list of removed Tracks.\n */\nexport const CALL_REMOVED_MEDIA = 'call:removedMedia'\n\n/**\n * Tracks have been added to the Call after an SDK operation. Both sides of the Call\n *    are now able to render these tracks.\n *\n * Tracks are added to a Call when either the local or remote user adds new media\n *    to the Call, using the {@link call.addMedia} API for example, or when the\n *    Call is unheld with the {@link call.unhold} API.\n *\n * Remote tracks are similarly added to a Call when new tracks are added by the\n *    remote user or either user unholds the call.\n *\n * This event can indicate that multiple tracks have been removed by the same\n *    operation. For example, if the remote user added video to the call, this\n *    event would indicate a single, remote video track was added. If the local\n *    user unheld the call, this event would indicate that any tracks previously\n *    on the call have been re-added, both local and remote.\n *\n * Information about a Track can be retrieved using the {@link media.getTrackById} API.\n * @public\n * @memberof call\n * @event call:tracksAdded\n * @param {Object} params\n * @param {string} params.callId The ID of the Call the tracks were added to.\n * @param {Array<string>} params.trackIds List of track IDs that have been added to the Call.\n * @example\n * client.on('call:tracksAdded', function (params) {\n *    // Get the information for each track.\n *    const tracks = params.trackIds.map(client.media.getTrackById)\n *    tracks.forEach(track => {\n *      const { id, kind, isLocal } = track\n *      // Handle the track depending whether it is audio vs. video and local vs. remote.\n *      ...\n *    })\n * })\n */\nexport const CALL_TRACKS_ADDED = 'call:tracksAdded'\n\n/**\n * Tracks have been removed from the Call after an SDK operation. The tracks may still\n *    exist, but the media is not available to both sides of the Call any longer.\n *\n * Tracks are removed from a Call when either the local or remote user stops the\n *    tracks, by using the {@link call.removeMedia} API for example, or when the\n *    Call is held with the {@link call.hold} API.\n *\n * This event can indicate that multiple tracks have been removed by the same\n *    operation. For example, if the remote user removed video from the call, this\n *    event would indicate a single, remote video track was removed. If the local\n *    user held the call, this event would indicate that all tracks on the call\n *    have been removed, both local and remote.\n *\n * Information about a Track can be retrieved using the {@link media.getTrackById} API.\n * @public\n * @memberof call\n * @event call:tracksRemoved\n * @param {Object} params\n * @param {string} params.callId The ID of the Call the tracks were removed from.\n * @param {Array<string>} params.trackIds List of track IDs that have been removed from the Call.\n * @example\n * client.on('call:tracksRemoved', function (params) {\n *    // Get the information for each track.\n *    const tracks = params.trackIds.map(client.media.getTrackById)\n *    tracks.forEach(track => {\n *      const { id, kind, isLocal } = track\n *      // Handle the track depending whether it is audio vs. video and local vs. remote.\n *      ...\n *    })\n * })\n */\nexport const CALL_TRACKS_REMOVED = 'call:tracksRemoved'\n\n/**\n * Stats have been retrieved for a Call or specific Track of a Call.\n *\n * See the {@link call.getStats} API for more information.\n *\n * @public\n * @memberof call\n * @event call:statsReceived\n * @param {Object} params\n * @param {string} params.callId The ID of the Call to retrieve stats for.\n * @param {string} [params.trackId] The ID of the Track to retrieve stats for.\n * @param {Map} params.result The RTCStatsReport.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n * @example\n * client.on('call:statsReceived', function (params) {\n *    // Iterate over each individual statistic inside the RTCPStatsReport Map.\n *    params.result.forEach(stat => {\n *      ...\n *    })\n * })\n */\nexport const STATS_RECEIVED = 'call:statsReceived'\n\n/**\n * A local Track has been replaced by the {@link call.replaceTrack} API.\n *\n * This event is a combination of a track being removed from the Call and a new\n *    track being added to the Call. The previous Track's media is no longer\n *    available, similar to the {@link call.event:call:tracksRemoved call:tracksRemoved}\n *    event, and the new Track is available in its place, similar to the\n *    {@link call.event:call:tracksAdded call:tracksAdded} event. The event\n *    includes information about the Track that was replaced to help an application\n *    replace it seamlessly.\n * @public\n * @memberof call\n * @event call:trackReplaced\n * @param {Object} params\n * @param {string} params.callId The ID of the call where a track was replaced.\n * @param {string} [params.newTrackId] The ID of the new track that replaced the old track.\n * @param {call.TrackObject} [params.oldTrack] State of the replaced track.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n * @example\n * client.on('call:trackReplaced', function (params) {\n *   const { callId, oldTrack, newTrackId } = params\n *\n *   // Unrender the removed track.\n *   handleTrackGone(oldTrack, callId)\n *\n *   // Render the added track.\n *   const track = client.media.getTrackById(newTrackId)\n *   handleTrackAdded(track, callId)\n * })\n */\nexport const CALL_TRACK_REPLACED = 'call:trackReplaced'\n\n/**\n * Custom Parameters have been received for a Call.\n *\n * These are parameters set by the remote endpoint of the Call. Please refer to\n *    {@link call.CustomParameter CustomParameter} for more information.\n * @public\n * @memberof call\n * @requires link_call\n * @event call:customParameters\n * @param {Object} params\n * @param {string} params.callId The ID of the Call in which custom parameters were received.\n * @param {Array<call.CustomParameter>} params.customParameters The custom parameters received.\n */\nexport const CUSTOM_PARAMETERS = 'call:customParameters'\n\n/**\n * The list of available and supported codecs by the browser have been retrieved.\n *\n * This event is emitted as a result of the {@link call.getAvailableCodecs} API. Please refer to the API for more\n *  information.\n * @public\n * @memberof call\n * @event call:availableCodecs\n * @param {Object} params\n * @param {string} params.kind The kind of media the codecs are for.\n * @param {Array<Object>} params.codecs The list of codecs.\n */\nexport const AVAILABLE_CODECS = 'call:availableCodecs'\n\n/**\n * A Call's media connection state has been changed.\n *\n * This event is emitted as a result of changes to the media connection of the Call.\n * These state changes occur during call establishment, connection loss/re-establishment, call completion, etc.\n *\n * To check the media connection state of a call, retrieve the call's information using the  {@link call.getById} API,\n *  and check the `mediaConnectionState` property of the call.\n * See {@link call.mediaConnectionStates} for the list of possible values and descriptions.\n * @public\n * @memberof call\n * @event call:mediaConnectionChange\n * @param {Object} params\n * @param {string} params.callId The ID of the Call whose media connection state was changed.\n * @param {Object} params.previous The call's media connection properties before the operation changed it.\n * @param {string} params.previous.state The previous state of the media connection.\n */\nexport const MEDIA_CONNECTION_CHANGE = 'call:mediaConnectionChange'\n\n/**\n * A media restart operation for a Call has been attempted.\n *\n * This event is emitted as a result of the {@link call.restartMedia} API being called.\n *    See the description for {@link call.restartMedia} for information about its\n *    usage.\n *\n * The {@link call.event:call:mediaConnectionChange call:mediaConnectionChange} event\n *    will also be emitted alongside this event when the media restart operation is\n *    successful.\n * @public\n * @static\n * @memberof call\n * @event call:mediaRestart\n * @param {Object} params\n * @param {string} params.callId The ID of the Call that was acted on.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n * @example\n * client.on('call:mediaRestart', function (params) {\n *    if (params.error) {\n *      // The operation failed. May want to determine whether to re-attempt the\n *      //    operation (if the failure was simply a connectivity issue) or to\n *      //    consider the call's media irrecoverable.\n *      ...\n *    } else {\n *      // The call should be re-establishing media, with the call's\n *      //    `mediaConnectionState` being updated.\n *      const mediaState = client.call.getById(params.callId).mediaConnectionState\n *      ...\n *    }\n * })\n */\nexport const MEDIA_RESTART = 'call:mediaRestart'\n","import createManager from 'kandy-logger'\nimport defaultOptions from './config'\n\n// Logs generated as a result of invoking the public API will contain this tag\nexport const API_LOG_TAG = 'API invoked: '\n\n/**\n * Create the LogManager right away so that it is available. The SDK has not\n *    been instantiated yet, so we have to use the default options until we get\n *    the application's configs.\n */\n/**\n * TODO: There is a technical debt associated with having a loggerManager along with it's\n * loggers created at the global scope. Multiple instances of the SDK would end up sharing\n * the log manager and therefore loggers.\n */\nconst manager = createManager(defaultOptions)\nexport const logManager = manager\n","import { cloneDeep } from 'lodash/fp'\nimport { SUBSCRIPTION_STATE } from '../constants'\nimport { platforms } from '../../constants'\n\n/*\n * Redux-saga selector functions.\n * Used with the `select` effect in sagas to Retrieves\n *      specific portions of the state.\n */\n\n/**\n * Retrieves the config options provided by the auth plugin.\n * @method getAuthConfig\n * @return {Object}\n */\nexport function getAuthConfig (state) {\n  return cloneDeep(state.config.authentication)\n}\n\n/**\n * Retrieves the maximum number of times this client will attempt to subscribe, while getting a\n * 'Service Unavailable' response from backend.\n * @method getServiceUnavailableMaxRetries\n * @param {Object} state Current state object.\n * @return {number}\n */\nexport function getServiceUnavailableMaxRetries (state) {\n  return state.config.authentication.subscription.serviceUnavailableMaxRetries\n}\n\n/**\n * Retrieves the subscription information of a platform.\n * @method getSubscriptionInfo\n * @param  {string} [platform] - The backend platform in use.\n * @return {Object}\n */\nexport function getSubscriptionInfo (state, platform) {\n  if (!platform) {\n    platform = getPlatform(state)\n  }\n\n  if (state.authentication.subscription) {\n    return cloneDeep(state.authentication.subscription[platform])\n  } else {\n    return undefined\n  }\n}\n\n/**\n * Retrieves the connection information of a platform.\n * Includes the info needed to make requests to that platform.\n * @method getConnectionInfo\n * @param  {string} [platform] - The backend platform in use.\n * @return {Object}\n */\nexport function getConnectionInfo (state, platform) {\n  if (!platform) {\n    platform = getPlatform(state)\n  }\n\n  if (state.authentication.connection) {\n    return cloneDeep(state.authentication.connection[platform])\n  } else {\n    return undefined\n  }\n}\n\n/**\n * Retrieves the domain of the callee address information of a platform.\n * @method getDomain\n * @return {string}\n */\nexport function getDomain (state) {\n  const { username = '', identity = username } = getUserInfo(state)\n  const [, domain = ''] = identity.split('@')\n  return domain\n}\n\n/**\n * Retrieves the identity of the currently logged-in user.\n * The identity is of the form: <userName>@<domain>\n * @method getIdentity\n * @return {string}\n */\nexport function getIdentity (state) {\n  const userInfo = getUserInfo(state)\n  return userInfo.identity || userInfo.username || ''\n}\n\n/**\n * Retrieves the user information.\n * @method getUserInfo\n * @return {Object} An object whose properties are: accessToken, identity & username. Identity is user's primary contact address.\n */\nexport function getUserInfo (state) {\n  return cloneDeep(state.authentication.userInfo) || {}\n}\n\n/**\n * Retrieves a flag from the store representing if the login scenario was SSO or not.\n * @method getAuthScenario\n * @return {boolean}\n */\nexport function getAuthScenario (state) {\n  return cloneDeep(state.authentication.isSSO)\n}\n\n/**\n * Retrieves information about the services that the user is subscribed for.\n * @method getServices\n * @return {Object}\n */\nexport function getServices (state, platform) {\n  const subscription = getSubscriptionInfo(state, platform)\n\n  if (subscription && subscription.servicesInfo) {\n    return subscription.servicesInfo\n  } else {\n    return {\n      // TODO: Have default as part of the reducer.\n      requested: [],\n      received: [],\n      missing: [],\n      status: SUBSCRIPTION_STATE.NONE,\n      services: {}\n    }\n  }\n}\n\n/**\n * Retrieves the name of the backend platform the user is currently subscribed to.\n * @method getPlatform\n * @return {string}\n */\nexport function getPlatform (state) {\n  let platform = state.authentication.platform\n\n  /**\n   * Link and UC set the platform in auth state after setting credentials /\n   *    connecting, but CPaaS does not (because the idea was to move away from\n   *    needing the platform). So if there isn't a platform, but there is a\n   *    CPaaS-specific identity, then assume the platform is CPaaS.\n   * This was needed for the request plugin to get the right platform when using\n   *    the `getRequestInfo` selector below.\n   * This is a workaround for bad design.\n   */\n  if (!platform && getUserInfo(state).identity) {\n    platform = 'cpaas'\n  }\n\n  return platform\n}\n\n/**\n * Retrieves info needed to make a REST request for the different platforms.\n * @method getRequestInfo\n * @return {Object}\n */\nexport function getRequestInfo (state, platform) {\n  if (!platform) {\n    platform = getPlatform(state)\n  }\n\n  const { subscription, clientCorrelator } = getAuthConfig(state)\n  let { server } = getAuthConfig(state)\n  let { userInfo } = cloneDeep(state.authentication)\n\n  // For backwards compatibility, we need to fall back to\n  // subscription for the server connection details\n  if (!server) {\n    server = {\n      protocol: subscription.protocol,\n      base: subscription.server,\n      port: subscription.port,\n      version: subscription.version\n    }\n  }\n\n  // If user info does not exist yet, use an empty object. Requests will still fail, but they will be handled.\n  if (!userInfo) {\n    userInfo = {}\n  }\n\n  let requestInfo\n\n  if (platform === platforms.CPAAS) {\n    requestInfo = {\n      baseURL: `${server.protocol}://${server.base}:${server.port}`,\n      version: server.version,\n      username: userInfo.username,\n      // TODO: Token doesn't need to be here if its in requestOptions.\n      token: userInfo.accessToken,\n      clientCorrelator,\n      // TODO: DO NOT hardcode this here (?). The original idea was that this\n      //    is set in state after connection.\n      options: {\n        headers: {\n          Accept: 'application/json',\n          Authorization: `Bearer ${userInfo.accessToken}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    }\n  } else if (platform === platforms.UC) {\n    requestInfo = {\n      baseURL: `${subscription.protocol}://${subscription.server}:${subscription.port}`,\n      version: subscription.version,\n      username: userInfo.username\n    }\n  } else if (platform === platforms.LINK) {\n    requestInfo = {\n      baseURL: `${server.protocol}://${server.base}:${server.port}`,\n      version: server.version,\n      username: userInfo.username\n    }\n\n    /*\n     * If the requested platform was Link but the platform set in state is\n     *    UC, and so we're using UC but making a request for SPiDR.\n     * Change the requestInfo provided to ensure the URL will be valid for\n     *    SPiDR and authentication will be valid for CIM.\n     */\n    const setPlatform = getPlatform(state)\n    if (setPlatform === platforms.UC) {\n      requestInfo.version = '1'\n\n      const connInfo = getConnectionInfo(state, setPlatform)\n      if (connInfo && connInfo.requestOptions) {\n        requestInfo.requestOptions = connInfo.requestOptions\n      }\n      return requestInfo\n    }\n  } else {\n    // Platform is not supported\n    return {}\n  }\n\n  const connInfo = getConnectionInfo(state, platform)\n  if (connInfo && connInfo.requestOptions) {\n    requestInfo.requestOptions = connInfo.requestOptions\n  }\n\n  return requestInfo\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/promise\"), __esModule: true };","export const REPORTER_EVENTS = {\n  ADD_TRACKS: 'ADD_TRACKS',\n  ANSWER: 'ANSWER',\n  END_LOCAL: 'END_LOCAL',\n  END_REMOTE: 'END_REMOTE',\n  HOLD_LOCAL: 'HOLD_LOCAL',\n  HOLD_REMOTE: 'HOLD_REMOTE',\n  GET_USER_MEDIA: 'GET_USER_MEDIA',\n  ICE_COLLECTION: 'ICE_COLLECTION',\n  IGNORE: 'IGNORE',\n  INCOMING_CALL: 'INCOMING_CALL',\n  JOIN: 'JOIN',\n  MAKE: 'MAKE',\n  PROCESS_RESPONSE: 'PROCESS_RESPONSE',\n  RECEIVE_CALL: 'RECEIVE_CALL',\n  REJECT: 'REJECT',\n  RELAY_CANDIDATE_COLLECTED: 'RELAY_CANDIDATE_COLLECTED',\n  REMOTE_RINGING: 'REMOTE_RINGING',\n  REST_REQUEST: 'REST_REQUEST',\n  SET_LOCAL_DESCRIPTION: 'SET_LOCAL_DESCRIPTION',\n  SET_REMOTE_DESCRIPTION: 'SET_REMOTE_DESCRIPTION',\n  UNHOLD_LOCAL: 'UNHOLD_LOCAL',\n  UNHOLD_REMOTE: 'UNHOLD_REMOTE',\n  FORWARD_CALL: 'FORWARD_CALL',\n  DIRECT_TRANSFER: 'DIRECT_TRANSFER',\n  CONSULTATIVE_TRANSFER: 'CONSULTATIVE_TRANSFER'\n}\n\nexport const REPORTER_REQUESTS = {\n  CREATE_SESSION: 'CREATE_SESSION',\n  ANSWER_SESSION: 'ANSWER_SESSION',\n  REJECT_SESSION: 'REJECT_SESSION',\n  FORWARD_SESSION: 'FORWARD_SESSION',\n  UPDATE_SESSION: 'UPDATE_SESSION',\n  END_SESSION: 'END_SESSION'\n}\n\n/**\n * Call report metrics\n *\n * Metrics that are computed and recorded in a call report.\n *\n * @public\n * @static\n * @memberof call\n * @requires callMe\n * @requires call\n * @type {Object}\n * @property {string} CALL_DURATION The duration of a completed call starting from the make call API call or incoming call notification until the call ends.\n * @property {string} MAKE_CALL_LOCAL_SETUP The amount of time it takes from when a call is made until the call is setup locally. This does not include any remote session creation.\n * @property {string} MAKE_CALL_REMOTE_SETUP The amount of time it takes from when the create session request is sent until the SDK processes the response.\n * @property {string} TIME_TO_ANSWER The amount of time it takes from when a call is made until the SDK receives and processes the remote response.\n * @property {string} TIME_TO_MEDIA_DURATION The amount of time it takes from answering an incoming call until media is connected.\n * @property {string} TIME_TO_CALL_SETUP_DURATION The amount of time it takes from when the SDK recieves an incoming call notification until media is connected. This includes the answer operation.\n * @property {string} TIME_TO_IGNORE The amount of time it takes for the ignore call to complete.\n * @property {string} TIME_TO_REJECT The amount of time it takes for the reject call to complete.\n * @property {string} TIME_TO_RINGING The amount of time it takes from when a call is made until the SDK recieves the remote ringing notification.\n * @property {string} TIME_TO_REMOVE_MEDIA The amount of time it takes from when the `remove media` operation starts until the local description has been set.\n * @property {string} TIME_TO_REMOVE_MEDIA_REMOTE The amount of time it takes from when the `remove media` notification handling starts until the remote description has been set.\n * @property {string} TIME_TO_ADD_MEDIA The amount of time it takes from when the `add media` operation starts until the local description has been set.\n * @property {string} TIME_TO_ADD_MEDIA_REMOTE The amount of time it takes from when the `add media` notification handling starts until the remote description has been set.\n * @property {string} TIME_TO_RESTART_MEDIA The amount of time it takes from when the `restart media` operation starts until media has been restarted.\n * @property {string} TIME_TO_RELAY_CANDIDATES The amount of time it takes from when the `ice collection` operation starts until each relay candidate has been recieved.\n * @property {string} TIME_TO_SEND_CUSTOM_PARAMETERS The amount of time it takes from when the `send custom parameters` operation starts until it has finished.\n * @property {string} TIME_TO_FORWARD The amount of time it takes from when the `forward call` operation starts until it has finished.\n * @property {string} TIME_TO_DIRECT_TRANSFER The amount of time it takes from when the `direct transfer` operation starts until it has finished.\n * @property {string} TIME_TO_JOIN The amount of time it takes from when the `join call` operation starts until it has finished.\n */\nexport const REPORTER_METRICS = {\n  CALL_DURATION: 'CALL_DURATION',\n  MAKE_CALL_LOCAL_SETUP: 'MAKE_CALL_LOCAL_SETUP',\n  MAKE_CALL_REMOTE_SETUP: 'MAKE_CALL_REMOTE_SETUP',\n  TIME_TO_ANSWER: 'TIME_TO_ANSWER',\n  TIME_TO_MEDIA_DURATION: 'TIME_TO_MEDIA_DURATION',\n  TIME_TO_CALL_SETUP_DURATION: 'TIME_TO_CALL_SETUP_DURATION',\n  TIME_TO_IGNORE: 'TIME_TO_IGNORE', // how long it took to ignore the incoming call\n  TIME_TO_REJECT: 'TIME_TO_REJECT', // how long it took to reject an incoming call\n  TIME_TO_RINGING: 'TIME_TO_RINGING',\n  TIME_TO_REMOVE_MEDIA: 'TIME_TO_REMOVE_MEDIA',\n  TIME_TO_REMOVE_MEDIA_REMOTE: 'TIME_TO_REMOVE_MEDIA_REMOTE',\n  TIME_TO_ADD_MEDIA: 'TIME_TO_ADD_MEDIA',\n  TIME_TO_ADD_MEDIA_REMOTE: 'TIME_TO_ADD_MEDIA_REMOTE',\n  TIME_TO_HOLD_LOCAL: 'TIME_TO_HOLD_LOCAL',\n  TIME_TO_HOLD_REMOTE: 'TIME_TO_HOLD_REMOTE',\n  TIME_TO_UNHOLD_LOCAL: 'TIME_TO_UNHOLD_LOCAL',\n  TIME_TO_UNHOLD_REMOTE: 'TIME_TO_UNHOLD_REMOTE',\n  TIME_TO_COLLECT_ICE_CANDIDATES: 'TIME_TO_COLLECT_ICE_CANDIDATES',\n  TIME_TO_RESTART_MEDIA: 'TIME_TO_RESTART_MEDIA',\n  TIME_TO_RELAY_CANDIDATES: 'TIME_TO_RELAY_CANDIDATES',\n  TIME_TO_SEND_CUSTOM_PARAMETERS: 'TIME_TO_SEND_CUSTOM_PARAMETERS',\n  TIME_TO_FORWARD: 'TIME_TO_FORWARD',\n  TIME_TO_DIRECT_TRANSFER: 'TIME_TO_DIRECT_TRANSFER',\n  TIME_TO_CONSULTATIVE_TRANSFER: 'TIME_TO_CONSULTATIVE_TRANSFER',\n  TIME_TO_JOIN: 'TIME_TO_JOIN'\n}\n\n/**\n * Call operation events recorded by the call reporter.\n *\n * @public\n * @static\n * @memberof call\n * @requires callMe\n * @requires call\n * @type {Object}\n * @property {string} MAKE Starts when the make operation starts. Ends when the make operation finishes.\n * @property {string} MAKE_ANONYMOUS Starts when the anonymous make operation starts. Ends when the anonymous make operation finishes.\n * @property {string} ANSWER Starts when the answer operation starts. Ends when the answer operation finishes.\n * @property {string} REJECT Starts when the reject operation starts. Ends when the reject operation finishes.\n * @property {string} IGNORE Starts when the ignore operation starts. Ends when the ignore operation finishes.\n * @property {string} SEND_RINGING_FEEDBACK Starts when the send ringing feedback operation starts. Ends when the ringing feedback operation finishes.\n * @property {string} FORWARD_CALL Starts when the forward call operation starts. Ends when the forward operation finishes.\n * @property {string} HOLD Starts when the hold operation starts. Ends when the hold operation finishes.\n * @property {string} UNHOLD Starts when the unhold operation starts. Ends when the unhold operation finishes.\n * @property {string} SEND_CUSTOM_PARAMETERS Starts when the send custom parameters operation starts. Ends send custom parameters operation finishes.\n * @property {string} ADD_MEDIA Starts when the add media operation starts. Ends when the add media operation finishes.\n * @property {string} ADD_BASIC_MEDIA Starts when the add basic media operation starts. Ends when the add basic media operation finishes.\n * @property {string} REMOVE_MEDIA Starts when the remove media operation starts. Ends when the remove media operation finishes.\n * @property {string} REMOVE_BASIC_MEDIA Starts when the remove basic media operation starts. Ends when the remove basic operation finishes.\n * @property {string} GET_STATS Starts when the get stats operation starts. Ends when the get stats operation finishes..\n * @property {string} SEND_DTMF Starts when the send DTMF operation starts. Ends when the DTMF operation finishes.\n * @property {string} CONSULTATIVE_TRANSFER Starts when the consultative transfer operation starts. Ends when the consultative transfer operation finishes.\n * @property {string} DIRECT_TRANSFER Starts when the direct transfer operation starts. Ends when the direct transfer operation finishes.\n * @property {string} JOIN Starts when the join operation starts. Ends when the join operation finishes..\n * @property {string} REPLACE_TRACK Starts when the replace track operation starts. Ends when the replace track operation finishes.\n * @property {string} MEDIA_RESTART Starts when the media restart operation starts. Ends when the media restart operation finishes.\n * @property {string} RESYNC Starts when the resync operation starts. Ends when the resync operation finishes.\n * @property {string} PLAY_AUDIO Starts when the play audio operation starts. Ends when the play audio operation finishes.\n * @property {string} GET_AVAILABLE_CODECS Starts when the get available codecs operation starts. Ends when the get available codecs operation finishes.\n * @property {string} START_MOH Starts when the start music on hold operation starts. Ends when the start music on hold operation finishes.\n * @property {string} STOP_MOH Starts when the stop music on hold operation starts. Ends when the stop music on hold operation finishes.\n * @property {string} SLOW_START Starts when the slow start operation starts. Ends when the slow stop operation finishes.\n * @property {string} END Starts when the end operation starts. Ends when the end operation finishes.\n * @property {string} callStatusUpdateEnded Starts when the call status update ended operation starts. Ends when the call status update ended operation finishes.\n */\nexport const REPORTER_OPERATION_EVENTS_MAP = {\n  // Establishment.\n  MAKE: 'MAKE',\n  MAKE_ANONYMOUS: 'MAKE_ANONYMOUS',\n  ANSWER: 'ANSWER',\n  REJECT: 'REJECT',\n  IGNORE: 'IGNORE',\n  SEND_RINGING_FEEDBACK: 'SEND_RINGING_FEEDBACK',\n  FORWARD_CALL: 'FORWARD_CALL',\n  // Midcall.\n  HOLD: 'HOLD_LOCAL',\n  UNHOLD: 'UNHOLD_LOCAL',\n  HOLD_REMOTE: 'HOLD_REMOTE',\n  UNHOLD_REMOTE: 'UNHOLD_REMOTE',\n  SEND_CUSTOM_PARAMETERS: 'SEND_CUSTOM_PARAMETERS',\n  ADD_MEDIA: 'ADD_MEDIA_LOCAL',\n  ADD_MEDIA_REMOTE: 'ADD_MEDIA_REMOTE',\n  ADD_BASIC_MEDIA: 'ADD_BASIC_MEDIA_LOCAL',\n  ADD_BASIC_MEDIA_REMOTE: 'ADD_BASIC_MEDIA_REMOTE',\n  REMOVE_MEDIA: 'REMOVE_MEDIA_LOCAL',\n  REMOVE_MEDIA_REMOTE: 'REMOVE_MEDIA_REMOTE',\n  REMOVE_BASIC_MEDIA: 'REMOVE_BASIC_MEDIA_LOCAL',\n  REMOVE_BASIC_MEDIA_REMOTE: 'REMOVE_BASIC_MEDIA_REMOTE',\n  GET_STATS: 'GET_STATS',\n  SEND_DTMF: 'SEND_DTMF',\n  CONSULTATIVE_TRANSFER: 'CONSULTATIVE_TRANSFER',\n  DIRECT_TRANSFER: 'DIRECT_TRANSFER',\n  JOIN: 'JOIN',\n  REPLACE_TRACK: 'REPLACE_TRACK',\n  MEDIA_RESTART: 'MEDIA_RESTART',\n  RESYNC: 'RESYNC',\n  PLAY_AUDIO: 'PLAY_AUDIO',\n  GET_AVAILABLE_CODECS: 'GET_AVAILABLE_CODECS',\n  // Remote-only.\n  START_MOH: 'START_MOH',\n  STOP_MOH: 'STOP_MOH',\n  SLOW_START: 'SLOW_START',\n  END: 'END_LOCAL',\n  callStatusUpdateEnded: 'END_REMOTE'\n}\n\nexport const ICE_COLLECTION_OPERATIONS = {\n  MAKE: 'MAKE',\n  MAKE_ANONYMOUS: 'MAKE_ANONYMOUS',\n  ANSWER: 'ANSWER',\n  JOIN: 'JOIN',\n  HOLD: 'HOLD_LOCAL',\n  UNHOLD: 'UNHOLD_LOCAL',\n  ADD_MEDIA: 'ADD_MEDIA_LOCAL',\n  ADD_BASIC_MEDIA: 'ADD_BASIC_MEDIA_LOCAL',\n  REMOVE_MEDIA: 'REMOVE_MEDIA_LOCAL',\n  REMOVE_BASIC_MEDIA: 'REMOVE_BASIC_MEDIA_LOCAL',\n  MEDIA_RESTART: 'MEDIA_RESTART',\n  START_MOH: 'START_MOH',\n  STOP_MOH: 'STOP_MOH',\n  SLOW_START: 'SLOW_START',\n  UNKNOWN: 'UNKNOWN'\n}\n","var core = module.exports = { version: '2.6.12' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","import '@redux-saga/symbols';\nimport '@babel/runtime/helpers/esm/extends';\nimport { channel, stringableFunc, func, notUndef } from '@redux-saga/is';\nimport { q as makeIterator, K as take, L as fork, M as cancel, N as call, O as delay, Q as actionChannel, U as sliding, V as race, c as check } from './io-c3792963.js';\nexport { Q as actionChannel, _ as all, $ as apply, N as call, M as cancel, a4 as cancelled, a0 as cps, O as delay, W as effectTypes, a5 as flush, L as fork, a6 as getContext, a2 as join, Y as put, Z as putResolve, V as race, a3 as select, a7 as setContext, a1 as spawn, K as take, X as takeMaybe } from './io-c3792963.js';\nimport '@redux-saga/delay-p';\n\nvar done = function done(value) {\n  return {\n    done: true,\n    value: value\n  };\n};\n\nvar qEnd = {};\nfunction safeName(patternOrChannel) {\n  if (channel(patternOrChannel)) {\n    return 'channel';\n  }\n\n  if (stringableFunc(patternOrChannel)) {\n    return String(patternOrChannel);\n  }\n\n  if (func(patternOrChannel)) {\n    return patternOrChannel.name;\n  }\n\n  return String(patternOrChannel);\n}\nfunction fsmIterator(fsm, startState, name) {\n  var stateUpdater,\n      errorState,\n      effect,\n      nextState = startState;\n\n  function next(arg, error) {\n    if (nextState === qEnd) {\n      return done(arg);\n    }\n\n    if (error && !errorState) {\n      nextState = qEnd;\n      throw error;\n    } else {\n      stateUpdater && stateUpdater(arg);\n      var currentState = error ? fsm[errorState](error) : fsm[nextState]();\n      nextState = currentState.nextState;\n      effect = currentState.effect;\n      stateUpdater = currentState.stateUpdater;\n      errorState = currentState.errorState;\n      return nextState === qEnd ? done(arg) : effect;\n    }\n  }\n\n  return makeIterator(next, function (error) {\n    return next(null, error);\n  }, name);\n}\n\nfunction takeEvery(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action,\n      setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q1',\n        effect: yFork(action)\n      };\n    }\n  }, 'q1', \"takeEvery(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction takeLatest(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yCancel = function yCancel(task) {\n    return {\n      done: false,\n      value: cancel(task)\n    };\n  };\n\n  var task, action;\n\n  var setTask = function setTask(t) {\n    return task = t;\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return task ? {\n        nextState: 'q3',\n        effect: yCancel(task)\n      } : {\n        nextState: 'q1',\n        effect: yFork(action),\n        stateUpdater: setTask\n      };\n    },\n    q3: function q3() {\n      return {\n        nextState: 'q1',\n        effect: yFork(action),\n        stateUpdater: setTask\n      };\n    }\n  }, 'q1', \"takeLatest(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction takeLeading(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yCall = function yCall(ac) {\n    return {\n      done: false,\n      value: call.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action;\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q1',\n        effect: yCall(action)\n      };\n    }\n  }, 'q1', \"takeLeading(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction throttle(delayLength, patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action, channel$1;\n\n  var yTake = function yTake() {\n    return {\n      done: false,\n      value: take(channel$1)\n    };\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yDelay = {\n    done: false,\n    value: delay(delayLength)\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setChannel = function setChannel(ch) {\n    return channel$1 = ch;\n  };\n\n  var needsChannel = !channel(patternOrChannel);\n\n  if (!needsChannel) {\n    setChannel(patternOrChannel);\n  }\n\n  return fsmIterator({\n    q1: function q1() {\n      var yActionChannel = {\n        done: false,\n        value: actionChannel(patternOrChannel, sliding(1))\n      };\n      return {\n        nextState: 'q2',\n        effect: yActionChannel,\n        stateUpdater: setChannel\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q3',\n        effect: yTake(),\n        stateUpdater: setAction\n      };\n    },\n    q3: function q3() {\n      return {\n        nextState: 'q4',\n        effect: yFork(action)\n      };\n    },\n    q4: function q4() {\n      return {\n        nextState: 'q2',\n        effect: yDelay\n      };\n    }\n  }, needsChannel ? 'q1' : 'q2', \"throttle(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction retry(maxTries, delayLength, fn) {\n  var counter = maxTries;\n\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var yCall = {\n    done: false,\n    value: call.apply(void 0, [fn].concat(args))\n  };\n  var yDelay = {\n    done: false,\n    value: delay(delayLength)\n  };\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yCall,\n        errorState: 'q10'\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: qEnd\n      };\n    },\n    q10: function q10(error) {\n      counter -= 1;\n\n      if (counter <= 0) {\n        throw error;\n      }\n\n      return {\n        nextState: 'q1',\n        effect: yDelay\n      };\n    }\n  }, 'q1', \"retry(\" + fn.name + \")\");\n}\n\nfunction debounceHelper(delayLength, patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action, raceOutput;\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n  var yRace = {\n    done: false,\n    value: race({\n      action: take(patternOrChannel),\n      debounce: delay(delayLength)\n    })\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yNoop = function yNoop(value) {\n    return {\n      done: false,\n      value: value\n    };\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setRaceOutput = function setRaceOutput(ro) {\n    return raceOutput = ro;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q3',\n        effect: yRace,\n        stateUpdater: setRaceOutput\n      };\n    },\n    q3: function q3() {\n      return raceOutput.debounce ? {\n        nextState: 'q1',\n        effect: yFork(action)\n      } : {\n        nextState: 'q2',\n        effect: yNoop(raceOutput.action),\n        stateUpdater: setAction\n      };\n    }\n  }, 'q1', \"debounce(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nvar validateTakeEffect = function validateTakeEffect(fn, patternOrChannel, worker) {\n  check(patternOrChannel, notUndef, fn.name + \" requires a pattern or channel\");\n  check(worker, notUndef, fn.name + \" requires a saga parameter\");\n};\n\nfunction takeEvery$1(patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeEvery$1, patternOrChannel, worker);\n  }\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return fork.apply(void 0, [takeEvery, patternOrChannel, worker].concat(args));\n}\nfunction takeLatest$1(patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeLatest$1, patternOrChannel, worker);\n  }\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  return fork.apply(void 0, [takeLatest, patternOrChannel, worker].concat(args));\n}\nfunction takeLeading$1(patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeLeading$1, patternOrChannel, worker);\n  }\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    args[_key3 - 2] = arguments[_key3];\n  }\n\n  return fork.apply(void 0, [takeLeading, patternOrChannel, worker].concat(args));\n}\nfunction throttle$1(ms, patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(patternOrChannel, notUndef, \"throttle requires a pattern or channel\");\n    check(worker, notUndef, 'throttle requires a saga parameter');\n  }\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {\n    args[_key4 - 3] = arguments[_key4];\n  }\n\n  return fork.apply(void 0, [throttle, ms, patternOrChannel, worker].concat(args));\n}\nfunction retry$1(maxTries, delayLength, worker) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 3 ? _len5 - 3 : 0), _key5 = 3; _key5 < _len5; _key5++) {\n    args[_key5 - 3] = arguments[_key5];\n  }\n\n  return call.apply(void 0, [retry, maxTries, delayLength, worker].concat(args));\n}\nfunction debounce(delayLength, pattern, worker) {\n  for (var _len6 = arguments.length, args = new Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {\n    args[_key6 - 3] = arguments[_key6];\n  }\n\n  return fork.apply(void 0, [debounceHelper, delayLength, pattern, worker].concat(args));\n}\n\nexport { debounce, retry$1 as retry, takeEvery$1 as takeEvery, takeLatest$1 as takeLatest, takeLeading$1 as takeLeading, throttle$1 as throttle };\n","export * from '@redux-saga/core/effects';\n","// Libraries.\nimport { mergeAllWith, isArray, isPlainObject } from 'lodash/fp'\nimport paramParser from 'query-string'\nimport { call, put } from 'redux-saga/effects'\n\n/**\n * Deeply merges the values of multiple objects. Objects on the left receive the values from objects on their right.\n * Unlike lodash's default merge behavior this doesn't merge arrays.\n *\n * @name mergeValues\n * @param {...Object} objects - Objects to merge\n * @return {Object} A new object containing the merged values.\n */\nexport function mergeValues (...objects) {\n  return mergeAllWith((leftValue, rightValue) => {\n    // Overwrite the default behavior of lodash's merge for arrays and simply\n    // clobber what's on the left so we don't end up with merged arrays.\n    if (isArray(leftValue)) {\n      return rightValue\n    }\n  }, objects)\n}\n\n/**\n * Utility function to convert an object to a query string.\n *\n * @param {Object} params An object of query parameters to be parsed and converted for use in a URL string\n * @param {Object} [options] Options to be passed to the query-string library\n * * @param {String} [options.arrayFormat] Format in which to compose array values which were passed as query parameters\n */\nexport function toQueryString (params = {}, options = {}) {\n  if (Object.keys(params).length > 0) {\n    const stringifiedParams = paramParser.stringify(params, options)\n    return '?' + stringifiedParams\n  }\n  return ''\n}\n\n/**\n * Higher-order function to auto-restart sagas when they crash.\n * Based on: https://github.com/redux-saga/redux-saga/pull/644#issuecomment-266454875\n * @method autoRestart\n * @param  {Generator} saga The saga to wrap.\n * @return {Generator} Wrapped saga.\n */\nexport function autoRestart (saga) {\n  return function * autoRestarting (...args) {\n    // Only restart the saga if it crashed; avoid restarting it if\n    //      it returned normally.\n    let shouldRestart = false\n    do {\n      try {\n        yield call(saga, ...args)\n        shouldRestart = false\n      } catch (e) {\n        // TODO: Re-add this log line.\n        // Importing the LogManager in this file breaks tests for an unknown\n        //    reason. Should find out why so that we can log in our utils.\n        // log.error(`Unhandled error in saga ${saga.name}.`, e)\n        console.log(`Unhandled error in saga ${saga.name}.`, e)\n        shouldRestart = true\n      }\n    } while (shouldRestart)\n  }\n}\n\n/**\n * Forwards the actions by directly dispatching them.\n * For example, this can be used with a takeEvery effect to grab actions from a channel and dispatch them.\n * @param {Object} action The action to be forwarded.\n * @example\n * const channel = eventChannel(...)\n * yield takeEvery(channel, forwardAction)\n */\nexport function * forwardAction (action) {\n  yield put(action)\n}\n\n/**\n * Ensures that services are in the same format understood by the server regardless,\n * of whether the client provides services as strings or objects.\n * @param {Array} services The list of services requested by the client.\n * @return {Array} A normalized list of services requested by the client.\n */\nexport function normalizeServices (services = []) {\n  return services.map(service => {\n    if (isPlainObject(service) && service.hasOwnProperty('service')) {\n      return service\n    }\n    return { service: service }\n  })\n}\n\n/**\n * A deferred promise\n * Don't use this unless you know what you are doing:\n *  <https://github.com/petkaantonov/bluebird/wiki/Promise-anti-patterns#the-deferred-anti-pattern>\n * @returns An object a with promise property and functions to resolve and reject\n */\nexport function defer () {\n  const d = {}\n  d.promise = new Promise((resolve, reject) => {\n    d.resolve = resolve\n    d.reject = reject\n  })\n  return d\n}\n\n/**\n * Delay execution.\n * @param {number} duration in milleseconds.\n */\nexport function delay (duration) {\n  return new Promise(resolve => setTimeout(resolve, duration))\n}\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","export const platforms = {\n  LINK: 'link',\n  UC: 'uc',\n  CPAAS: 'cpaas'\n}\n\nexport const notificationTypes = {\n  WEBSOCKET: 'websocket',\n  PUSH: 'push'\n}\n\nexport const connCheckResponsibility = {\n  CLIENT: 'client',\n  SERVER: 'server'\n}\n\nexport const connCheckMethods = {\n  KEEP_ALIVE: 'keepAlive',\n  PING_PONG: 'pingPong'\n}\n","const prefix = '@@KANDY/WEBRTC/'\n\n/**\n * Device action types.\n */\nexport const DEVICES_CHANGE = prefix + 'DEVICES/CHANGE'\nexport const INITIALIZE_DEVICES = prefix + 'INITIALIZE_DEVICES'\nexport const INITIALIZE_DEVICES_FINISH = prefix + 'INITIALIZE_DEVICES_FINISH'\n\n/**\n * Track action types.\n */\nconst trackPrefix = prefix + 'TRACK/'\n\nexport const TRACK_ADDED = trackPrefix + 'ADDED'\nexport const TRACK_REMOVED = trackPrefix + 'REMOVED'\n\nexport const RENDER_TRACKS = trackPrefix + 'RENDER'\nexport const RENDER_TRACKS_FINISH = trackPrefix + 'RENDER_FINISH'\n\nexport const REMOVE_TRACKS = trackPrefix + 'REMOVE'\nexport const REMOVE_TRACKS_FINISH = trackPrefix + 'REMOVE_FINISH'\n\nexport const MUTE_TRACKS = trackPrefix + 'MUTE'\nexport const MUTE_TRACKS_FINISH = trackPrefix + 'MUTE_FINISH'\nexport const UNMUTE_TRACKS = trackPrefix + 'UNMUTE'\nexport const UNMUTE_TRACKS_FINISH = trackPrefix + 'UNMUTE_FINISH'\n\nexport const TRACK_SOURCE_MUTED = trackPrefix + 'SOURCE_MUTED'\nexport const TRACK_SOURCE_UNMUTED = trackPrefix + 'SOURCE_UNMUTED'\n\n/**\n * Session action types.\n */\nconst sessionPrefix = prefix + 'SESSION/'\n\nexport const SESSION_ADDED = sessionPrefix + 'ADDED'\nexport const SESSION_REMOVED = sessionPrefix + 'REMOVED'\n\nexport const SESSION_NEW_TRACK = sessionPrefix + 'NEW_TRACK'\nexport const SESSION_TRACK_ENDED = sessionPrefix + 'TRACK_ENDED'\nexport const SESSION_TRACK_REPLACED = sessionPrefix + 'TRACK_REPLACED'\n\n// Audio file from the `insertAudio` API has ended.\nexport const SESSION_AUDIO_ENDED = sessionPrefix + 'AUDIO_ENDED'\n\n// Peer events\nexport const SESSION_ICE_CONNECTION_STATE_CHANGE = sessionPrefix + 'ICE_CONNECTION_STATE_CHANGE'\nexport const SESSION_ICE_GATHERING_STATE_CHANGE = sessionPrefix + 'ICE_GATHERING_STATE_CHANGE'\nexport const SESSION_ICE_CANDIDATE_COLLECTED = sessionPrefix + 'ICE_CANDIDATE_COLLECTED'\nexport const SESSION_ICE_COLLECTION_SCHEDULED_CHECK = sessionPrefix + 'ICE_CANDIDATE_SCHEDULED_CHECK'\n\n/**\n * Media action types.\n */\nconst mediaPrefix = prefix + 'MEDIA/'\n\nexport const MEDIA_NEW = mediaPrefix + 'NEW'\nexport const MEDIA_REMOVED = mediaPrefix + 'REMOVED'\nexport const MEDIA_CHANGE = mediaPrefix + 'CHANGE'\n\nexport const MEDIA_NEW_TRACK = mediaPrefix + 'NEW_TRACK'\nexport const MEDIA_TRACK_ENDED = mediaPrefix + 'TRACK_ENDED'\n\n/**\n * Misc. action types.\n */\nexport const SET_BROWSER_DETAILS = prefix + 'SET_BROWSER_DETAILS'\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","const prefix = '@@KANDY/'\n\nexport const PROCESS_NOTIFICATION = prefix + 'PROCESS_NOTIFICATION'\nexport const PROCESS_NOTIFICATION_FINISH = prefix + 'PROCESS_NOTIFICATION_FINISH'\nexport const NOTIFICATION_RECEIVED = prefix + 'NOTIFICATION_RECEIVED'\n\nexport const ENABLE_NOTIFICATION_CHANNEL = prefix + 'ENABLE_NOTIFICATION_CHANNEL'\nexport const ENABLE_NOTIFICATION_CHANNEL_FINISH = prefix + 'ENABLE_NOTIFICATION_CHANNEL_FINISH'\n\nexport const REGISTER_APPLE_PUSH_NOTIFICATION = prefix + 'REGISTER_APPLE_PUSH_NOTIFICATION'\nexport const REGISTER_ANDROID_PUSH_NOTIFICATION = prefix + 'REGISTER_ANDROID_PUSH_NOTIFICATION'\n\nexport const UNREGISTER_APPLE_PUSH_NOTIFICATION = prefix + 'UNREGISTER_APPLE_PUSH_NOTIFICATION'\nexport const UNREGISTER_ANDROID_PUSH_NOTIFICATION = prefix + 'UNREGISTER_ANDROID_PUSH_NOTIFICATION'\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","/**\n * Retrieves media devices available on the system.\n * @method getDevices\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getDevices (state) {\n  return state.webrtc.devices\n}\n\n/**\n * Session selectors.\n */\nexport function getSessions (state) {\n  return state.webrtc.sessions\n}\n\nexport function getSessionById (state, sessionId) {\n  return getSessions(state).find(session => session.id === sessionId)\n}\n\n/**\n * Track selectors.\n */\nexport function getTracks (state) {\n  return state.webrtc.tracks\n}\n\nexport function getTrackById (state, trackId) {\n  return getTracks(state).find(track => track.trackId === trackId)\n}\n\n/**\n * Media selectors.\n * Handles retrieving data from the `state.webrtc.media` substate.\n */\n\n/**\n * Get the list of all media this session.\n * @method getMedia\n * @param  {Object} state Redux state.\n * @return {Array} A list of all media objects.\n */\nexport function getMedia (state) {\n  return state.webrtc.media\n}\n\n/**\n * Get a specific media object.\n * @method getMediaById\n * @param  {Object} state Redux state.\n * @param  {string} mediaId The media to retrieve.\n * @return {Object} A media object.\n */\nexport function getMediaById (state, mediaId) {\n  return getMedia(state).find(media => media.id === mediaId)\n}\n\n/**\n * Retrieves information about the browser.\n * @method getBrowserDetails\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getBrowserDetails (state) {\n  return state.webrtc.browser\n}\n","import createManager from 'kandy-logger'\n\nconst manager = createManager({ level: 'DEBUG' })\nexport const logManager = manager\n","// Call plugin\nimport { getCallById } from '../../interface/selectors'\nimport { callActions } from '../../interface/actions'\nimport * as eventTypes from '../../interface/eventTypes'\nimport { OP_TRANSITIONS, OP_STATUS, OPERATIONS } from '../../interface/constants'\n\n// Other plugins\nimport { getTrackById } from '../../../webrtc/interface/selectors'\n\n// Libraries\nimport { without } from 'lodash/fp'\n\n/**\n * Helper function to get all local tracks of a certain type\n *\n * @param {Object} context The bottle context object.\n * @param {string} id The id of the call\n * @param {string} [kind] Kind must be of type 'audio' or 'video'\n * @return {Array<Object>} returns an array of tracks of the given type\n */\nexport function getLocalTracks (context, id, kind) {\n  // TODO: Why is `context` passed-in if only state is needed?\n  const call = getCallById(context.getState(), id)\n  const localTracks = call ? call.localTracks : []\n  const tracks = localTracks.map(id => getTrackById(context.getState(), id))\n  return kind ? tracks.filter(track => track.kind === kind) : tracks\n}\n\nfunction tracksRemoved (action, prevState, currentState) {\n  /*\n   * Special-case: If the call was previously on remote hold with a track, then that\n   *    track was MoH and is being removed as part of the unhold operation. Need to\n   *    also emit an event to notify that the track is gone.\n   * This is needed because \"stop MoH\" and \"unhold\" are done in a single renegotiation\n   *    instead of as two.\n   */\n  const prevCall = getCallById(prevState, action.payload.id)\n  if (prevCall.localHold === false && prevCall.remoteHold === true && prevCall.remoteTracks.length > 0) {\n    // Get the tracks from prevCall that are not in newCall.\n    const newCall = getCallById(currentState, action.payload.id)\n    const removedTracks = prevCall.remoteTracks.filter(id => !newCall.remoteTracks.includes(id))\n    return removedTracks\n  }\n  return []\n}\n\nfunction getNewRemoteTracks (action, prevState, currentState) {\n  // Get the list of remote tracks previously on the call.\n  const prevCall = getCallById(prevState, action.payload.id)\n  const { remoteTracks: prevRemote } = prevCall\n\n  // Get the list of NEW remote tracks actually added to the Call by the operation.\n  // In early media scenarios, there will be a duplicate remote track.\n  const { localTracks = [], remoteTracks = [] } = action.payload\n  const newRemote = without(prevRemote, remoteTracks)\n\n  const trackIds = [...localTracks, ...newRemote]\n\n  // Don't emit the event if no tracks were actually added.\n  // For example, when entering dual hold.\n  if (!trackIds || trackIds.length === 0) {\n    return undefined\n  }\n\n  return trackIds\n}\n\n/**\n * @typedef {Object} ActionEventMap\n * @property {function} callAction A redux action creator\n * @property {Array} eventFns An array of event creator functions\n */\n/**\n * Helper function that returns a call action function and events based on the\n * remote operation being requested\n * TODO: Move this somewhere better.\n * TODO: Do this differently / better.\n * @method getCallAction\n * @param (string) remoteOp Remote operation being requested\n * @returns {ActionEventMap} Action and event creator functions.\n */\nexport function getCallAction (remoteOp) {\n  function event (type) {\n    return function (action, prevState, currentState) {\n      const call = getCallById(currentState, action.payload.id)\n      const { localTracks = [], remoteTracks = [] } = action.payload\n      const trackIds = [...localTracks, ...remoteTracks]\n\n      switch (type) {\n        case eventTypes.CALL_OPERATION:\n          return {\n            type,\n            args: {\n              callId: action.payload.id,\n              isLocal: false,\n              operation: remoteOp,\n              transition: OP_TRANSITIONS.FINISH,\n              previous: {\n                operation: remoteOp,\n                status: OP_STATUS.ONGOING\n              },\n              error: action.payload.error\n            },\n            skip: false\n          }\n        case eventTypes.CALL_STATE_CHANGE:\n          return {\n            type,\n            args: {\n              callId: action.payload.id,\n              previous: {\n                state: call.state,\n                localHold: call.localHold,\n                remoteHold: call.remoteHold\n              },\n              error: action.payload.error\n            },\n            skip: false\n          }\n        case eventTypes.CALL_TRACKS_REMOVED: {\n          const removedTracks = tracksRemoved(action, prevState, currentState)\n          return {\n            type,\n            args: {\n              callId: action.payload.id,\n              trackIds: remoteOp === OPERATIONS.UNHOLD ? removedTracks : trackIds\n            },\n            skip:\n              trackIds.length === 0 ||\n              (remoteOp === OPERATIONS.UNHOLD && (!removedTracks || removedTracks.length === 0))\n          }\n        }\n        case eventTypes.CALL_TRACKS_ADDED:\n          return {\n            type,\n            args: {\n              callId: action.payload.id,\n              trackIds: getNewRemoteTracks(action, prevState, currentState)\n            },\n            skip: !getNewRemoteTracks(action, prevState, currentState)\n          }\n      }\n    }\n  }\n\n  // Determine what redux action the operation represents.\n  switch (remoteOp) {\n    case OPERATIONS.HOLD:\n      return {\n        callAction: callActions.remoteHoldFinish,\n        eventFns: [\n          event(eventTypes.CALL_OPERATION),\n          event(eventTypes.CALL_STATE_CHANGE),\n          event(eventTypes.CALL_TRACKS_REMOVED)\n        ]\n      }\n    case OPERATIONS.UNHOLD:\n      return {\n        callAction: callActions.remoteUnholdFinish,\n        eventFns: [\n          event(eventTypes.CALL_OPERATION),\n          event(eventTypes.CALL_STATE_CHANGE),\n          event(eventTypes.CALL_TRACKS_ADDED),\n          // If MoH we need an event to notify that the MoH track was removed\n          event(eventTypes.CALL_TRACKS_REMOVED)\n        ]\n      }\n    case OPERATIONS.ADD_MEDIA:\n      return {\n        callAction: callActions.remoteAddMediaFinish,\n        eventFns: [event(eventTypes.CALL_TRACKS_ADDED)]\n      }\n    case OPERATIONS.REMOVE_MEDIA:\n      return {\n        callAction: callActions.remoteRemoveMediaFinish,\n        eventFns: [event(eventTypes.CALL_TRACKS_REMOVED)]\n      }\n    case OPERATIONS.START_MOH:\n      return {\n        callAction: callActions.remoteStartMohFinish,\n        eventFns: [event(eventTypes.CALL_TRACKS_ADDED)]\n      }\n    case OPERATIONS.STOP_MOH:\n      return {\n        callAction: callActions.remoteStopMohFinish,\n        eventFns: [event(eventTypes.CALL_TRACKS_REMOVED)]\n      }\n    case OPERATIONS.SLOW_START:\n      return {\n        callAction: callActions.remoteSlowStart,\n        eventFns: []\n      }\n  }\n\n  return {\n    callAction: callActions.updateCall,\n    eventFns: []\n  }\n}\n\nexport function getLocalOpTrackEvents (callId, operation, action, prevState, currState) {\n  switch (operation) {\n    case OPERATIONS.HOLD:\n    case OPERATIONS.REMOVE_MEDIA:\n    case OPERATIONS.REMOVE_BASIC_MEDIA: {\n      const trackIds = []\n      if (action.payload.localTracks) {\n        trackIds.push(...action.payload.localTracks)\n      }\n      if (action.payload.remoteTracks) {\n        trackIds.push(...action.payload.remoteTracks)\n      }\n      if (trackIds.length) {\n        return {\n          type: eventTypes.CALL_TRACKS_REMOVED,\n          args: { callId, trackIds }\n        }\n      }\n      return\n    }\n    case OPERATIONS.UNHOLD:\n    case OPERATIONS.ADD_MEDIA:\n    case OPERATIONS.ADD_BASIC_MEDIA: {\n      const trackIds = getNewRemoteTracks(action, prevState, currState)\n      if (trackIds) {\n        return {\n          type: eventTypes.CALL_TRACKS_ADDED,\n          args: { callId, trackIds }\n        }\n      }\n      return\n    }\n    case OPERATIONS.MEDIA_RESTART: {\n      return {\n        type: eventTypes.MEDIA_RESTART,\n        args: { callId }\n      }\n    }\n  }\n}\n\n/**\n * Generates extra informational parameters for ending a call.\n *\n * @method generateEndParams\n * @param {string}  currentCallState The state of the current call, before it was ended.\n * @param {boolean} isLocal Specifies if end operation was caused by the local side.\n * @param {Object}  params Extra context information related to the call.\n * @param {string}  [params.reasonText]  Human-readable explanation for the call change.\n * @param {string}  [params.statusCode] Code representing the reason for the call change.\n * @param {string}  params.remoteName   Name of the remote participant.\n * @param {string}  params.remoteNumber Number of the remote participant.\n */\nexport function generateEndParams (currentCallState, isLocal, params) {\n  const endParams = {\n    isLocal,\n    remoteParticipant: {\n      displayNumber: params.remoteNumber,\n      displayName: params.remoteName\n    },\n    transition: {\n      prevState: currentCallState\n    }\n  }\n  if (params.statusCode) {\n    endParams.transition.statusCode = params.statusCode\n  }\n  if (params.reasonText) {\n    endParams.transition.reasonText = params.reasonText\n  }\n  return endParams\n}\n\n/**\n * Maps media tracks with the dscpControls provided to ensure the correct senders are set up with the\n * proper networkPriority\n * @param {Object} trackLists\n * @param {Array<Track>} trackLists.audio The list of audio tracks\n * @param {Array<Track>} trackLists.video The list of video tracks\n * @param {Array<Track>} trackLists.screen The list of screen tracks\n * @param {Object} dscpControls The DSCP controls provided\n * @return {Object} An object map of track: dscpSetting for all applicable tracks\n */\nexport function getTrackDscpMapping (trackLists, dscpControls) {\n  const { audio: audioTracks, video: videoTracks, screen: screenTracks } = trackLists\n\n  const dscpTrackMapping = {}\n  if (dscpControls) {\n    if (dscpControls.screenNetworkPriority) {\n      for (const screenTrack of screenTracks) {\n        dscpTrackMapping[screenTrack.id] = dscpControls.screenNetworkPriority\n      }\n    }\n    if (dscpControls.audioNetworkPriority) {\n      for (const audioTrack of audioTracks) {\n        dscpTrackMapping[audioTrack.id] = dscpControls.audioNetworkPriority\n      }\n    }\n    if (dscpControls.videoNetworkPriority) {\n      for (const videoTrack of videoTracks) {\n        dscpTrackMapping[videoTrack.id] = dscpControls.videoNetworkPriority\n      }\n    }\n  }\n\n  return dscpTrackMapping\n}\n\n/**\n * Checks whether the bandwidth controls provided exist and are numbers.\n * @param {BandwidthControls} bandwidthControls The bandwidth controls to check.\n */\nexport function checkBandwidthControls (bandwidthControls) {\n  // TODO: Is this function needed for anything other than ensuring\n  //    the bandwidth object has the \"right\" format? Is that even needed?\n  const finalBandwidthControls = { ...bandwidthControls }\n\n  // If there are no bandwidth limits set or the bandwidth limits provided are not numbers, set them to undefined\n  if (!bandwidthControls || !(bandwidthControls.audio && typeof bandwidthControls.audio === 'number')) {\n    finalBandwidthControls.audio = null\n  }\n  if (!bandwidthControls || !(bandwidthControls.video && typeof bandwidthControls.video === 'number')) {\n    finalBandwidthControls.video = null\n  }\n  return finalBandwidthControls\n}\n","export default (function (value) {\n  return typeof value === 'function';\n});","export default (function (value) {\n  return typeof value === 'symbol' || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Symbol]';\n});","export default (function (value) {\n  return value.length === 0;\n});","export default (function (value) {\n  return value.toString();\n});","export default (function (value) {\n  return typeof value === 'string';\n});","export var DEFAULT_NAMESPACE = '/';\nexport var ACTION_TYPE_DELIMITER = '||';","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport isSymbol from './utils/isSymbol';\nimport isEmpty from './utils/isEmpty';\nimport toString from './utils/toString';\nimport isString from './utils/isString';\nimport { ACTION_TYPE_DELIMITER } from './constants';\n\nfunction isValidActionType(type) {\n  return isString(type) || isFunction(type) || isSymbol(type);\n}\n\nfunction isValidActionTypes(types) {\n  if (isEmpty(types)) {\n    return false;\n  }\n\n  return types.every(isValidActionType);\n}\n\nexport default function combineActions() {\n  for (var _len = arguments.length, actionsTypes = new Array(_len), _key = 0; _key < _len; _key++) {\n    actionsTypes[_key] = arguments[_key];\n  }\n\n  invariant(isValidActionTypes(actionsTypes), 'Expected action types to be strings, symbols, or action creators');\n  var combinedActionType = actionsTypes.map(toString).join(ACTION_TYPE_DELIMITER);\n  return {\n    toString: function toString() {\n      return combinedActionType;\n    }\n  };\n}","export default (function (value) {\n  return value;\n});","export default (function (value) {\n  return value === null;\n});","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport identity from './utils/identity';\nimport isNull from './utils/isNull';\nexport default function createAction(type, payloadCreator, metaCreator) {\n  if (payloadCreator === void 0) {\n    payloadCreator = identity;\n  }\n\n  invariant(isFunction(payloadCreator) || isNull(payloadCreator), 'Expected payloadCreator to be a function, undefined or null');\n  var finalPayloadCreator = isNull(payloadCreator) || payloadCreator === identity ? identity : function (head) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return head instanceof Error ? head : payloadCreator.apply(void 0, [head].concat(args));\n  };\n  var hasMeta = isFunction(metaCreator);\n  var typeString = type.toString();\n\n  var actionCreator = function actionCreator() {\n    var payload = finalPayloadCreator.apply(void 0, arguments);\n    var action = {\n      type: type\n    };\n\n    if (payload instanceof Error) {\n      action.error = true;\n    }\n\n    if (payload !== undefined) {\n      action.payload = payload;\n    }\n\n    if (hasMeta) {\n      action.meta = metaCreator.apply(void 0, arguments);\n    }\n\n    return action;\n  };\n\n  actionCreator.toString = function () {\n    return typeString;\n  };\n\n  return actionCreator;\n}","export default (function (value) {\n  if (typeof value !== 'object' || value === null) return false;\n  var proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n});","export default (function (value) {\n  return Array.isArray(value);\n});","export default (function (value) {\n  return value === null || value === undefined;\n});","export default (function (array) {\n  return array[array.length - 1];\n});","import camelCase from 'to-camel-case';\nvar namespacer = '/';\nexport default (function (type) {\n  return type.indexOf(namespacer) === -1 ? camelCase(type) : type.split(namespacer).map(camelCase).join(namespacer);\n});","export default (function (array, callback) {\n  return array.reduce(function (partialObject, element) {\n    return callback(partialObject, element);\n  }, {});\n});","export default (function (value) {\n  return typeof Map !== 'undefined' && value instanceof Map;\n});","import isMap from './isMap';\nexport default function ownKeys(object) {\n  if (isMap(object)) {\n    // We are using loose transforms in babel. Here we are trying to convert an\n    // interable to an array. Loose mode expects everything to already be an\n    // array. The problem is that our eslint rules encourage us to prefer\n    // spread over Array.from.\n    //\n    // Instead of disabling loose mode we simply disable the warning.\n    // eslint-disable-next-line unicorn/prefer-spread\n    return Array.from(object.keys());\n  }\n\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    return Reflect.ownKeys(object);\n  }\n\n  var keys = Object.getOwnPropertyNames(object);\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    keys = keys.concat(Object.getOwnPropertySymbols(object));\n  }\n\n  return keys;\n}","import isMap from './isMap';\nexport default function get(key, x) {\n  return isMap(x) ? x.get(key) : x[key];\n}","import { DEFAULT_NAMESPACE, ACTION_TYPE_DELIMITER } from '../constants';\nimport ownKeys from './ownKeys';\nimport get from './get';\nexport default (function (predicate) {\n  return function flatten(map, _temp, partialFlatMap, partialFlatActionType) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$namespace = _ref.namespace,\n        namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace,\n        prefix = _ref.prefix;\n\n    if (partialFlatMap === void 0) {\n      partialFlatMap = {};\n    }\n\n    if (partialFlatActionType === void 0) {\n      partialFlatActionType = '';\n    }\n\n    function connectNamespace(type) {\n      var _ref2;\n\n      if (!partialFlatActionType) return type;\n      var types = type.toString().split(ACTION_TYPE_DELIMITER);\n      var partials = partialFlatActionType.split(ACTION_TYPE_DELIMITER);\n      return (_ref2 = []).concat.apply(_ref2, partials.map(function (p) {\n        return types.map(function (t) {\n          return \"\" + p + namespace + t;\n        });\n      })).join(ACTION_TYPE_DELIMITER);\n    }\n\n    function connectPrefix(type) {\n      if (partialFlatActionType || !prefix || prefix && new RegExp(\"^\" + prefix + namespace).test(type)) {\n        return type;\n      }\n\n      return \"\" + prefix + namespace + type;\n    }\n\n    ownKeys(map).forEach(function (type) {\n      var nextNamespace = connectPrefix(connectNamespace(type));\n      var mapValue = get(type, map);\n\n      if (predicate(mapValue)) {\n        flatten(mapValue, {\n          namespace: namespace,\n          prefix: prefix\n        }, partialFlatMap, nextNamespace);\n      } else {\n        partialFlatMap[nextNamespace] = mapValue;\n      }\n    });\n    return partialFlatMap;\n  };\n});","import isPlainObject from './isPlainObject';\nimport flattenWhenNode from './flattenWhenNode';\nexport default flattenWhenNode(isPlainObject);","import { DEFAULT_NAMESPACE } from '../constants';\nimport isEmpty from './isEmpty';\nimport camelCase from './camelCase';\nexport default function unflattenActionCreators(flatActionCreators, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace,\n      prefix = _ref.prefix;\n\n  function unflatten(flatActionType, partialNestedActionCreators, partialFlatActionTypePath) {\n    var nextNamespace = camelCase(partialFlatActionTypePath.shift());\n\n    if (isEmpty(partialFlatActionTypePath)) {\n      partialNestedActionCreators[nextNamespace] = flatActionCreators[flatActionType];\n    } else {\n      if (!partialNestedActionCreators[nextNamespace]) {\n        partialNestedActionCreators[nextNamespace] = {};\n      }\n\n      unflatten(flatActionType, partialNestedActionCreators[nextNamespace], partialFlatActionTypePath);\n    }\n  }\n\n  var nestedActionCreators = {};\n  Object.getOwnPropertyNames(flatActionCreators).forEach(function (type) {\n    var unprefixedType = prefix ? type.replace(\"\" + prefix + namespace, '') : type;\n    return unflatten(type, nestedActionCreators, unprefixedType.split(namespace));\n  });\n  return nestedActionCreators;\n}","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isFunction from './utils/isFunction';\nimport identity from './utils/identity';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isNil from './utils/isNil';\nimport getLastElement from './utils/getLastElement';\nimport camelCase from './utils/camelCase';\nimport arrayToObject from './utils/arrayToObject';\nimport flattenActionMap from './utils/flattenActionMap';\nimport unflattenActionCreators from './utils/unflattenActionCreators';\nimport createAction from './createAction';\nimport { DEFAULT_NAMESPACE } from './constants';\nexport default function createActions(actionMap) {\n  for (var _len = arguments.length, identityActions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    identityActions[_key - 1] = arguments[_key];\n  }\n\n  var options = isPlainObject(getLastElement(identityActions)) ? identityActions.pop() : {};\n  invariant(identityActions.every(isString) && (isString(actionMap) || isPlainObject(actionMap)), 'Expected optional object followed by string action types');\n\n  if (isString(actionMap)) {\n    return actionCreatorsFromIdentityActions([actionMap].concat(identityActions), options);\n  }\n\n  return _objectSpread({}, actionCreatorsFromActionMap(actionMap, options), actionCreatorsFromIdentityActions(identityActions, options));\n}\n\nfunction actionCreatorsFromActionMap(actionMap, options) {\n  var flatActionMap = flattenActionMap(actionMap, options);\n  var flatActionCreators = actionMapToActionCreators(flatActionMap);\n  return unflattenActionCreators(flatActionCreators, options);\n}\n\nfunction actionMapToActionCreators(actionMap, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      prefix = _ref.prefix,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace;\n\n  function isValidActionMapValue(actionMapValue) {\n    if (isFunction(actionMapValue) || isNil(actionMapValue)) {\n      return true;\n    }\n\n    if (isArray(actionMapValue)) {\n      var _actionMapValue$ = actionMapValue[0],\n          payload = _actionMapValue$ === void 0 ? identity : _actionMapValue$,\n          meta = actionMapValue[1];\n      return isFunction(payload) && isFunction(meta);\n    }\n\n    return false;\n  }\n\n  return arrayToObject(Object.keys(actionMap), function (partialActionCreators, type) {\n    var _objectSpread2;\n\n    var actionMapValue = actionMap[type];\n    invariant(isValidActionMapValue(actionMapValue), 'Expected function, undefined, null, or array with payload and meta ' + (\"functions for \" + type));\n    var prefixedType = prefix ? \"\" + prefix + namespace + type : type;\n    var actionCreator = isArray(actionMapValue) ? createAction.apply(void 0, [prefixedType].concat(actionMapValue)) : createAction(prefixedType, actionMapValue);\n    return _objectSpread({}, partialActionCreators, (_objectSpread2 = {}, _objectSpread2[type] = actionCreator, _objectSpread2));\n  });\n}\n\nfunction actionCreatorsFromIdentityActions(identityActions, options) {\n  var actionMap = arrayToObject(identityActions, function (partialActionMap, type) {\n    var _objectSpread3;\n\n    return _objectSpread({}, partialActionMap, (_objectSpread3 = {}, _objectSpread3[type] = identity, _objectSpread3));\n  });\n  var actionCreators = actionMapToActionCreators(actionMap, options);\n  return arrayToObject(Object.keys(actionCreators), function (partialActionCreators, type) {\n    var _objectSpread4;\n\n    return _objectSpread({}, partialActionCreators, (_objectSpread4 = {}, _objectSpread4[camelCase(type)] = actionCreators[type], _objectSpread4));\n  });\n}","import curry from 'just-curry-it';\nimport createAction from './createAction';\nexport default (function (type, payloadCreator) {\n  return curry(createAction(type, payloadCreator), payloadCreator.length);\n});","export default (function (value) {\n  return value === undefined;\n});","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport isPlainObject from './utils/isPlainObject';\nimport identity from './utils/identity';\nimport isNil from './utils/isNil';\nimport isUndefined from './utils/isUndefined';\nimport toString from './utils/toString';\nimport { ACTION_TYPE_DELIMITER } from './constants';\nexport default function handleAction(type, reducer, defaultState) {\n  if (reducer === void 0) {\n    reducer = identity;\n  }\n\n  var types = toString(type).split(ACTION_TYPE_DELIMITER);\n  invariant(!isUndefined(defaultState), \"defaultState for reducer handling \" + types.join(', ') + \" should be defined\");\n  invariant(isFunction(reducer) || isPlainObject(reducer), 'Expected reducer to be a function or object with next and throw reducers');\n\n  var _ref = isFunction(reducer) ? [reducer, reducer] : [reducer.next, reducer.throw].map(function (aReducer) {\n    return isNil(aReducer) ? identity : aReducer;\n  }),\n      nextReducer = _ref[0],\n      throwReducer = _ref[1];\n\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    var actionType = action.type;\n\n    if (!actionType || types.indexOf(toString(actionType)) === -1) {\n      return state;\n    }\n\n    return (action.error === true ? throwReducer : nextReducer)(state, action);\n  };\n}","export default (function () {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var initialState = typeof args[args.length - 1] !== 'function' && args.pop();\n  var reducers = args;\n\n  if (typeof initialState === 'undefined') {\n    throw new TypeError('The initial state may not be undefined. If you do not want to set a value for this reducer, you can use null instead of undefined.');\n  }\n\n  return function (prevState, value) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    var prevStateIsUndefined = typeof prevState === 'undefined';\n    var valueIsUndefined = typeof value === 'undefined';\n\n    if (prevStateIsUndefined && valueIsUndefined && initialState) {\n      return initialState;\n    }\n\n    return reducers.reduce(function (newState, reducer) {\n      return reducer.apply(undefined, [newState, value].concat(args));\n    }, prevStateIsUndefined && !valueIsUndefined && initialState ? initialState : prevState);\n  };\n});","import ownKeys from './ownKeys';\nexport default function hasGeneratorInterface(handler) {\n  var keys = ownKeys(handler);\n  var hasOnlyInterfaceNames = keys.every(function (ownKey) {\n    return ownKey === 'next' || ownKey === 'throw';\n  });\n  return keys.length && keys.length <= 2 && hasOnlyInterfaceNames;\n}","import isPlainObject from './isPlainObject';\nimport isMap from './isMap';\nimport hasGeneratorInterface from './hasGeneratorInterface';\nimport flattenWhenNode from './flattenWhenNode';\nexport default flattenWhenNode(function (node) {\n  return (isPlainObject(node) || isMap(node)) && !hasGeneratorInterface(node);\n});","import reduceReducers from 'reduce-reducers';\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isMap from './utils/isMap';\nimport ownKeys from './utils/ownKeys';\nimport flattenReducerMap from './utils/flattenReducerMap';\nimport handleAction from './handleAction';\nimport get from './utils/get';\nexport default function handleActions(handlers, defaultState, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  invariant(isPlainObject(handlers) || isMap(handlers), 'Expected handlers to be a plain object.');\n  var flattenedReducerMap = flattenReducerMap(handlers, options);\n  var reducers = ownKeys(flattenedReducerMap).map(function (type) {\n    return handleAction(type, get(type, flattenedReducerMap), defaultState);\n  });\n  var reducer = reduceReducers.apply(void 0, reducers.concat([defaultState]));\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    return reducer(state, action);\n  };\n}","import combineActions from './combineActions';\nimport createAction from './createAction';\nimport createActions from './createActions';\nimport createCurriedAction from './createCurriedAction';\nimport handleAction from './handleAction';\nimport handleActions from './handleActions';\nexport { combineActions, createAction, createActions, createCurriedAction, handleAction, handleActions };","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","const callPrefix = '@@KANDY/CALL/'\n\n/**\n * Basic call operation actions.\n */\nexport const MAKE_CALL = callPrefix + 'MAKE'\nexport const PENDING_MAKE_CALL = callPrefix + 'PENDING_MAKE'\nexport const SESSION_CREATED = callPrefix + 'SESSION_CREATED'\nexport const MAKE_CALL_FINISH = callPrefix + 'MAKE_FINISH'\n\nexport const MAKE_ANONYMOUS_CALL = callPrefix + 'MAKE_ANONYMOUS_CALL'\nexport const MAKE_ANONYMOUS_CALL_FINISH = callPrefix + 'MAKE_ANONYMOUS_CALL_FINISH'\n\nexport const CALL_INCOMING = callPrefix + 'INCOMING'\n\nexport const SEND_RINGING_FEEDBACK = callPrefix + 'SEND_RINGING_FEEDBACK'\nexport const SEND_RINGING_FEEDBACK_FINISH = callPrefix + 'SEND_RINGING_FEEDBACK_FINISH'\n\nexport const CALL_RINGING = callPrefix + 'RINGING'\nexport const SESSION_PROGRESS = callPrefix + 'SESSION_PROGRESS'\nexport const CALL_CANCELLED = callPrefix + 'CANCELLED'\n\nexport const ANSWER_CALL = callPrefix + 'ANSWER'\nexport const ANSWER_CALL_FINISH = callPrefix + 'ANSWER_FINISH'\n\nexport const REJECT_CALL = callPrefix + 'REJECT'\nexport const REJECT_CALL_FINISH = callPrefix + 'REJECT_FINISH'\n\nexport const IGNORE_CALL = callPrefix + 'IGNORE'\nexport const IGNORE_CALL_FINISH = callPrefix + 'IGNORE_FINISH'\n\nexport const CALL_ACCEPTED = callPrefix + 'ACCEPTED'\n\nexport const END_CALL = callPrefix + 'END'\nexport const END_CALL_FINISH = callPrefix + 'END_FINISH'\n\nexport const FORWARD_CALL = callPrefix + 'FORWARD_CALL'\nexport const FORWARD_CALL_FINISH = callPrefix + 'FORWARD_CALL_FINISH'\n\nexport const PENDING_OPERATION = callPrefix + 'PENDING_OPERATION'\n\n/**\n * Mid-call operation actions.\n */\n\nexport const UPDATE_CALL = callPrefix + 'UPDATE_CALL'\n\nexport const CALL_HOLD = callPrefix + 'HOLD'\nexport const CALL_HOLD_FINISH = callPrefix + 'HOLD_FINISH'\n\nexport const CALL_UNHOLD = callPrefix + 'UNHOLD'\nexport const CALL_UNHOLD_FINISH = callPrefix + 'UNHOLD_FINISH'\n\nexport const SET_CUSTOM_PARAMETERS = callPrefix + 'SET_CUSTOM_PARAMETERS'\n\nexport const SEND_CUSTOM_PARAMETERS = callPrefix + 'SEND_CUSTOM_PARAMETERS'\nexport const SEND_CUSTOM_PARAMETERS_FINISH = callPrefix + 'SEND_CUSTOM_PARAMETERS_FINISH'\n\nexport const ADD_MEDIA = callPrefix + 'ADD_MEDIA'\nexport const ADD_MEDIA_FINISH = callPrefix + 'ADD_MEDIA_FINISH'\nexport const ADD_BASIC_MEDIA = callPrefix + 'ADD_BASIC_MEDIA'\n\nexport const REMOVE_MEDIA = callPrefix + 'REMOVE_MEDIA'\nexport const REMOVE_MEDIA_FINISH = callPrefix + 'REMOVE_MEDIA_FINISH'\nexport const REMOVE_BASIC_MEDIA = callPrefix + 'REMOVE_BASIC_MEDIA'\n\nexport const MUSIC_ON_HOLD = callPrefix + 'MUSIC_ON_HOLD'\n\nexport const SEND_DTMF = callPrefix + 'SEND_DTMF'\nexport const SEND_DTMF_FINISH = callPrefix + 'SEND_DTMF_FINISH'\n\nexport const GET_STATS = callPrefix + 'GET_STATS'\nexport const GET_STATS_FINISH = callPrefix + 'GET_STATS_FINISH'\n\nexport const CONSULTATIVE_TRANSFER = callPrefix + 'CONSULTATIVE_TRANSFER'\nexport const PENDING_CONSULTATIVE_TRANSFER = callPrefix + 'PENDING_CONSULTATIVE_TRANSFER'\nexport const CONSULTATIVE_TRANSFER_FINISH = callPrefix + 'CONSULTATIVE_TRANSFER_FINISH'\n\nexport const DIRECT_TRANSFER = callPrefix + 'DIRECT_TRANSFER'\nexport const DIRECT_TRANSFER_FINISH = callPrefix + 'DIRECT_TRANSFER_FINISH'\n\nexport const JOIN = callPrefix + 'JOIN'\nexport const JOIN_START = callPrefix + 'JOIN_START'\nexport const PENDING_JOIN = callPrefix + 'PENDING_JOIN'\nexport const JOIN_FINISH = callPrefix + 'JOIN_FINISH'\n\nexport const REPLACE_TRACK = callPrefix + 'REPLACE_TRACK'\nexport const REPLACE_TRACK_FINISH = callPrefix + 'REPLACE_TRACK_FINISH'\n\nexport const MEDIA_RESTART = callPrefix + 'MEDIA_RESTART'\nexport const MEDIA_RESTART_FINISH = callPrefix + 'MEDIA_RESTART_FINISH'\n\nexport const RESYNC = callPrefix + 'RESYNC'\nexport const RESYNC_FINISH = callPrefix + 'RESYNC_FINISH'\n\nexport const PLAY_AUDIO = callPrefix + 'PLAY_AUDIO'\nexport const PENDING_PLAY_AUDIO = callPrefix + 'PENDING_PLAY_AUDIO'\nexport const PLAY_AUDIO_FINISH = callPrefix + 'PLAY_AUDIO_FINISH'\n\n/**\n * Miscellaneous call actions\n */\nexport const CUSTOM_PARAMETERS_RECEIVED = callPrefix + 'CUSTOM_PARAMETERS_RECEIVED'\nexport const GET_AVAILABLE_CODECS = callPrefix + 'GET_AVAILABLE_CODECS'\nexport const AVAILABLE_CODECS_RETRIEVED = callPrefix + 'AVAILABLE_CODECS_RETRIEVED'\n\nexport const OPERATION_UPDATE = callPrefix + 'OPERATION_UPDATE'\n\n/**\n * Remote operation actions.\n */\nexport const CALL_REMOTE_HOLD_FINISH = callPrefix + 'REMOTE_HOLD_FINISH'\nexport const CALL_REMOTE_UNHOLD_FINISH = callPrefix + 'REMOTE_UNHOLD_FINISH'\nexport const REMOTE_ADD_MEDIA_FINISH = callPrefix + 'REMOTE_ADD_MEDIA_FINISH'\nexport const REMOTE_REMOVE_MEDIA_FINISH = callPrefix + 'REMOTE_REMOVE_MEDIA_FINISH'\nexport const REMOTE_START_MOH_FINISH = callPrefix + 'REMOTE_START_MOH_FINISH'\nexport const REMOTE_STOP_MOH_FINISH = callPrefix + 'REMOTE_STOP_MOH_FINISH'\nexport const REMOTE_SLOW_START = callPrefix + 'REMOTE_SLOW_START'\n\n/**\n * Turn action types.\n */\nconst turnPrefix = callPrefix + 'TURN/'\n\nexport const TURN_CHANGED = turnPrefix + 'CHANGED'\n\n/**\n * Track action types.\n */\nconst trackPrefix = callPrefix + 'TRACK/'\n\nexport const TRACK_ADDED = trackPrefix + 'ADDED'\nexport const TRACK_REMOVED = trackPrefix + 'REMOVED'\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseParams = parser.parseParams;\nexports.parseFmtpConfig = parser.parseFmtpConfig; // Alias of parseParams().\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","import * as deviceActionsImport from './devices'\nimport * as trackActionsImport from './tracks'\nimport * as sessionActionsImport from './sessions'\nimport * as mediaActionsImport from './media'\nimport * as miscActionsImport from './misc'\n\n// Apparently the following doesn't work:\n//      export * as newName from './place';\n// So import everything from each file, then re-export.\nexport const deviceActions = deviceActionsImport\nexport const trackActions = trackActionsImport\nexport const sessionActions = sessionActionsImport\nexport const mediaActions = mediaActionsImport\nexport const miscActions = miscActionsImport\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * Constants relating to the Peer model.\n */\nexport const PEER = {\n  TRICKLE_ICE: {\n    FULL: 'FULL',\n    HALF: 'HALF',\n    NONE: 'NONE'\n  },\n  // Defined by the RTCPeerConnection.iceGatheringState spec.\n  ICE_GATHERING_STATE: {\n    NEW: 'new',\n    GATHERING: 'gathering',\n    COMPLETE: 'complete'\n  },\n  ENDPOINT: {\n    LOCAL: 'local',\n    REMOTE: 'remote'\n  }\n}\n\n/**\n * SDP constants for media direction.\n * @type {Object}\n */\nexport const MEDIA_DIR = {\n  INACTIVE: 'inactive',\n  SEND_ONLY: 'sendonly',\n  RECV_ONLY: 'recvonly',\n  SEND_RECV: 'sendrecv'\n}\n\n/**\n * Reasons for calling the Ice Collection Check function.\n * @name ICE_COLLECTION_CHECK_REASONS\n */\nexport const ICE_COLLECTION_CHECK_REASONS = {\n  ICE_GATHERING_STATE_CHANGE: 'IceGatheringStateChanged',\n  NEW_CANDIDATE: 'NewCandidate',\n  SCHEDULED: 'Scheduled'\n}\n\n/**\n * Result types for the Ice Collection Check Function.\n * @name ICE_COLLECTION_RESULT_TYPES\n */\nexport const ICE_COLLECTION_RESULT_TYPES = {\n  START_CALL: 'StartCall',\n  WAIT: 'Wait',\n  ERROR: 'Error'\n}\n","const prefix = '@@KANDY/CONN/'\n\n// Actions to tell connectivity plugin what to do\nexport const WS_ATTEMPT_CONNECT = prefix + 'WS_ATTEMPT_CONNECT'\nexport const WS_CONNECT_FINISHED = prefix + 'WS_CONNECT_FINISHED'\nexport const WS_DISCONNECT = prefix + 'WS_DISCONNECT'\nexport const WS_DISCONNECT_FINISHED = prefix + 'WS_DISCONNECT_FINISHED'\nexport const WS_RECONNECT_FAILED = prefix + 'WS_RECONNECT_FAILED'\n\n// actions for hooking into connectivity plugin behaviour\nexport const WS_CLOSED = prefix + 'WS_CLOSED'\nexport const WS_ERROR = prefix + 'WS_ERROR'\n\nexport const LOST_CONNECTION = prefix + 'LOST_CONNECTION'\n\nexport const RECEIVE_SERVER_PING = prefix + 'RECEIVE_SERVER_PING'\nexport const RECEIVE_SERVER_PONG = prefix + 'RECEIVE_SERVER_PONG'\n\nexport const CHANGE_CONNECTIVITY_CHECKING = prefix + 'CHANGE_CONNECTIVITY_CHECKING'\nexport const CHANGE_PING_INTERVAL = prefix + 'CHANGE_PING_INTERVAL'\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nexport default version;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","import * as actionTypes from './actionTypes'\nimport { sanitizeSdesFromSdp } from '../../call/callstack/sdp/handlers/sanitizeSdesFromSdp'\nimport { modifySdpBandwidth } from '../../call/callstack/sdp/handlers/modifySdpBandwidth'\n\n/**\n * Add or update a specific key within the store.config.\n *\n * @param {Object} values The values that will be placed in the store.\n * @param {string} [pluginName] The plugin name of the config being set.\n * @return {Action} action A redux action.\n */\nexport function update (values, pluginName = '') {\n  var payload\n  // Use the plugin name as a substate key, if present.\n  if (pluginName) {\n    payload = {\n      [pluginName]: values\n    }\n  } else {\n    payload = values\n  }\n\n  return {\n    type: actionTypes.CONFIG_UPDATE,\n    payload: payload\n  }\n}\n\n/**\n * Updates the SDP Handlers in the call plugin configs\n *\n * @method setSdpHandlers\n * @param {Array<call.SdpHandlerFunction>} sdpHandlers The list of SDP handler to set in the config.\n * @returns {Object} A flux standard action.\n */\nexport function setSdpHandlers (sdpHandlers) {\n  /*\n   * Set SDP handlers to be used for every operation:\n   *\n   * 1. Application provided SDP handlers.\n   *\n   * 2. Disable DTLS-SDES crypto method (ie. delete the line) if there's a better\n   *    crypto method enabled. WebRTC only allows one method to be enabled.\n   *    This is needed for interoperability with non-browser endpoints that include\n   *    SDES as a fallback method.\n   *\n   *\n   * 3. Modify sdp and add bandwidth limits on it if bandwidth controls are provided.\n   */\n  sdpHandlers.push(sanitizeSdesFromSdp)\n  sdpHandlers.push(modifySdpBandwidth)\n\n  return {\n    type: actionTypes.SET_SDP_HANDLERS,\n    payload: {\n      sdpHandlers\n    }\n  }\n}\n","// Models.\nimport Track from '../models/track'\nimport Media from '../models/media'\nimport Peer from '../Peer'\n\n// Managers.\nimport MediaManager from '../managers/mediaManager'\nimport PeerManager from '../managers/peerManager'\nimport SessionManager from '../managers/sessionManager'\nimport DeviceManager from '../managers/deviceManager'\nimport TrackManager from '../managers/trackManager'\nimport WebRTCManager from '../managers/webrtcManager'\nimport Renderer from '../managers/renderer'\n\nimport { logManager } from '../logs'\n\n// SDP helpers.\nimport sdpPipeline from '../sdpUtils/pipeline'\nimport * as sdpHandlers from '../sdpUtils/handlers'\n\n// Utils\nimport { getBrowserDetails as getDetails } from '../utils'\n\n// Re-export this function so it can be used directly instead of through the\n//    initialized WebrtcStack. It is renamed because of weird import/export behaviour.\nexport const getBrowserDetails = getDetails\n\n/**\n * @returns An dictionary of features that are supported on this platform.\n */\nexport function getWebRTCSupportCapabilities () {\n  return {\n    mediaDevices: Boolean(navigator.mediaDevices),\n    peerConnection: Boolean(window.RTCPeerConnection)\n  }\n}\n\nexport default function initialize () {\n  const log = logManager.getLogger('WebRTC')\n\n  const browserDetails = getBrowserDetails()\n  if (browserDetails.version) {\n    log.debug(`Browser details: ${browserDetails.browser}, version ${browserDetails.version}.`)\n  } else {\n    log.debug('Browser details: Not supported by webRTC adapter.')\n  }\n\n  const renderer = new Renderer()\n  const deviceManager = new DeviceManager()\n  const trackManager = new TrackManager()\n  const mediaManager = new MediaManager({ trackManager })\n  const peerManager = new PeerManager({ trackManager })\n  const sessionManager = new SessionManager({\n    peerManager,\n    mediaManager,\n    trackManager\n  })\n  const webrtcManager = new WebRTCManager()\n\n  return {\n    models: {\n      Track,\n      Media,\n      Peer\n    },\n    // TODO: Make naming consistent.\n    managers: {\n      devices: deviceManager,\n      media: mediaManager,\n      peerManager: peerManager,\n      sessionManager,\n      track: trackManager,\n      // Give access to the Log Manager.\n      // TODO: Don't include it under managers. It's here now because of\n      //    ProxyStack annoyingness.\n      logs: logManager,\n      webrtcManager,\n      renderer\n    },\n    sdp: {\n      pipeline: sdpPipeline,\n      handlers: sdpHandlers\n    },\n    // Export this on the webRTC stack for backwards compatibility.\n    getBrowserDetails\n  }\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/map\"), __esModule: true };","const prefix = '@@KANDY/'\n\nexport const CONNECT = prefix + 'CONNECT'\nexport const SET_CONNECTION_INFO = prefix + 'SET_CONNECTION_INFO'\nexport const CONNECTION_OCCURRED = prefix + 'CONNECTION_OCCURRED'\nexport const CONNECT_FINISHED = prefix + 'CONNECT_FINISHED'\nexport const GET_USER_DETAILS = prefix + 'GET_USER_DETAILS'\nexport const USER_DETAILS_RECEIVED = prefix + 'USER_DETAILS_RECEIVED'\nexport const DISCONNECT = prefix + 'DISCONNECT'\nexport const DISCONNECT_FINISHED = prefix + 'DISCONNECT_FINISHED'\nexport const RESUBSCRIPTION_FINISHED = prefix + 'RESUBSCRIPTION_FINISHED'\nexport const REFRESH_TOKENS = prefix + 'REFRESH_TOKENS'\nexport const REFRESH_TOKENS_FINISHED = prefix + 'REFRESH_TOKENS_FINISHED'\n\nexport const UPDATE_SUBSCRIPTION = prefix + 'UPDATE_SUBSCRIPTION'\nexport const UPDATE_SUBSCRIPTION_FINISH = prefix + 'UPDATE_SUBSCRIPTION_FINISH'\n\nexport const SET_TOKEN = prefix + 'SET_TOKEN'\n\nexport const SET_CREDENTIALS = prefix + 'SET_CREDENTIALS'\nexport const SET_CREDENTIALS_FINISH = prefix + 'SET_CREDENTIALS_FINISH'\n\nexport const AUTHORIZATION_ERROR = prefix + 'AUTHORIZATION_ERROR'\n\nexport const UPDATE_HMAC_TOKEN = prefix + 'UPDATE_HMAC_TOKEN'\n","// Callstack plugin.\nimport { was3xHold, was3xUnhold } from './operations'\n\n// Call plugin.\nimport { OPERATIONS } from '../../../interface/constants'\n\n/**\n * Get the remote tracks of a Session that are affected by a remote operation.\n * @param {string} operation The remote operation type.\n * @param {MediaDiff} mediaDiff The difference between the SDP's media sections before/after the operation.\n * @param {Sesison} session A WebRTC-stack Session object.\n * @return {Array<string>} List of track IDs.\n */\nexport default async function getAffectedRemoteTracks (operation, mediaDiff, session) {\n  /*\n   * If a media section was removed, then this is not a normal WebRTC negotiation. This\n   *    is likely a complex operation where the PeerConnection was recreated. Calls are\n   *    always on hold when a PeerConnection is recreated, so all remote tracks should\n   *    be considered as \"added\".\n   * The media sections of the SDP may not have IDs, which is another reason to simply\n   *    \"get all\".\n   */\n  if (mediaDiff.removed.length > 0) {\n    const affectedTracks = await getAllRemoteTracks(session)\n    return affectedTracks\n  }\n\n  let sectionIds\n  switch (operation) {\n    case OPERATIONS.ADD_MEDIA:\n    case OPERATIONS.START_MOH:\n      sectionIds = getAddedSectionIds(mediaDiff)\n      break\n    case OPERATIONS.REMOVE_MEDIA:\n    case OPERATIONS.STOP_MOH:\n      sectionIds = getRemovedSectionIds(mediaDiff)\n      break\n    case OPERATIONS.HOLD:\n      sectionIds = was3xHold(mediaDiff) ? get3xHeldSectionIds(mediaDiff) : getHeldSectionIds(mediaDiff)\n      break\n    case OPERATIONS.UNHOLD:\n      sectionIds = was3xUnhold(mediaDiff) ? get3xUnheldSectionIds(mediaDiff) : getUnheldSectionIds(mediaDiff)\n      break\n    default:\n      // What do?\n      sectionIds = []\n  }\n\n  const affectedTracks = await session.getRemoteTrackIdsFromTransceivers(sectionIds)\n\n  return affectedTracks\n}\n\n/**\n * Get the media sections of an SDP where media was remobed by a remote \"hold\"\n *    SDK operation.\n * @param {MediaDiff} mediaDiff\n * @return {Array<string>} List of media section IDs.\n */\nfunction getHeldSectionIds (mediaDiff) {\n  const heldSections = []\n  mediaDiff.changed.forEach(changedMedia => {\n    const { media, changes } = changedMedia\n    // We know this was a hold operation, so we only need to check that the\n    //    media section stopped sending media to know that a track was removed here.\n    if (changes.sending === 'STOP') {\n      const id = typeof media.sectionId === 'undefined' ? media.sectionIndex : media.sectionId\n      heldSections.push(id)\n    }\n  })\n  return heldSections\n}\n\n/**\n * Get the media sections of an SDP where media was remobed by a remote \"hold\"\n *    SDK operation. This function covers the special cases for interop with 3.x/Mobile.\n *    Refer to `was3xHold` function for more details.\n * @param {MediaDiff} mediaDiff\n * @return {Array<string>} List of media section IDs.\n */\nfunction get3xHeldSectionIds (mediaDiff) {\n  const heldSections = []\n  mediaDiff.changed.forEach(changedMedia => {\n    const { media, changes } = changedMedia\n    if (media.type === 'audio') {\n      // Changed audio always stops being received by the remote endpoint.\n      // Changed audio always continues being sent by the remote endpoint.\n      if (changes.receiving === 'STOP' && changes.sending === 'SAME') {\n        const id = typeof media.sectionId === 'undefined' ? media.sectionIndex : media.sectionId\n        heldSections.push(id)\n      }\n    } else {\n      // Changed video is never received afterwards.\n      //     Either stopped or stayed \"not receiving\".\n      if (changes.receiving === 'STOP' || (changes.receiving === 'SAME' && media.willReceive === false)) {\n        const id = typeof media.sectionId === 'undefined' ? media.sectionIndex : media.sectionId\n        heldSections.push(id)\n      }\n    }\n  })\n\n  // Edge-case: One-way video was being received, and the hold did not\n  //    change the direction but just stopped the video being sent.\n  mediaDiff.unchanged.forEach(media => {\n    if (media.type === 'video' && media.willSend && !media.willReceive) {\n      const id = typeof media.sectionId === 'undefined' ? media.sectionIndex : media.sectionId\n      heldSections.push(id)\n    }\n  })\n\n  return heldSections\n}\n\n/**\n * Get the media sections of an SDP where media was added by a remote \"unhold\"\n *    SDK operation.\n * @param {MediaDiff} mediaDiff\n * @return {Array<string>} List of media section IDs.\n */\nfunction getUnheldSectionIds (mediaDiff) {\n  const unheldSections = []\n  mediaDiff.changed.forEach(changedMedia => {\n    const { media, changes } = changedMedia\n    // We know this was an unhold operation, so we only need to check that the\n    //    media section started sending media to know that a track was added here.\n    if (changes.sending === 'START') {\n      const id = typeof media.sectionId === 'undefined' ? media.sectionIndex : media.sectionId\n      unheldSections.push(id)\n    }\n  })\n  return unheldSections\n}\n\n/**\n * Get the media sections of an SDP where media was added by a remote \"unhold\"\n *    SDK operation. This function covers the special cases for interop with 3.x/Mobile.\n *    Refer to `was3xUnhold` function for more details.\n * @param {MediaDiff} mediaDiff\n * @return {Array<string>} List of media section IDs.\n */\nfunction get3xUnheldSectionIds (mediaDiff) {\n  const unheldSections = []\n  // Special cases for 3.x/Mobile; refer to `was3xUnhold` function for more details.\n  //    Summary: all changed media went from 'sendonly' to 'sendrecv'\n  mediaDiff.changed.forEach(({ media, changes }) => {\n    if (\n      (changes.sending === 'SAME' && changes.receiving === 'START') ||\n      /*\n       * Special-case: If the media is video, it's possible to go from \"inactive\" to \"sendrecv\".\n       *    This can happen when the SDK is receiving MoH then is unheld immediately (without\n       *    going through a stop MoH operation).\n       * This behaviour was seen when the remote endpoint was a SIP device. See KAA-2593.\n       */\n      (media.type === 'video' && changes.sending === 'START' && changes.receiving === 'START')\n    ) {\n      const id = typeof media.sectionId === 'undefined' ? media.sectionIndex : media.sectionId\n      unheldSections.push(id)\n    }\n  })\n  return unheldSections\n}\n\n/**\n * Get the media sections of an SDP where media was added by a remote \"add media\"\n *    SDK operation.\n * @param {MediaDiff} mediaDiff\n * @return {Array<string>} List of media section IDs.\n */\nfunction getAddedSectionIds (mediaDiff) {\n  let addedMediaSections = []\n  mediaDiff.changed.forEach(changedMedia => {\n    const { media, changes } = changedMedia\n    // This ChangedMedia object represents a \"track added\".\n    if (changes.sending === 'START' && (changes.receiving === 'SAME' || changes.receiving === 'START')) {\n      const id = typeof media.sectionId === 'undefined' ? media.sectionIndex : media.sectionId\n      addedMediaSections.push(id)\n    }\n  })\n\n  // For the Transceiver for newly added media sections to exist, the SDK has to\n  //    have handled the remote offer at the WebRTC-layer already.\n  const newSectionsWithTracks = mediaDiff.added\n    .filter(mediaSummary => mediaSummary.willSend)\n    .map(mediaSummary => {\n      // If the sectionId is undefined, return the index instead.\n      // The order of media sections (their index) /should/ never change.\n      return typeof mediaSummary.sectionId === 'undefined' ? mediaSummary.sectionIndex : mediaSummary.sectionId\n    })\n\n  addedMediaSections = addedMediaSections.concat(newSectionsWithTracks)\n\n  return addedMediaSections\n}\n\n/**\n * Get the media sections of an SDP where media was removed by a remote \"remove media\"\n *    SDK operation.\n * @param {MediaDiff} mediaDiff\n * @return {Array<string>} List of media section IDs.\n */\nfunction getRemovedSectionIds (mediaDiff) {\n  // Get the list of media section Ids that media was removed from.\n  const removedMediaSections = []\n  mediaDiff.changed.forEach(changedMedia => {\n    const { media, changes } = changedMedia\n    // This ChangedMedia object represents a \"track removed\".\n    if (changes.sending === 'STOP' && changes.receiving !== 'STOP') {\n      const id = typeof media.sectionId === 'undefined' ? media.sectionIndex : media.sectionId\n      removedMediaSections.push(id)\n    }\n  })\n\n  return removedMediaSections\n}\n\n/**\n * Get the list of all remote tracks currently being received for a Session.\n * @param {Session} session A WebRTC-stack Session object.\n * @return {Array<string>} List of remote track IDs.\n */\nexport async function getAllRemoteTracks (session) {\n  const affectedTracks = await session.getActiveRemoteTrackIds()\n  return affectedTracks\n}\n\n/**\n * Get the list of all incoming remote tracks not yet being received for a Session.\n * @param {Session} session A WebRTC-stack Session object.\n * @return {Array<string>} List of remote track IDs.\n */\nexport async function getIncomingRemoteTracks (session) {\n  const incomingTracks = await session.getIncomingRemoteTrackIds()\n  return incomingTracks\n}\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};","/**\n * Returns the version of the currently running SDK.\n *\n * It must be used by any plugins (including the factory) as the unique source of truth when it comes to determine the current SDK version.\n * The actual version value is provided by the build process scripts (aka webpack.config.***.js) which simply do a string substitution\n * for the @@ tag below with actual version value.\n */\nexport function getVersion () {\n  return '6.1.0-beta.1092'\n}\n","/**\n * This wrapper generates error messages from v8n Validation Errors. https://imbrn.github.io/v8n/api/#validationerror\n * They are logged using LogManager as a warning to our customers when they mess up arguments.\n * To use: `import { enums, validation as v8n, parse } from '<relativePath>/common/validation'`.\n * Build up your validation using v8n.string, v8n.number, v8n.schema, enums, etc.\n * Enums is not part of the v8n library, but provided here for ease of use\n * const v8nValidation = v8n.schema({\n      sdpSemantics: enums(['unified-plan']),\n      iceServers: v8n.array(),\n      iceCollectionIdealTimeout: v8n.positive(),\n      serverTurnCredentials: v8n.boolean(),\n      iceCollectionCheckFunction: v8n.optional(v8n.function())\n    })\n * Create a validator like this: `const parseOptions = parse('nameOfArg', v8nValidation)`\n * Run that validator against the actual values: `parseOptions(options)`\n * Returns the input either way and logs errors, in the future will throw errors on invalid data.\n */\nimport { __, concat, flatMap, isArray, isEmpty, join, map, partial } from 'lodash/fp'\nimport { logManager } from '../../logs'\nimport v8n from 'v8n'\n\n// Custom v8n Rules - https://imbrn.github.io/v8n/api/#extend\nv8n.extend({\n  function: () => value => typeof value === 'function'\n})\n\n// EXPORTS / IO\nexport const validation = v8n()\n\n// TODO: Add an enums function to the v8n library\n// Use as such: `prop: enums( [ 'red', 'blue', 'green' ] )\nexport const enums = values => {\n  // Map iteratee isn't just `v8n().exact` due to v8n() returning a new ProxyContext each time\n  const v8nExact = value => v8n().exact(value)\n  const exactValues = map(v8nExact)(values)\n  return v8n().passesAnyOf(...exactValues)\n}\n\n// Name -> v8nRule -> Input -> [String]\nexport const errorMessages = name => v8nRule => input =>\n  flatMap(validationErrorMessages(name))(validationResults(v8nRule)(input))\n\nexport const validationResults = v8nRule => input => v8nRule.testAll(input)\n\n// (Name, v8nRule) -> Input -> IO Input\nexport const parse = (name, v8nRule) => input => {\n  const errors = errorMessages(name)(v8nRule)(input)\n\n  if (isEmpty(errors)) {\n    return input\n  } else {\n    const log = logManager.getLogger('VALIDATION')\n    log.info(prettyPrint(errors)) // This is an IO side-effect\n    return input\n  }\n}\n\n// DEFINITIONS\n\n// Name -> ValidationError -> [String]\n// https://imbrn.github.io/v8n/api/#validationerror\nconst validationErrorMessages = name => validationError => {\n  const startingPath = []\n  return validationErrorMessageHelper(startingPath)(name)(validationError)\n}\n\n// [String] -> Name -> ValidationError -> [String]\nconst validationErrorMessageHelper = acc => name => ({ cause, rule, target, value }) => {\n  const path = concat(acc)(target || name)\n  if (isArray(cause)) {\n    const newVEM = validationErrorMessageHelper(path)(target)\n    return flatMap(newVEM)(cause)\n  } else {\n    return `${join('.')(path)} has value of '${value}', but it should be ${ruleMessage(rule)}`\n  }\n}\n\n// Rule -> String\n// https://imbrn.github.io/v8n/api/#rule\nconst ruleMessage = ({ name, args }) => {\n  switch (name) {\n    case 'schema':\n      return 'Schema'\n\n    case 'passesAnyOf':\n      return `any of '${join(\"', '\")(map(enumName)(args))}'`\n\n    case 'between':\n      return `between ${args.join(', ')}`\n\n    default:\n      return `${aOrAn(name)} ${name}`\n  }\n}\n\n// HELPERS\nconst enumName = arg => arg.chain[0].args // v8n internals\nconst prettyPrint = partial(JSON.stringify)([__, null, 4])\n// https://dictionary.cambridge.org/grammar/british-grammar/a-an-and-the\nconst aOrAn = string => (/[aeiou]/i.test(string[0]) ? 'an' : 'a')\n","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };","import { cloneDeep } from 'lodash/fp'\nimport name from './name'\n\nexport function getConnectionState (state, platform) {\n  if (state[name][platform]) {\n    return cloneDeep(state[name][platform])\n  } else {\n    return new Error('No sockets are up. Have you attempted to connect?')\n  }\n}\n\n/**\n * Retrieves the config options provided by the connectivity plugin.\n * @method getConnectivityConfig\n * @return {Object}\n */\nexport function getConnectivityConfig (state) {\n  return state.config[name]\n}\n\n/**\n * Retrieves the pingInterval property from state\n * @method getPingInterval\n * @param {Object} state Redux state.\n * @return {Object}\n */\nexport function getPingInterval (state) {\n  return state[name].pingInterval\n}\n\n/**\n * Retrieves the checkConnectivity property from state\n * @method getCheckConnectivity\n * @param {Object} state Redux state.\n * @return {Object}\n */\nexport function getCheckConnectivity (state) {\n  return state[name].checkConnectivity\n}\n","/**\n * Gets the remote participant data from a notification object's `callNotificationParams` property if it exists.\n * @param {Object} targetCall The current call object from state.\n * @param {Object} notification The notification object to extract remote participant data from.\n * @param {Object} domain The domain associated with the authenticated user.\n * @returns {Object|undefined} Object containing `remoteName` & `remoteNumber` properties.\n *                   Or undefined if `callNotificationParams` property does not exist.\n */\nexport function getRemoteParticipant (targetCall, notification, domain) {\n  if (!notification.callNotificationParams) {\n    // `sessionComplete` notification doesn't have `callNotificationParams`.\n    return\n  }\n\n  let remoteInfo = {}\n\n  // A \"conference\" call is a joined call. Joined calls are _always_ incoming\n  //    calls, even if the original call was outgoing.\n  const isConference =\n    notification.callNotificationParams.callerDisplayNumber &&\n    notification.callNotificationParams.callerDisplayNumber.startsWith('conference@')\n\n  const isIncoming = targetCall.direction === 'incoming' || isConference\n\n  /**\n   * SPiDR notifications seem to have different \"remote participant\" properties\n   *    in different scenarios. Determine which scenario the call is in to know\n   *    how to parse the notification.\n   */\n  if (isIncoming) {\n    remoteInfo = {\n      remoteName: notification.callNotificationParams.callerName,\n      remoteNumber: notification.callNotificationParams.callerDisplayNumber\n    }\n  } else {\n    remoteInfo = {\n      remoteName: notification.callNotificationParams.remoteName,\n      remoteNumber: notification.callNotificationParams.remoteDisplayNumber\n    }\n  }\n  /*\n   * Sometimes the \"display number\" doesn't include a domain. Make sure it has\n   *    a domain so that it is always consistent.\n   * TODO: Figure out in which cases this was needed. Transfer?\n   *    Ref: KAA-746\n   */\n  if (remoteInfo.remoteNumber && !remoteInfo.remoteNumber.includes('@')) {\n    remoteInfo.remoteNumber += domain\n  }\n\n  // If the data from the notification is undefined, use whatever the existing\n  //    value on the call was.\n  return {\n    remoteName: remoteInfo.remoteName || targetCall.remoteParticipant.displayName,\n    remoteNumber: remoteInfo.remoteNumber || targetCall.remoteParticipant.displayNumber\n  }\n}\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","module.exports = true;\n","exports.f = {}.propertyIsEnumerable;\n","module.exports = {};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/values\"), __esModule: true };","/**\n * Log levels supported by Loggers.\n * When a level is set, all logs of that level and higher will be logged.\n * @type {Object}\n */\nexport const logLevels = {\n  TRACE: 'TRACE',\n  DEBUG: 'DEBUG',\n  INFO: 'INFO',\n  WARN: 'WARN',\n  ERROR: 'ERROR',\n  SILENT: 'SILENT'\n}\n\n/**\n * Numeric values for each log level.\n * When a level is set, all logs of that level and higher will be logged.\n * @type {Object}\n */\nexport const levelValues = {\n  TRACE: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4,\n  SILENT: 5\n}\n\n/**\n * Supported Log methods and their set log level; `<logMethod>: <logLevel>`\n * Used to construct the logging methods on a Logger.\n * @type {Object}\n */\nexport const logMethods = {\n  // Standard methods.\n  trace: logLevels.TRACE,\n  debug: logLevels.DEBUG,\n  info: logLevels.INFO,\n  warn: logLevels.WARN,\n  error: logLevels.ERROR,\n  // Extra console methods.\n  log: logLevels.DEBUG,\n  group: logLevels.DEBUG,\n  groupEnd: logLevels.DEBUG,\n  groupCollapsed: logLevels.DEBUG\n}\n\n/**\n * The log level for all timer methods.\n * @type {string}\n */\nexport const timeLevel = logLevels.DEBUG\n","import * as actionTypes from './actionTypes'\n\n/**\n * Add an action-to-event mapping\n * @param  {Object} mapping A mapping object\n * @return {action}          A redux action.\n */\nexport function mapEvents (mapping) {\n  return {\n    type: actionTypes.MAP_EVENTS,\n    payload: mapping\n  }\n}\n\n/* Interface actions */\n\n/**\n * Add a listener for a specified event type.\n *\n * @param {string} type The event type to add the listener on.\n * @param {Function} listener The event listener to be added.\n * @return {Action} action A redux action.\n */\nexport function on (type, listener) {\n  return {\n    type: actionTypes.EVENTS_ON,\n    payload: {\n      eventType: type,\n      listener: listener\n    }\n  }\n}\n\n/**\n * Remove a listener from a specified event type.\n *\n * @param {string} type The event type to remove the listener from.\n * @param {Function} listener The event listener to be removed.\n * @return {Action} action A redux action.\n */\nexport function off (type, listener) {\n  return {\n    type: actionTypes.EVENTS_OFF,\n    payload: {\n      eventType: type,\n      listener: listener\n    }\n  }\n}\n\n/**\n * Add a global event listener.\n *\n * @param {Function} listener The event listener to be added.\n * @return {Action} action A redux action.\n */\nexport function subscribe (listener) {\n  return {\n    type: actionTypes.EVENTS_SUBSCRIBE,\n    payload: listener\n  }\n}\n\n/**\n * Remove a global event listener.\n *\n * @param {Function} listener The event listener to be removed.\n * @return {Action} action A redux action.\n */\nexport function unsubscribe (listener) {\n  return {\n    type: actionTypes.EVENTS_UNSUBSCRIBE,\n    payload: listener\n  }\n}\n\n/* Internal actions */\n\n/**\n * Emits an event of the specified type.\n *\n * @method emitEvent\n * @param {Object} payload Information of the event to emit.\n * @throws {Error} Invalid event type\n * @return action An EVENTS_EMIT action.\n */\nexport function emitEvent (type, ...args) {\n  if (type === undefined) {\n    throw Error('Attempted to emit an event without a type.')\n  }\n\n  return {\n    type: actionTypes.EVENTS_EMIT,\n    payload: { eventType: type, args }\n  }\n}\n\n/**\n * Define an alias for an event type.\n *\n * @method alias\n * @param {string} type The event type for which to add an alias.\n * @param {string} alias The alias name for the event type.\n */\nexport function aliasEvent (type, alias) {\n  if (type === undefined || alias === undefined) {\n    throw Error('Invalid attempt to alias an event.')\n  }\n\n  return {\n    type: actionTypes.EVENTS_ALIAS,\n    payload: { eventType: type, alias }\n  }\n}\n","import * as actionTypes from './actionTypes'\n\n/**\n * Creates a connect action that takes a credentials object.\n *\n * @method connect\n * @param {Object} credentials The credentials to pass to the connect action.\n * @param {Object} [options] Any parameters that aren't credentials.\n * @return {Object} A flux standard action.\n */\nexport function connect (credentials, options) {\n  return {\n    type: actionTypes.CONNECT,\n    payload: { credentials, options },\n    meta: {\n      isSensitive: true\n    }\n  }\n}\n\n/**\n * Create a set connection info action that takes a connection and user info object\n *\n * @method setConnectionInfo\n * @param {Object} $0\n * @param {Object} $0.userInfo An object representing the user information.\n * @param {Object} $0.connection A connection object. Information about how to connect to the backend services.\n * @return {Object} A flux standard action.\n */\nexport function setConnectionInfo ({ userInfo, connection }, platform) {\n  return {\n    type: actionTypes.SET_CONNECTION_INFO,\n    payload: { userInfo, connection },\n    meta: {\n      platform,\n      isSensitive: true\n    }\n  }\n}\n\n/**\n * Connection occurred action.\n * Signifies that a connection has been made to a service, but that the connection\n *      workflow has not finished yet. Intended for use in scenarios where the\n *      workflow connects to multiple services, to represent the \"intermediate\"\n *      connections.\n *\n * @method connectionOccurred\n * @param  {Object} $0\n * @param  {Object} $0.subscription\n * @param  {Object} $0.connection\n * @param  {Object} [$0.error] An error message. Only present if an error occurred.\n * @param  {string} platform The backend platform used for the connection.\n * @return {Object} A flux standard action.\n */\nexport function connectionOccurred ({ subscription, connection, error }, platform) {\n  // TODO: Is this action used anywhere?\n  var action = {\n    type: actionTypes.CONNECTION_OCCURRED,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = { subscription, connection }\n  }\n\n  return action\n}\n\n/**\n * Create a connect finished action that takes a userInfo object on success and possibly\n * an error object.\n *\n * @method connectFinished\n * @param {Object} $0\n * @param {Object} $0.subscription A subscription object. Contains what services to subscribe to.\n * @param {Object} $0.userInfo An object representing the user information.\n * @param {Object} $0.connection A connection object. Information about how to connect to the backend services.\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} platform The backend platform we are currently on.\n * @param {boolean} isSSO Boolean for whether the current connection scenario is SSO or not.\n * @return {Object} A flux standard action.\n */\nexport function connectFinished ({ subscription, userInfo, connection, error }, platform, isSSO = false) {\n  var action = {\n    type: actionTypes.CONNECT_FINISHED,\n    meta: {\n      platform,\n      isSSO,\n      isSensitive: true\n    }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = { subscription, userInfo, connection }\n  }\n\n  return action\n}\n\n/**\n * Creates a getUserDetails action\n *\n * @method getUserDetails\n * @return {Object} A flux standard action.\n */\nexport function getUserDetails () {\n  return { type: actionTypes.GET_USER_DETAILS }\n}\n\n/**\n * Create a user details received action\n *\n * @method userDetailsReceived\n * @param  {Object} userDetailsResponse An object representing the REST response of a user details request.\n * @return {Object} A flux standard action.\n */\nexport function userDetailsReceived (userDetailsResponse) {\n  var action = {\n    type: actionTypes.USER_DETAILS_RECEIVED,\n    payload: {\n      firstName: userDetailsResponse.firstName || userDetailsResponse.user_first_name,\n      user_first_name: userDetailsResponse.user_first_name || userDetailsResponse.firstName,\n      lastName: userDetailsResponse.lastName || userDetailsResponse.user_last_name,\n      user_last_name: userDetailsResponse.user_last_name || userDetailsResponse.lastName,\n      photoURL: userDetailsResponse.photoURL,\n      emailAddress: userDetailsResponse.emailAddress || userDetailsResponse.user_email,\n      user_email: userDetailsResponse.user_email || userDetailsResponse.emailAddress,\n      username: userDetailsResponse.username\n    }\n  }\n\n  return action\n}\n\n/**\n * Creates a disconnect action.\n *\n * @method disconnect\n * @return {Object} A flux standard action.\n */\nexport function disconnect () {\n  return { type: actionTypes.DISCONNECT }\n}\n\n/**\n * Create a disconnectFinished action that possibly takes an error object on failure.\n *\n * @method disconnectFinished\n * @param {Object} params\n * @param {string} [params.error] An error message. Only present if an error occurred.\n * @param {string} [params.reason] Why the disconnectFinished action is being dispatched.\n * @param {number} [params.retryAfter] The time (in seconds) when SDK should retry the operation.\n * @return {Object} A flux standard action.\n */\nexport function disconnectFinished ({ error, reason, retryAfter } = {}) {\n  const action = {\n    type: actionTypes.DISCONNECT_FINISHED,\n    payload: {}\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  }\n\n  if (reason) {\n    action.payload.reason = reason\n  }\n\n  if (retryAfter) {\n    action.payload.retryAfter = retryAfter\n  }\n  return action\n}\n\n/**\n * Action creator representing the finish of a resubscription request.\n * Payload mirrors a connect finished action.\n *\n * @method resubscribeFinished\n * @param {Object} $0\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} [$0.attemptNum] The attempt number of this resubscription.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function resubscribeFinished ({ error, attemptNum }, platform) {\n  var action = {\n    type: actionTypes.RESUBSCRIPTION_FINISHED,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n    action.payload.attemptNum = attemptNum\n  } else {\n    action.payload = {\n      attemptNum\n    }\n  }\n\n  return action\n}\n\n/**\n * Creates a refreshTokens action with the given credentials as a payload.\n *\n * @method refreshTokens\n * @param {Object} credentials A credentials object containing tokens.\n * @return {Object} A flux standard action.\n */\nexport function refreshTokens (credentials) {\n  var action = {\n    type: actionTypes.REFRESH_TOKENS,\n    payload: { credentials }\n  }\n  return action\n}\n\n/**\n * Creates a refreshTokensFinished action with connection and platform information.\n * Optionally includes an error.\n *\n * @method refreshTokensFinished\n * @param {Object} $0\n * @param {Object} [$0.error] An optional error object.\n * @param {Object} $0.connection Connection information.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function refreshTokensFinished ({ error, connection }, platform) {\n  var action = {\n    type: actionTypes.REFRESH_TOKENS_FINISHED,\n    payload: { connection },\n    meta: { platform }\n  }\n  if (error) {\n    action.error = true\n    action.payload = error\n  }\n\n  return action\n}\n\n/**\n * Represents a request to update a current subscription.\n * @method updateSubscription\n * @param  {Object} subscription Information used to update subscription.\n * @return {Object} A flux standard action.\n */\nexport function updateSubscription (subscription) {\n  return {\n    type: actionTypes.UPDATE_SUBSCRIPTION,\n    payload: subscription\n  }\n}\n\n/**\n * Represents that the current subscription has been updated.\n * @method updateSubscriptionFinished\n * @param  {Object} $0\n * @param  {Object} $0.subscription New subscription state to be updated.\n * @param  {Object} [$0.error] Error object, in the case of an error.\n * @param  {string} platform The backend platform used for the subscription.\n * @return {Object} A flux standard action.\n */\nexport function updateSubscriptionFinished ({ subscription, error }, platform) {\n  var action = {\n    type: actionTypes.UPDATE_SUBSCRIPTION_FINISH,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = subscription\n  }\n  return action\n}\n\n/**\n * Sets the token information in the state.\n * @method setTokens\n * @param {Object} params Dictionary object of parameters.\n * @param {string} accessToken An access token retrieved using the authentication APIs of the platform.\n * @param {string} idToken An identity token retrieved using the authentication APIs of the platform.\n * @return {Object} A flux standard action.\n */\nexport function setTokens ({ accessToken, idToken }) {\n  return {\n    type: actionTypes.SET_TOKEN,\n    payload: { accessToken, idToken }\n  }\n}\n\n/**\n * Creates a setCredentials action that takes a credentials object.\n *\n * @method setCredentials\n * @param {Object} $0\n * @param {string} $0.username The username.\n * @param {string} $0.password The user's password.\n * @param {string} $0.authname The user's authorization name.\n * @param {string} $0.hmacToken An HMAC token for the user with the provided user ID.\n * @param {string} $0.bearerAccessToken An access token retrieved using the authentication APIs of the platform.\n * @param {string} $0.idToken An identity token retrieved using the authentication APIs of the platform.\n * @param {string} $0.accessToken An access token retrieved using the authentication APIs of the platform. Used for CIM authentication.\n * @return {Object} A flux standard action.\n */\nexport function setCredentials ({ username, password, authname, hmacToken, bearerAccessToken, idToken, accessToken }) {\n  return {\n    type: actionTypes.SET_CREDENTIALS,\n    payload: { username, password, authname, hmacToken, bearerAccessToken, idToken, accessToken },\n    meta: {\n      isSensitive: true\n    }\n  }\n}\n\n/**\n * Create a setCredentials finished action that takes a userInfo object on success and possibly\n * an error object.\n *\n * @method setCredentialsFinished\n * @param {Object} $0\n * @param {Object} $0.userInfo An object representing the user information.\n * @param {Object} $0.connection A connection object. Information about how to connect to the backend services.\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function setCredentialsFinished ({ userInfo, connection, error }, platform) {\n  var action = {\n    type: actionTypes.SET_CREDENTIALS_FINISH,\n    meta: {\n      platform,\n      isSensitive: true\n    }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = { userInfo, connection }\n  }\n\n  return action\n}\n\n/**\n * Creates an updateToken action with connection and platform information.\n *\n * @method updateToken\n * @param {string} token A session id retrieved after a successful subscription on the platform.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function updateHmacToken (token, platform) {\n  var action = {\n    type: actionTypes.UPDATE_HMAC_TOKEN,\n    payload: token,\n    meta: {\n      platform,\n      isSensitive: true\n    }\n  }\n\n  return action\n}\n","// Helpers.\nimport { CALL_STATES, CALL_MEDIA_STATES } from '../constants'\n\n/**\n * Retrieves the current state of media flow based on a call's state.\n * @method getMediaState\n * @param  {Object} callState A call's state.\n * @return {string} A CALL_MEDIA_STATES enum value.\n */\nexport function getMediaState (callState) {\n  if (hasMedia(callState)) {\n    return CALL_MEDIA_STATES.CONNECTED\n  } else if (isLocalHold(callState)) {\n    return CALL_MEDIA_STATES.LOCAL_HOLD\n  } else if (isRemoteHold(callState)) {\n    return CALL_MEDIA_STATES.REMOTE_HOLD\n  } else if (isDualHold(callState)) {\n    return CALL_MEDIA_STATES.DUAL_HOLD\n  }\n}\n\n/**\n * Checks whether the call state indicates that the call has media.\n * @method hasMedia\n * @param  {Object}  callState Redux call state.\n * @return {boolean}\n */\nexport function hasMedia (callState) {\n  return callState.state === CALL_STATES.CONNECTED && !callState.localHold && !callState.remoteHold\n}\n\n/**\n * Checks whether the call state indicates that the call is locally held (only).\n * @method isLocalHold\n * @param  {Object}  callState Redux call state.\n * @return {boolean}\n */\nexport function isLocalHold (callState) {\n  return callState.state === CALL_STATES.ON_HOLD && callState.localHold && !callState.remoteHold\n}\n\n/**\n * Checks whether the call state indicates that the call is remotely held (only).\n * @method isRemoteHold\n * @param  {Object}  callState Redux call state.\n * @return {boolean}\n */\nexport function isRemoteHold (callState) {\n  return callState.state === CALL_STATES.ON_HOLD && !callState.localHold && callState.remoteHold\n}\n\n/**\n * Checks whether the call state indicates that the call is both locally and\n *    remote held.\n * @method isDualHold\n * @param  {Object}  callState Redux call state.\n * @return {boolean}\n */\nexport function isDualHold (callState) {\n  return callState.state === CALL_STATES.ON_HOLD && callState.localHold && callState.remoteHold\n}\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","import createManager from './logManager'\nimport defaultLogFormatter from './logFormatter'\nimport { logLevels as levelImport } from './constants'\n\n/**\n * Package main.\n */\n\n// Main export is the manager's factory function.\nexport default createManager\n\n// Named export for the log level constants the package uses / expects.\nexport const logLevels = levelImport\n\n// Default log formatter used by the defaultLogHandler\nexport const logFormatter = defaultLogFormatter\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","const prefix = '@@KANDY/LOGS/'\n\nexport const SET_LEVEL = prefix + 'SET_LEVEL'\nexport const LEVELS_CHANGE = prefix + 'LEVELS_CHANGE'\n\nexport const SET_HANDLER = prefix + 'SET_HANDLER'\nexport const HANDLERS_CHANGE = prefix + 'HANDLERS_CHANGE'\n","// Libraries.\nimport sdpTransform from 'sdp-transform'\nimport { cloneDeep, isArray, isFunction } from 'lodash/fp'\n\nimport { logManager } from '../logs'\nconst log = logManager.getLogger('SdpPipeline')\n\n/**\n * Basic SDP pipeline runner.\n * Does not include any default handlers.\n * @method sdpPipeline\n * @param  {Array}      handlers       List of functions that transform the SDP.\n * @param  {String}     sdp            The session description.\n * @param  {RTCSdpType} info           Information about the session description.\n * @param  {RTCSdpType} info.type      The session description's type.\n * @param  {String}     info.endpoint  Which end of the connection created the SDP.\n * @param  {Boolean}    info.isInitiator Whether this session initiated the connection or not.\n * @return {String}     The modified session description.\n\n */\nexport function runPipeline (handlers, sdp, info) {\n  const objectSdp = sdpTransform.parse(sdp)\n\n  const originalSdp = Object.freeze(objectSdp)\n  let newSdp = cloneDeep(originalSdp)\n\n  if (isArray(handlers)) {\n    handlers.forEach(handler => {\n      if (isFunction(handler)) {\n        newSdp = handler(newSdp, info, originalSdp)\n      } else {\n        log.error('SDP handler not a function; skipping.')\n      }\n    })\n  }\n\n  return sdpTransform.write(newSdp)\n}\n\n/**\n * Create an instance of the SDP pipeline.\n * Allows for persistent SDP handlers to be set and implicitly used.\n * @method createPipeline\n * @return {Object} An SDP pipeline.\n */\nfunction createPipeline () {\n  /**\n   * SDP handlers that should be included with every pipeline run.\n   * @type {Array}\n   */\n  let defaultHandlers = []\n\n  /**\n   * Use the pipeline to process an SDP.\n   * @method run\n   * @param  {Array}      handlers      List of functions that transform the SDP.\n   * @param  {String}     sdp           The session description.\n   * @param  {RTCSdpType} info          Information about the session description.\n   * @param  {RTCSdpType} info.type     The session description's type.\n   * @param  {String}     info.endpoint Which end of the connection created the SDP.\n   * @return {String}     The modified session description.\n   */\n  function run (handlers = [], sdp, info) {\n    return runPipeline(handlers.concat(defaultHandlers), sdp, info)\n  }\n\n  /**\n   * Set the SDP handlers that should be included with every pipeline run.\n   * @method setHandlers\n   * @param  {Array} handlers List of SDP handler functions.\n   */\n  function setHandlers (handlers) {\n    if (isArray(handlers)) {\n      defaultHandlers = defaultHandlers.concat(handlers)\n    }\n  }\n\n  /**\n   * Get the SDP handlers that are included with every pipeline run.\n   * @method getHandlers\n   * @return {Array} List of SDP handler functions.\n   */\n  function getHandlers () {\n    return defaultHandlers\n  }\n\n  return {\n    run,\n    setHandlers,\n    getHandlers\n  }\n}\n\n// Export an instance of the pipeline to be used by everything.\nexport default createPipeline()\n","module.exports = { \"default\": require(\"core-js/library/fn/object/freeze\"), __esModule: true };","import adapter from 'webrtc-adapter/out/adapter'\nimport { mergeAllWith, isArray } from 'lodash/fp'\n\n// TODO: This function was copied from Kandy, we should eventually create a common project that\n// can contain all of these utils that are useful in multiple packages.\n\n/**\n * Deeply merges the values of multiple objects. Objects on the left receive the values from objects on their right.\n * Unlike lodash's default merge behavior this doesn't merge arrays.\n *\n * @name mergeValues\n * @param {...Object} objects - Objects to merge\n * @return {Object} A new object containing the merged values.\n */\nexport function mergeValues (...objects) {\n  return mergeAllWith((leftValue, rightValue) => {\n    // Overwrite the default behavior of lodash's merge for arrays and simply\n    // clobber what's on the left so we don't end up with merged arrays.\n    if (isArray(leftValue)) {\n      return rightValue\n    }\n  }, objects)\n}\n\nexport function makeSafeForCSS (name) {\n  if (!name) {\n    return name\n  } else {\n    return name.replace(/[^a-z0-9]/g, '')\n  }\n}\n\n/**\n * @returns The browser details as provided by webrtc-adapter\n */\nexport function getBrowserDetails () {\n  return adapter.browserDetails\n}\n","/**\n * Possible subscription states.\n * @name SUBSCRIPTION_STATE\n * @type {Object}\n */\nexport const SUBSCRIPTION_STATE = {\n  FULL: 'FULL',\n  PARTIAL: 'PARTIAL',\n  NONE: 'NONE'\n}\n\n/**\n * Possible disconnect reasons.\n * @name DISCONNECT_REASONS\n * @type {Object}\n */\nexport const DISCONNECT_REASONS = {\n  GONE: 'GONE',\n  LOST_CONNECTION: 'LOST_CONNECTION'\n}\n","const PREFIX = '@@KANDY/'\n\nexport const REQUEST = PREFIX + 'REQUEST'\nexport const RESPONSE = PREFIX + 'RESPONSE'\n\nexport const AUTHORIZATION_ERROR = PREFIX + 'AUTHORIZATION_ERROR'\n","import * as actionTypes from './actionTypes'\n// Constants\nimport { platforms } from '../../constants'\n\nimport BasicError from '../../errors'\n\n/**\n * @param {string} type\n */\nfunction createWsAction (type) {\n  /**\n   * @param {any=} payload\n   * @param {string=} platform\n   * @param {boolean=} [isReconnect] flag to signify if we are reconnecting or not.\n   */\n  function action (payload, platform = platforms.LINK, isReconnect = false) {\n    return {\n      type,\n      // TODO: This must check for basic error eventually instead.\n      error: payload instanceof Error || payload instanceof BasicError,\n      payload,\n      meta: { platform, isReconnect }\n    }\n  }\n  return action\n}\n\nexport const wsAttemptConnect = createWsAction(actionTypes.WS_ATTEMPT_CONNECT)\nexport const wsDisconnect = createWsAction(actionTypes.WS_DISCONNECT)\nexport const wsConnectFinished = createWsAction(actionTypes.WS_CONNECT_FINISHED)\nexport const wsDisconnectFinished = createWsAction(actionTypes.WS_DISCONNECT_FINISHED)\nexport const wsReconnectFailed = createWsAction(actionTypes.WS_RECONNECT_FAILED)\n\nexport const wsClosed = createWsAction(actionTypes.WS_CLOSED)\nexport const wsError = createWsAction(actionTypes.WS_ERROR)\n\nexport const lostConnection = createWsAction(actionTypes.LOST_CONNECTION)\n\nexport const receiveServerPing = createWsAction(actionTypes.RECEIVE_SERVER_PING)\nexport const receiveServerPong = createWsAction(actionTypes.RECEIVE_SERVER_PONG)\n\nexport const changeConnectivityChecking = createWsAction(actionTypes.CHANGE_CONNECTIVITY_CHECKING)\nexport const changePingInterval = createWsAction(actionTypes.CHANGE_PING_INTERVAL)\n","/**\n * Extracts the domain from an address if an @ symbol exists and isn't at the start or end of the address.\n * @param {string} addressString The address string to extract the domain from (if it exists).\n * @returns {string} The extracted domain. Empty string of none found.\n */\nfunction extractDomainFromAddress (addressString) {\n  const indexOfAtSymbol = addressString.lastIndexOf('@')\n  if (indexOfAtSymbol !== 0 && indexOfAtSymbol !== addressString.length - 1) {\n    // If '@' symbol found in middle of addressString, split it.\n    if (indexOfAtSymbol !== -1) {\n      return addressString.substr(indexOfAtSymbol + 1)\n    }\n  }\n  return ''\n}\n\n/**\n * Determines which address and domain to use depending on whether the address string contains a domain or not.\n * @param {string} addressString The address string to examine and extract a domain from (if any).\n * @param {string} defaultDomainString The domain to use if the address string does not contain a domain in it.\n * @returns {Object} An object containing the correct address and domain to use.\n */\nfunction separateAddressAndDomain (addressString, defaultDomainString) {\n  const extractedDomain = extractDomainFromAddress(addressString)\n  // If a domain was extracted from the address, use that as the domain and strip it from the address.\n  if (extractedDomain) {\n    return {\n      address: addressString.substr(0, addressString.length - extractedDomain.length - 1),\n      domain: extractedDomain\n    }\n  } else {\n    return {\n      address: addressString,\n      domain: defaultDomainString\n    }\n  }\n}\n\n/**\n * Extracts any pre-pended data before a \":\" (if it exists) from the beginning of a string.\n * @param {string} inputString The string to remove pre-pended data from.\n * @returns {string} The pre-pended data string.\n */\nfunction extractPrependedData (inputString) {\n  const prependedDataMatches = inputString.match(/^.*:/g)\n  if (prependedDataMatches && prependedDataMatches[0]) {\n    return prependedDataMatches[0]\n  } else {\n    return ''\n  }\n}\n\n/**\n * Finds the leading special characters (\"#\", \"+\", \"*\") of an address if it is a phone number.\n * If the address contains letters or any non-visual-separator characters,\n *  it is not a phone number and no leading special characters will be found.\n * @param {string} addressString The address string to find the leading characters of (if any).\n *  The addressString must not contain any pre-pended data such as \"sip:\".\n *  The addressString must not contain a domain.\n * @returns {string} The leading special characters as one string. Empty string if none found.\n */\nfunction extractLeadingSpecialCharacters (addressString) {\n  // A single or group of contiguous characters are considered leading character/s if it is  the following:\n  // - starts at the beginning of the string - ^\n  // - is any of the following characters - [#+*]+\n  // - is followed by a digit or \"(\" - [\\d|(]\n  // - is followed by any number of only digits and visual separators - [\\d \\-.()+]*$\n  const potentialLeadingChars = addressString.match(/^[#+*]+[\\d|(][\\d \\-.()+]*$/g)\n  if (potentialLeadingChars && potentialLeadingChars[0]) {\n    // Guaranteed to have a match for regex [#+*]+ since we have potentialLeadingChars\n    // which was a match for a similar regex and we are simply extracting the leading characters part.\n    const actualLeadingChars = potentialLeadingChars[0].match(/[#+*]+/g)\n    return actualLeadingChars[0]\n  }\n  return ''\n}\n\n/**\n * Outputs a new string without its phone number visual separators (\"-\", \".\", \"(\", \")\", \"+\").\n * @param {string} inputString The string to remove visual separators from.\n * @returns {string} A new string without visual separators.\n */\nfunction withoutVisualSeparators (inputString) {\n  return inputString.replace(/[ \\-.()+]/g, '')\n}\n\n/**\n * Determines whether a string should be considered a phone number or not.\n * @param {string} addressString The address string to check.\n *  The addressString must not contain any pre-pended data such as \"sip:\"\n *  The addressString must not contain any leading special characters.\n *  The addressString must not contain a domain.\n * @returns {boolean} True if the input string is a phone number. False if it is not.\n */\nfunction isPhoneNumber (addressString) {\n  const cleanNumber = withoutVisualSeparators(addressString)\n  const phoneNumberMatch = cleanNumber.match(/^\\d+$/g)\n  return phoneNumberMatch && phoneNumberMatch.length === 1\n}\n\n/**\n * Processes the address string and returns the correct output.\n * If the address is a phone number, visual separators are removed.\n * Otherwise, it will just return the address as-is.\n * @param {string} addressString The address string to process.\n *  The addressString must not contain any pre-pended data such as \"sip:\".\n *  The addressString must not contain any leading special characters (if it is a phone number).\n *  The addressString must not contain a domain.\n * @returns {string} A phone number without visual-separators or the addressString as-is.\n */\nfunction processAddress (addressString) {\n  return isPhoneNumber(addressString) ? withoutVisualSeparators(addressString) : addressString\n}\n\n/**\n * Processes the domain string and returns the correct output.\n * Adds an \"@\" symbol if it isn't present at the beginning of the domain.\n * @param {string} domainString The domain string to process.\n * @returns {string} The domain with \"@\" symbol at the beginning if it doesn't exist.\n */\nfunction processDomain (domainString) {\n  if (domainString === '' || domainString === undefined) {\n    return ''\n  } else if (domainString.indexOf('@') === 0) {\n    return domainString\n  } else {\n    return '@' + domainString\n  }\n}\n\n/**\n *The function takes in the input dial string and domain address of the user, performs a normalization process based on the phone number handling normalization rules\n * @function normalizeSipUri\n * @param {string} address   It contains the input dial string the user dials in or the callee address\n * @param {string} domain    It contains the user's domain address\n * @returns {string} output  The output which is the normalized callee address/phone number\n */\nexport function normalizeSipUri (address, domain) {\n  // Remove leading and trailing white spaces.\n  address = address.trim()\n\n  // Extract domain.\n  const resultingAddressAndDomain = separateAddressAndDomain(address, domain)\n  domain = resultingAddressAndDomain.domain\n  address = resultingAddressAndDomain.address\n\n  // Extract pre-pended \"sip:\".\n  const prepend = extractPrependedData(address)\n  address = address.substr(prepend.length)\n\n  // Extract leading characters.\n  const leadingChars = extractLeadingSpecialCharacters(address)\n  address = address.substr(leadingChars.length)\n\n  // Process and build parts into final output in the form of `<prepend>:<leadingChars><address>@<domain>`.\n  return 'sip:' + leadingChars + processAddress(address) + processDomain(domain)\n}\n","// Helpers\nimport BasicError from '../../../errors'\n\n/**\n * Helper function which sends LINK related requests.\n * @param {function} sendRequest Utility function which sends the actual REST request to server side.\n * @param {Object} requestInfo Object containing request information.\n * @param {Object} options Any additional options associated with the REST request.\n * @return {Object} The server's response body (if request was successful), otherwise a BasicError.\n */\nexport async function linkCallRequest (sendRequest, requestInfo, options) {\n  options.url = generateCallUrl(requestInfo, options)\n\n  const response = await sendRequest(options)\n  if (response.error) {\n    return {\n      error: handleLinkCallRequestError(response)\n    }\n  } else {\n    return response.body\n  }\n}\n\n/**\n * Analizes a failed server response in order to generate a specific BasicError.\n * @param {Object} response The server response which indicates a failure.\n * @return {BasicError} The error object containing a specific error code & message.\n */\nexport function handleLinkCallRequestError (response) {\n  function getMessage (code) {\n    switch (code) {\n      case 5:\n        return 'Request failed: Invalid or missing request body'\n      case 26:\n        return 'Request failed: Internal Server Error'\n      case 1004:\n        return 'Request failed: Bad request'\n      default:\n        return 'Request failed: Unknown error'\n    }\n  }\n\n  let message, code\n\n  if (response) {\n    if (response.body) {\n      if ('callControlResponse' in response.body) {\n        // The response includes a body with an error message.\n        const { callControlResponse } = response.body\n        message = getMessage(callControlResponse.statusCode)\n        // TODO: Do we want to wrap the backend's error codes?\n        code = callControlResponse.statusCode\n      } else {\n        // As serviceException details not available, we will capture general error information\n        message = response.body.message\n        code = response.result.code\n      }\n    } else if (response.result) {\n      message = `Request failed: ${response.result.message}`\n      code = response.result.code\n    } else {\n      message = 'Request failed: Unknown error.'\n    }\n  } else {\n    message = 'Request failed: Unknown error.'\n  }\n\n  return new BasicError({ message, code })\n}\n\n/**\n * Generates the call url for the rest request based on the options provided.\n * @param {Object} requestInfo Object containing request information\n * @param {Object} options\n * @param {boolean} [options.isAnonymous] Flag indicating whether the call is anonymous or not.\n * @param {string} [options.account] An account token used by the request if it is an anonymous call.\n * @param {string} [options.wrtcsSessionId] The ID the backend uses to track the session.\n * @param {string} [options.endUrl] The end url to append to the main url.\n */\nexport function generateCallUrl (requestInfo, options) {\n  // Generic user information.\n  const { baseURL, version, username } = requestInfo\n  // Call specific information.\n  const { isAnonymous, account, wrtcsSessionId, endUrl } = options\n\n  const userType = isAnonymous ? 'anonymous' : 'user'\n  const userId = isAnonymous ? account : username\n  const requestType = isAnonymous ? 'callMe' : 'callControl'\n\n  // The common path for all call REST requests.\n  let url = `${baseURL}/rest/version/${version}/${userType}/${userId}`\n\n  if (endUrl) {\n    url += `/${endUrl}`\n  } else {\n    url += `/${requestType}`\n  }\n\n  // If the REST request is for an existing call, the path includes its ID.\n  if (wrtcsSessionId) {\n    url += `/callSessions/${wrtcsSessionId}`\n  }\n\n  return url\n}\n","import { CANCEL } from '@redux-saga/symbols';\n\nvar MAX_SIGNED_INT = 2147483647;\nfunction delayP(ms, val) {\n  if (val === void 0) {\n    val = true;\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\n  if (process.env.NODE_ENV !== 'production' && ms > MAX_SIGNED_INT) {\n    throw new Error('delay only supports a maximum value of ' + MAX_SIGNED_INT + 'ms');\n  }\n\n  var timeoutId;\n  var promise = new Promise(function (resolve) {\n    timeoutId = setTimeout(resolve, Math.min(MAX_SIGNED_INT, ms), val);\n  });\n\n  promise[CANCEL] = function () {\n    clearTimeout(timeoutId);\n  };\n\n  return promise;\n}\n\nexport default delayP;\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n});\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","exports.f = Object.getOwnPropertySymbols;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = function isObject(arg) {\n  var type = typeof arg;\n  return Boolean(arg) && (type === 'object' || type === 'function');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","import { logLevels } from './constants'\n\n/**\n * Helper function to validate a \"log level\" string before its used in the library.\n * @method checkLevel\n * @param  {string} level A log level provided by a user.\n * @return {string}       The log level as expected by the library.\n * @throws Will throw an error if the `level` parameter is invalid.\n */\nexport function checkLevel (level) {\n  // Ensure: is defined and is a string.\n  const upperLevel = level && level.toUpperCase && level.toUpperCase()\n\n  // Ensure: is a supported log level.\n  if (upperLevel && logLevels[upperLevel]) {\n    return logLevels[upperLevel]\n  } else {\n    throw new Error('Provided level is not a valid log level.')\n  }\n}\n\n/**\n * Helper function to validate a \"log handler\".\n * Basically just \"is function\" that throws an error if false.\n * @method checkHandler\n * @param  {Function} handler A log handler function, ideally.\n * @return {Function}         The same log handler function, ideally.\n * @throws Will throw an error if the `handler` provided is not a function.\n */\nexport function checkHandler (handler) {\n  if (handler && typeof handler === 'function') {\n    return handler\n  } else {\n    throw new Error('Provided log handler is not a function.')\n  }\n}\n","// Logs plugin.\nimport * as actionTypes from './actionTypes'\n\n/**\n * Action for setting a Logger's level.\n * @method setLevel\n * @param  {string} level  The level to be set.\n * @param  {string} [type] The type of Logger to set it for.\n */\nexport function setLevel (level, type) {\n  return {\n    type: actionTypes.SET_LEVEL,\n    payload: { level, type }\n  }\n}\n\n/**\n * Action for setting all of the Loggers' log level.\n * @method levelsChanged\n * @param  {Object} levelMap Mapping of logger type to level.\n * @return {Object}\n */\nexport function levelsChanged (levelMap) {\n  return {\n    type: actionTypes.LEVELS_CHANGE,\n    payload: levelMap\n  }\n}\n\n/**\n * Action for setting a Logger's handler.\n * @method setHandler\n * @param  {Function} handler A LogHandler function.\n * @param  {string}   [type]  The type of Logger to set it for.\n */\nexport function setHandler (handler, type) {\n  return {\n    type: actionTypes.SET_HANDLER,\n    payload: { handler, type }\n  }\n}\n\n/**\n * Action for setting all of the Loggers' log handler.\n * @method handlersChanged\n * @param  {Object} handlerMap Mapping of logger type to handler.\n * @return {Object}\n */\nexport function handlersChanged (handlerMap) {\n  return {\n    type: actionTypes.HANDLERS_CHANGE,\n    payload: handlerMap\n  }\n}\n","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n","const PREFIX = '@@KANDY/'\n\nexport const EVENTS_ON = PREFIX + 'EVENTS_ON'\nexport const EVENTS_OFF = PREFIX + 'EVENTS_OFF'\nexport const EVENTS_SUBSCRIBE = PREFIX + 'EVENTS_SUBSCRIBE'\nexport const EVENTS_UNSUBSCRIBE = PREFIX + 'EVENTS_UNSUBSCRIBE'\nexport const EVENTS_ALIAS = PREFIX + 'EVENTS_ALIAS'\nexport const EVENTS_EMIT = PREFIX + 'EVENTS_EMIT'\nexport const MAP_EVENTS = PREFIX + 'MAP_EVENTS'\n","/**\n * The media devices available for use have changed.\n *\n * Information about the available media devices can be retrieved using the\n *    {@link media.getDevices} API.\n *\n * @public\n * @static\n * @memberof media\n * @event devices:change\n * @example\n * // Listen for changes to available media devices.\n * client.on('devices:change', function () {\n *    // Retrieve the latest media device lists.\n *    const devices = client.media.getDevices()\n * })\n */\nexport const DEVICES_CHANGED = 'devices:change'\n\n/**\n * An error occurred while trying to access media devices.\n *\n * The most common causes of this error are when the browser does not have\n *    permission from the end-user to access the devices, or when the browser\n *    cannot find a media device that fulfills the\n *    {@link call.MediaConstraint MediaConstraint(s)} that was provided.\n *\n * @public\n * @static\n * @memberof media\n * @event devices:error\n * @param {Object} params\n * @param {Error} params.error The Basic error object.\n */\nexport const INITIALIZE_DEVICES_ERROR = 'devices:error'\n\n/**\n * The specified Tracks have been muted.\n *\n * A Track can be muted using the {@link media.muteTracks} API.\n * @public\n * @memberof media\n * @event media:muted\n * @param {Object} params\n * @param {Array<string>} params.tracks The list of Tracks that were muted.\n */\nexport const TRACKS_MUTED = 'media:muted'\n\n/**\n * The specified Tracks have been unmuted.\n *\n * A Track can be unmuted using the {@link media.unmuteTracks}\n *    API.\n * @public\n * @memberof media\n * @event media:unmuted\n * @param {Object} params\n * @param {Array<string>} params.tracks The list of Tracks that were unmuted.\n */\nexport const TRACKS_UNMUTED = 'media:unmuted'\n\n/**\n * The specified Track has had its media source muted.\n *\n * The Track is still active, but is not receiving media any longer. An audio\n *    track will be silent and a video track will be a black frame. It is\n *    possible for the track to start receiving media again (see the\n *    {@link media.event:media:sourceUnmuted media:sourceUnmuted} event).\n *\n * This event is generated outside the control of the SDK. This will predominantely\n *    happen for a remote track during network issues, where media will lose frames\n *    and be \"choppy\". This may also happen for a local track if the browser or\n *    end-user stops allowing the SDK to access the media device, for example.\n * @public\n * @static\n * @memberof media\n * @event media:sourceMuted\n * @param {Object} params\n * @param {string} params.trackId The track that is affected as a result of media source being muted.\n */\nexport const TRACK_SOURCE_MUTED = 'media:sourceMuted'\n\n/**\n * The specified Track has started receiving media from its source once again.\n *\n * The Track returns to the state before it was muted (see the\n *    {@link media.event:media:sourceMuted media:sourceMuted} event), and will\n *    be able to display video or play audio once again.\n *\n * This event is generated outside the control of the SDK, when the cause of the\n *    media source being muted had been undone.\n * @public\n * @static\n * @memberof media\n * @event media:sourceUnmuted\n * @param {Object} params\n * @param {string} params.trackId The track that is affected as a result of media source being unmuted.\n */\nexport const TRACK_SOURCE_UNMUTED = 'media:sourceUnmuted'\n\n/**\n * The specified Track has been rendered into an element.\n *\n * @public\n * @static\n * @memberof media\n * @event media:trackRendered\n * @param {Object} params\n * @param {Array<string>} params.trackIds The list of track id's that were rendered.\n * @param {string} params.selector The css selector used to identify the element the track is rendered into.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const TRACK_RENDERED = 'media:trackRendered'\n\n/**\n * A local Track has ended unexpectedly. The Track may still be part of a Call but\n *    has become disconnected from its media source and is not recoverable.\n *\n * This event is emitted when an action other than an SDK operation stops the\n *    track. The most comon scenarios are when a device being used for a Call\n *    disconnects, any local tracks (such as audio from a bluetooth headset's\n *    microphone or video from a USB camera) from that device will be ended.\n *    Another scenario is for screensharing, where some browsers provide the\n *    ability to stop screensharing directly rather than through an SDK operation.\n *\n * When a local track ends this way, it will still be part of the Call but will\n *    not have any media. The track can be removed from the call with the\n *    {@link call.removeMedia} API so the remote side of the Call knows the track\n *    has stopped, or the track can be replaced with a new track using the\n *    {@link call.replaceTrack} API to prevent any interruption.\n * @public\n * @static\n * @memberof media\n * @event media:trackEnded\n * @param {Object} params\n * @param {Object} params.trackId The Track that has ended.\n * @param {Object} params.callId The ID of the Call the Track is used in.\n */\nexport const TRACK_ENDED = 'media:trackEnded'\n","import { logManager } from '../logs'\n// Constants.\nimport { MEDIA_DIR } from '../constants'\n\nconst log = logManager.getLogger('SdpPipeline')\n\n/**\n * SDP handler to remove the trickle ICE option from media groups.\n * Modifies the SDP so it claims to not support trickle ICE.\n * @method removeTrickleIce\n * @param  {Object} sdp\n * @param  {Object} info\n * @param  {String} info.type\n * @param  {String} info.endpoint\n * @param  {Object} originalSdp\n * @return {Object}\n */\nexport function removeTrickleIce (sdp, info, originalSdp) {\n  sdp.media.forEach(media => {\n    if (media.iceOptions === 'trickle') {\n      log.debug(`Removing trickle ICE option from ${media.type} media.`)\n      delete media.iceOptions\n    }\n  })\n\n  return sdp\n}\n\n/**\n * SDP handler to delete the bundle groupings line from the SDP.\n * PeerConnections do not have an option to completely disable bundling, so\n *    manually removing the line from the SDP is needed to prevent bundling.\n * @method removeBundling\n * @param  {Object}     sdp           The session description.\n * @param  {Object}     info          Information about the session description.\n * @param  {RTCSdpType} info.type     The session description's type.\n * @param  {String}     info.endpoint Which end of the connection created the SDP.\n * @param  {Object}     originalSdp   The original SDP before any modifications.\n * @return {Object}\n */\nexport function removeBundling (sdp, info, originalSdp) {\n  if (sdp.groups) {\n    log.debug('Removing SDP bundling groups.')\n    delete sdp.groups\n  }\n\n  return sdp\n}\n\n/**\n * Currying function to create an SDP handler.\n * The SDP handler modifies the SDP to change the direction of media.\n * @method changeMediaDirection\n * @param  {Object} mediaDirections\n * @param  {string} [audio] Direction to set for audio.\n * @param  {string} [video] Direction to set for video.\n * @return {Function} SDP handler.\n */\nexport function changeMediaDirection ({ audio, video }) {\n  function isValid (direction) {\n    return Object.values(MEDIA_DIR).includes(direction)\n  }\n\n  /**\n   * SDP handler to change the direction of media a-lines.\n   */\n  return (sdp, info, originalSdp) => {\n    sdp.media.forEach(media => {\n      if (media.type === 'audio' && isValid(audio)) {\n        media.direction = audio\n      } else if (media.type === 'video' && isValid(video)) {\n        media.direction = video\n      }\n    })\n    return sdp\n  }\n}\n\n/**\n * SDP handler to modify the DTLS role of a locally generated answer SDP.\n *\n * The point of this SDP handler is to avoid a DTLS role conflict during a\n *    renegotiation. A role conflict occurs when DTLS roles have been selected\n *    during initial negotiation, but during renegotiation, the answerer selects\n *    the opposite role than previously used.\n *\n * This handler only needs to be used when the Peer is generating an answer SDP.\n *    That is the only point when a conflicting role can be chosen.\n *\n * This handler prevents the role changing by comparing the SDP's role with the\n *    role that the Peer previously selected. If they conflict, the Peer's\n *    previous role is used.\n *\n * Related stories: KAA-1426, KAA-1562.\n * References: https://groups.google.com/forum/#!topic/discuss-webrtc/gsw3OEAwNKo\n * @method preventDtlsRoleChange\n * @param  {Object}     newSdp          The session description.\n * @param  {Object}     info            Information about the session description.\n * @param  {RTCSdpType} info.type       The session description's type.\n * @param  {string}     info.endpoint   Which end of the connection created the SDP.\n * @param  {string}     [info.dtlsRole] The previously select DTLS role of the Peer.\n * @param  {Object}     originalSdp     The sdp in its initial state.\n * @return {Object}                     The modified SDP.\n */\nexport function preventDtlsRoleChange (newSdp, info, originalSdp) {\n  /**\n   * This SDP handler only affects local answer SDPs.\n   *  - Only local because we are trying to prevent role conflict issues caused\n   *        by the answerer choosing the \"wrong\" role during a renegotiation.\n   *  - Only answer because offers are always actpass.\n   */\n  if (info.endpoint === 'local' && info.type === 'answer') {\n    for (const mLine of newSdp.media) {\n      /**\n       * If the generated DTLS role is different than what the Peer expects,\n       *    replace it. The Peer expects the DTLS role to stay the same\n       *    throughout renegotiations.\n       */\n      if (mLine.setup && info.dtlsRole && mLine.setup !== info.dtlsRole) {\n        log.debug(`Changing DTLS role from ${mLine.setup} to ${info.dtlsRole}.`)\n        mLine.setup = info.dtlsRole\n      }\n    }\n  }\n  return newSdp\n}\n","import * as actionTypes from './actionTypes'\n\nvar nextRequestId = 0\nfunction generateRequestId () {\n  return nextRequestId++\n}\n\n/**\n * Creates a request action.\n * @param {Object} options\n * @param {string} options.url The url for the request\n * @param {Object} [options.queryParams] Query parameters to be added to the url string\n * @param {string} [options.responseType] The data type assumed to be received in the response body\n * @param {Blob|BufferSource|FormData|UrlSearchParams|string} [options.body] The request body\n */\nexport function request (options) {\n  return {\n    type: actionTypes.REQUEST,\n    payload: options,\n    meta: {\n      requestId: generateRequestId()\n    }\n  }\n}\n\n/**\n * Creates a response action.\n */\nexport function response (requestId, result, error = false) {\n  return {\n    type: actionTypes.RESPONSE,\n    payload: result,\n    error,\n    meta: {\n      requestId: requestId\n    }\n  }\n}\n\n/**\n * Action to signify a REST request has encountered an authorization error.\n * @param  {BasicError} error\n * @return {Action}\n */\nexport function authorizationError (error) {\n  return {\n    error: true,\n    type: actionTypes.AUTHORIZATION_ERROR,\n    payload: error\n  }\n}\n","// Request plugin.\nimport { injectAgentVersionHeader, customAgentVersionHeaderSuffix } from '../interface/selectors'\n\n// Other plugins.\nimport { getPlatform, getRequestInfo } from '../../auth/interface/selectors'\nimport { logManager } from '../../logs'\n\n// Utils.\nimport { getVersion } from '../../common/version'\nimport { toQueryString } from '../../common/utils'\nimport { platforms } from '../../constants'\n\n// Libraries.\nimport { select } from 'redux-saga/effects'\nimport { cloneDeep } from 'lodash/fp'\n\nconst log = logManager.getLogger('REQUEST')\n\n/**\n * Helper function to compile the common headers/options for a REST request.\n * @method getCommonOptions\n * @param  {string} url The URL to be used for the request.\n * @return {Object}\n */\nexport function * getCommonOptions (url) {\n  const platform = yield select(getPlatform)\n  const requestInfo = yield select(getRequestInfo, platform)\n  const useCustomHeader = yield select(injectAgentVersionHeader)\n  const customSuffix = yield select(customAgentVersionHeaderSuffix)\n\n  // Start off with whatever options were set by the Auth plugin.\n  //    The authentication headers / token will be there if they are set.\n  let options\n  if (platform === 'cpaas') {\n    // For some reason, CPaaS has this property as `options` where the other\n    //    SDKs have it as `requestOptions`. Workaround that here.\n    options = requestInfo.options || {}\n  } else {\n    options = requestInfo.requestOptions || {}\n  }\n\n  // Ensure there is a headers object.\n  options.headers = options.headers || {}\n\n  // Add the common headers.\n  options.headers['Content-Type'] = 'application/json'\n  options.headers.Accept = 'application/json'\n\n  // If enabled, add the 'Agent Version' header to the options.\n  if (useCustomHeader) {\n    let headerValue = getCpaasAgentHeaderValue(platform, url)\n    if (customSuffix) {\n      // If a custom suffix value was provided as well, then use it.\n      headerValue += ' ' + customSuffix\n    }\n    options.headers['X-Cpaas-Agent'] = headerValue\n  }\n\n  return options\n}\n\n/**\n * Determine and return the current SDK platform and version string to be used\n * with the x-Cpaas-Agent network request header field.\n * @method getCpaasAgentHeaderValue\n * @param  {string}  platform Which platform is currently being used.\n * @param  {string}  url The url for the request being made.\n * @return {string}  A string representation of the platform and version the SDK is using.\n */\nexport function getCpaasAgentHeaderValue (platform, url) {\n  // Assume request is for CPaaS platform, by default.\n  let headerValue = `cpaas-js-sdk/${getVersion()}`\n\n  // Check if request is for callMe service, otherwise determine the appropriate platform.\n  // (callMe service uses Link platform for call requests)\n  if (url && url.includes('/anonymous/')) {\n    headerValue = `callme-js-sdk/${getVersion()}`\n  } else {\n    // Check the actual platform used\n    if (platform === platforms.UC) {\n      headerValue = `uc-js-sdk/${getVersion()}`\n    } else if (platform === platforms.LINK) {\n      headerValue = `link-js-sdk/${getVersion()}`\n    }\n  }\n  return headerValue\n}\n\n/**\n * Prepares a REST request options object for logging by removing passwords\n * and parses the body string into an object that can be interacted with in console.\n * @method sanitizeRequest\n * @param {Object} options An object containing any custom settings that you want to\n *                         apply to the request. See [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n *                         or a full description and defaults.\n * @return {Object} A sanitized REST request options object that can be safely logged.\n */\nexport function sanitizeRequest (options) {\n  const logOptions = cloneDeep(options)\n  // When logging the Auth header, cut it off so that we can see the type of\n  //    token but not the token itself. Depending on the type, it can contain\n  //    a password.\n  const authHeader = logOptions.headers && logOptions.headers.Authorization\n  if (authHeader) {\n    logOptions.headers.Authorization = authHeader.substring(0, 6) + '...'\n  }\n\n  // If the rest request body is a string, try to parse it as JSON and store\n  // it as an object so it can be interacted with in the console\n  const body = logOptions.body\n  if (body) {\n    try {\n      logOptions.body = JSON.parse(body)\n    } catch (e) {\n      // Noop, leave the body in whatever format it was in.\n    }\n  }\n\n  return logOptions\n}\n\n/**\n * Send a REST request to Link with the appropriate configuration.\n * @method fetchResource\n * @param {string} resource The path of the resource to fetch from the underlying service. This path will be appended\n *                          to the base URL according to SDK configuration.\n * @param {Object} requestInfo An object containing any custom settings that you want to apply to the request. See [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n *                             for a full description and defaults.\n * @return {Promise<Response>} A promise for a [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) object.\n */\nexport async function fetchResource (resource, requestInfo, module) {\n  const { requestOptions } = requestInfo\n\n  // If the app doesn't prepend the '/' we should add it.\n  if (resource.charAt() !== '/') {\n    resource = `/${resource}`\n  }\n\n  const url = `${requestInfo.baseURL}${resource}`\n  const logOptions = sanitizeRequest(requestOptions)\n  log.debug('Making REST request', logOptions)\n\n  const queryParams = requestInfo.requestOptions.queryParams || {}\n  let queryString = toQueryString(queryParams)\n  // Check resource passed in for any existing query params\n  if (resource.includes('?')) {\n    queryString = queryString.replace('?', '&')\n  }\n  const response = await fetch(url + queryString, requestOptions)\n\n  log.debug('Received REST response', response)\n\n  return response\n}\n","const prefix = '@@KANDY/SUBSCRIPTION/'\n\nexport const SUBSCRIBE = prefix + 'SUBSCRIBE'\nexport const SUBSCRIBE_FINISHED = prefix + 'SUBSCRIBE_FINISHED'\n\nexport const UNSUBSCRIBE = prefix + 'UNSUBSCRIBE'\nexport const UNSUBSCRIBE_FINISHED = prefix + 'UNSUBSCRIBE_FINISHED'\n\nexport const RESUBSCRIPTION_FINISHED = prefix + 'RESUBSCRIPTION_FINISHED'\n\nexport const REGISTER_SUB_SERVICE = prefix + 'REGISTER_SUB_SERVICE'\nexport const PLUGIN_SUBSCRIPTION = prefix + 'PLUGIN_SUBSCRIPTION'\nexport const PLUGIN_SUBSCRIPTION_FINISHED = prefix + 'PLUGIN_SUBSCRIPTION_FINISHED'\nexport const PLUGIN_UNSUBSCRIPTION = prefix + 'PLUGIN_UNSUBSCRIPTION'\nexport const PLUGIN_UNSUBSCRIPTION_FINISHED = prefix + 'PLUGIN_UNSUBSCRIPTION_FINISHED'\n\nexport const CHANNEL_OPENED = prefix + 'CHANNEL_OPENED'\nexport const CHANNEL_CLOSED = prefix + 'CHANNEL_CLOSED'\n","// Lodash FP\nimport { isEmpty } from 'lodash/fp'\n\n/**\n * Helper function for Call APIs.\n * Reduces media constraints provided to an API to a consistent format.\n *\n * Converts the kind properties from \"SDK MediaConstraints\" object to an WebRTC-spec\n *    MediaConstraints properties.\n * @method formatMediaConstraints\n * @param {Object} media\n * @param {booleant} media.audio\n * @param {Object} media.audioOptions\n * @param {boolean} media.video\n * @param {Object} media.videoOptions\n * @param {boolean} media.screen\n * @param {Object} media.screenOptions\n * @returns {Object}\n */\nexport function formatMediaConstraints (media) {\n  const mediaConstraints = {\n    audio: media.audio && !isEmpty(media.audioOptions) ? media.audioOptions : media.audio,\n    video: media.video && !isEmpty(media.videoOptions) ? media.videoOptions : media.video,\n    screen: media.screen && !isEmpty(media.screenOptions) ? media.screenOptions : media.screen\n  }\n\n  return mediaConstraints\n}\n","// Callstack.\nimport { callActions } from '../../../interface/actions'\nimport * as eventTypes from '../../../interface/eventTypes'\nimport { CALL_STATES } from '../../../constants'\nimport { getAllRemoteTracks } from '../../sdp/media/remoteTracks'\n\nimport { REPORTER_EVENTS, REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\nexport default function createMakeResponse (container) {\n  const { context, logManager, emitEvent, CallstackWebrtc, CallReporter, WebRTC } = container\n\n  /**\n   * Operation for handling the answer SDP of a locally-started make operation.\n   *\n   * On succesful handling:\n   *    - updates call state to \"connected\",\n   *    - emits a \"tracks added\" event\n   *    - emits a \"call state change\" event.\n   *\n   * On failure to handle, ends the call as unrecoverable:\n   *    - updates call state to \"ended\",\n   *    - emits a \"tracks removed\" event\n   *    - emits a \"call state change\" event.\n   *\n   * @method makeResponse\n   * @param {Object} call The call being acted on.\n   * @param {Object} params\n   * @param {Object} params.sdp The remote answer SDP.\n   * @return {undefined}\n   */\n  async function makeResponse (call, params) {\n    const log = logManager.getLogger('CALL', call.id)\n\n    const callReport = CallReporter.getReport(call.id)\n    // Start the process reseponse event\n    const operationEvent = callReport.getEvent(call.localOp.eventId)\n    const processResponseEvent = operationEvent.addEvent(REPORTER_EVENTS.PROCESS_RESPONSE)\n    processResponseEvent.addData('operation', REPORTER_OPERATION_EVENTS_MAP.MAKE)\n\n    // Handle the remote answer SDP.\n    try {\n      const sessionInfo = { sessionId: call.webrtcSessionId, answerSdp: params.sdp }\n      await CallstackWebrtc.receivedAnswer(sessionInfo, call)\n    } catch (error) {\n      /*\n       * Failed to set the remote answer SDP. End the call.\n       * TODO: Better error handling. Is the Call fully cleaned-up here?\n       */\n      context.dispatch(\n        callActions.endCallFinish(call.id, {\n          error\n        })\n      )\n\n      // Tell the application that local tracks are not available, since the\n      //    call is ending in error.\n      emitEvent(eventTypes.CALL_TRACKS_REMOVED, {\n        callId: call.id,\n        trackIds: [...call.localTracks, ...call.remoteTracks]\n      })\n\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId: call.id,\n        previous: {\n          state: call.state,\n          localHold: call.localHold,\n          remoteHold: call.remoteHold\n        },\n        error\n      })\n      processResponseEvent.setError(error)\n      processResponseEvent.endEvent()\n      return\n    }\n\n    log.info(\n      `Finished processing remote response to local ${call.localOp.operation}. Changing state based on operation.`\n    )\n\n    // Get the list of all remote tracks being offered in this call. This is a\n    //    new call, so this should be the full list of remote tracks available.\n    const session = await WebRTC.sessionManager.get(call.webrtcSessionId)\n    const remoteTracks = await getAllRemoteTracks(session)\n\n    /*\n     * Update call state:\n     *    - state change to \"connected\",\n     *    - remote tracks added to call\n     */\n    context.dispatch(\n      callActions.makeCallFinish(call.id, {\n        state: CALL_STATES.CONNECTED,\n        // TODO: Make sure this is the correct units\n        startTime: Date.now(),\n        // Remote participant's information.\n        remoteParticipant: {\n          displayNumber: params.remoteNumber,\n          displayName: params.remoteName\n        },\n        // Add the remote tracks to the call state.\n        remoteTracks\n        // Local tracks have already been added on \"pending make call\".\n      })\n    )\n\n    // Tell the application that tracks have been added.\n    emitEvent(eventTypes.CALL_TRACKS_ADDED, {\n      callId: call.id,\n      trackIds: remoteTracks\n    })\n\n    // Tell the application that call state has changed.\n    emitEvent(eventTypes.CALL_STATE_CHANGE, {\n      callId: call.id,\n      previous: {\n        state: call.state,\n        localHold: call.localHold,\n        remoteHold: call.remoteHold\n      }\n    })\n\n    processResponseEvent.endEvent()\n  }\n\n  return makeResponse\n}\n","// Constants\nimport { MEDIA_TRANSITIONS } from './constants'\nimport { OPERATIONS } from '../../../interface/constants'\n\n/**\n * Based on a MediaDiff object, determine what the call operation was that\n *    caused the SDP/media change.\n * @method getOperation\n * @param  {MediaDiff} mediaDiff\n * @return {string}\n */\nexport default function getOperation (mediaDiff) {\n  // Naively just check one operation after the other.\n  // TODO: Make this more efficient?\n  // TODO: These MoH checks should take into account current call state.\n  //    Start/Stop MoH should only be possible in specific states.\n  if (wasHold(mediaDiff) || was3xHold(mediaDiff)) {\n    return OPERATIONS.HOLD\n  } else if (wasUnhold(mediaDiff) || was3xUnhold(mediaDiff)) {\n    return OPERATIONS.UNHOLD\n  } else if (wasStartMoh(mediaDiff)) {\n    // Check 'start MoH' before 'add media' because 'start MoH' is a special\n    //    case of 'add media'.\n    return OPERATIONS.START_MOH\n  } else if (wasAddMedia(mediaDiff)) {\n    return OPERATIONS.ADD_MEDIA\n  } else if (wasStopMoh(mediaDiff)) {\n    // Check 'stop MoH' before 'remove media' because 'stop MoH' is a special\n    //    case of 'remove media'.\n    return OPERATIONS.STOP_MOH\n  } else if (wasRemoveMedia(mediaDiff)) {\n    return OPERATIONS.REMOVE_MEDIA\n  } else if (wasNoChange(mediaDiff)) {\n    return 'NO_CHANGE'\n  } else {\n    return 'UNKNOWN'\n  }\n}\n\n/**\n * A \"hold\" operation is when all media lines change to be \"inactive\".\n * Some media may have already been inactive. \"Hold\" is specifically when\n *    all active media becomes inactive, hence there is no longer any media\n *    flowing.\n *\n * This differs from a \"stop MoH\" operation by requiring at least one media to\n *    be \"flowing\" (both sending and receiving) before the operation. For\n *    \"stop MoH\", the media would only be sending (and not receiving) before.\n *\n * In terms of SDP changes, it is defined as:\n *    1) At least one media was 'flowing' before the SDP change.\n *    2) No media is 'flowing' after the SDP change.\n *    3) No active media was added.\n *    4) No media was removed.\n *    5) All media that changed was stopped.\n *        ie. is being \"held\".\n *    6) All media that is unchanged is not sending/receiving.\n *        ie. was already \"held\".\n * @method wasHold\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasHold (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * 1 & 2) Some media was flowing before the change, and no media is flowing\n   *    after the change. This ensures \"hold\" is distinct from \"stop MoH\"\n   *    scenarios.\n   */\n  const stoppedFlowing = hadMediaFlowing(mediaDiff) && !hasMediaFlowing(mediaDiff)\n\n  /*\n   * 3) No active media was added.\n   * For any added media we need to check if it's inactive to determine if this was a hold\n   */\n  const noActiveMediaAdded = !added.some(media => media.willSend || media.willReceive)\n\n  /*\n   * 4) No media was removed\n   */\n  const noMediaRemoved = removed.length === 0\n\n  /*\n   * 5a) Some media did change.\n   */\n  const didChange = changed.length > 0\n\n  /*\n   * 5b) For all media that changed,\n   *    all changes were either `stop` or `remain stopped`.\n   */\n  const allStopped = changed.every(({ media, changes }) => {\n    // This media is not sending.\n    const notSending =\n      changes.sending === MEDIA_TRANSITIONS.STOP || (changes.sending === MEDIA_TRANSITIONS.SAME && !media.willSend)\n    // This media is not receiving.\n    const notReceiving =\n      changes.receiving === MEDIA_TRANSITIONS.STOP ||\n      (changes.receiving === MEDIA_TRANSITIONS.SAME && !media.willReceive)\n\n    return notSending && notReceiving\n  })\n\n  /*\n   * 6) For all media that was not changed,\n   *    no media is being sent/received.\n   */\n  const stillStopped = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return stoppedFlowing && noActiveMediaAdded && noMediaRemoved && didChange && allStopped && stillStopped\n}\n\nexport function wasUnhold (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * 1 & 2) No media was flowing before the change, and some media is flowing\n   *    after the change. This ensures \"unhold\" is distinct from \"start MoH\"\n   *    scenarios.\n   */\n  const startedFlowing = !hadMediaFlowing(mediaDiff) && hasMediaFlowing(mediaDiff)\n\n  /*\n   * 3 & 4) No media was added or removed.\n   */\n  const sameMedia = added.length === 0 && removed.length === 0\n\n  /*\n   * 6) For all media that was not changed,\n   *    no media is being sent/received.\n   */\n  const noUnchangedSend = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  /*\n   * 5a) Some media did change.\n   */\n  const didChange = changed.length > 0\n\n  /*\n   * 5b) For all media that was changed,\n   *    all changes were either `start` or `remain stopped`.\n   */\n  const onlyStartChanges = changed.every(({ media, changes }) => {\n    const onlyStartSending =\n      changes.sending === MEDIA_TRANSITIONS.START || (changes.sending === MEDIA_TRANSITIONS.SAME && !media.willSend)\n\n    const onlyStartReceiving =\n      changes.receiving === MEDIA_TRANSITIONS.START ||\n      (changes.receiving === MEDIA_TRANSITIONS.SAME && !media.willReceive)\n\n    return onlyStartSending && onlyStartReceiving\n  })\n\n  return startedFlowing && sameMedia && noUnchangedSend && didChange && onlyStartChanges\n}\n\n/**\n * A \"3.X hold\" operation is when a hold operation changes media to `sendonly`\n *    instead of `inactive`. This is what the 3.X SDK and Mobile SDK does. This\n *    is for interop with remote endpoints other than the 4.X SDK.\n *\n * In terms of SDP changes, it is defined as:\n *    1) At least one media was 'flowing' before the SDP change.\n *    2) All changed audio media is now 'sendonly'.\n *        ie. is being \"v3.X held\"\n *       All changed video media is not receiving.\n *    3) No active media was added.\n *    4) No media was removed.\n *    5) All media that is unchanged is not sending/receiving.\n *        ie. was already \"held\".\n *\n * @method was3xUnhold\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function was3xHold (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * 1) Handles when some media was flowing before the change.\n   *  or a special case where media was flowing but assumes media wasn't flowing.\n   * 2) All changed media is now \"sendonly\".\n   *    All changed video media is not receiving.\n   */\n  const wasFlowing = hadMediaFlowing(mediaDiff)\n  const allSendOnly = changed.every(({ media, changes }) => {\n    /**\n     * Possible scenarios:\n     *\n     *  1. Audio-only 3.X Hold:\n     *    - A sendrecv --> A sendonly\n     *\n     *  2. Two way Audio-Video (eg. KAA-2639):\n     *    - A/V sendrecv/sendrecv --> A/V sendonly/inactive\n     *  3. Two way Audio-Video (eg. KAA-2463):\n     *    - A/V sendrecv/sendrecv --> A/V sendonly/sendonly\n     *\n     *  4. Two way Audio, One way receive Video:\n     *    - A/V sendrecv/recvonly --> A/V sendonly/inactive\n     *  5. Two way Audio, One way receive Video:\n     *    - A/V sendrecv/recvonly --> A/V sendonly/sendonly\n     *\n     *  6. Two way Audio, One way send Video:\n     *    - A/V sendrecv/sendonly --> A/V sendonly/inactive\n     *  7. Two way Audio, One way send Video:\n     *    - A/V sendrecv/sendonly --> A/V sendonly/sendonly (video checked by 5) below)\n     *\n     * The summary of these scenarios are:\n     *  - Audio always stops receiving.\n     *  - Audio always continues sending.\n     *  - Video is never receiving afterwards (stop, same).\n     *  - Video sending can be anything (same, start, stop).\n     */\n    if (media.type === 'audio') {\n      // Changed audio always stops being received by the remote endpoint.\n      // Changed audio always continues being sent by the remote endpoint.\n      return changes.receiving === MEDIA_TRANSITIONS.STOP && changes.sending === MEDIA_TRANSITIONS.SAME\n    } else {\n      return (\n        // Changed video is never received afterwards.\n        //     Either stopped or stayed \"not receiving\".\n        changes.receiving === MEDIA_TRANSITIONS.STOP ||\n        (changes.receiving === MEDIA_TRANSITIONS.SAME && media.willReceive === false)\n      )\n    }\n  })\n\n  /*\n   * 3) No active media was added.\n   * For any added media we need to check if it's inactive to determine if this was a hold\n   */\n  const noActiveMediaAdded = !added.some(media => media.willSend || media.willReceive)\n\n  /*\n   * 4) No media was removed\n   */\n  const noMediaRemoved = removed.length === 0\n\n  /*\n   * 5) For all media that was not changed,\n   *      no media is being sent/received,\n   *      or video might still be sendonly.\n   */\n  const noUnchangedSend = unchanged.every(media => {\n    return (\n      (!media.willSend && !media.willReceive) ||\n      // Edge-case: One-way video was being received, and the hold did not\n      //    change the direction but just stopped the video being sent.\n      (media.type === 'video' && media.willSend && !media.willReceive)\n    )\n  })\n\n  return wasFlowing && allSendOnly && noActiveMediaAdded && noMediaRemoved && noUnchangedSend\n}\n\n/**\n * A \"3.X unhold\" operation is when a v3.X SDK performs unhold. This is for\n *    interop.\n *\n * This operation is the same as a \"regular\" unhold, except that media changes\n *    from sendonly instead of inactive.\n *\n * In terms of SDP changes, it is defined as:\n *    1) Some media is flowing afterwards.\n *    2) All media that changed was started receiving.\n *        ie. is being \"3.X unheld\"\n *    3) No media was added.\n *    4) No media was removed.\n *    5) All media that is unchanged is not sending/receiving.\n *        ie. was (and still is) \"held\"\n *\n * @method was3xUnhold\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function was3xUnhold (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * 1) Some media was flowing before the change.\n   * 2) All changed media is now went from \"sendonly\" to \"sendrecv\".\n   */\n  const isFlowing = hasMediaFlowing(mediaDiff)\n  const allSending = changed.every(({ media, changes }) => {\n    return (\n      (changes.sending === MEDIA_TRANSITIONS.SAME && changes.receiving === MEDIA_TRANSITIONS.START) ||\n      /*\n       * Special-case: If the media is video, it's possible to go from \"inactive\" to \"sendrecv\".\n       *    This can happen when the SDK is receiving MoH then is unheld immediately (without\n       *    going through a stop MoH operation).\n       * This behaviour was seen when the remote endpoint was a SIP device. See KAA-2593.\n       */\n      (media.type === 'video' &&\n        changes.sending === MEDIA_TRANSITIONS.START &&\n        changes.receiving === MEDIA_TRANSITIONS.START)\n    )\n  })\n\n  /*\n   * 3) & 4) No media was added or removed.\n   */\n  const sameMedia = added.length === 0 && removed.length === 0\n\n  /*\n   * 5) For all media that was not changed,\n   *    no media is being sent/received.\n   */\n  const noUnchangedSend = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return isFlowing && allSending && sameMedia && noUnchangedSend\n}\n\n/**\n * An \"add media\" operation is when the latest SDP is sending tracks that the\n *    previous SDP was not sending. This can either be a new, sending media\n *    section or an existing media section that was changed to now send.\n *\n * The \"start MoH\" scenario is a special-case of \"add media\". When one audio\n *    track is added/started, with no media flowing beforehand, then that could\n *    either be a \"start MoH\" or \"add media\" operation. From a webrtc/SDP\n *    viewpoint, they are the same thing in that scenario, so there is no way\n *    to tell them apart using only a MediaDiff object.\n * If both ends of the Call are SDK clients, then \"start MoH\" can only be done\n *    when the Call is on hold (by definition), and \"add media\" can only be\n *    done when the Call is not on hold (requirement set by the API), but we\n *    can't make that assumption.\n *\n * In terms of SDP changes, it is defined as:\n *    1) No media [sections] was removed.\n *    2) Any media added is sending.\n *    3) Any media that changed started sending.\n * @method wasAddMedia\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasAddMedia (mediaDiff) {\n  const { added, removed, changed } = mediaDiff\n\n  /*\n   * 1) No media sections were removed.\n   */\n  const wasntRemoved = removed.length === 0\n\n  /*\n   * 2a & 3a) Something was added or changed.\n   */\n  const somethingStarted = added.length > 0 || changed.length > 0\n\n  /*\n   * 2b) Any media sections added are sending.\n   */\n  const addedSending = added.every(media => media.willSend)\n\n  /*\n   * 3b) Any media that changed was to start sending.\n   */\n  const changedSending = changed.every(({ media, changes }) => {\n    // Should handle:\n    //    reconly  --> sendrecv\n    //    inactive --> sendonly\n    //    inactive --> sendrecv\n    return (\n      changes.sending === MEDIA_TRANSITIONS.START &&\n      (changes.receiving === MEDIA_TRANSITIONS.SAME || changes.receiving === MEDIA_TRANSITIONS.START)\n    )\n  })\n\n  /*\n   * Unchanged media is not checked for.\n   *    By definition, it is the same as before, and could be in any state.\n   */\n\n  return wasntRemoved && somethingStarted && addedSending && changedSending\n}\n\n/**\n * A \"remove media\" operation is when some media sections stop sending (with no\n *    other changes).\n *\n * The \"stop MoH\" scenario is a special-case of \"remove media\". When one audio\n *    track is removed, leaving no media flowing afterwards, then that could\n *    either be a \"stop MoH\" or \"remove media\" operation. From a webrtc/SDP\n *    viewpoint, they are the same thing in that scenario, so there is no way\n *    to tell them apart using only a MediaDiff object.\n * If both ends of the Call are SDK clients, then \"stop MoH\" can only be done\n *    when the Call is on hold (by definition), and \"remove media\" can only be\n *    done when the Call is not on hold (requirement set by the API), but we\n *    can't make that assumption.\n *\n * In terms of SDP changes, it is defined as:\n *    1) No media was added.\n *    2) No media [sections] were removed.\n *    3) Some existing media stopped sending (ie. tracks were removed).\n * @method wasRemoveMedia\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasRemoveMedia (mediaDiff) {\n  const { added, removed, changed } = mediaDiff\n\n  /*\n   * 1 & 2) No media sections were added or removed.\n   */\n  const wasntAdded = added.length === 0\n  const wasntRemoved = removed.length === 0\n\n  /*\n   * 3a) Some media sections changed.\n   */\n  const wasChanged = changed.length > 0\n\n  /*\n   * 3b) For all media sections that changed,\n   *      the only change was to stop sending.\n   */\n  const onlyStopSending = changed.every(({ media, changes }) => {\n    return (\n      changes.sending === MEDIA_TRANSITIONS.STOP &&\n      // Receiving may be SAME or START, depending if the previous media\n      //    direction was sendrecv (SAME) or sendonly (START).\n      // TODO: Update `ChangedMedia` to include the pre-change media summary?\n      changes.receiving !== MEDIA_TRANSITIONS.STOP\n    )\n  })\n\n  /*\n   * Unchanged media is not checked for.\n   *    By definition, it is the same as before, and could in any state.\n   */\n\n  return wasntAdded && wasntRemoved && wasChanged && onlyStopSending\n}\n\n/**\n * A \"start Music on Hold\" operation is when media is currently held, and one\n *    audio media is changed to \"send only\".\n *\n * This checker does not guarantee that it was a \"start MoH\" scenario, and not\n *    a very specific \"add media\" scenario. It is an edge-case, but it is\n *    possible that both sides of the Call removed all media, then one side\n *    adds a single audio track. There is no way to tell the difference with\n *    only a MediaDiff object.\n *\n * In terms of SDP changes, it is defined as:\n *    0) A \"add media\" scenario where:\n *    1) One inactive audio section starts sending.\n *    2) All other media remains unchanged.\n *    3) Any unchanged media is inactive.\n * @method wasStartMoh\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasStartMoh (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  // 0) \"Start MoH\" is a \"add media\" scenario that has extra requirements.\n  if (!wasAddMedia(mediaDiff)) {\n    return false\n  }\n\n  /*\n   * 1) Only one audio line should be changed, to send only.\n   */\n  const onlyAudioChange =\n    // Only one audio line changed.\n    changed.length === 1 &&\n    changed[0].media.type === 'audio' &&\n    // The change was to start sending media.\n    changed[0].changes.sending === MEDIA_TRANSITIONS.START &&\n    // Receiving media remains unchanged; not receiving.\n    changed[0].changes.receiving === MEDIA_TRANSITIONS.SAME &&\n    !changed[0].media.willReceive\n\n  /*\n   * 2) No media was added or removed.\n   */\n  const sameMedia = added.length === 0 && removed.length === 0\n\n  /*\n   * 3) For all media that is unchanged,\n   *    they are not sending/receiving.\n   */\n  const inactiveUnchanged = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return sameMedia && inactiveUnchanged && onlyAudioChange\n}\n\n/**\n * A \"stop Music on Hold\" operation is when media starts in a MoH state, then\n *    reverts back to an \"on hold\" state.\n *\n * This checker does not guarantee that it was a \"stop MoH\" scenario, and not\n *    a very specific \"remove media\" scenario. It is possible that a Call is\n *    established with one-way audio (and no video), then the audio is removed.\n *    There is no way to tell the difference with only a MediaDiff object.\n *\n * In terms of SDP changes, it is defined as:\n *    0) A \"remove media\" scenario where:\n *    1) One audio section changed stopped sending.\n *    2) All other media remains unchanged.\n *    3) Any unchanged media is inactive.\n * @method wasStopMoh\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasStopMoh (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  // 0) \"Stop MoH\" is a \"remove media\" scenario that has extra requirements.\n  if (!wasRemoveMedia(mediaDiff)) {\n    return false\n  }\n\n  /*\n   * 1) Only one audio line should be changed, from send only to inactive.\n   */\n  const stopSendAudio =\n    // Only one audio line changed.\n    changed.length === 1 &&\n    changed[0].media.type === 'audio' &&\n    // The change was to stop sending media.\n    changed[0].changes.sending === MEDIA_TRANSITIONS.STOP &&\n    // Receiving media remains unchanged; not receiving.\n    changed[0].changes.receiving === MEDIA_TRANSITIONS.SAME &&\n    !changed[0].media.willReceive\n\n  /*\n   * 2) No media was added or removed.\n   */\n  const sameMedia = added.length === 0 && removed.length === 0\n\n  /*\n   * 3) For all media that is unchanged,\n   *    they are not sending/receiving.\n   */\n  const inactiveUnchanged = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return sameMedia && inactiveUnchanged && stopSendAudio\n}\n\n/**\n * A \"no change\" media operation is when all media sections remain the same.\n *    The remote operation was something other than changing media.\n *\n * In terms of SDP comparison, it is defined as:\n *    1) No media sections were added, removed, or changed.\n *    2) Some media remained unchanged.\n * @method wasNoChange\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasNoChange (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * No media did anything other than `unchanged`.\n   */\n  const noChange = added.length === 0 && removed.length === 0 && changed.length === 0\n\n  /*\n   * ...but there is media in the SDP.\n   */\n  const hasUnchanged = unchanged.length > 0\n\n  return noChange && hasUnchanged\n}\n\n/**\n * Determines whether a MediaDiff object describes the SDP as having had media\n *    flowing (a media both sending and receiving; flowing in both directions)\n *    _before_ the SDP changes.\n * @method hadMediaFlowing\n * @param  {MediaDiff} mediaDiff\n * @return {boolean}   Whether the MediaDiff has media flowing before the change.\n */\nexport function hadMediaFlowing (mediaDiff) {\n  const { removed, changed, unchanged } = mediaDiff\n\n  /*\n   * If any unchanged media is sending and receiving, then media was (and still\n   *    is) flowing before the SDP change.\n   */\n  const unchangedFlowing = unchanged.some(media => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * If any changed media was sending and receiving, then media was flowing\n   *    before the SDP change.\n   */\n  const changedFlowing = changed.some(({ media, changes }) => {\n    /*\n     * A changed media was sending before the change if\n     *    1) the change was to stop sending, or\n     *    2) sending didn't change, and is still sending.\n     */\n    const wasSending =\n      changes.sending === MEDIA_TRANSITIONS.STOP || (changes.sending === MEDIA_TRANSITIONS.SAME && media.willSend)\n\n    /*\n     * A changed media was receiving before the change if\n     *    1) the change was to stop receiving, or\n     *    2) receiving didn't change, and is still receiving.\n     */\n    const wasReceiving =\n      changes.receiving === MEDIA_TRANSITIONS.STOP ||\n      (changes.receiving === MEDIA_TRANSITIONS.SAME && media.willReceive)\n\n    return wasSending && wasReceiving\n  })\n\n  /*\n   * If any removed media was sending and receiving, then media was flowing\n   *    before the SDP change.\n   */\n  const removedFlowing = removed.some(media => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * Ignore `added` media, since that tells us nothing about media before the\n   *    SDP change.\n   */\n\n  return unchangedFlowing || changedFlowing || removedFlowing\n}\n\n/**\n * Determines whether a MediaDiff object describes the SDP as having media\n *    flowing (a media both sending and receiving; flowing in both directions)\n *    _after_ the SDP changes.\n * @method hasMediaFlowing\n * @param  {MediaDiff} mediaDiff\n * @return {boolean}   Whether the MediaDiff has media flowing after the change.\n */\nexport function hasMediaFlowing (mediaDiff) {\n  const { added, changed, unchanged } = mediaDiff\n\n  /*\n   * If any unchanged media is sending and receiving, then media is (and was)\n   *    flowing after the SDP change.\n   */\n  const unchangedFlowing = unchanged.some(media => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * If any changed media is sending and receiving, then media is flowing\n   *    after the SDP change.\n   */\n  const changedFlowing = changed.some(({ media, changes }) => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * If any added media is sending and receiving, then media is flowing\n   *    after the SDP change.\n   */\n  const addedFlowing = added.some(media => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * Ignore `removed` media, since that tells us nothing about media after the\n   *    SDP change.\n   */\n\n  return unchangedFlowing || changedFlowing || addedFlowing\n}\n","export const MEDIA_TRANSITIONS = {\n  START: 'START',\n  STOP: 'STOP',\n  SAME: 'SAME'\n}\n","import * as actionTypes from './actionTypes'\n// Constants\nimport { platforms } from '../../constants'\n\n/**\n * Helper function for funneling all notification types into a single action.\n * @method notificationHelper\n * @param  {string} channel - The channel that the notification came from.\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nfunction notificationHelper (channel, notification, platform) {\n  return {\n    type: actionTypes.PROCESS_NOTIFICATION,\n    payload: notification,\n    meta: {\n      platform,\n      channel\n    }\n  }\n}\n\n/**\n * Represents an application request to process a websocket notification.\n * @method websocketNotification\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nexport function websocketNotification (notification, platform = platforms.LINK) {\n  return notificationHelper('WEBSOCKET', notification, platform)\n}\n\n/**\n * Represents an application request to process an external notification.\n * @method externalNotification\n * @param  {Object} notification\n * @param  {string} [channel='PUSH'] - The channel that the notification came from.\n * @return {Object} A flux standard action.\n */\nexport function externalNotification (notification, channel = 'PUSH', platform) {\n  // TODO: Are external notifications _only_ for Link?\n  return notificationHelper(channel.toUpperCase(), notification, platform)\n}\n\n/**\n * Represents a received notification.\n * @method notificationReceived\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nexport function notificationReceived (notification, platform, channel) {\n  return {\n    type: actionTypes.NOTIFICATION_RECEIVED,\n    payload: notification,\n    error: notification instanceof Error,\n    meta: {\n      platform,\n      channel\n    }\n  }\n}\n\n/**\n * Represents a received notification.\n * @method processNotificationFinish\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nexport function processNotificationFinish (notification, platform) {\n  return {\n    type: actionTypes.PROCESS_NOTIFICATION_FINISH,\n    payload: notification,\n    error: notification instanceof Error,\n    meta: {\n      platform\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method enableNotificationChannel\n * @param  {string} channel - The notification channel being affected.\n * @param  {Object} params\n * @param  {boolean} params.channelEnabled - Whether to enable the channel or not.\n * @return {Object} A flux standard action.\n */\nexport function enableNotificationChannel (channel, params = {}) {\n  return {\n    type: actionTypes.ENABLE_NOTIFICATION_CHANNEL,\n    payload: {\n      ...params\n    },\n    meta: {\n      channel\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method registerApplePushNotification\n * @param  {Object} params\n * @return {Object} A flux standard action.\n */\nexport function registerApplePushNotification (params, deferred) {\n  return {\n    type: actionTypes.REGISTER_APPLE_PUSH_NOTIFICATION,\n    payload: {\n      ...params,\n      pushProvider: 'apple'\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method registerAndroidPushNotification\n * @param  {Object} params\n * @return {Object} A flux standard action.\n */\nexport function registerAndroidPushNotification (params, deferred) {\n  return {\n    type: actionTypes.REGISTER_ANDROID_PUSH_NOTIFICATION,\n    payload: {\n      ...params,\n      pushProvider: 'google'\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method unregisterApplePushNotification\n * @param  {string} registration\n * @return {Object} A flux standard action.\n */\nexport function unregisterApplePushNotification (registration, deferred) {\n  return {\n    type: actionTypes.UNREGISTER_APPLE_PUSH_NOTIFICATION,\n    payload: {\n      registration\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method unregisterAndroidPushNotification\n * @param  {string} registration\n * @return {Object} A flux standard action.\n */\nexport function unregisterAndroidPushNotification (registration, deferred) {\n  return {\n    type: actionTypes.UNREGISTER_ANDROID_PUSH_NOTIFICATION,\n    payload: {\n      registration\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents the response of a change in a notification channel status.\n * @method enableNotificationChannelFinish\n * @param  {string} channel - The notification channel being affected.\n * @param  {Object} $1\n * @param  {Object} $1.params - Information about the channel change.\n * @param  {Object} $1.params.channelEnabled - Whether the channel was enabled or not.\n * @param  {Object} $1.error - Error object, in the case of an error.\n * @return {Object} A flux standard action.\n */\nexport function enableNotificationChannelFinish (channel, { params, error } = {}) {\n  var action = {\n    type: actionTypes.ENABLE_NOTIFICATION_CHANNEL_FINISH,\n    meta: {\n      channel\n    }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = new Error(error)\n    action.payload.channelEnabled = params.channelEnabled\n  } else {\n    action.payload = {\n      ...params\n    }\n  }\n\n  return action\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","function deferred() {\n  var def = {};\n  def.promise = new Promise(function (resolve, reject) {\n    def.resolve = resolve;\n    def.reject = reject;\n  });\n  return def;\n}\nfunction arrayOfDeferred(length) {\n  var arr = [];\n\n  for (var i = 0; i < length; i++) {\n    arr.push(deferred());\n  }\n\n  return arr;\n}\n\nexport default deferred;\nexport { arrayOfDeferred };\n","import { CHANNEL_END_TYPE, MULTICAST, MATCH, SAGA_ACTION, CANCEL, SELF_CANCELLATION, TERMINATE, TASK, TASK_CANCEL, IO } from '@redux-saga/symbols';\nexport { CANCEL, SAGA_LOCATION } from '@redux-saga/symbols';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { string as string$1, array as array$1, stringableFunc, func, symbol as symbol$1, buffer, notUndef, promise, iterator, undef, object, channel as channel$1 } from '@redux-saga/is';\nimport { k as kTrue, e as expanding, c as check, o as once, r as remove, n as none, i as internalErr, T as TAKE, P as PUT, A as ALL, R as RACE, C as CALL, a as CPS, F as FORK, J as JOIN, b as CANCEL$1, S as SELECT, d as ACTION_CHANNEL, f as CANCELLED$1, g as FLUSH, G as GET_CONTEXT, h as SET_CONTEXT, j as getMetaInfo, l as createAllStyleChildCallbacks, m as createEmptyArray, p as assignWithSymbols, q as makeIterator, s as shouldComplete, t as noop, u as flatMap, v as getLocation, w as createSetContextWarning, x as asyncIteratorSymbol, y as shouldCancel, z as shouldTerminate, B as logError, D as wrapSagaDispatch, E as identity } from './io-c3792963.js';\nexport { H as buffers, I as detach } from './io-c3792963.js';\nimport { compose } from 'redux';\nimport deferred from '@redux-saga/deferred';\nimport '@redux-saga/delay-p';\n\nvar queue = [];\n/**\n  Variable to hold a counting semaphore\n  - Incrementing adds a lock and puts the scheduler in a `suspended` state (if it's not\n    already suspended)\n  - Decrementing releases a lock. Zero locks puts the scheduler in a `released` state. This\n    triggers flushing the queued tasks.\n**/\n\nvar semaphore = 0;\n/**\n  Executes a task 'atomically'. Tasks scheduled during this execution will be queued\n  and flushed after this task has finished (assuming the scheduler endup in a released\n  state).\n**/\n\nfunction exec(task) {\n  try {\n    suspend();\n    task();\n  } finally {\n    release();\n  }\n}\n/**\n  Executes or queues a task depending on the state of the scheduler (`suspended` or `released`)\n**/\n\n\nfunction asap(task) {\n  queue.push(task);\n\n  if (!semaphore) {\n    suspend();\n    flush();\n  }\n}\n/**\n * Puts the scheduler in a `suspended` state and executes a task immediately.\n */\n\nfunction immediately(task) {\n  try {\n    suspend();\n    return task();\n  } finally {\n    flush();\n  }\n}\n/**\n  Puts the scheduler in a `suspended` state. Scheduled tasks will be queued until the\n  scheduler is released.\n**/\n\nfunction suspend() {\n  semaphore++;\n}\n/**\n  Puts the scheduler in a `released` state.\n**/\n\n\nfunction release() {\n  semaphore--;\n}\n/**\n  Releases the current lock. Executes all queued tasks if the scheduler is in the released state.\n**/\n\n\nfunction flush() {\n  release();\n  var task;\n\n  while (!semaphore && (task = queue.shift()) !== undefined) {\n    exec(task);\n  }\n}\n\nvar array = function array(patterns) {\n  return function (input) {\n    return patterns.some(function (p) {\n      return matcher(p)(input);\n    });\n  };\n};\nvar predicate = function predicate(_predicate) {\n  return function (input) {\n    return _predicate(input);\n  };\n};\nvar string = function string(pattern) {\n  return function (input) {\n    return input.type === String(pattern);\n  };\n};\nvar symbol = function symbol(pattern) {\n  return function (input) {\n    return input.type === pattern;\n  };\n};\nvar wildcard = function wildcard() {\n  return kTrue;\n};\nfunction matcher(pattern) {\n  // prettier-ignore\n  var matcherCreator = pattern === '*' ? wildcard : string$1(pattern) ? string : array$1(pattern) ? array : stringableFunc(pattern) ? string : func(pattern) ? predicate : symbol$1(pattern) ? symbol : null;\n\n  if (matcherCreator === null) {\n    throw new Error(\"invalid pattern: \" + pattern);\n  }\n\n  return matcherCreator(pattern);\n}\n\nvar END = {\n  type: CHANNEL_END_TYPE\n};\nvar isEnd = function isEnd(a) {\n  return a && a.type === CHANNEL_END_TYPE;\n};\nvar CLOSED_CHANNEL_WITH_TAKERS = 'Cannot have a closed channel with pending takers';\nvar INVALID_BUFFER = 'invalid buffer passed to channel factory function';\nvar UNDEFINED_INPUT_ERROR = \"Saga or channel was provided with an undefined action\\nHints:\\n  - check that your Action Creator returns a non-undefined value\\n  - if the Saga was started using runSaga, check that your subscribe source provides the action to its listeners\";\nfunction channel(buffer$1) {\n  if (buffer$1 === void 0) {\n    buffer$1 = expanding();\n  }\n\n  var closed = false;\n  var takers = [];\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(buffer$1, buffer, INVALID_BUFFER);\n  }\n\n  function checkForbiddenStates() {\n    if (closed && takers.length) {\n      throw internalErr(CLOSED_CHANNEL_WITH_TAKERS);\n    }\n\n    if (takers.length && !buffer$1.isEmpty()) {\n      throw internalErr('Cannot have pending takers with non empty buffer');\n    }\n  }\n\n  function put(input) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(input, notUndef, UNDEFINED_INPUT_ERROR);\n    }\n\n    if (closed) {\n      return;\n    }\n\n    if (takers.length === 0) {\n      return buffer$1.put(input);\n    }\n\n    var cb = takers.shift();\n    cb(input);\n  }\n\n  function take(cb) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(cb, func, \"channel.take's callback must be a function\");\n    }\n\n    if (closed && buffer$1.isEmpty()) {\n      cb(END);\n    } else if (!buffer$1.isEmpty()) {\n      cb(buffer$1.take());\n    } else {\n      takers.push(cb);\n\n      cb.cancel = function () {\n        remove(takers, cb);\n      };\n    }\n  }\n\n  function flush(cb) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(cb, func, \"channel.flush' callback must be a function\");\n    }\n\n    if (closed && buffer$1.isEmpty()) {\n      cb(END);\n      return;\n    }\n\n    cb(buffer$1.flush());\n  }\n\n  function close() {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n    }\n\n    if (closed) {\n      return;\n    }\n\n    closed = true;\n    var arr = takers;\n    takers = [];\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      var taker = arr[i];\n      taker(END);\n    }\n  }\n\n  return {\n    take: take,\n    put: put,\n    flush: flush,\n    close: close\n  };\n}\nfunction eventChannel(subscribe, buffer) {\n  if (buffer === void 0) {\n    buffer = none();\n  }\n\n  var closed = false;\n  var unsubscribe;\n  var chan = channel(buffer);\n\n  var close = function close() {\n    if (closed) {\n      return;\n    }\n\n    closed = true;\n\n    if (func(unsubscribe)) {\n      unsubscribe();\n    }\n\n    chan.close();\n  };\n\n  unsubscribe = subscribe(function (input) {\n    if (isEnd(input)) {\n      close();\n      return;\n    }\n\n    chan.put(input);\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(unsubscribe, func, 'in eventChannel: subscribe should return a function to unsubscribe');\n  }\n\n  unsubscribe = once(unsubscribe);\n\n  if (closed) {\n    unsubscribe();\n  }\n\n  return {\n    take: chan.take,\n    flush: chan.flush,\n    close: close\n  };\n}\nfunction multicastChannel() {\n  var _ref;\n\n  var closed = false;\n  var currentTakers = [];\n  var nextTakers = currentTakers;\n\n  function checkForbiddenStates() {\n    if (closed && nextTakers.length) {\n      throw internalErr(CLOSED_CHANNEL_WITH_TAKERS);\n    }\n  }\n\n  var ensureCanMutateNextTakers = function ensureCanMutateNextTakers() {\n    if (nextTakers !== currentTakers) {\n      return;\n    }\n\n    nextTakers = currentTakers.slice();\n  };\n\n  var close = function close() {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n    }\n\n    closed = true;\n    var takers = currentTakers = nextTakers;\n    nextTakers = [];\n    takers.forEach(function (taker) {\n      taker(END);\n    });\n  };\n\n  return _ref = {}, _ref[MULTICAST] = true, _ref.put = function put(input) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(input, notUndef, UNDEFINED_INPUT_ERROR);\n    }\n\n    if (closed) {\n      return;\n    }\n\n    if (isEnd(input)) {\n      close();\n      return;\n    }\n\n    var takers = currentTakers = nextTakers;\n\n    for (var i = 0, len = takers.length; i < len; i++) {\n      var taker = takers[i];\n\n      if (taker[MATCH](input)) {\n        taker.cancel();\n        taker(input);\n      }\n    }\n  }, _ref.take = function take(cb, matcher) {\n    if (matcher === void 0) {\n      matcher = wildcard;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n    }\n\n    if (closed) {\n      cb(END);\n      return;\n    }\n\n    cb[MATCH] = matcher;\n    ensureCanMutateNextTakers();\n    nextTakers.push(cb);\n    cb.cancel = once(function () {\n      ensureCanMutateNextTakers();\n      remove(nextTakers, cb);\n    });\n  }, _ref.close = close, _ref;\n}\nfunction stdChannel() {\n  var chan = multicastChannel();\n  var put = chan.put;\n\n  chan.put = function (input) {\n    if (input[SAGA_ACTION]) {\n      put(input);\n      return;\n    }\n\n    asap(function () {\n      put(input);\n    });\n  };\n\n  return chan;\n}\n\nvar RUNNING = 0;\nvar CANCELLED = 1;\nvar ABORTED = 2;\nvar DONE = 3;\n\nfunction resolvePromise(promise, cb) {\n  var cancelPromise = promise[CANCEL];\n\n  if (func(cancelPromise)) {\n    cb.cancel = cancelPromise;\n  }\n\n  promise.then(cb, function (error) {\n    cb(error, true);\n  });\n}\n\nvar current = 0;\nvar nextSagaId = (function () {\n  return ++current;\n});\n\nvar _effectRunnerMap;\n\nfunction getIteratorMetaInfo(iterator, fn) {\n  if (iterator.isSagaIterator) {\n    return {\n      name: iterator.meta.name\n    };\n  }\n\n  return getMetaInfo(fn);\n}\n\nfunction createTaskIterator(_ref) {\n  var context = _ref.context,\n      fn = _ref.fn,\n      args = _ref.args;\n\n  // catch synchronous failures; see #152 and #441\n  try {\n    var result = fn.apply(context, args); // i.e. a generator function returns an iterator\n\n    if (iterator(result)) {\n      return result;\n    }\n\n    var resolved = false;\n\n    var next = function next(arg) {\n      if (!resolved) {\n        resolved = true; // Only promises returned from fork will be interpreted. See #1573\n\n        return {\n          value: result,\n          done: !promise(result)\n        };\n      } else {\n        return {\n          value: arg,\n          done: true\n        };\n      }\n    };\n\n    return makeIterator(next);\n  } catch (err) {\n    // do not bubble up synchronous failures for detached forks\n    // instead create a failed task. See #152 and #441\n    return makeIterator(function () {\n      throw err;\n    });\n  }\n}\n\nfunction runPutEffect(env, _ref2, cb) {\n  var channel = _ref2.channel,\n      action = _ref2.action,\n      resolve = _ref2.resolve;\n\n  /**\n   Schedule the put in case another saga is holding a lock.\n   The put will be executed atomically. ie nested puts will execute after\n   this put has terminated.\n   **/\n  asap(function () {\n    var result;\n\n    try {\n      result = (channel ? channel.put : env.dispatch)(action);\n    } catch (error) {\n      cb(error, true);\n      return;\n    }\n\n    if (resolve && promise(result)) {\n      resolvePromise(result, cb);\n    } else {\n      cb(result);\n    }\n  }); // Put effects are non cancellables\n}\n\nfunction runTakeEffect(env, _ref3, cb) {\n  var _ref3$channel = _ref3.channel,\n      channel = _ref3$channel === void 0 ? env.channel : _ref3$channel,\n      pattern = _ref3.pattern,\n      maybe = _ref3.maybe;\n\n  var takeCb = function takeCb(input) {\n    if (input instanceof Error) {\n      cb(input, true);\n      return;\n    }\n\n    if (isEnd(input) && !maybe) {\n      cb(TERMINATE);\n      return;\n    }\n\n    cb(input);\n  };\n\n  try {\n    channel.take(takeCb, notUndef(pattern) ? matcher(pattern) : null);\n  } catch (err) {\n    cb(err, true);\n    return;\n  }\n\n  cb.cancel = takeCb.cancel;\n}\n\nfunction runCallEffect(env, _ref4, cb, _ref5) {\n  var context = _ref4.context,\n      fn = _ref4.fn,\n      args = _ref4.args;\n  var task = _ref5.task;\n\n  // catch synchronous failures; see #152\n  try {\n    var result = fn.apply(context, args);\n\n    if (promise(result)) {\n      resolvePromise(result, cb);\n      return;\n    }\n\n    if (iterator(result)) {\n      // resolve iterator\n      proc(env, result, task.context, current, getMetaInfo(fn),\n      /* isRoot */\n      false, cb);\n      return;\n    }\n\n    cb(result);\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runCPSEffect(env, _ref6, cb) {\n  var context = _ref6.context,\n      fn = _ref6.fn,\n      args = _ref6.args;\n\n  // CPS (ie node style functions) can define their own cancellation logic\n  // by setting cancel field on the cb\n  // catch synchronous failures; see #152\n  try {\n    var cpsCb = function cpsCb(err, res) {\n      if (undef(err)) {\n        cb(res);\n      } else {\n        cb(err, true);\n      }\n    };\n\n    fn.apply(context, args.concat(cpsCb));\n\n    if (cpsCb.cancel) {\n      cb.cancel = cpsCb.cancel;\n    }\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runForkEffect(env, _ref7, cb, _ref8) {\n  var context = _ref7.context,\n      fn = _ref7.fn,\n      args = _ref7.args,\n      detached = _ref7.detached;\n  var parent = _ref8.task;\n  var taskIterator = createTaskIterator({\n    context: context,\n    fn: fn,\n    args: args\n  });\n  var meta = getIteratorMetaInfo(taskIterator, fn);\n  immediately(function () {\n    var child = proc(env, taskIterator, parent.context, current, meta, detached, undefined);\n\n    if (detached) {\n      cb(child);\n    } else {\n      if (child.isRunning()) {\n        parent.queue.addTask(child);\n        cb(child);\n      } else if (child.isAborted()) {\n        parent.queue.abort(child.error());\n      } else {\n        cb(child);\n      }\n    }\n  }); // Fork effects are non cancellables\n}\n\nfunction runJoinEffect(env, taskOrTasks, cb, _ref9) {\n  var task = _ref9.task;\n\n  var joinSingleTask = function joinSingleTask(taskToJoin, cb) {\n    if (taskToJoin.isRunning()) {\n      var joiner = {\n        task: task,\n        cb: cb\n      };\n\n      cb.cancel = function () {\n        if (taskToJoin.isRunning()) remove(taskToJoin.joiners, joiner);\n      };\n\n      taskToJoin.joiners.push(joiner);\n    } else {\n      if (taskToJoin.isAborted()) {\n        cb(taskToJoin.error(), true);\n      } else {\n        cb(taskToJoin.result());\n      }\n    }\n  };\n\n  if (array$1(taskOrTasks)) {\n    if (taskOrTasks.length === 0) {\n      cb([]);\n      return;\n    }\n\n    var childCallbacks = createAllStyleChildCallbacks(taskOrTasks, cb);\n    taskOrTasks.forEach(function (t, i) {\n      joinSingleTask(t, childCallbacks[i]);\n    });\n  } else {\n    joinSingleTask(taskOrTasks, cb);\n  }\n}\n\nfunction cancelSingleTask(taskToCancel) {\n  if (taskToCancel.isRunning()) {\n    taskToCancel.cancel();\n  }\n}\n\nfunction runCancelEffect(env, taskOrTasks, cb, _ref10) {\n  var task = _ref10.task;\n\n  if (taskOrTasks === SELF_CANCELLATION) {\n    cancelSingleTask(task);\n  } else if (array$1(taskOrTasks)) {\n    taskOrTasks.forEach(cancelSingleTask);\n  } else {\n    cancelSingleTask(taskOrTasks);\n  }\n\n  cb(); // cancel effects are non cancellables\n}\n\nfunction runAllEffect(env, effects, cb, _ref11) {\n  var digestEffect = _ref11.digestEffect;\n  var effectId = current;\n  var keys = Object.keys(effects);\n\n  if (keys.length === 0) {\n    cb(array$1(effects) ? [] : {});\n    return;\n  }\n\n  var childCallbacks = createAllStyleChildCallbacks(effects, cb);\n  keys.forEach(function (key) {\n    digestEffect(effects[key], effectId, childCallbacks[key], key);\n  });\n}\n\nfunction runRaceEffect(env, effects, cb, _ref12) {\n  var digestEffect = _ref12.digestEffect;\n  var effectId = current;\n  var keys = Object.keys(effects);\n  var response = array$1(effects) ? createEmptyArray(keys.length) : {};\n  var childCbs = {};\n  var completed = false;\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || shouldComplete(res)) {\n        // Race Auto cancellation\n        cb.cancel();\n        cb(res, isErr);\n      } else {\n        cb.cancel();\n        completed = true;\n        response[key] = res;\n        cb(response);\n      }\n    };\n\n    chCbAtKey.cancel = noop;\n    childCbs[key] = chCbAtKey;\n  });\n\n  cb.cancel = function () {\n    // prevents unnecessary cancellation\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCbs[key].cancel();\n      });\n    }\n  };\n\n  keys.forEach(function (key) {\n    if (completed) {\n      return;\n    }\n\n    digestEffect(effects[key], effectId, childCbs[key], key);\n  });\n}\n\nfunction runSelectEffect(env, _ref13, cb) {\n  var selector = _ref13.selector,\n      args = _ref13.args;\n\n  try {\n    var state = selector.apply(void 0, [env.getState()].concat(args));\n    cb(state);\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runChannelEffect(env, _ref14, cb) {\n  var pattern = _ref14.pattern,\n      buffer = _ref14.buffer;\n  var chan = channel(buffer);\n  var match = matcher(pattern);\n\n  var taker = function taker(action) {\n    if (!isEnd(action)) {\n      env.channel.take(taker, match);\n    }\n\n    chan.put(action);\n  };\n\n  var close = chan.close;\n\n  chan.close = function () {\n    taker.cancel();\n    close();\n  };\n\n  env.channel.take(taker, match);\n  cb(chan);\n}\n\nfunction runCancelledEffect(env, data, cb, _ref15) {\n  var task = _ref15.task;\n  cb(task.isCancelled());\n}\n\nfunction runFlushEffect(env, channel, cb) {\n  channel.flush(cb);\n}\n\nfunction runGetContextEffect(env, prop, cb, _ref16) {\n  var task = _ref16.task;\n  cb(task.context[prop]);\n}\n\nfunction runSetContextEffect(env, props, cb, _ref17) {\n  var task = _ref17.task;\n  assignWithSymbols(task.context, props);\n  cb();\n}\n\nvar effectRunnerMap = (_effectRunnerMap = {}, _effectRunnerMap[TAKE] = runTakeEffect, _effectRunnerMap[PUT] = runPutEffect, _effectRunnerMap[ALL] = runAllEffect, _effectRunnerMap[RACE] = runRaceEffect, _effectRunnerMap[CALL] = runCallEffect, _effectRunnerMap[CPS] = runCPSEffect, _effectRunnerMap[FORK] = runForkEffect, _effectRunnerMap[JOIN] = runJoinEffect, _effectRunnerMap[CANCEL$1] = runCancelEffect, _effectRunnerMap[SELECT] = runSelectEffect, _effectRunnerMap[ACTION_CHANNEL] = runChannelEffect, _effectRunnerMap[CANCELLED$1] = runCancelledEffect, _effectRunnerMap[FLUSH] = runFlushEffect, _effectRunnerMap[GET_CONTEXT] = runGetContextEffect, _effectRunnerMap[SET_CONTEXT] = runSetContextEffect, _effectRunnerMap);\n\n/**\n Used to track a parent task and its forks\n In the fork model, forked tasks are attached by default to their parent\n We model this using the concept of Parent task && main Task\n main task is the main flow of the current Generator, the parent tasks is the\n aggregation of the main tasks + all its forked tasks.\n Thus the whole model represents an execution tree with multiple branches (vs the\n linear execution tree in sequential (non parallel) programming)\n\n A parent tasks has the following semantics\n - It completes if all its forks either complete or all cancelled\n - If it's cancelled, all forks are cancelled as well\n - It aborts if any uncaught error bubbles up from forks\n - If it completes, the return value is the one returned by the main task\n **/\n\nfunction forkQueue(mainTask, onAbort, cont) {\n  var tasks = [];\n  var result;\n  var completed = false;\n  addTask(mainTask);\n\n  var getTasks = function getTasks() {\n    return tasks;\n  };\n\n  function abort(err) {\n    onAbort();\n    cancelAll();\n    cont(err, true);\n  }\n\n  function addTask(task) {\n    tasks.push(task);\n\n    task.cont = function (res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      remove(tasks, task);\n      task.cont = noop;\n\n      if (isErr) {\n        abort(res);\n      } else {\n        if (task === mainTask) {\n          result = res;\n        }\n\n        if (!tasks.length) {\n          completed = true;\n          cont(result);\n        }\n      }\n    };\n  }\n\n  function cancelAll() {\n    if (completed) {\n      return;\n    }\n\n    completed = true;\n    tasks.forEach(function (t) {\n      t.cont = noop;\n      t.cancel();\n    });\n    tasks = [];\n  }\n\n  return {\n    addTask: addTask,\n    cancelAll: cancelAll,\n    abort: abort,\n    getTasks: getTasks\n  };\n}\n\n// there can be only a single saga error created at any given moment\n\nfunction formatLocation(fileName, lineNumber) {\n  return fileName + \"?\" + lineNumber;\n}\n\nfunction effectLocationAsString(effect) {\n  var location = getLocation(effect);\n\n  if (location) {\n    var code = location.code,\n        fileName = location.fileName,\n        lineNumber = location.lineNumber;\n    var source = code + \"  \" + formatLocation(fileName, lineNumber);\n    return source;\n  }\n\n  return '';\n}\n\nfunction sagaLocationAsString(sagaMeta) {\n  var name = sagaMeta.name,\n      location = sagaMeta.location;\n\n  if (location) {\n    return name + \"  \" + formatLocation(location.fileName, location.lineNumber);\n  }\n\n  return name;\n}\n\nfunction cancelledTasksAsString(sagaStack) {\n  var cancelledTasks = flatMap(function (i) {\n    return i.cancelledTasks;\n  }, sagaStack);\n\n  if (!cancelledTasks.length) {\n    return '';\n  }\n\n  return ['Tasks cancelled due to error:'].concat(cancelledTasks).join('\\n');\n}\n\nvar crashedEffect = null;\nvar sagaStack = [];\nvar addSagaFrame = function addSagaFrame(frame) {\n  frame.crashedEffect = crashedEffect;\n  sagaStack.push(frame);\n};\nvar clear = function clear() {\n  crashedEffect = null;\n  sagaStack.length = 0;\n}; // this sets crashed effect for the soon-to-be-reported saga frame\n// this slightly streatches the singleton nature of this module into wrong direction\n// as it's even less obvious what's the data flow here, but it is what it is for now\n\nvar setCrashedEffect = function setCrashedEffect(effect) {\n  crashedEffect = effect;\n};\n/**\n  @returns {string}\n\n  @example\n  The above error occurred in task errorInPutSaga {pathToFile}\n  when executing effect put({type: 'REDUCER_ACTION_ERROR_IN_PUT'}) {pathToFile}\n      created by fetchSaga {pathToFile}\n      created by rootSaga {pathToFile}\n*/\n\nvar toString = function toString() {\n  var firstSaga = sagaStack[0],\n      otherSagas = sagaStack.slice(1);\n  var crashedEffectLocation = firstSaga.crashedEffect ? effectLocationAsString(firstSaga.crashedEffect) : null;\n  var errorMessage = \"The above error occurred in task \" + sagaLocationAsString(firstSaga.meta) + (crashedEffectLocation ? \" \\n when executing effect \" + crashedEffectLocation : '');\n  return [errorMessage].concat(otherSagas.map(function (s) {\n    return \"    created by \" + sagaLocationAsString(s.meta);\n  }), [cancelledTasksAsString(sagaStack)]).join('\\n');\n};\n\nfunction newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont) {\n  var _task;\n\n  if (cont === void 0) {\n    cont = noop;\n  }\n\n  var status = RUNNING;\n  var taskResult;\n  var taskError;\n  var deferredEnd = null;\n  var cancelledDueToErrorTasks = [];\n  var context = Object.create(parentContext);\n  var queue = forkQueue(mainTask, function onAbort() {\n    cancelledDueToErrorTasks.push.apply(cancelledDueToErrorTasks, queue.getTasks().map(function (t) {\n      return t.meta.name;\n    }));\n  }, end);\n  /**\n   This may be called by a parent generator to trigger/propagate cancellation\n   cancel all pending tasks (including the main task), then end the current task.\n    Cancellation propagates down to the whole execution tree held by this Parent task\n   It's also propagated to all joiners of this task and their execution tree/joiners\n    Cancellation is noop for terminated/Cancelled tasks tasks\n   **/\n\n  function cancel() {\n    if (status === RUNNING) {\n      // Setting status to CANCELLED does not necessarily mean that the task/iterators are stopped\n      // effects in the iterator's finally block will still be executed\n      status = CANCELLED;\n      queue.cancelAll(); // Ending with a TASK_CANCEL will propagate the Cancellation to all joiners\n\n      end(TASK_CANCEL, false);\n    }\n  }\n\n  function end(result, isErr) {\n    if (!isErr) {\n      // The status here may be RUNNING or CANCELLED\n      // If the status is CANCELLED, then we do not need to change it here\n      if (result === TASK_CANCEL) {\n        status = CANCELLED;\n      } else if (status !== CANCELLED) {\n        status = DONE;\n      }\n\n      taskResult = result;\n      deferredEnd && deferredEnd.resolve(result);\n    } else {\n      status = ABORTED;\n      addSagaFrame({\n        meta: meta,\n        cancelledTasks: cancelledDueToErrorTasks\n      });\n\n      if (task.isRoot) {\n        var sagaStack = toString(); // we've dumped the saga stack to string and are passing it to user's code\n        // we know that it won't be needed anymore and we need to clear it\n\n        clear();\n        env.onError(result, {\n          sagaStack: sagaStack\n        });\n      }\n\n      taskError = result;\n      deferredEnd && deferredEnd.reject(result);\n    }\n\n    task.cont(result, isErr);\n    task.joiners.forEach(function (joiner) {\n      joiner.cb(result, isErr);\n    });\n    task.joiners = null;\n  }\n\n  function setContext(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(props, object, createSetContextWarning('task', props));\n    }\n\n    assignWithSymbols(context, props);\n  }\n\n  function toPromise() {\n    if (deferredEnd) {\n      return deferredEnd.promise;\n    }\n\n    deferredEnd = deferred();\n\n    if (status === ABORTED) {\n      deferredEnd.reject(taskError);\n    } else if (status !== RUNNING) {\n      deferredEnd.resolve(taskResult);\n    }\n\n    return deferredEnd.promise;\n  }\n\n  var task = (_task = {}, _task[TASK] = true, _task.id = parentEffectId, _task.meta = meta, _task.isRoot = isRoot, _task.context = context, _task.joiners = [], _task.queue = queue, _task.cancel = cancel, _task.cont = cont, _task.end = end, _task.setContext = setContext, _task.toPromise = toPromise, _task.isRunning = function isRunning() {\n    return status === RUNNING;\n  }, _task.isCancelled = function isCancelled() {\n    return status === CANCELLED || status === RUNNING && mainTask.status === CANCELLED;\n  }, _task.isAborted = function isAborted() {\n    return status === ABORTED;\n  }, _task.result = function result() {\n    return taskResult;\n  }, _task.error = function error() {\n    return taskError;\n  }, _task);\n  return task;\n}\n\nfunction proc(env, iterator$1, parentContext, parentEffectId, meta, isRoot, cont) {\n  if (process.env.NODE_ENV !== 'production' && iterator$1[asyncIteratorSymbol]) {\n    throw new Error(\"redux-saga doesn't support async generators, please use only regular ones\");\n  }\n\n  var finalRunEffect = env.finalizeRunEffect(runEffect);\n  /**\n    Tracks the current effect cancellation\n    Each time the generator progresses. calling runEffect will set a new value\n    on it. It allows propagating cancellation to child effects\n  **/\n\n  next.cancel = noop;\n  /** Creates a main task to track the main flow */\n\n  var mainTask = {\n    meta: meta,\n    cancel: cancelMain,\n    status: RUNNING\n  };\n  /**\n   Creates a new task descriptor for this generator.\n   A task is the aggregation of it's mainTask and all it's forked tasks.\n   **/\n\n  var task = newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont);\n  var executingContext = {\n    task: task,\n    digestEffect: digestEffect\n  };\n  /**\n    cancellation of the main task. We'll simply resume the Generator with a TASK_CANCEL\n  **/\n\n  function cancelMain() {\n    if (mainTask.status === RUNNING) {\n      mainTask.status = CANCELLED;\n      next(TASK_CANCEL);\n    }\n  }\n  /**\n    attaches cancellation logic to this task's continuation\n    this will permit cancellation to propagate down the call chain\n  **/\n\n\n  if (cont) {\n    cont.cancel = task.cancel;\n  } // kicks up the generator\n\n\n  next(); // then return the task descriptor to the caller\n\n  return task;\n  /**\n   * This is the generator driver\n   * It's a recursive async/continuation function which calls itself\n   * until the generator terminates or throws\n   * @param {internal commands(TASK_CANCEL | TERMINATE) | any} arg - value, generator will be resumed with.\n   * @param {boolean} isErr - the flag shows if effect finished with an error\n   *\n   * receives either (command | effect result, false) or (any thrown thing, true)\n   */\n\n  function next(arg, isErr) {\n    try {\n      var result;\n\n      if (isErr) {\n        result = iterator$1.throw(arg); // user handled the error, we can clear bookkept values\n\n        clear();\n      } else if (shouldCancel(arg)) {\n        /**\n          getting TASK_CANCEL automatically cancels the main task\n          We can get this value here\n           - By cancelling the parent task manually\n          - By joining a Cancelled task\n        **/\n        mainTask.status = CANCELLED;\n        /**\n          Cancels the current effect; this will propagate the cancellation down to any called tasks\n        **/\n\n        next.cancel();\n        /**\n          If this Generator has a `return` method then invokes it\n          This will jump to the finally block\n        **/\n\n        result = func(iterator$1.return) ? iterator$1.return(TASK_CANCEL) : {\n          done: true,\n          value: TASK_CANCEL\n        };\n      } else if (shouldTerminate(arg)) {\n        // We get TERMINATE flag, i.e. by taking from a channel that ended using `take` (and not `takem` used to trap End of channels)\n        result = func(iterator$1.return) ? iterator$1.return() : {\n          done: true\n        };\n      } else {\n        result = iterator$1.next(arg);\n      }\n\n      if (!result.done) {\n        digestEffect(result.value, parentEffectId, next);\n      } else {\n        /**\n          This Generator has ended, terminate the main task and notify the fork queue\n        **/\n        if (mainTask.status !== CANCELLED) {\n          mainTask.status = DONE;\n        }\n\n        mainTask.cont(result.value);\n      }\n    } catch (error) {\n      if (mainTask.status === CANCELLED) {\n        throw error;\n      }\n\n      mainTask.status = ABORTED;\n      mainTask.cont(error, true);\n    }\n  }\n\n  function runEffect(effect, effectId, currCb) {\n    /**\n      each effect runner must attach its own logic of cancellation to the provided callback\n      it allows this generator to propagate cancellation downward.\n       ATTENTION! effect runners must setup the cancel logic by setting cb.cancel = [cancelMethod]\n      And the setup must occur before calling the callback\n       This is a sort of inversion of control: called async functions are responsible\n      of completing the flow by calling the provided continuation; while caller functions\n      are responsible for aborting the current flow by calling the attached cancel function\n       Library users can attach their own cancellation logic to promises by defining a\n      promise[CANCEL] method in their returned promises\n      ATTENTION! calling cancel must have no effect on an already completed or cancelled effect\n    **/\n    if (promise(effect)) {\n      resolvePromise(effect, currCb);\n    } else if (iterator(effect)) {\n      // resolve iterator\n      proc(env, effect, task.context, effectId, meta,\n      /* isRoot */\n      false, currCb);\n    } else if (effect && effect[IO]) {\n      var effectRunner = effectRunnerMap[effect.type];\n      effectRunner(env, effect.payload, currCb, executingContext);\n    } else {\n      // anything else returned as is\n      currCb(effect);\n    }\n  }\n\n  function digestEffect(effect, parentEffectId, cb, label) {\n    if (label === void 0) {\n      label = '';\n    }\n\n    var effectId = nextSagaId();\n    env.sagaMonitor && env.sagaMonitor.effectTriggered({\n      effectId: effectId,\n      parentEffectId: parentEffectId,\n      label: label,\n      effect: effect\n    });\n    /**\n      completion callback and cancel callback are mutually exclusive\n      We can't cancel an already completed effect\n      And We can't complete an already cancelled effectId\n    **/\n\n    var effectSettled; // Completion callback passed to the appropriate effect runner\n\n    function currCb(res, isErr) {\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      cb.cancel = noop; // defensive measure\n\n      if (env.sagaMonitor) {\n        if (isErr) {\n          env.sagaMonitor.effectRejected(effectId, res);\n        } else {\n          env.sagaMonitor.effectResolved(effectId, res);\n        }\n      }\n\n      if (isErr) {\n        setCrashedEffect(effect);\n      }\n\n      cb(res, isErr);\n    } // tracks down the current cancel\n\n\n    currCb.cancel = noop; // setup cancellation logic on the parent cb\n\n    cb.cancel = function () {\n      // prevents cancelling an already completed effect\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      currCb.cancel(); // propagates cancel downward\n\n      currCb.cancel = noop; // defensive measure\n\n      env.sagaMonitor && env.sagaMonitor.effectCancelled(effectId);\n    };\n\n    finalRunEffect(effect, effectId, currCb);\n  }\n}\n\nvar RUN_SAGA_SIGNATURE = 'runSaga(options, saga, ...args)';\nvar NON_GENERATOR_ERR = RUN_SAGA_SIGNATURE + \": saga argument must be a Generator function!\";\nfunction runSaga(_ref, saga) {\n  var _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,\n      dispatch = _ref.dispatch,\n      getState = _ref.getState,\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? {} : _ref$context,\n      sagaMonitor = _ref.sagaMonitor,\n      effectMiddlewares = _ref.effectMiddlewares,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? logError : _ref$onError;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(saga, func, NON_GENERATOR_ERR);\n  }\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var iterator$1 = saga.apply(void 0, args);\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(iterator$1, iterator, NON_GENERATOR_ERR);\n  }\n\n  var effectId = nextSagaId();\n\n  if (sagaMonitor) {\n    // monitors are expected to have a certain interface, let's fill-in any missing ones\n    sagaMonitor.rootSagaStarted = sagaMonitor.rootSagaStarted || noop;\n    sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || noop;\n    sagaMonitor.effectResolved = sagaMonitor.effectResolved || noop;\n    sagaMonitor.effectRejected = sagaMonitor.effectRejected || noop;\n    sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || noop;\n    sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || noop;\n    sagaMonitor.rootSagaStarted({\n      effectId: effectId,\n      saga: saga,\n      args: args\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (notUndef(dispatch)) {\n      check(dispatch, func, 'dispatch must be a function');\n    }\n\n    if (notUndef(getState)) {\n      check(getState, func, 'getState must be a function');\n    }\n\n    if (notUndef(effectMiddlewares)) {\n      var MIDDLEWARE_TYPE_ERROR = 'effectMiddlewares must be an array of functions';\n      check(effectMiddlewares, array$1, MIDDLEWARE_TYPE_ERROR);\n      effectMiddlewares.forEach(function (effectMiddleware) {\n        return check(effectMiddleware, func, MIDDLEWARE_TYPE_ERROR);\n      });\n    }\n\n    check(onError, func, 'onError passed to the redux-saga is not a function!');\n  }\n\n  var finalizeRunEffect;\n\n  if (effectMiddlewares) {\n    var middleware = compose.apply(void 0, effectMiddlewares);\n\n    finalizeRunEffect = function finalizeRunEffect(runEffect) {\n      return function (effect, effectId, currCb) {\n        var plainRunEffect = function plainRunEffect(eff) {\n          return runEffect(eff, effectId, currCb);\n        };\n\n        return middleware(plainRunEffect)(effect);\n      };\n    };\n  } else {\n    finalizeRunEffect = identity;\n  }\n\n  var env = {\n    channel: channel,\n    dispatch: wrapSagaDispatch(dispatch),\n    getState: getState,\n    sagaMonitor: sagaMonitor,\n    onError: onError,\n    finalizeRunEffect: finalizeRunEffect\n  };\n  return immediately(function () {\n    var task = proc(env, iterator$1, context, effectId, getMetaInfo(saga),\n    /* isRoot */\n    true, undefined);\n\n    if (sagaMonitor) {\n      sagaMonitor.effectResolved(effectId, task);\n    }\n\n    return task;\n  });\n}\n\nfunction sagaMiddlewareFactory(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? {} : _ref$context,\n      _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,\n      sagaMonitor = _ref.sagaMonitor,\n      options = _objectWithoutPropertiesLoose(_ref, [\"context\", \"channel\", \"sagaMonitor\"]);\n\n  var boundRunSaga;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(channel, channel$1, 'options.channel passed to the Saga middleware is not a channel');\n  }\n\n  function sagaMiddleware(_ref2) {\n    var getState = _ref2.getState,\n        dispatch = _ref2.dispatch;\n    boundRunSaga = runSaga.bind(null, _extends({}, options, {\n      context: context,\n      channel: channel,\n      dispatch: dispatch,\n      getState: getState,\n      sagaMonitor: sagaMonitor\n    }));\n    return function (next) {\n      return function (action) {\n        if (sagaMonitor && sagaMonitor.actionDispatched) {\n          sagaMonitor.actionDispatched(action);\n        }\n\n        var result = next(action); // hit reducers\n\n        channel.put(action);\n        return result;\n      };\n    };\n  }\n\n  sagaMiddleware.run = function () {\n    if (process.env.NODE_ENV !== 'production' && !boundRunSaga) {\n      throw new Error('Before running a Saga, you must mount the Saga middleware on the Store using applyMiddleware');\n    }\n\n    return boundRunSaga.apply(void 0, arguments);\n  };\n\n  sagaMiddleware.setContext = function (props) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(props, object, createSetContextWarning('sagaMiddleware', props));\n    }\n\n    assignWithSymbols(context, props);\n  };\n\n  return sagaMiddleware;\n}\n\nexport default sagaMiddlewareFactory;\nexport { END, channel, eventChannel, isEnd, multicastChannel, runSaga, stdChannel };\n","import createSagaMiddleware__default from '@redux-saga/core';\nexport * from '@redux-saga/core';\n\n\n\nexport default createSagaMiddleware__default;\n","\nvar space = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toCamelCase\n\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toCamelCase(string) {\n  return space(string).replace(/\\s(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase()\n  })\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","module.exports = Array.isArray;\n","module.exports = function isFunction(arg) {\n  return typeof arg === 'function';\n};\n","module.exports = require('./_hide');\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","exports.f = require('./_wks');\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","/**\n * Default function for the SDK to use for log formatting.\n *    Uses entry information to form a prefix.\n * @method defaultLogFormatter\n * @param  {LogEntry} entry\n */\nexport default function defaultLogFormatter (entry) {\n  // Compile the meta info of the log for a prefix.\n  const { timestamp, level, target } = entry\n\n  // Find a short name to reference which Logger this log is from.\n  //    This is mostly to cut down the ID if it's too long for a human to read.\n  const shortId = target.id && target.id.length > 8 ? target.id.substring(0, 6) : target.id\n  const shortName = shortId ? `${target.type}/${shortId}` : target.type\n\n  const logInfo = `${timestamp} - ${shortName} - ${level}`\n\n  // Assume that the first message parameter is a string.\n  const log = entry.messages[0]\n\n  return `${logInfo} - ${log}`\n}\n","import defaultActionHandler from './actions/actionHandler'\n\n/**\n * Configuration options for the Logs feature.\n *\n * The SDK will log information about the operations it is performing. The\n *    amount of information will depend on how the Logs feature is configured.\n *\n * The format of logs can also be customized by providing a\n *    {@link logger.LogHandler LogHandler}. This function will receive a\n *    {@link logger.LogEntry LogEntry} which it can handle as it sees fit. By\n *    default, the SDK will log information to the console. For more\n *    information, see the {@link logger Logs feature} description.\n *\n * @public\n * @static\n * @name config.logs\n * @memberof config\n * @requires logs\n * @instance\n * @param {Object} logs Logs configs.\n * @param {string} [logs.logLevel='debug'] Log level to be set. See {@link logger.levels}.\n * @param {logger.LogHandler} [logs.handler] The function to receive log entries from the\n *    SDK. If not provided, a default handler will be used that logs entries\n *    to the console.\n * @param {Object|boolean} [logs.logActions=false] Options specifically for action logs when\n *    logLevel is at DEBUG+ levels. Set this to false to not output action logs.\n * @param {logger.LogHandler} [logs.logActions.handler] The function to receive action\n *    log entries from the SDK. If not provided, a default handler will be used\n *    that logs actions to the console.\n * @param {boolean} [logs.logActions.actionOnly=false] Only output information\n *    about the action itself. Omits the SDK context for when it occurred.\n * @param {boolean} [logs.logActions.collapsed=false] Whether logs should be\n *    minimized when initially output. The full log is still output and can be\n *    inspected on the console.\n * @param {boolean} [logs.logActions.diff=false] Include a diff of what SDK\n *    context was changed by the action.\n * @param {string}  [logs.logActions.level='debug'] Log level to be set\n *    on the action logs\n * @param {boolean} [logs.logActions.exposePayloads=true] Allow action payloads\n *    to be exposed in the logs, potentially displaying sensitive information.\n */\nexport const defaultOptions = {\n  logLevel: 'debug',\n  handler: undefined,\n  logActions: false\n}\n\nexport const partialDefaultLogActions = {\n  handler: defaultActionHandler,\n  actionOnly: false,\n  collapsed: false,\n  diff: false,\n  level: 'debug',\n  exposePayloads: true\n}\n/*\n * TODO: Figure out a way to work around this.\n * Can't use validation in logging because validation uses logging to output errors.\n * Circular dependency, have to refactor.\n * Code:\n ```javascript\n// Parse and/or Validate\n// import { enums, validation as v8n, parse } from '../common/validation'\nconst defaultValidation = v8n.schema({\n  logLevel: enums(['silent', 'error', 'warn', 'info', 'debug']),\n  handler: v8n.optional(v8n.function()),\n  logActions: v8n.optional(\n    v8n.passesAnyOf(\n      v8n.schema({\n        handler: v8n.optional(v8n.function()),\n        actionOnly: v8n.boolean(),\n        collapsed: v8n.boolean(),\n        diff: v8n.boolean(),\n        exposePayloads: v8n.boolean()\n      }),\n      // OR\n      v8n.boolean()\n    )\n  )\n})\n\nexport const parseLogConfig = parse('logger', defaultValidation)\n```\n*/\n","// Libraries.\nimport { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves the log level for a specified logger type, or the default level.\n * @method getLevel\n * @param  {Object} state            SDK redux state.\n * @param  {String} [type='DEFAULT'] A type of Logger.\n * @return {string} A log level.\n */\nexport function getLevel (state, type = 'DEFAULT') {\n  const clonedState = cloneDeep(state)\n  return clonedState.logs[type]\n}\n\n/**\n * Retrieves a list of all of the SDK's Logger types.\n * @method getTypes\n * @param  {Object} state  SDK redux state.\n * @return {Array<string>}\n */\nexport function getTypes (state) {\n  const clonedState = cloneDeep(state)\n  return Object.keys(clonedState.logs)\n}\n","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar meta = require('./_meta');\nvar fails = require('./_fails');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar setToStringTag = require('./_set-to-string-tag');\nvar dP = require('./_object-dp').f;\nvar each = require('./_array-methods')(0);\nvar DESCRIPTORS = require('./_descriptors');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function (target, iterable) {\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base();\n      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {\n        anInstance(this, C, KEY);\n        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    IS_WEAK || dP(C.prototype, 'size', {\n      get: function () {\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof');\nvar from = require('./_array-from-iterable');\nmodule.exports = function (NAME) {\n  return function toJSON() {\n    if (classof(this) != NAME) throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { of: function of() {\n    var length = arguments.length;\n    var A = new Array(length);\n    while (length--) A[length] = arguments[length];\n    return new this(A);\n  } });\n};\n","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar ctx = require('./_ctx');\nvar forOf = require('./_for-of');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n    var mapFn = arguments[1];\n    var mapping, A, n, cb;\n    aFunction(this);\n    mapping = mapFn !== undefined;\n    if (mapping) aFunction(mapFn);\n    if (source == undefined) return new this();\n    A = [];\n    if (mapping) {\n      n = 0;\n      cb = ctx(mapFn, arguments[2], 2);\n      forOf(source, false, function (nextItem) {\n        A.push(cb(nextItem, n++));\n      });\n    } else {\n      forOf(source, false, A.push, A);\n    }\n    return new this(A);\n  } });\n};\n","const PREFIX = '@@KANDY/'\n\nexport const CONFIG_UPDATE = PREFIX + 'CONFIG_UPDATE'\n\nexport const SET_SDP_HANDLERS = PREFIX + 'SET_SDP_HANDLERS'\n","// Other plugins.\nimport { logManager } from '../logs'\n\n// Helpers.\nimport { mergeValues } from '../common/utils'\nimport { getVersion } from '../common/version'\nimport { iceCollectionCheckFunction } from './utils/defaults'\n\n// Parse and/or Validate\nimport { validation as v8n, parse, enums } from '../common/validation'\n\nconst log = logManager.getLogger('CALL')\n\n/*\n * JsDoc documentation for call configs are found in the Call plugin indexes,\n *    since they are slightly different for Link vs. CPaaS.\n */\nconst defaultOptions = {\n  // Native Peer configs.\n  defaultPeerConfig: {\n    sdpSemantics: 'unified-plan',\n    iceServers: []\n  },\n\n  // ICE collection configs.\n  iceCollectionIdealTimeout: 1000,\n  iceCollectionMaxTimeout: 3000,\n  serverTurnCredentials: true,\n\n  // SDP manipulation configs.\n  sdpHandlers: [],\n  removeBundling: false,\n\n  // Other.\n  earlyMedia: false,\n  resyncOnConnect: false,\n  mediaBrokerOnly: false,\n  trickleIceMode: 'NONE',\n  normalizeDestination: true,\n  ringingFeedbackMode: 'auto',\n  callAuditTimer: 25000,\n  mediaConnectionRetryDelay: 3000\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  // Native Peer configs.\n  defaultPeerConfig: v8n.schema({\n    sdpSemantics: enums(['unified-plan']),\n    // Validation for currently supported properties of an RTCPeerConfiguration,\n    // as specified at: https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection\n    // If more params are supported in the future, then we need to extend this validation.\n    iceServers: v8n.array(),\n    iceCandidatePoolSize: v8n.optional(v8n.positive()),\n    iceTransportPolicy: v8n.optional(enums(['all', 'public', 'relay'])),\n    bundlePolicy: v8n.optional(enums(['balanced', 'max-compat', 'max-bundle'])),\n    certificates: v8n.optional(\n      v8n.array().every.schema({\n        expires: v8n.string()\n      })\n    ),\n    peerIdentity: v8n.optional(v8n.string()),\n    rtcpMuxPolicy: v8n.optional(enums(['negotiate', 'require']))\n  }),\n\n  // ICE collection configs.\n  iceCollectionIdealTimeout: v8n.positive(),\n  iceCollectionMaxTimeout: v8n.positive(),\n  iceCollectionCheckFunction: v8n.optional(v8n.function()),\n  serverTurnCredentials: v8n.boolean(),\n\n  // SDP manipulation configs.\n  sdpHandlers: v8n.array(),\n  removeBundling: v8n.boolean(),\n\n  // Other\n  earlyMedia: v8n.boolean(),\n  resyncOnConnect: v8n.boolean(),\n  mediaBrokerOnly: v8n.boolean(),\n  trickleIceMode: v8n.string(),\n  normalizeDestination: v8n.boolean(),\n  ringingFeedbackMode: enums(['auto', 'manual']),\n  callAuditTimer: v8n.positive(),\n  mediaConnectionRetryDelay: v8n.positive()\n})\nconst parseOptions = parse('call', v8nValidation)\n\n/**\n * A helper function to validate and fix STUN/TURN server urls according to RFC Spec.\n *\n * @method fixIceServerUrls\n * @param {string} url The URL of the ice server\n * @return The updated URL\n */\nexport function fixIceServerUrls (url) {\n  let serverUrl\n  try {\n    serverUrl = new URL(url)\n  } catch (error) {\n    log.warn(`Invalid URL specified for ice server: ${url}`)\n    return url\n  }\n  const protocol = serverUrl.protocol\n  const query = serverUrl.search\n  if (!query) {\n    return url\n  }\n\n  let queryFilterFunc\n  if (protocol && protocol.toLowerCase().startsWith('turn')) {\n    // Remove all query parameters other than \"transport\" for TURN URLs.\n    queryFilterFunc = key => key !== 'transport'\n  } else {\n    // Remove all query parameters for STUN URLs\n    queryFilterFunc = () => true\n  }\n  const serverQueryParams = new URLSearchParams(query)\n  Array.from(serverQueryParams.keys())\n    .filter(queryFilterFunc)\n    .forEach(key => serverQueryParams.delete(key))\n\n  const newQuery = serverQueryParams.toString()\n  serverUrl.search = newQuery\n  if (serverUrl.search.length !== query.length) {\n    log.warn(`Invalid STUN/TURN server URL provided: ${url}`)\n  }\n\n  return serverUrl.toString()\n}\n\n/**\n * Helper function to format the Call configs as the plugins expect it to be.\n * @method parseConfigs\n * @param {Object} options Call configs provided by application.\n * @returns {Object} Call configs re-formatted as needed.\n */\nexport default function parseConfigs (options = {}) {\n  // Only parse the configs for v4+.\n  const majorVersion = getVersion()[0]\n  if (majorVersion < 4) {\n    return options\n  }\n\n  if (options.ringingFeedbackMode && !['auto', 'manual'].includes(options.ringingFeedbackMode)) {\n    log.warn('Call configuration `ringingFeedbackMode` invalid. Switching to `auto`.')\n    options.ringingFeedbackMode = 'auto'\n  }\n\n  // For backwards compatiblilty, if `iceCollectionDelay` and `maxIceTimeout` were provided, and `iceCollectionIdealTimeout`\n  //  and `iceCollectionMaxTimeout` were not, we will use the `iceCollectionDelay` as the ideal timeout, and `maxIceTimeout`\n  //  as the max.\n  if (options.iceCollectionDelay) {\n    if (!options.iceCollectionIdealTimeout) {\n      options.iceCollectionIdealTimeout = options.iceCollectionDelay\n    }\n    delete options.iceCollectionDelay\n  }\n  if (options.maxIceTimeout && !options.iceCollectionMaxTimeout) {\n    if (!options.iceCollectionMaxTimeout) {\n      options.iceCollectionMaxTimeout = options.maxIceTimeout\n    }\n    delete options.maxIceTimeout\n  }\n  return options\n}\n\n/**\n * Helper function to merge the default Call configs into the application-provided\n *   configs and validate them.\n * @param  {Object} options Call configs with expected formatting.\n * @return {Object} Call configs with defaults included.\n */\nexport function mergeDefaults (options = {}) {\n  options = mergeValues(defaultOptions, options)\n  // If no ice collection check function was provided, get the default one.\n  if (!options.iceCollectionCheckFunction) {\n    options.iceCollectionCheckFunction = iceCollectionCheckFunction\n  }\n  parseOptions(options)\n\n  return options\n}\n","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{\n    // o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly...\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  // k: [{}], // outdated thing ignored\n  t: [{\n    // t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{\n    // c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{\n    // b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{\n    // m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    {\n      // a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding)\n          ? 'rtpmap:%d %s/%s/%s'\n          : o.rate\n            ? 'rtpmap:%d %s/%s'\n            : 'rtpmap:%d %s';\n      }\n    },\n    {\n      // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      // a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    {\n      // a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    {\n      // a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null)\n          ? 'rtcp:%d %s IP%d %s'\n          : 'rtcp:%d';\n      }\n    },\n    {\n      // a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%s trr-int %d'\n    },\n    {\n      // a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null)\n          ? 'rtcp-fb:%s %s %s'\n          : 'rtcp-fb:%s %s';\n      }\n    },\n    {\n      // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      // a=extmap:1/recvonly URI-gps-string\n      // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],\n      format: function (o) {\n        return (\n          'extmap:%d' +\n          (o.direction ? '/%s' : '%v') +\n          (o['encrypt-uri'] ? ' %s' : '%v') +\n          ' %s' +\n          (o.config ? ' %s' : '')\n        );\n      }\n    },\n    {\n      // a=extmap-allow-mixed\n      name: 'extmapAllowMixed',\n      reg: /^(extmap-allow-mixed)/\n    },\n    {\n      // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null)\n          ? 'crypto:%d %s %s %s'\n          : 'crypto:%d %s %s';\n      }\n    },\n    {\n      // a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    {\n      // a=connection:new\n      name: 'connectionType',\n      reg: /^connection:(new|existing)/,\n      format: 'connection:%s'\n    },\n    {\n      // a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    {\n      // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    {\n      // a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'ptime:%d'\n    },\n    {\n      // a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'maxptime:%d'\n    },\n    {\n      // a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    {\n      // a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    {\n      // a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    {\n      // a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    {\n      // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    {\n      // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    {\n      // a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    {\n      // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    {\n      // a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    {\n      // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    {\n      // a=ssrc-group:FEC 1 2\n      // a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    {\n      // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    {\n      // a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    {\n      // a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    {\n      // a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    {\n      // a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null)\n          ? 'sctpmap:%s %s %s'\n          : 'sctpmap:%s %s';\n      }\n    },\n    {\n      // a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    {\n      // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    {\n      // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      // a=imageattr:* send [x=800,y=640] recv *\n      // a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        // a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        // recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      // a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        // a=simulcast:\n        '^simulcast:' +\n        // send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        // space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        // end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // old simulcast draft 03 (implemented by Firefox)\n      //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      // a=simulcast: recv pt=97;98 send pt=97\n      // a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      // a=framerate:25\n      // a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    {\n      // RFC4570\n      // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    {\n      // a=bundle-only\n      name: 'bundleOnly',\n      reg: /^(bundle-only)/\n    },\n    {\n      // a=label:1\n      name: 'label',\n      reg: /^label:(.+)/,\n      format: 'label:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n      name: 'sctpPort',\n      reg: /^sctp-port:(\\d+)$/,\n      format: 'sctp-port:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n      name: 'maxMessageSize',\n      reg: /^max-message-size:(\\d+)$/,\n      format: 'max-message-size:%s'\n    },\n    {\n      // RFC7273\n      // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37\n      push:'tsRefClocks',\n      reg: /^ts-refclk:([^\\s=]*)(?:=(\\S*))?/,\n      names: ['clksrc', 'clksrcExt'],\n      format: function (o) {\n        return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');\n      }\n    },\n    {\n      // RFC7273\n      // a=mediaclk:direct=963214424\n      name:'mediaClk',\n      reg: /^mediaclk:(?:id=(\\S*))? *([^\\s=]*)(?:=(\\S*))?(?: *rate=(\\d+)\\/(\\d+))?/,\n      names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],\n      format: function (o) {\n        var str = 'mediaclk:';\n        str += (o.id != null ? 'id=%s %s' : '%v%s');\n        str += (o.mediaClockValue != null ? '=%s' : '');\n        str += (o.rateNumerator != null ? ' rate=%s' : '');\n        str += (o.rateDenominator != null ? '/%s' : '');\n        return str;\n      }\n    },\n    {\n      // a=keywds:keywords\n      name: 'keywords',\n      reg: /^keywds:(.+)$/,\n      format: 'keywds:%s'\n    },\n    {\n      // a=content:main\n      name: 'content',\n      reg: /^content:(.+)/,\n      format: 'content:%s'\n    },\n    // BFCP https://tools.ietf.org/html/rfc4583\n    {\n      // a=floorctrl:c-s\n      name: 'bfcpFloorCtrl',\n      reg: /^floorctrl:(c-only|s-only|c-s)/,\n      format: 'floorctrl:%s'\n    },\n    {\n      // a=confid:1\n      name: 'bfcpConfId',\n      reg: /^confid:(\\d+)/,\n      format: 'confid:%s'\n    },\n    {\n      // a=userid:1\n      name: 'bfcpUserId',\n      reg: /^userid:(\\d+)/,\n      format: 'userid:%s'\n    },\n    {\n      // a=floorid:1\n      name: 'bfcpFloorId',\n      reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,\n      names: ['id', 'mStream'],\n      format: 'floorid:%s mstrm:%s'\n    },\n    {\n      // any a= that we don't understand is kept verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n","// Webrtc plugin.\nimport { getBrowserDetails as getBrowserDetailsSelector } from '../selectors'\n\n// Namespaced APIs.\nimport createMediaAPI from './media'\n\n/**\n * WebRTC API factory function.\n * @method createAPI\n * @param  {Object} container The bottle container.\n * @param  {Object} container.context The factory context.\n * @return {Object} API.\n */\nexport default function createAPI (container) {\n  const { context, logManager, API_LOG_TAG } = container\n  const log = logManager.getLogger('WEBRTC')\n\n  const mediaApi = createMediaAPI(container)\n\n  /**\n   * Retrieve information about the browser being used.\n   *\n   * Browser information being defined indicates that the browser supports\n   *    basic webRTC scenarios.\n   * @public\n   * @memberof api\n   * @method getBrowserDetails\n   * @return {Object} Object containing `browser` and `version` information.\n   * @example\n   * const details = client.getBrowserDetails()\n   *\n   * log(`Browser in use: ${details.browser}, version ${details.version}.`)\n   */\n  function getBrowserDetails () {\n    log.debug(API_LOG_TAG + 'getBrowserDetails')\n    return getBrowserDetailsSelector(context.getState())\n  }\n\n  return {\n    media: mediaApi,\n    getBrowserDetails\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { isEmpty } from 'lodash/fp'\n\nfunction sessionActionHelper (type, id, payload = {}, meta = {}) {\n  const action = {\n    type,\n    payload: {\n      ...payload,\n      id\n    }\n  }\n\n  // Only have meta and error properties on the action if they're needed.\n  if (!isEmpty(meta)) {\n    action.meta = meta\n  }\n  if (payload.error) {\n    action.error = true\n  }\n  return action\n}\n\nexport function sessionAdded (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_ADDED, id, params)\n}\n\nexport function sessionRemoved (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_REMOVED, id, params)\n}\n\nexport function sessionNewTrack (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_NEW_TRACK, id, params)\n}\n\nexport function sessionTrackEnded (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_TRACK_ENDED, id, params)\n}\n\nexport function sessionTrackReplaced (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_TRACK_REPLACED, id, params)\n}\n\nexport function sessionIceConnectionStateChange (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_ICE_CONNECTION_STATE_CHANGE, id, params)\n}\n\nexport function sessionIceGatheringStateChange (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_ICE_GATHERING_STATE_CHANGE, id, params)\n}\n\nexport function sessionIceCandidateCollected (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_ICE_CANDIDATE_COLLECTED, id, params)\n}\n\nexport function sessionIceCollectionScheduledCheck (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_ICE_COLLECTION_SCHEDULED_CHECK, id, params)\n}\n\n/*\n * Action to signify that an audio file has ended. Dispatched at the end of the\n *    `insertAudio` Session method.\n */\nexport function sessionAudioEnded (id, params) {\n  return {\n    type: actionTypes.SESSION_AUDIO_ENDED,\n    payload: { id, ...params },\n    error: Boolean(params.error)\n  }\n}\n","/**\n * Error codes for the Auth plugin.\n * @name authCodes\n */\nexport const authCodes = {\n  INVALID_CREDENTIALS: 'authentication:1',\n  CONNECT_FAIL_WS_ERROR: 'authentication:2',\n  LINK_UNSUBSCRIBE_FAIL: 'authentication:3',\n  LINK_SUBSCRIBE_FAIL: 'authentication:4',\n  LINK_EXTEND_SUBSCRIPTION_FAIL: 'authentication:5',\n  LINK_UPDATE_SUBSCRIPTION_FAIL: 'authentication:6',\n  UC_SUBSCRIBE_FAIL: 'authentication:7',\n  UC_REFRESH_TOKEN_FAIL: 'authentication:8',\n  UC_CREATE_TOKEN_FAIL: 'authentication:9',\n  UC_EXTEND_SUBSCRIPTION_FAIL: 'authentication:10',\n  UC_DISCONNECT_FAIL: 'authentication:11',\n  MISSING_SERVICE: 'authentication:12',\n  LINK_SUBSCRIBE_UNAVAILABLE: 'authentication:13'\n}\n\n/**\n * Error codes for the Call plugin.\n * @name callCodes\n */\nexport const callCodes = {\n  UNKNOWN_ERROR: 'call:1',\n  GENERIC_ERROR: 'call:2',\n  INIT_MEDIA_FAILED: 'call:3',\n  USER_MEDIA_ERROR: 'call:4',\n  NOT_SUPPORTED: 'call:5',\n  // The call is in the wrong state.\n  INVALID_STATE: 'call:6',\n  // A provided parameter is not valid.\n  INVALID_PARAM: 'call:7',\n  // There is a desync between components' state.\n  STATE_DESYNC: 'call:8',\n  // Offer could not be generated\n  INVALID_OFFER: 'call:9',\n  // No ICE candidates found\n  NO_ICE_CANDIDATES: 'call:10',\n  // Failed to recieve answer due to media mismatch\n  SESSION_MISMATCH: 'call:11'\n}\n\n/**\n * Error codes for the Call History plugin.\n * @name callHistoryCodes\n */\nexport const callHistoryCodes = {\n  UNKNOWN_ERROR: 'callHistory:1',\n  BAD_REQUEST: 'callHistory:2',\n  NOT_FOUND: 'callHistory:3',\n  NOT_AUTHENTICATED: 'callHistory:4',\n  FORBIDDEN: 'callHistory:5'\n}\n/**\n * @name clickToCallCodes\n */\nexport const clickToCallCodes = {\n  MISSING_ARGS: 'clickToCall:1',\n  RESPONSE_ERROR: 'clickToCall:2'\n}\n/**\n * Error codes for the Groups plugin.\n * @name groupsCodes\n */\nexport const groupsCodes = {\n  UNKNOWN_ERROR: 'groups:1',\n  GENERIC_ERROR: 'groups:2',\n  MISSING_PARAMETERS: 'groups:3'\n}\n\n/**\n * Error codes for the Message plugin.\n * @name messagingCodes\n */\nexport const messagingCodes = {\n  CREATE_GROUP_FAIL: 'messaging:1',\n  MARK_READ_FAIL: 'messaging:2',\n  REMOVE_MEMBERS_FAIL: 'messaging:3',\n  ADD_MEMBERS_FAIL: 'messaging:4',\n  SEND_MESSAGE_FAIL: 'messaging:5',\n  FETCH_MESSAGES_FAIL: 'messaging:6',\n  FILE_UPLOAD_FAIL: 'messaging:7',\n  FETCH_CONVERSATIONS_FAIL: 'messaging:8',\n  INVALID_DESTINATION: 'messaging:9',\n  INVALID_FILE_PARTS: 'messaging:10',\n  SET_IS_TYPING_FAIL: 'messaging:11'\n}\n\n/**\n * Error codes for the Message Waiting Indicator plugin.\n * @name mwiCodes\n */\nexport const mwiCodes = {\n  FETCH_MWI_FAIL: 'mwi:1'\n}\n\n/**\n * Error codes from the Sip Events plugin.\n * @name sipEventCodes\n */\nexport const sipEventCodes = {\n  UNKNOWN_ERROR: 'sipEvents:1',\n  // The user did not subscribe/connect for the specified sip event service.\n  NOT_PROVISIONED: 'sipEvents:2',\n  // The user is not subscribed for the specified sip event.\n  NOT_SUBSCRIBED: 'sipEvents:3'\n}\n\n/**\n * Error codes for the audio bridge portion of the call plugin.\n * @name bridgeCodes\n */\nexport const bridgeCodes = {\n  UNKNOWN_ERROR: 'audioBridge:1',\n  // TODO: Make \"invalid input\" (and others) a generic code.\n  INVALID_INPUT: 'audioBridge:2',\n  ALREADY_EXISTS: 'audioBridge:3',\n  NOT_FOUND: 'audioBridge:4',\n  NOT_SUPPORTED: 'audioBridge:5',\n  MEDIA_NOT_FOUND: 'audioBridge:6',\n  INVALID_STATE: 'audioBridge:7'\n}\n\n/**\n * Error codes for the subscription plugin.\n * @name subscriptionCodes\n */\nexport const subscriptionCodes = {\n  WS_CONNECTION_ERROR: 'subscription:1',\n  CPAAS_WSREQUEST_FAIL: 'subscription:2',\n  CPAAS_WSREVOKE_FAIL: 'subscription:3',\n  CPAAS_WSREFRESH_FAIL: 'subscription:4',\n  CPAAS_SERVICE_SUB_FAIL: 'subscription:5',\n  CPAAS_SERVICE_UNSUB_FAIL: 'subscription:6',\n  CPAAS_UNSUBSCRIBE_FAIL: 'subscription:7'\n}\n\n/**\n * Error codes for the connectivity plugin\n * @name connectivityCodes\n */\nexport const connectivityCodes = {\n  WS_MESSAGE_ERROR: 'connectivity:1'\n}\n\n/**\n * Error codes for the Presence plugin.\n * @name presenceCodes\n */\nexport const presenceCodes = {\n  INVALID_STATUS: 'presence:1',\n  INVALID_ACTIVITY: 'presence:2',\n  INVALID_REQUEST: 'presence:3',\n  INVALID_PARAM: 'presence:4'\n}\n\n/**\n * Error codes for the Users plugin\n * @name usersCodes\n */\nexport const usersCodes = {\n  UNKNOWN: 'users:1',\n  REFRESH_CONTACTS_FAIL: 'users:2',\n  DIRECTORY_REQUEST_FAIL: 'users:3',\n  INVALID_PARAM: 'users:4'\n}\n\n/**\n * Error codes for the Webrtc plugin\n * @name webrtcCodes\n */\nexport const webrtcCodes = {\n  INVALID_PARAM: 'webrtc:1'\n}\n\n/**\n * Error codes for the Proxy plugin\n * @name proxyCodes\n */\nexport const proxyCodes = {\n  INVALID_PARAM: 'proxy:1',\n  SET_PROXY_CHANNEL_FAIL: 'proxy:2',\n  IN_ACTIVE_CALL: 'proxy:3'\n}\n","import { logManager } from '../logs'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Wrapper object for a native MediaStreamTrack object.\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack\n * @method Track\n */\nexport default function Track (mediaTrack, mediaStream) {\n  const log = logManager.getLogger('Track', mediaTrack.id)\n  log.info(`Creating new ${mediaTrack.kind} Track.`)\n\n  // Internal variables.\n  const id = mediaTrack.id\n  const track = mediaTrack\n  let stream = mediaStream\n  let isLocalTrack\n  let constraints = {}\n  const emitter = new EventEmitter()\n\n  /**\n   * When a track ends, the Track itself doesn't do anything about it.\n   * It \"bubbles\" the event up to be handled at a higher level.\n   */\n  track.onended = event => {\n    // Check whether this function was called because a native event was emitted\n    //    or if it was called manually by the SDK.\n    const isNative = event instanceof Event\n\n    const endpoint = isLocalTrack ? 'local' : 'remote'\n    const trigger = isNative ? 'unsolicited' : 'solicited'\n    log.debug(`Track ended (${endpoint}, ${trigger}).`, event)\n\n    emitter.emit('ended', {\n      trackId: track.id,\n      /*\n       * If an event triggered this listener, then it was a remote notification\n       *    (for remote track) or browser action (for local track) that caused it.\n       *    If it was a local track, then the track ending was not part of a\n       *    renegotiation and something will need to handle this situation.\n       *\n       * Otherwise, the SDK called `track.onended()` when we stopped the track as\n       *    part of an operation. The operation should handle the track being\n       *    ended since it was solicited.\n       */\n      isUnsolicited: isNative\n    })\n  }\n\n  /**\n   * When a track is muted, we forward this to any listener.\n   * This handler is typically invoked by actions triggered outside the\n   * direct control of the webrtc SDK.\n   */\n  track.onmute = event => {\n    log.debug('Event emitted: ', event)\n    emitter.emit('muted', {\n      trackId: track.id,\n      mediaId: stream.id,\n      isLocal: isLocalTrack\n    })\n  }\n\n  /**\n   * When a track is unmuted, we forward this to any listener.\n   * This handler is typically invoked by actions triggered outside the\n   * direct control of the webrtc SDK.\n   */\n  track.onunmute = event => {\n    log.debug('Event emitted: ', event)\n    emitter.emit('unmuted', {\n      trackId: track.id,\n      mediaId: stream.id,\n      isLocal: isLocalTrack\n    })\n  }\n\n  function setIsLocal (isLocal) {\n    isLocalTrack = isLocal\n  }\n\n  function isLocal () {\n    return isLocalTrack\n  }\n\n  function setStream (newStream) {\n    stream = newStream\n  }\n  function getStream () {\n    return stream\n  }\n\n  /**\n   * Retrieve a snapshot of the Track object's current state.\n   * @method getState\n   * @return {Object}\n   */\n  function getState () {\n    return {\n      id,\n      streamId: stream.id,\n      kind: track.kind,\n      isLocal: isLocalTrack,\n      label: track.label,\n      muted: track.muted,\n      enabled: track.enabled,\n      state: track.readyState\n    }\n  }\n\n  /**\n   * Set this Track to be disabled and disallow the Track to render the source stream.\n   * @method mute\n   */\n  function mute () {\n    track.enabled = false\n  }\n\n  /**\n   * Set this Track to be enabled and allow the Track to render the source stream.\n   * @method unmute\n   */\n  function unmute () {\n    track.enabled = true\n  }\n\n  /**\n   * Calls native stop() function to deassociate the source and the track.\n   * @method stop\n   */\n  function stop () {\n    if (track.readyState === 'ended') {\n      log.debug('Track already ended.')\n      return\n    }\n\n    track.stop()\n    /**\n     * Treat stopping the track the same as it being ended.\n     * Normally, onended is not triggered when `stop` is called, only when it is\n     *    \"remotely ended\".\n     */\n    track.onended()\n  }\n\n  /**\n   * Gets the currently set constraints for the track.\n   * @method getConstraints\n   * @return {Object}\n   */\n  function getConstraints () {\n    return constraints\n  }\n\n  /**\n   * Set the values for constrainable properties of the track.\n   * @method applyConstraints\n   * @param  {Object} constraints The list of constrainable properties.\n   */\n  function setConstraints (constr) {\n    constraints = constr\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    id,\n    // Track APIs.\n    getState,\n    mute,\n    unmute,\n    stop,\n    getConstraints,\n    setConstraints,\n    // Event APIs.\n    on,\n    off,\n    once,\n    // The native track and stream was accessible before, so it was\n    //    used when it probably shouldn't have been.\n    // TODO: Find a better solution.\n    track,\n    setStream,\n    getStream,\n    setIsLocal,\n    isLocal\n  }\n}\n","import { logManager } from '../logs'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Object to represent a \"media\" object.\n * Wraps a MediaStream object.\n * @class Media\n * TODO: Rename to Stream? Would be more straight-forward since Tracks can be\n *    managed directly (with trackManager), instead of through a \"Media\" object.\n */\nexport default function Media (nativeStream, isLocal) {\n  const log = logManager.getLogger('Media', nativeStream.id)\n  log.info(`Creating new ${isLocal ? 'local' : 'remote'} Media.`)\n\n  // Internal variables.\n  const id = nativeStream.id\n  const stream = nativeStream\n  const emitter = new EventEmitter()\n\n  /**\n   * Mapping of the IDs of this Media object's tracks to the Track object.\n   * @type {Map}\n   */\n  const tracks = new Map()\n\n  /**\n   * Retrieve a snapshot of the Media object's current state.\n   * @method getState\n   * @return {Object}\n   */\n  function getState () {\n    return {\n      id: id,\n      tracks: Array.from(tracks.values()).map(track => track.getState()),\n      isLocal: isLocal\n    }\n  }\n\n  /**\n   * Add a track to this Media object.\n   * @method addTrack\n   * @param {Track} track The Track object to add to the Media object.\n   */\n  function addTrack (track) {\n    if (tracks.has(track.id)) {\n      log.debug(`Track (${track.id}) is already in Media (${id}).`)\n      return\n    }\n\n    // Add the native MediaStreamTrack to the MediaStream.\n    stream.addTrack(track.track)\n    // Add the Track to the Media object.\n    tracks.set(track.id, track)\n\n    /**\n     * When a track ends, remove it from the Media object then clean it up.\n     */\n    track.on('ended', () => {\n      const removedTrack = removeTrack(track.id)\n      // Might be from old already deleted media which has no tracks anymore.\n      if (removedTrack) {\n        emitter.emit('track:ended', {\n          mediaId: id,\n          trackId: removedTrack.id\n        })\n      }\n    })\n    // TODO: Emit event or return result?\n    emitter.emit('track:new', {\n      mediaId: id,\n      trackId: track.id\n    })\n\n    /**\n     * When a track is muted, we generate our own internal event\n     */\n    track.on('muted', event => {\n      const wrappedTrack = getTrack(event.trackId)\n      if (wrappedTrack && wrappedTrack.track && wrappedTrack.track.muted) {\n        // Emit our internal event.\n        // Note that wrappedTrack.id is same as wrappedTrack.track & event.trackId\n        emitter.emit('track:muted', {\n          mediaId: id,\n          trackId: event.trackId\n        })\n      }\n    })\n\n    /**\n     * When a track is unmuted, we generate our own internal event\n     */\n    track.on('unmuted', event => {\n      const wrappedTrack = getTrack(event.trackId)\n      if (wrappedTrack && wrappedTrack.track && wrappedTrack.track.muted === false) {\n        // Emit our internal event.\n        // Note that wrappedTrack.id is same as wrappedTrack.track & event.trackId\n        emitter.emit('track:unmuted', {\n          mediaId: id,\n          trackId: event.trackId\n        })\n      }\n    })\n  }\n\n  /**\n   * Remove a track from the Media object.\n   * @private\n   * @method removeTrack\n   * @param  {string} trackId The Track to remove.\n   */\n  function removeTrack (trackId) {\n    const track = getTrack(trackId)\n    if (track) {\n      tracks.delete(trackId)\n      return track\n    }\n  }\n\n  /**\n   * Stop all Tracks within this Media object.\n   * @method stop\n   */\n  function stop () {\n    getTracks().forEach(track => {\n      track.stop()\n    })\n    emitter.emit('media:stopped', this.id)\n  }\n\n  /**\n   * Retrieve the list of Track object this this Media object manages.\n   * @method getTracks\n   * @return {Array} The list of Track objects.\n   */\n  function getTracks () {\n    return Array.from(tracks.values())\n  }\n\n  /**\n   * Retrieve a specific Track object from within the Media object.\n   * @method getTrack\n   * @param  {String} trackId ID of the Track to retrieve.\n   * @return {Track}\n   */\n  function getTrack (trackId) {\n    return tracks.get(trackId)\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    id,\n    tracks,\n    isLocal,\n    // Getter APIs.\n    getState,\n    getTracks,\n    getTrack,\n    // Create APIs.\n    addTrack,\n    // Cleanup APIs.\n    stop,\n    // Event APIs.\n    on,\n    once,\n    off\n  }\n}\n","/*\n * Wrapper imports.\n * Events, methods, and properties that we want to wrap/add to the native Peer.\n */\nimport events from './events'\nimport methods from './methods'\nimport properties from './properties'\n\nimport { mergeValues } from '../utils'\nimport defaults from './config'\nimport { logManager } from '../logs'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\nimport { createTimer } from './utils/timer'\n\n/**\n * Create a Proxied Peer.\n * This Peer is a native PeerConnection that has had some new functionality\n *    added and some existing functionality \"augmented\". Where an event, a\n *    method, or a property has been defined (see folders), we intercept/add\n *    that functionality.\n * @method peer\n * @return {Peer}\n */\nexport default function peer (id, config = {}, trackManager) {\n  const log = logManager.getLogger('Peer', id)\n  config = mergeValues(defaults, config)\n  log.info('Creating new Peer.')\n\n  const iceTimer = createTimer()\n  const emitter = new EventEmitter()\n\n  // Create the native Peer.\n  log.debug('Creating native PeerConnection.', config.rtcConfig)\n  const nativePeer = new RTCPeerConnection(config.rtcConfig, { optional: [{ googDscp: true }] })\n\n  // Add the event emitter methods to the wrapped methods as well.\n  const customMethods = {\n    ...methods,\n    on: emitter.on.bind(emitter),\n    off: emitter.off.bind(emitter),\n    once: emitter.once.bind(emitter)\n  }\n\n  /**\n   * The Peer model.\n   * @typedef {Peer}\n   * @property {RTCPeerConnection} peer     The native PeerConnection.\n   * @property {string}            id       The unique identifier for the Peer.\n   * @property {boolean}           dtlsRole The DTLS role selected for this PeerConnection. Set after the initial negotiation is completed.\n   * @property {Object}            trackManager Manager that tracks all MediaStreamTracks.\n   * @property {Object}            log      Logger specific to this Peer.\n   * @property {Object}            iceTimer Timer tool (specifically for ICE collection).\n   * @property {EventEmitter}      emitter\n   * @property {Array<RTCIceCandidate>} iceCandidates Gathered candidates.\n   * @property {timeoutID} [iceLoop] Reference to the on-going ICE collection loop.\n   */\n  const base = {\n    nativePeer,\n    proxyPeer: undefined,\n    id,\n    dtlsRole: null,\n    config,\n    trackManager,\n    log,\n    iceTimer,\n    emitter,\n    iceCandidates: [],\n    iceLoop: undefined\n  }\n\n  /**\n   * Create the Proxy object that will be used as the PeerConnection.\n   *\n   * This will intercept all `get` and `set` operations and either forward them\n   *    directly to the real PeerConnection or to our wrapped operations.\n   * This allows us to shim part or all of the PeerConnection's API. We can\n   *    decide which operations we want to intercept while allowing others to\n   *    pass through unchanged.\n   */\n  base.proxyPeer = new Proxy(base, {\n    /**\n     * Intercept \"get\" calls on the Proxy.\n     * This function is called anytime a property on `base` is accessed,\n     *    eg. `base.someProp`\n     * @param {Object} target    base\n     * @param {string} prop      Property being accessed.\n     * @param {Object} receiver  The Proxy object.\n     */\n    get: function (target, prop, receiver) {\n      if (typeof base.nativePeer[prop] === 'function') {\n        /*\n         * If a function is being accessed, determine whether we want to\n         *    return the native function or our own.\n         */\n        if (Object.keys(customMethods).includes(prop)) {\n          // Return our wrapped version of the original function.\n          return customMethods[prop].bind(base)\n        } else {\n          // Return the original function, bound to have the original context.\n          return base.nativePeer[prop].bind(base.nativePeer)\n        }\n      } else if (customMethods[prop] && typeof customMethods[prop] === 'function') {\n        /*\n         * If a non-native function is being accessed, return our custom method.\n         * These are methods that are not on the native RTCPeerConnection\n         *    object, but we added to the old Peer model.\n         */\n        // TODO: Move all of this functionality to a higher level of abstraction.\n        return customMethods[prop].bind(base)\n      } else if (properties[prop]) {\n        /*\n         * If a PeerConnection property is being accessed, and we have a\n         *    wrapping for it, return our wrapper property.\n         */\n        if (typeof properties[prop] === 'function') {\n          // If our property wrapper is a function, call the function and return\n          //    the results.\n          return properties[prop].bind(base)()\n        } else {\n          // Otherwise, just return the original results.\n          return base.nativePeer[prop]\n        }\n      } else if (prop !== 'nativePeer' && base[prop]) {\n        /*\n         * If a Peer model property, other than the peer, is being accessed,\n         *    return it. The Peer model shouldn't have any properties that the\n         *    PeerConnection also has (to avoid conflicts).\n         */\n        return base[prop]\n      } else {\n        // Otherwise, return the property from the PeerConnection itself.\n        return base.nativePeer[prop]\n      }\n    },\n\n    /**\n     * Intercept \"set\" calls on the Proxy.\n     * This function is called anytime a property on `base` is assigned,\n     *    eg. `base.someProp = value`\n     * @method\n     * @param  {Object} target   base\n     * @param  {string} prop     Property being set.\n     * @param  {Any}    value    The value being set.\n     * @param  {Proxy}  receiver The Proxy object.\n     * @return {boolean}         Whether the assignment succeeded or not.\n     */\n    set: function (target, prop, value, receiver) {\n      if (events[prop]) {\n        // If a value is being set on one of our \"wrapped events\", then call\n        //    the \"event function\".\n        return events[prop].bind(base)(value)\n      } else if (prop === 'dtlsRole') {\n        /**\n         * Only allow the `dtlsRole` property of the Peer model be set. The\n         *    Session needs to be able to get/set this property, in the case\n         *    where it recreates the Peer multiple times, so it needs to set the\n         *    role to something specific.\n         * Reference: KAA-1816\n         */\n        base.dtlsRole = value\n        return true\n      } else {\n        // Otherwise, try to set the value on the native Peer.\n        return Reflect.set(base.nativePeer, prop, value)\n      }\n    }\n  })\n\n  /**\n   * For event debugging purposes, start with a dummy listener for every event.\n   *    This ensures our Proxy is listening for the events (in the case nothing\n   *    else is listening), so that debug information from the event wrappers\n   *    are logged.\n   */\n  for (const eventName in events) {\n    base.proxyPeer[eventName] = () => {}\n  }\n\n  return base.proxyPeer\n}\n","/**\n *\n * Util for emitting an event with the necessary peer information for the ice\n * collection scheduled check.\n * @method iceCollectionScheduledCheck\n * @param {Object} proxyBase The \"base\" of the Proxy Peer object.\n */\nexport default function iceCollectionScheduledCheck (proxyBase) {\n  const { proxyPeer, iceTimer, iceCandidates, emitter, config } = proxyBase\n\n  // The time, in milliseconds, that ICE collection has taken so far.\n  const elapsedTime = iceTimer.timeFromStart()\n\n  emitter.emit('scheduledCheck', {\n    iceCollectionDuration: elapsedTime,\n    iceCandidates,\n    iceGatheringState: proxyPeer.iceGatheringState,\n    rtcPeerConnectionConfig: config,\n    rtcLocalSessionDescription: proxyPeer.localDescription\n  })\n}\n","// Authentication plugin.\nimport { parseSpidrServices } from './services'\n\n// Other plugins.\nimport request from '../../request/effects'\nimport BasicError, { authCodes } from '../../errors'\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { call } from 'redux-saga/effects'\nimport { mergeValues } from '../../common/utils'\n\nconst log = logManager.getLogger('AUTH')\n\n/**\n * Subscribe to SPiDR with the provided information.\n * @method subscribe\n * @param  {Object} connection Server information.\n * @param  {Object} credentials User information.\n * @return {Object} Subscription response.\n */\nexport function * subscribe (connection, credentials, extras = {}) {\n  /*\n   * TODO: Clean-up / fix the function signature. The requestOptions (eg. headers)\n   *    are mixed with the API options (eg. client correlator) when they're used\n   *    for unrelated purposes.\n   */\n  const subscribeType = connection.isAnonymous ? 'anonymous' : 'user'\n  let requestOptions = {}\n  requestOptions.method = 'POST'\n\n  requestOptions.url =\n    `${connection.protocol}://${connection.server}:${connection.port}` +\n    `/rest/version/${connection.version}` +\n    `/${subscribeType}/${credentials.username}/subscription`\n\n  requestOptions.body = JSON.stringify({\n    subscribeRequest: {\n      expires: connection.expires,\n      service: connection.service,\n      localization: connection.localization || 'English_US',\n      useTurn: connection.useTurn || true,\n      notificationType: connection.notificationType || 'WebSocket',\n      supported: ['RingingFeedback'],\n      forceLogOut: (extras.forceLogOut || false).toString(),\n      clientCorrelator: extras.clientCorrelator\n    }\n  })\n\n  // If there were any extra request options, merge them into the\n  //      options for this request. Priority is for the options defined here.\n  requestOptions = mergeValues(extras, requestOptions)\n\n  log.info(`Subscribing user ${credentials.username}`)\n  // Send the subscription request.\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    let errorCode = authCodes.LINK_SUBSCRIBE_FAIL\n    if (response.payload.body) {\n      const body = response.payload.body\n      let statusCode\n      let retryAfter\n      if (body.statusCode && body.reason) {\n        /*\n         * In some cases, the response is not wrapped in a `subscribeResponse`\n         *    property. This seems to be when using a pre-provisioned user (stored\n         *    as part of KL?) rather than a dynamically created user (retrieved\n         *    from AS?).\n         * Reference: ABE-23981 (and KAA-1937)\n         */\n        statusCode = body.statusCode\n        if (statusCode === 503) {\n          retryAfter = body.retryAfter\n          errorCode = authCodes.LINK_SUBSCRIBE_UNAVAILABLE\n        }\n      } else if (body.authorizationResponse && body.authorizationResponse.statusCode) {\n        /*\n         * In other cases, the response is wrapped in a `authorizationResponse`\n         *    property instead. This seems to be when an anonymous user\n         *    subscription fails (a success has `subscribeResponse`).\n         * Reference: KAA-2440\n         */\n        statusCode = body.authorizationResponse.statusCode\n      } else {\n        // As last resort, look into body.subscribeResponse\n        statusCode = body.subscribeResponse.statusCode\n        if (statusCode === 503) {\n          retryAfter = body.subscribeResponse.retryAfter\n          errorCode = authCodes.LINK_SUBSCRIBE_UNAVAILABLE\n        }\n      }\n      log.debug(`Failed user subscription with status code ${statusCode}.`)\n\n      // Handle errors from the server.\n      const errorInfo = {\n        message: `Failed to subscribe user. Status Code: ${statusCode}.`,\n        code: errorCode\n      }\n      const returnValue = {\n        // TODO: Better error; more info.\n        error: new BasicError(errorInfo)\n      }\n      if (retryAfter && retryAfter > 0) {\n        returnValue.retryAfter = retryAfter\n      }\n\n      return returnValue\n    } else {\n      log.debug('Failed user subscription.', response.payload.result.message)\n      // Handle errors from the request plugin.\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: `Subscribe request failed: ${response.payload.result.message}.`,\n          // TODO: Shared error codes.\n          code: authCodes.LINK_SUBSCRIBE_FAIL\n        })\n      }\n    }\n  } else {\n    // Request was successful.\n    const subscribeResponse = response.payload.body.subscribeResponse\n\n    const subscribedServices = subscribeResponse.subscriptionParams.service\n    const servicesInfo = yield call(parseSpidrServices, connection.service, subscribedServices)\n    log.debug(`Successfully subscribed user. Service subscription status: ${servicesInfo.status}`)\n\n    return {\n      error: false,\n      servicesInfo,\n      ...subscribeResponse\n    }\n  }\n}\n\n/**\n * Unsubscribe from SPiDR with the provided subscription info.\n * @method unsubscribe\n * @param  {Object}    connection Server information for the service in use.\n * @param  {string}    connection.server Server information for generating the URL.\n * @param  {string}    connection.requestOptions Common request options to be added.\n * @param  {string}    subscriptionURL URL of the user's subscription instance.\n */\nexport function * unsubscribe (connection, subscriptionURL) {\n  const requestOptions = {}\n  requestOptions.method = 'DELETE'\n\n  requestOptions.url =\n    `${connection.server.protocol}://${connection.server.server}:${connection.server.port}` + subscriptionURL\n\n  log.info('Unsubscribing user.')\n  // Send the unsubscribe request.\n  const response = yield request(requestOptions)\n\n  /*\n   * No matter what the response was, we still want to handle the user as\n   *    unsubscribed afterwards. If the request fails, there isn't a point to\n   *    keep the user subscribed since they want to unsubscribe anyway.\n   * For debug purposes, log what the response was but handle it as a success.\n   */\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      const { statusCode } = response.payload.body.subscribeResponse\n      log.debug(`Encountered error unsubscribing user with status code ${statusCode}.`)\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug('Encountered error unsubscribing user.', message)\n    }\n  } else {\n    // Request was successful.\n    log.debug('User unsubscribed successfully.')\n  }\n}\n\n/**\n * Resubscribe to SPiDR to extend an existing subscription.\n * @method resubscribe\n * @param  {Object}    connection Server information for the service in use.\n * @param  {string}    connection.server Server information for generating the URL.\n * @param  {string}    connection.requestOptions Common request options to be added.\n * @param  {Object}    subscription Information about the subscription instance.\n * @param  {string}    subscription.expires - The time (in seconds) until subscription expiry.\n * @param  {Array}     subscription.service - The SPiDR services to resubscribe to.\n * @param  {Array}     subscription.url - The URL of the user's subscription instance.\n * @return {Object}    Resubscription response.\n */\nexport function * resubscribe (connection, subscription) {\n  const requestOptions = {}\n  requestOptions.method = 'PUT'\n\n  if (subscription.clientCorrelator) {\n    requestOptions.url =\n      `${connection.server.protocol}://${connection.server.server}:${connection.server.port}` +\n      `/rest/version/${connection.server.version}` +\n      `/user/${connection.username}/subscription/clientCorrelator/${subscription.clientCorrelator}`\n  } else {\n    requestOptions.url =\n      `${connection.server.protocol}://${connection.server.server}:${connection.server.port}` + subscription.url\n  }\n\n  // TODO: Don't hardcode the defaults here. Should be shared with\n  //      the subscribe request as well.\n  requestOptions.body = JSON.stringify({\n    subscribeRequest: {\n      expires: subscription.expires,\n      service: subscription.service,\n      localization: subscription.localization || 'English_US',\n      useTurn: subscription.useTurn || true,\n      notificationType: subscription.notificationType || 'WebSocket'\n    }\n  })\n\n  log.info('Resubscribing user.')\n  // Send the subscription update request.\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      const { statusCode } = response.payload.body.subscribeResponse\n      log.debug(`Failed to update user subscription with status code ${statusCode}.`)\n\n      let message, errorCode\n      if (response.payload.result.code === 404 && [4, 39].includes(statusCode)) {\n        /*\n         * Special case: Status code 39 (for KL) or 4 (for UC) means the subscription\n         *    does not exist (ie. the request 404'd). We want to treat this error\n         *    differently because it is a \"subscription gone\" scenario and we need\n         *    to clear the SDK's subscription info.\n         */\n        message = `Subscription no longer exists. Code ${statusCode}.`\n        // TODO: We shouldn't be assigning arbitrary codes to BasicError (ie. only\n        //    use the codes pre-defined) because the application also gets access\n        //    to this, but we don't have a good way to pass specific error info\n        //    around for side-effects (ie. subscription gone).\n        errorCode = statusCode\n      } else {\n        message = `Failed to update user subscription with status code ${statusCode}.`\n        errorCode = authCodes.LINK_UPDATE_SUBSCRIPTION_FAIL\n      }\n\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({ message, code: errorCode })\n      }\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug('User subscription update request failed.', message)\n\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: `Update subscription request failed.: ${message}.`,\n          // TODO: Shared error codes.\n          code: authCodes.LINK_UPDATE_SUBSCRIPTION_FAIL\n        })\n      }\n    }\n  } else {\n    // Request was successful.\n    const resubResponse = response.payload.body.subscribeResponse\n\n    if (resubResponse.statusCode === 0 || resubResponse.statusCode === 2) {\n      const subscribedServices = resubResponse.subscriptionParams.service\n      const servicesInfo = yield call(parseSpidrServices, subscription.service, subscribedServices)\n      log.debug(`Successfully resubscribed user. Service resubscription status: ${servicesInfo.status}`)\n\n      // Success.\n      return {\n        error: false,\n        servicesInfo,\n        ...resubResponse\n      }\n    } else {\n      log.info('Failed to resubscribe user. Status Code: ', resubResponse.statusCode)\n      // Unknown statusCode, consider as failure.\n      return {\n        error: new BasicError({\n          message: `Unknown error; statusCode: ${resubResponse.statusCode}.`,\n          code: authCodes.LINK_UPDATE_SUBSCRIPTION_FAIL\n        })\n      }\n    }\n  }\n}\n","// Requests plugin.\nimport { RESPONSE } from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport { getCommonOptions } from './utils'\n\n// Libraries.\nimport { mergeValues } from '../common/utils'\nimport { get } from 'lodash/fp'\nimport { put, take, call } from 'redux-saga/effects'\n\n/**\n * Creates an effect description that instructs the middleware to perform a request with the provided options.\n * This effect is blocking and will yield a RESPONSE action on completion.\n *\n * @param {Object} options See https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n * @param {string} options.url The url to perform the request on.\n * @param {string} options.method The HTTP method to use for the request.\n * @param {Object} options.headers Object literal of headers you want to add to the request.\n * @param {Object} [options.queryParams] The parameters to be added to the query string\n * @param {string} [options.responseType] The data type assumed to be received in the response body\n * @param {Blob|BufferSource|FormData|UrlSearchParams|string} [options.body] Any body that you want to add to your request.\n * @return A blocking redux-saga effect that will instruct the middleware to wait for the request to be fulfilled or until it fails.\n */\nexport default function request (options, commonOptions) {\n  return call(requestSaga, options, commonOptions)\n}\n\n/*\n * The saga backing the request effect.\n */\nexport function * requestSaga (options, manualOptions) {\n  /*\n   * Some requests can have special-cases where they don't want to use the\n   *    \"common\" options. Allow them to pass in \"manual\" options that should be\n   *    used instead.\n   * For example, the CPaaS \"upload file\" request cannot use the \"common\"\n   *    Content-Type header.\n   */\n  if (manualOptions) {\n    options = mergeValues(options, manualOptions)\n  } else {\n    // Get the common request options that should be used for all requests.\n    const commonOptions = yield call(getCommonOptions, options.url)\n\n    options = mergeValues(options, commonOptions)\n  }\n\n  // Dispatch the request action for the sagas to process.\n  const requestAction = yield put(actions.request(options))\n  const responseAction = yield take(\n    action => action.type === RESPONSE && get('meta.requestId', action) === requestAction.meta.requestId\n  )\n\n  return responseAction\n}\n","// Redux-Saga\nimport {\n  actionChannel,\n  call,\n  delay,\n  put,\n  race,\n  select,\n  take,\n  fork,\n  cancel,\n  cancelled,\n  takeEvery\n} from 'redux-saga/effects'\n\n// Auth\nimport * as actions from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\nimport { DISCONNECT_REASONS } from '../constants'\n\n// State selectors\nimport { getAuthConfig, getSubscriptionInfo, getConnectionInfo, getAuthScenario } from '../interface/selectors'\n\n// Constants\nimport { platforms } from '../../constants'\n\n// Errors\nimport BasicError, { authCodes } from '../../errors'\n\n// Requests\nimport { subscribe, unsubscribe, resubscribe } from '../subscription/requests'\n\n// Other plugins.\nimport { NOTIFICATION_RECEIVED } from '../../notifications/interface/actionTypes'\nimport * as connectivityActionTypes from '../../connectivity/interface/actionTypes'\nimport { connectWebsocket, disconnectWebsocket } from '../../connectivity/interface/effects'\nimport { getConnectionState } from '../../connectivity/interface/selectors'\n\n// Libraries\nimport base64 from 'base-64'\nimport utf8 from 'utf8'\nimport { mergeValues } from '../../common/utils'\n\n// Logging\nimport { logManager } from '../../logs'\n\n// This is an Link plugin.\nconst platform = platforms.LINK\n\n// Get the logger\nconst log = logManager.getLogger('AUTH')\n\n/**\n * Link connect saga. This Saga is in charge of the flow for connecting and disconnecting.\n * Handles the workflow of connecting or disconnecting to SPiDR.\n * @method connectFlow\n */\nexport function * connectFlow () {\n  while (true) {\n    // Wait for a CONNECT action.\n    const action = yield take(actionTypes.CONNECT)\n\n    // Retrieve the connection info.\n    const config = yield select(getAuthConfig)\n\n    // Fork off and try to connect.\n    const task = yield fork(connect, action, config)\n\n    // Take the actions for if an error or disconnect occurs.\n    const finishOrError = yield take([actionTypes.CONNECT_FINISHED, actionTypes.DISCONNECT])\n\n    /**\n     * This if block covers 2 of the 3 flows of connect / disconnect.\n     * 1. The first block covers what happens when we receive a DISCONNECT action before we finish connecting.\n     *        IE DISCONNECT comes before a CONNECT_FINISHED.\n     * 2. The second block covers what happens when we get a successful CONNECT_FINISHED event before any DISCONNECT events.\n     * 3. The third scenario is not explicitly covered here. That scenario is when we received a CONNECT_FINISHED event with an error before any disconnect events.\n     *      In this case, there is nothing that we explicitly have to do, since a CONNECT_FINISHED event with an error doesn't place anything into the state.\n     *      Therefore there is no real cleanup for us to do in this scenario. We then want to wait for the next CONNECT ( which we do via the next iteration of the while loop).\n     **/\n    if (finishOrError.type === actionTypes.DISCONNECT) {\n      yield cancel(task)\n    } else if (finishOrError.type === actionTypes.CONNECT_FINISHED && !finishOrError.error) {\n      const disconnectAction = yield take([actionTypes.DISCONNECT, actionTypes.DISCONNECT_FINISHED])\n\n      // if disconnect has finished, we dont need to do a teardown of auth state, or disconnect the websocket, so reset connectFlow\n      if (disconnectAction.type === actionTypes.DISCONNECT_FINISHED) {\n        continue\n      }\n\n      yield call(disconnect)\n    }\n  }\n}\n\n/**\n * Link connect function.\n * Performs the workflow of connecting to SPiDR.\n * @method connect\n */\nexport function * connect (action, config) {\n  // Request options, to be used for all subsequent requests after connect.\n  let requestOptions = {\n    headers: {}\n  }\n  // Determine what type of connect method to use. This determines what extra\n  //      information needs to be added to the request.\n  const { credentials, options } = action.payload\n  if (credentials) {\n    const { username, password, authname, hmacToken } = credentials\n    if (hmacToken) {\n      // Only need the hmacToken in the x-token header when subscribing.\n      // Will need to remove this once subscription succeeds.\n      // Once subscription succeeds, we will receive a sessionId which we will need to use as the x-session header for subsequent requests.\n      log.info('Connecting with hmacToken scenario.')\n      requestOptions.headers['x-token'] = hmacToken\n    } else if (authname && password) {\n      log.info('Connecting with authname/password scenario.')\n      requestOptions.headers.Authorization = 'Basic ' + base64.encode(utf8.encode(authname + ':' + password))\n    } else if (username && password) {\n      log.info('Connecting with username/password scenario.')\n      requestOptions.headers.Authorization = 'Basic ' + base64.encode(utf8.encode(username + ':' + password))\n    } else {\n      log.info('Unexpected connect scenario.')\n      const error = new BasicError({\n        message: 'This login signature is not valid.',\n        code: authCodes.INVALID_CREDENTIALS\n      })\n      yield put(actions.connectFinished({ error }, platform))\n      return\n    }\n  }\n  try {\n    requestOptions = mergeValues(options, requestOptions)\n\n    // Gather information to provide externally.\n    const userInfo = {\n      username: action.payload.credentials.username\n    }\n    // Gather information to provide internally, to other plugins.\n    const connection = {\n      server: {\n        protocol: config.subscription.protocol,\n        server: config.subscription.server,\n        port: config.subscription.port,\n        version: config.subscription.version\n      },\n      username: action.payload.credentials.username,\n      // Request options that all other (Link) plugins will use.\n      requestOptions\n    }\n    yield put(\n      actions.setConnectionInfo(\n        {\n          userInfo,\n          connection\n        },\n        platform\n      )\n    )\n\n    const response = yield call(subscribe, config.subscription, credentials, requestOptions)\n\n    if (response.error) {\n      yield put(actions.connectFinished({ error: response.error }, platform))\n      return\n    }\n\n    // If used HMAC token for authentication\n    if (credentials.hmacToken) {\n      // Subsequent requests must not have the x-token header and must have the x-session header.\n      // Need to delete the x-token header for subsequent requests to work.\n      delete requestOptions.headers['x-token']\n      // Set the sessionId as the x-session header for use by subsequent requests.\n      requestOptions.headers['x-session'] = response.subscriptionParams.sessionId\n    }\n\n    // Add token to connection info\n    connection.token = response.token\n    // Keep track of service subscription information.\n    const subscription = {\n      ...response.subscriptionParams,\n      servicesInfo: response.servicesInfo,\n      url: response.subscription\n    }\n\n    // Need to create a new object, rather than adding `url` to\n    // connectionInfo in order to prevent state mutation.\n    const websocketInfo = {\n      ...config.websocket,\n      url: subscription.notificationChannel\n    }\n\n    // Request the websocket connection.\n    const wsOpenOrError = yield connectWebsocket(websocketInfo, platform)\n\n    if (wsOpenOrError.error) {\n      throw wsOpenOrError.payload\n    }\n\n    yield put(\n      actions.connectFinished(\n        {\n          subscription,\n          userInfo,\n          connection\n        },\n        platform\n      )\n    )\n  } catch (error) {\n    // Error: login failed.\n    yield put(actions.connectFinished({ error }, platform))\n  } finally {\n    if (yield cancelled()) {\n      yield call(disconnect)\n      // If we enter this point we know we got disconnect mid connection attempt BEFORE connect_finished fired.\n      // Therefore we have to put any special store cleanup code in here.\n      // Disconnect_finished action handles clearing up the store so no logic needs to be here right now.\n    }\n  }\n}\n\n/**\n * Link disconnect function.\n * Performs the actions for actually disconnecting from SPiDR.\n * @method disconnect\n */\nexport function * disconnect () {\n  // Retrieve needed info from the store.\n  const subscription = yield select(getSubscriptionInfo)\n  const connection = yield select(getConnectionInfo)\n\n  // If the above info is not present, we probably got a disconnect mid-connection attempt.\n  if (subscription && connection) {\n    // If the info is in the store we can go ahead and unsubscribe.\n    yield call(unsubscribe, connection, subscription.url)\n  }\n\n  log.info('Successfully unsubscribed from services.')\n  const wsState = yield select(getConnectionState, platform)\n  if (wsState.connected) {\n    log.info('Disconnecting from websocket.')\n    // disconnect from the websocket\n    yield disconnectWebsocket(undefined, platform)\n    log.info('Successfully disconnected from websocket.')\n  }\n\n  // Dispatch disconnect finished action appropriate for the response.\n  yield put(actions.disconnectFinished())\n}\n\n/**\n * Saga for extending a user's subscription.\n * When triggered, make a resub request to SPiDR for a specific subscription.\n * @method extendSubscription\n */\nexport function * extendSubscription () {\n  // Re-subscription timer is triggered by a successful connect or a previous resub finishing.\n  // Use a channel to queue the triggers (so it can catch the put resub action at the end).\n  const resubTriggers = yield actionChannel([actionTypes.CONNECT_FINISHED, actionTypes.RESUBSCRIPTION_FINISHED])\n\n  while (true) {\n    const action = yield take(resubTriggers)\n\n    // If the action was a connection error, ignore it.\n    if (action.type === actionTypes.CONNECT_FINISHED && action.error) {\n      continue\n    }\n\n    const isOnSSO = yield select(getAuthScenario)\n    let subscription = {}\n    let connection = {}\n\n    if (isOnSSO) {\n      const linkConnection = yield select(getConnectionInfo)\n\n      connection = {\n        server: linkConnection.server,\n        token: action.payload.connection.token\n      }\n      subscription = yield select(getSubscriptionInfo)\n    } else {\n      connection = yield select(getConnectionInfo)\n      subscription = yield select(getSubscriptionInfo)\n    }\n\n    let attemptNum\n    // If the action was a failed resubscription, increment the attempt number.\n    if (action.type === actionTypes.RESUBSCRIPTION_FINISHED && action.error) {\n      attemptNum = action.payload.attemptNum + 1\n    } else {\n      attemptNum = 1\n    }\n\n    // Set the delay to be halfway between now and when the subscription expires.\n    let resubDelay = (subscription.expires * 1000) / Math.pow(2, attemptNum)\n    // Don't try to resub more often than every 5 minutes.\n    resubDelay = resubDelay > 30000 ? resubDelay : 30000\n\n    // Wait for either the resub delay or a disconnect action.\n    const { expiry } = yield race({\n      expiry: delay(resubDelay),\n      disconnect: take(actionTypes.DISCONNECT_FINISHED)\n    })\n\n    // If the resubDelay expired, attempt resubscription\n    if (expiry) {\n      const response = yield call(resubscribe, connection, subscription, isOnSSO)\n\n      if (response.error) {\n        yield put(\n          actions.resubscribeFinished(\n            {\n              error: response.error,\n              attemptNum\n            },\n            platform\n          )\n        )\n      } else {\n        // TODO: Check response.serviceInfo for full/partial resubscription.\n        yield put(actions.resubscribeFinished({ attemptNum }, platform))\n      }\n    }\n  }\n}\n\n/**\n * Saga for updating a subscription's services.\n * @method updateSubscription\n */\nexport function * updateSubscription () {\n  while (true) {\n    const action = yield take(actionTypes.UPDATE_SUBSCRIPTION)\n    log.debug(\"Attempting to update subscription's services.\", action.payload)\n\n    const isOnSSO = yield select(getAuthScenario)\n    const connection = yield select(getConnectionInfo)\n    const subscription = yield select(getSubscriptionInfo)\n    subscription.service = action.payload\n\n    // Use the resubscribe request to update the subscription. The endpoint is for both.\n    const response = yield call(resubscribe, connection, subscription, isOnSSO)\n\n    if (response.error) {\n      log.debug('Failed to update subscription services.')\n      yield put(\n        actions.updateSubscriptionFinished(\n          {\n            error: new BasicError({\n              message: response.message,\n              code: authCodes.LINK_UPDATE_SUBSCRIPTION_FAIL\n            })\n          },\n          platform\n        )\n      )\n    } else {\n      log.debug('Successfully updated subscription services.', action.payload)\n      // TODO: Use response.serviceInfo to update full/partial subscription.\n      // Only update the service substate in subscription.\n      yield put(\n        actions.updateSubscriptionFinished(\n          {\n            subscription: {\n              service: action.payload\n            }\n          },\n          platform\n        )\n      )\n    }\n  }\n}\n\n/**\n * Saga that handles a \"subscription gone\" notification.\n * Treat the notification as a forced disconnect.\n * @method onSubscriptionGone\n */\nexport function * onSubscriptionGone () {\n  // Redux-saga take() pattern.\n  // Take notifications about the subscription being 'gone'.\n  function takeGoneNotification (action) {\n    return (\n      action.type === NOTIFICATION_RECEIVED &&\n      action.payload.notificationMessage &&\n      action.payload.notificationMessage.eventType === 'gone'\n    )\n  }\n\n  // Take \"resubscription failed\" actions caused by the subscription not existing.\n  function takeResubGoneSubscription (action) {\n    return (\n      action.type === actionTypes.RESUBSCRIPTION_FINISHED &&\n      action.error &&\n      // Magic number: 39 is KL's statusCode for \"resource does not exist\".\n      action.payload.code === 39\n    )\n  }\n\n  while (true) {\n    yield take([takeGoneNotification, takeResubGoneSubscription])\n\n    // Dispatch an action to disconnect the websocket (and let the connectivity\n    //      plugin know we expect it to be disconnected).\n    const wsState = yield select(getConnectionState, platform)\n    if (wsState.connected) {\n      yield disconnectWebsocket(undefined, platform)\n    }\n\n    // Dispatch a disconnect finished action to trigger \"user disconnected\" logic.\n    yield put(actions.disconnectFinished({ reason: DISCONNECT_REASONS.GONE }))\n  }\n}\n\n/**\n * Triggers onConnectionLost saga when a connectivity.WS_RECONNECT_FAILED actionType occurs\n * @method onConnectionLostEntry\n */\nexport function * onConnectionLostEntry () {\n  yield takeEvery(connectivityActionTypes.WS_RECONNECT_FAILED, onConnectionLost)\n}\n\n/**\n * Handles lost connections from the connectivity plugin\n * @method onConnectionLost\n */\nexport function * onConnectionLost () {\n  yield put(actions.disconnectFinished({ reason: DISCONNECT_REASONS.LOST_CONNECTION }))\n}\n","// Connectivity.\nimport { wsAttemptConnect, wsDisconnect } from './actions'\nimport { WS_CONNECT_FINISHED, WS_DISCONNECT_FINISHED, WS_ERROR } from './actionTypes'\nimport { getConnectionState } from './selectors'\n\n// Other plugins.\nimport { getPlatform } from '../../auth/interface/selectors'\nimport { UNSUBSCRIBE_FINISHED } from '../../subscription/interface/actionTypes'\n\n// Libraries.\nimport { delay, put, race, select, take } from 'redux-saga/effects'\n\n/**\n * Custom redux-saga effect.\n * Wraps \"communication\" between the connectivity plugin and another plugin\n *     for connecting to a websocket.\n * @method connectWebsocket\n * @param {Object} websocketInfo Information needed to create the websocket.\n * @param {string} websocketInfo.protocol\n * @param {string} websocketInfo.server\n * @param {string} websocketInfo.port\n * @param {string} websocketInfo.url\n * @param {Object} [websocketInfo.params]\n * @param {string} platform The backend platform being connected to.\n * @return {Object} The response action of type `WS_CONNECT_FINISHED`.\n */\nexport function * connectWebsocket (websocketInfo, platform) {\n  // Dispatch the action that triggers a saga to connect to a websocket.\n  yield put(wsAttemptConnect(websocketInfo, platform))\n\n  // Wait for the action that signifies the result of the above action.\n  const responseAction = yield take(action => {\n    return action.type === WS_CONNECT_FINISHED && action.meta.platform === platform\n  })\n\n  // Return the response.\n  return responseAction\n}\n\n/**\n * Effect for disconnecting a websocket to a platform.\n * @method disconnectWebsocket\n * @param  {Object} payload\n * @param  {string} platform The backend platform being disconnected from.\n * @return {Object} The response action of type `WS_DISCONNECT_FINISHED`.\n */\nexport function * disconnectWebsocket (payload, platform) {\n  // Dispatch the action that triggers a saga to disconnect the websocket.\n  yield put(wsDisconnect(payload, platform))\n\n  // Wait for the action that signifies the result of the above action.\n  const responseAction = yield take(action => {\n    return (action.type === WS_DISCONNECT_FINISHED || action.type === WS_ERROR) && action.meta.platform === platform\n  })\n\n  // Return the response.\n  return responseAction\n}\n\n/**\n * Effect for waiting for the websocket / subscription to reconnect.\n * Assumption is that the websocket is in the middle of reconnect attempts. This\n *    is why the timeout is so long; one of the two scenarios should be guaranteed\n *    to happen before then.\n * @param {number} timeout The time, in milliseconds, to wait before timing out.\n * @return {boolean} Whether the websocket has reconnected or not.\n */\nexport function * waitForReconnect (timeout = 60000) {\n  const platform = yield select(getPlatform)\n  const { connected: isConnected } = yield select(getConnectionState, platform)\n\n  if (isConnected) {\n    return true\n  }\n\n  const { reconnected } = yield race({\n    // If websocket reconnects, then we're reconnected (...duh).\n    reconnected: take(action => action.type === WS_CONNECT_FINISHED && !action.error),\n    // If the user unsubscribes (ie. ws reconnect fails), then we're disconnected.\n    disconnected: take(action => action.type === UNSUBSCRIBE_FINISHED && !action.error),\n    timeout: delay(timeout)\n  })\n\n  return Boolean(reconnected)\n}\n","const name = 'connectivity'\nexport default name\n","import establishApis from './establish'\nimport midcallApis from './midcall'\nimport complexApis from './complex'\nimport miscApis from './misc'\nimport constantsApis from './constants'\n\n/**\n * The 'call' namespace (within the 'api' type) is used to make audio and video calls to and from\n * SIP users and PSTN phones.\n *\n * Call functions are all part of the 'call' namespace.\n *\n * @public\n * @namespace call\n */\n\n/**\n * Information about a Call.\n *\n * Can be retrieved using the {@link call.getAll} or {@link call.getById} APIs.\n *\n * @public\n * @static\n * @typedef {Object} CallObject\n * @memberof call\n * @requires cpaas_call\n * @property {string} id The ID of the call.\n * @property {user.UserID} from A unique identifier (uri) of the person who made the call.\n * @property {user.UserID} to A unique identifier (uri) of the person who receives the call.\n * @property {string} direction The direction in which the call was created. Can be 'outgoing' or 'incoming'.\n * @property {string} state The current state of the call. See {@link call.states} for possible states.\n * @property {string} mediaConnectionState The current status of the call's media connection. See {@link call.mediaConnectionStates} for possible states.\n * @property {boolean} localHold Indicates whether this call is currently being held locally.\n * @property {boolean} remoteHold Indicates whether this call is currently being held remotely.\n * @property {Array<string>} localTracks A list of Track IDs that the call is sending to the remote participant.\n * @property {Array<string>} remoteTracks A list of Track IDs that the call is receiving from the remote participant.\n * @property {call.MediaOffered} [mediaOffered] Information about what media was offered by the person who made the call.\n * @property {Object} remoteParticipant Information about the other call participant.\n * @property {string} [remoteParticipant.displayNumber] The User ID of the remote participant in the form \"username@domain\".\n * @property {string} [remoteParticipant.displayName] The display name of the remote participant.\n * @property {call.BandwidthControls} bandwidth The bandwidth limitations set for the call.\n * @property {number} startTime The start time of the call in milliseconds since the epoch.\n * @property {number} [endTime] The end time of the call in milliseconds since the epoch.\n */\n\n/**\n * Information about a Call.\n *\n * Can be retrieved using the {@link call.getAll} or {@link call.getById} APIs.\n *\n * @public\n * @static\n * @module CallObject\n * @typedef {Object} CallObject\n * @memberof call\n * @requires link_call\n * @requires callMe\n * @property {string} id The ID of the call.\n * @property {user.UserID} from A unique identifier (uri) of the person who made the call.\n * @property {user.UserID} to A unique identifier (uri) of the person who receives the call.\n * @property {string} direction The direction in which the call was created. Can be 'outgoing' or 'incoming'.\n * @property {string} state The current state of the call. See {@link call.states} for possible states.\n * @property {string} mediaConnectionState The current status of the call's media connection. See {@link call.mediaConnectionStates} for possible states.\n * @property {boolean} localHold Indicates whether this call is currently being held locally.\n * @property {boolean} remoteHold Indicates whether this call is currently being held remotely.\n * @property {Array<string>} localTracks A list of Track IDs that the call is sending to the remote participant.\n * @property {Array<string>} remoteTracks A list of Track IDs that the call is receiving from the remote participant.\n * @property {call.MediaOffered} [mediaOffered] Information about what media was offered by the person who made the call.\n * @property {Object} remoteParticipant Information about the other call participant.\n * @property {string} [remoteParticipant.displayNumber] The User ID of the remote participant in the form \"username@domain\".\n * @property {string} [remoteParticipant.displayName] The display name of the remote participant.\n * @property {call.BandwidthControls} bandwidth The bandwidth limitations set for the call.\n * @property {Array<call.CustomParameter>} customParameters The locally set Custom Parameters for the call.\n * @property {number} startTime The start time of the call in milliseconds since the epoch.\n * @property {number} [endTime] The end time of the call in milliseconds since the epoch.\n */\n\n/**\n * The 'media' namespace provides an interface for interacting with Media that the\n *    SDK has access to. Media is used in conjunction with the {@link call Calls}\n *    feature to manipulate and render the Tracks sent and received from a Call.\n *\n * Media and Track objects are not created directly, but are created as part of\n *    Call operations. Media and Tracks will either be marked as \"local\" or\n *    \"remote\" depending on whether their source is the local user's machine\n *    or a remote user's machine.\n *\n * The Media feature also keeps track of media devices that the user's machine\n *    can access. Any media device (eg. USB headset) connected to the machine\n *    can be used as a source for media. Available devices can be found using\n *    the {@link media.getDevices} API.\n *\n * @public\n * @namespace media\n */\n\n/**\n * The MediaConstraint type defines the format for configuring media options.\n * Either the `exact` or `ideal` property should be provided. If both are present, the\n *    `exact` value will be used.\n *\n * When the `exact` value is provided, it will be the only value considered for the option.\n *    If it cannot be used, the constraint will be considered an error.\n *\n * When the `ideal` value is provided, it will be considered as the optimal value for the option.\n *    If it cannot be used, the closest acceptable value will be used instead.\n *\n * A string value can be provided directly instead of using the MediaConstraint format.\n *    Using a string directly is not recommended, since behaviour may differ depending\n *    on browser and media property. For most properties, a direct string value will be\n *    handled as `ideal` behaviour, but some properties may follow the `exact` behaviour\n *    (eg. `deviceId`).\n *\n * @public\n * @static\n * @typedef {Object} MediaConstraint\n * @memberof call\n * @property {string} [exact] The required value for the constraint. Other values will not be accepted.\n * @property {string} [ideal] The ideal value for the constraint. Other values will be considered if necessary.\n * @example\n * // Specify video resolution when making a call.\n * client.call.make(destination, {\n *    audio: true,\n *    video: true,\n *    videoOptions: {\n *      // Set height and width constraints to ideally be 1280x720.\n *      height: { ideal: 720 },\n *      width: { ideal: 1280 }\n *    }\n * })\n */\n\n/**\n * The MediaOffered type defines what media capabilities are offered by the person making a call.\n * This is an optional property and therefore may be null if it is not known or if it's associated with caller's side of the call.\n *\n * @public\n * @static\n * @typedef {Object} MediaOffered\n * @memberof call\n * @property {boolean} audio Specifies if any audio capability has been offered by the caller. If set to true, then the caller is capable of supporting at least one audio stream in the current call.\n * @property {boolean} video Specifies if any video capability has been offered by the caller. If set to true, then the caller is capable of supporting at least one video stream in the current call.\n */\n\n/**\n * The BandwidthControls type defines the format for configuring media and/or track bandwidth options.\n * BandwidthControls only affect received remote tracks of the specified type.\n *\n * @public\n * @static\n * @typedef {Object} BandwidthControls\n * @memberof call\n * @property {number} [call] The desired combined bandwidth bitrate in kilobits per second for all media in the call.\n * @property {number} [audio] The desired bandwidth bitrate in kilobits per second for received remote audio.\n * @property {number} [video] The desired bandwidth bitrate in kilobits per second for received remote video.\n * @example\n * // Specify received remote video bandwidth limits when making a call.\n * client.call.make(destination, mediaConstraints,\n *  {\n *    bandwidth: {\n *      video: 5\n *    }\n *  }\n * )\n */\n\n/**\n * The DSCPControls type defines the format for configuring network priorities (DSCP marking) for the media traffic.\n *\n * If DSCPControls are not configured for a call the network priority of the traffic for all media kinds will be the default (i.e., \"low\").\n *\n * @public\n * @static\n * @typedef {Object} DSCPControls\n * @memberof call\n * @property {RTCPriorityType} [audioNetworkPriority='low'] The desired network priority for audio traffic (see {@link https://www.w3.org/TR/webrtc-priority/#rtc-priority-type RTCPriorityType Enum} for the list of possible values).\n * @property {RTCPriorityType} [videoNetworkPriority='low'] The desired network priority for video traffic (see {@link https://www.w3.org/TR/webrtc-priority/#rtc-priority-type RTCPriorityType Enum} for the list of possible values).\n * @property {RTCPriorityType} [screenNetworkPriority='low'] The desired network priority for screen share traffic (see {@link https://www.w3.org/TR/webrtc-priority/#rtc-priority-type RTCPriorityType Enum} for the list of possible values).\n */\n\n/**\n * Configuration options for an RTCPeerConnection.\n * It represents an RTCPeerConfiguration dictionary, whose parameters are documented {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection#parameters here}.\n * @public\n * @static\n * @typedef {Object} RTCPeerConnectionConfig\n * @memberof call\n * @param {Array<RTCIceServer>} [iceServers] The list of ICE servers to be used for calls.\n *   The full set of properties defined for an RTCIceServer, are mentioned\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer#properties here}.\n * @param {string} [sdpSemantics='unified-plan'] The sdpSemantics to use (`'unified-plan'` or `'plan-b'`).\n *   As 'plan-b' has become a deprecated option, it will therefore be removed in the future.\n * @param {number} [iceCandidatePoolSize] An unsigned 16-bit integer value which specifies\n *   the size of the prefetched ICE candidate pool. The default value is 0 (meaning no candidate prefetching will occur).\n * @param {string} [iceTransportPolicy] The current ICE transport policy; if the policy isn't specified,\n *   'all' is assumed by default. Possible values are: 'all', 'public', 'relay'.\n * @param {string} [bundlePolicy] For further description on this and other properties,\n *   see {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection#parameters RTCPeerConnection's configuration parameters}.\n */\n\n/**\n * @public\n * @static\n * @typedef {Object} IceServer\n * @memberof call\n * @property {Array<string>|string} urls Either an array of URLs for reaching out several ICE servers or a single URL for reaching one ICE server. See {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer/urls RTCIceServers.urls documentation} to learn more about the actual url format.\n * Starting with Chromium 110, TURN(S) urls must only contain a transport\n * parameter in the query section and STUN urls must not specify any query section.\n * @property {string} [credential] The credential needed by the ICE server.\n * @property {string} [username] The credential needed by the ICE server.\n */\n\n/**\n * This object is provided to the {@link call.IceCollectionCheckFunction IceCollectionCheckFunction}, and contains the\n *  necessary information about the call (i.e., call ID, current call operation), and information about the ongoing ICE collection,\n *  such as the list of all ICE candidates collected so far and the ICE gathering state.\n *\n * @public\n * @static\n * @typedef {Object} IceCollectionInfo\n * @memberof call\n * @property {string} callId The ID of the call.\n * @property {string} callOperation The current operation of the call.\n * @property {string} reason The reason the check function was called. Three possible values:\n *  'NewCandidate' - A new ICE candidate was collected. Note: there may be multiple new ICE candidates collected.\n *  'IceGatheringStateChanged' - The ICE gathering state changed.\n *  'Scheduled' - A scheduled call (for first invocation, and subsequent invocations based on `wait` value returned by {@link call.IceCollectionCheckFunction IceCollectionCheckFunction}.)\n * @property {Array<RTCIceCandidate>} iceCandidates An array of all ICE candidates collected so far.\n * @property {number} iceCollectionDuration The time elapsed since the start of the ICE collection process.\n * @property {string} iceGatheringState The current ICE gathering state.\n *    See {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceGatheringState RTCPeerConnection.iceGatheringState}.\n * @property {Object} rtcPeerConnectionConfig The current configration for the RTCPeerConnection.\n * @property {string} rtcLocalSessionDescription The current local session description set on the peer.\n */\n\n/**\n * The form of the ICE collection check function, the arguments that it receives, and the outputs expected.\n *\n * This function is provided the necessary details of the current WebRTC session and ICE collection\n * ({@link call.IceCollectionInfo IceCollectionInfo}), which it can use to dictate how to proceed with a call.\n *  The function can be invoked for three different reasons:\n *  a new ICE candidate was collected, the ICE gathering state changed, or a scheduled call based on the `wait` time set after\n *  an initial invocation of the function.\n *\n * The function must then return an appropriate result object in the format of {@link call.IceCollectionCheckResult IceCollectionCheckResult}\n *  which will dictate how the call will proceed. An incorrect return object, or result `type`, will cause the call to end with an error.\n *\n * [Default]\n * The default IceCollectionCheckFunction uses the following algorithm to determine if the call can proceed to negotiation:\n * 1. If the `iceGatheringState` is \"complete\" at any stage, then:\n *    - Proceed with the negotiation if any ICE candidates are collected.\n *    - Or, end the call if there are no ICE candidates collected.\n * 2. Otherwise, if before the ideal ICE collection timeout:\n *    - If every media has a relay ICE candidate for every configured TURN server, proceed with negotiation.\n *    - Else, wait until the ideal timeout, or when invoked for another reason.\n * 3. Otherwise, if before the max ICE collection timeout, but after the ideal ICE collection timeout:\n *    - If every media has atleast one relay ICE candidate, proceed with negotiation.\n *    - Else, wait until max timeout, or when invoked for another reason.\n * 4. Otherwise, if we are at, or past, the max ICE collection timeout:\n *    - If there are any ICE candidates collected, proceed with negotiation.\n *    - Else, end the call with an error.\n *\n * The ideal and max timeouts can be configured with the `idealIceCollectionTimeout` and `maxIceCollectionTimeout` properties of\n *  the call config.\n * @public\n * @static\n * @typedef {Function} IceCollectionCheckFunction\n * @memberof call\n * @param {call.IceCollectionInfo} iceCollectionInfo Information about the current status of the ICE candidate collection.\n * @param {Object} iceTimeouts Configurations provided to the SDK for ICE collection timeout boundaries.\n * @param {number} iceTimeouts.iceCollectionIdealTimeout The amount of time to wait for ideal candidates, in\n *      milliseconds.  See {@link config#config.call config.call} for more information.\n * @param {number} iceTimeouts.iceCollectionMaxTimeout The maximum amount of time to wait for ICE collection,\n *      in milliseconds. See {@link config#config.call config.call} for more information.\n * @returns {call.IceCollectionCheckResult} Information on how to proceed with the call and/or ICE collection.\n * @example\n * function isRelayCandidate (candidate) {\n * // NOTE: This would need to be different for Firefox since the `.type` property doesn't exist\n * // and we would need to parse it ourselves in the `.candidate` property.\n *   return candidate.type === 'relay'\n * }\n *\n * function myIceCollectionCheck ({ iceGatheringState, iceCandidates }, iceTimeouts) {\n *   if (iceGatheringState === 'complete') {\n *     if (iceCandidates.some(isRelayCandidate)) {\n *       return { type: 'StartCall' }\n *     } else {\n *       return { type: 'Error', error: new Error('Failed to start call because there is no relay candidates.') }\n *     }\n *   } else {\n *     return { type: 'Wait' }\n *   }\n * }\n */\n\n/**\n * @public\n * @static\n * @typedef {Object} IceCollectionCheckResult\n * @memberof call\n * @property {string} type Indicates how the system should proceed with the call operation / ICE collection. The possible values are:\n *    'StartCall' - instruct the system to start the call with the currently gathered ICE candidates and other information.\n *    'Error' - instruct the system to fail the call with an error. The error to communicate to the user should be specified in the `error` property.\n *    'Wait' - instruct the system to wait for the specified amount of time before triggering a new ICE collection check. The amount\n *        of wait time should be specified in the `wait` property.\n * @property {string} error An error to be sent the user when the `type` of the result is `IceCollectionCheckResultType.Error`\n * @property {number} wait The amount of time (in milliseconds) to wait before triggering a new ICE collection check. This is only\n *    valid if the `type` of result is `IceCollectionCheckResultType.Wait`. If a value is not provided, the ICE collection check function\n *    will only be triggered for new candidates or when the ICE gathering state changes.\n */\n\n/**\n * @public\n * @static\n * @typedef {Object} SdpHandlerInfo\n * @memberof call\n * @property {string} callId The id corresponding to the call for which the handler is being run.\n * @property {RTCSdpType} type The session description's type.\n * @property {string} step The step that will occur after the SDP Handlers are run.\n *    Will be either 'set' (the SDP will be set locally) or 'send' (the SDP will\n *    be sent to the remote endpoint).\n * @property {string} endpoint Which end of the connection created the SDP.\n */\n\n/**\n * The form of an SDP handler function and the expected arguments that it receives.\n * @public\n * @static\n * @typedef {Function} SdpHandlerFunction\n * @memberof call\n * @param {Object} newSdp The SDP so far (could have been modified by previous handlers).\n * @param {call.SdpHandlerInfo} info Additional information that might be useful when making SDP modifications.\n * @param {Object} originalSdp The SDP in its initial state.\n * @returns {Object} The resulting modified SDP based on the changes made by this function.\n */\n\n/**\n * The state representation of a Media object.\n * Media is a collection of Track objects.\n *\n * @public\n * @static\n * @typedef {Object} MediaObject\n * @memberof call\n * @property {string} id The ID of the Media object.\n * @property {boolean} local Indicator on whether this media is local or remote.\n * @property {Array<call.TrackObject>} tracks A list of Track objects that are contained in this Media object.\n */\n\n/**\n * A Track is a stream of audio or video media from a single source.\n * Tracks can be retrieved using the Media module's `getTrackById` API and manipulated with other functions of the Media module.\n *\n * @public\n * @static\n * @typedef {Object} TrackObject\n * @memberof call\n * @property {Array<string>} containers The list of CSS selectors that were used to render this Track.\n * @property {boolean} disabled Indicator of whether this Track is disabled or not. If disabled, it cannot be re-enabled.\n * @property {boolean} isLocal Indicator of whether this Track is a locally created one or is a remote one.\n * @property {string} id The ID of the Track.\n * @property {string} kind The kind of Track this is (audio, video).\n * @property {string} label The label of the device this Track uses.\n * @property {boolean} muted Indicator on whether this Track is muted or not.\n * @property {boolean} sourceMuted Indicator on whether this Track is receiving media from its source or not.\n *    When true, the Track can be considered removed. This indicator is affected by actions outside the\n *    control of the SDK, such as the remote endpoint of a Call stopping to send media for a remote Track,\n *    or the browser temporarily disabling the SDK's access to a local Track's source.\n * @property {string} state The state of this Track. Can be 'live' or 'ended'.\n * @property {string} streamId The ID of the Media Stream that includes this Track.\n */\n\n/**\n * A collection of media devices and their information.\n *\n * @public\n * @static\n * @typedef {Object} DevicesObject\n * @memberof call\n * @property {Array<call.DeviceInfo>} camera A list of camera device information.\n * @property {Array<call.DeviceInfo>} microphone A list of microphone device information.\n * @property {Array<call.DeviceInfo>} speaker A list of speaker device information.\n */\n\n/**\n * Contains information about a device.\n *\n * @public\n * @static\n * @typedef {Object} DeviceInfo\n * @memberof call\n * @property {string} deviceId The ID of the device.\n * @property {string} groupId The group ID of the device. Devices that share a `groupId` belong to the same physical device.\n * @property {string} kind The type of the device (audioinput, audiooutput, videoinput).\n * @property {string} label The name of the device.\n */\n\n/**\n * Custom SIP headers can be used to convey additional information to a SIP endpoint.\n *\n * These parameters must be configured on the server prior to making a request, otherwise the request will fail when trying to include the parameters.\n *\n * These parameters can be specified with the {@link call.make} and {@link call.answer} APIs.\n * They can also be set after a Call is established using the {@link call.setCustomParameters} API, and sent using the {@link call.sendCustomParameters} API.\n *\n * Custom headers may be received anytime throughout the duration a call. A remote endpoint may send custom headers when starting a call,\n *  answering a call, or during call updates such as hold/unhold and addition/removal of media in the call.\n *  When these custom headers are received, the SDK will emit a {@link call.event:call:customParameters call:customParameters} event\n *  which will contain the custom parameters that were received.\n *\n * A Call's custom parameters are stored on the Call's {@link call.CallObject CallObject},\n *  which can be retrieved using the {@link call.getById} or\n *  {@link call.getAll} APIs. These are the parameters that will be sent to the remote\n *  endpoint of the Call. Parameters received from a Call are not stored as\n *  part of the CallObject and are only provided via the {@link call.event:call:customParameters call:customParameters} event.\n *\n * @public\n * @static\n * @module CustomParameter\n * @typedef {Object} CustomParameter\n * @memberof call\n * @requires link_call\n * @requires callMe\n * @property {string} name - The name of the custom parameter\n * @property {string} value - The value of the custom parameter\n * @example\n * // Specify custom parameters when making a call.\n * client.call.make(destination, mediaConstraints,\n *  {\n *    customParameters: [\n *      {\n *        name: 'X-GPS',\n *        value: '42.686032,23.344565'\n *      }\n *    ]\n *  }\n * )\n */\n\n/**\n * Custom SIP bodies can be used to convey additional information to a SIP endpoint.\n *\n * The appropriate configuration for sending custom bodies must be enabled on the server prior to making call requests,\n *  otherwise the requests will fail when trying to include the bodies.\n *\n * The `contentType` of the custom body should be compliant with RFC 2045, RFC 3261 (and their updated versions),\n *  and the `contentDisposition` should be compliant with RFC 2183, RFC 3204, and RFC 3261 (and their updated versions).\n *\n * These custom bodies can be specified with the {@link call.make} and {@link call.answer} APIs.\n *  They can also be set after a Call is established using the {@link call.setCustomParameters} API.\n *\n * A Call's custom bodies are stored on the Call's {@link call.CallObject CallObject},\n *  which can be retrieved using the {@link call.getById} or\n *  {@link call.getAll} APIs. These custom bodies will be sent to the remote endpoint of the Call for all subsequent\n *  basic midcall operations, such as hold/unhold and add/remove media.\n *\n * @private\n * @static\n * @module CustomBody\n * @typedef {Object} CustomBody\n * @memberof call\n * @requires link_call\n * @requires callMe\n * @property {string} contentType - The media type of the message body.\n * @property {string} contentDisposition - How the message body is to be interpreted.\n * @property {string} body - The message body.\n * @example\n * // Specify custom bodies when making a call.\n * client.call.make(destination, mediaConstraints,\n *  {\n *    customBodies: [\n *      {\n *        contentType: 'text/plain;charset=UTF-8',\n *        contentDisposition: 'render;HANDLING=OPTIONAL',\n *        body: 'Geo location information is sent.'\n *      }\n *    ]\n *  }\n * )\n */\n\n/**\n * Top-level Call API factory function.\n * @method createAPI\n * @param  {Object} container The bottle container.\n * @return {Object} API.\n */\nexport default function createAPI (container) {\n  const api = {\n    ...establishApis(container),\n    ...midcallApis(container),\n    ...complexApis(container),\n    ...miscApis(container),\n    ...constantsApis(container)\n  }\n\n  return { call: api }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { isEmpty, isPlainObject } from 'lodash/fp'\n\n/**\n * Helper function for formatting call actions.\n * @method callActionHelper\n * @param  {string} type Action type.\n * @param  {string} id Id of the call being acted on.\n * @param  {Object} [payload={}]\n * @param  {BasicError} [payload.error]\n * @param  {Object} [meta={}]\n * @return {Object} An action.\n */\nexport function callActionHelper (type, id, payload = {}, meta = {}) {\n  /**\n   * Call action format.\n   * Call actions are not FSA-compliant because there are cases where we need\n   *    to provide useful info (for the SDK) and an error object (for the app).\n   *    FSA would require the error object to be the entirety of the payload.\n   * @type {Object}\n   * {\n   *   type,\n   *   payload: {\n   *    ...usefulInfo,\n   *    errorObject\n   *   },\n   *   error,\n   *   meta\n   * }\n   */\n  const action = {\n    type,\n    payload: {\n      ...payload,\n      id\n    }\n  }\n  // Only have meta and error properties on the action if they're needed.\n  if (!isEmpty(meta)) {\n    action.meta = meta\n  }\n  if (payload.error) {\n    action.error = true\n  }\n  return action\n}\n\nexport function makeCall (id, options) {\n  return callActionHelper(actionTypes.MAKE_CALL, id, options)\n}\n\nexport function sessionCreated (id, params) {\n  return callActionHelper(actionTypes.SESSION_CREATED, id, params)\n}\n\nexport function pendingMakeCall (id, options) {\n  return callActionHelper(actionTypes.PENDING_MAKE_CALL, id, options)\n}\n\nexport function makeCallFinish (id, params) {\n  return callActionHelper(actionTypes.MAKE_CALL_FINISH, id, params)\n}\n\nexport function makeAnonymousCall (id, params) {\n  return {\n    type: actionTypes.MAKE_ANONYMOUS_CALL,\n    payload: {\n      id,\n      callee: params.callee,\n      credentials: params.credentials,\n      mediaConstraints: params.mediaConstraints,\n      callOptions: params.callOptions\n    }\n  }\n}\n\nexport function makeAnonymousCallFinish (id, params) {\n  return callActionHelper(actionTypes.MAKE_ANONYMOUS_CALL_FINISH, id, params)\n}\n\nexport function callIncoming (id, params) {\n  return callActionHelper(actionTypes.CALL_INCOMING, id, params)\n}\n\nexport function sendRingingFeedback (id) {\n  return callActionHelper(actionTypes.SEND_RINGING_FEEDBACK, id)\n}\n\nexport function sendRingingFeedbackFinish (id, params) {\n  return callActionHelper(actionTypes.SEND_RINGING_FEEDBACK_FINISH, id, params)\n}\n\nexport function callRinging (id, params) {\n  return callActionHelper(actionTypes.CALL_RINGING, id, params)\n}\n\nexport function sessionProgress (id, params) {\n  return callActionHelper(actionTypes.SESSION_PROGRESS, id, params)\n}\n\nexport function callCancelled (id, params) {\n  return callActionHelper(actionTypes.CALL_CANCELLED, id, params)\n}\n\nexport function answerCall (id, options) {\n  return callActionHelper(actionTypes.ANSWER_CALL, id, options)\n}\n\nexport function answerCallFinish (id, params, meta) {\n  return callActionHelper(actionTypes.ANSWER_CALL_FINISH, id, params, meta)\n}\n\nexport function rejectCall (id, options) {\n  return callActionHelper(actionTypes.REJECT_CALL, id, options)\n}\n\nexport function rejectCallFinish (id, params) {\n  return callActionHelper(actionTypes.REJECT_CALL_FINISH, id, params)\n}\n\nexport function callAccepted (id, params) {\n  return callActionHelper(actionTypes.CALL_ACCEPTED, id, params)\n}\n\nexport function ignoreCall (id, params) {\n  return callActionHelper(actionTypes.IGNORE_CALL, id, params)\n}\n\nexport function ignoreCallFinish (id, params) {\n  return callActionHelper(actionTypes.IGNORE_CALL_FINISH, id, params)\n}\n\nexport function endCall (id, params) {\n  return callActionHelper(actionTypes.END_CALL, id, params)\n}\n\nexport function endCallFinish (id, params) {\n  return callActionHelper(actionTypes.END_CALL_FINISH, id, params)\n}\n\nexport function holdCall (id, options) {\n  return callActionHelper(actionTypes.CALL_HOLD, id, options)\n}\n\nexport function holdCallFinish (id, params) {\n  return callActionHelper(actionTypes.CALL_HOLD_FINISH, id, params)\n}\n\nexport function unholdCall (id, options) {\n  return callActionHelper(actionTypes.CALL_UNHOLD, id, options)\n}\n\nexport function unholdCallFinish (id, params) {\n  return callActionHelper(actionTypes.CALL_UNHOLD_FINISH, id, params)\n}\n\nexport function setCustomParameters (id, customOptions) {\n  const action = {\n    type: actionTypes.SET_CUSTOM_PARAMETERS,\n    payload: {\n      id,\n      // customOptions can either be an array (i.e., just the headers) or an object (i.e., headers and body)\n      customParameters: isPlainObject(customOptions) ? customOptions.customParameters : customOptions,\n      customBodies: isPlainObject(customOptions) ? customOptions.customBodies : undefined\n    }\n  }\n  return action\n}\n\nexport function sendCustomParameters (id, options) {\n  return callActionHelper(actionTypes.SEND_CUSTOM_PARAMETERS, id, options)\n}\n\nexport function sendCustomParametersFinish (id, params) {\n  return callActionHelper(actionTypes.SEND_CUSTOM_PARAMETERS_FINISH, id, params)\n}\n\nexport function customParametersReceived (id, params) {\n  return callActionHelper(actionTypes.CUSTOM_PARAMETERS_RECEIVED, id, params)\n}\n\nexport function addMedia (id, params) {\n  return callActionHelper(actionTypes.ADD_MEDIA, id, params)\n}\n\nexport function addMediaFinish (id, params) {\n  return callActionHelper(actionTypes.ADD_MEDIA_FINISH, id, params)\n}\n\nexport function addBasicMedia (id, params) {\n  return callActionHelper(actionTypes.ADD_BASIC_MEDIA, id, params)\n}\n\nexport function removeMedia (id, params) {\n  return callActionHelper(actionTypes.REMOVE_MEDIA, id, params)\n}\n\nexport function removeMediaFinish (id, params) {\n  return callActionHelper(actionTypes.REMOVE_MEDIA_FINISH, id, params)\n}\n\nexport function removeBasicMedia (id, params) {\n  return callActionHelper(actionTypes.REMOVE_BASIC_MEDIA, id, params)\n}\n\nexport function sendDTMF (id, params) {\n  return callActionHelper(actionTypes.SEND_DTMF, id, params)\n}\n\nexport function sendDTMFFinish (id, params) {\n  return callActionHelper(actionTypes.SEND_DTMF_FINISH, id, params)\n}\n\nexport function getStats (id, params, deferred) {\n  const action = {\n    type: actionTypes.GET_STATS,\n    payload: {\n      ...params,\n      id\n    },\n    meta: {\n      deferred\n    }\n  }\n\n  return action\n}\n\nexport function getStatsFinish (id, params) {\n  return callActionHelper(actionTypes.GET_STATS_FINISH, id, params)\n}\n\nexport function forwardCall (id, params) {\n  return callActionHelper(actionTypes.FORWARD_CALL, id, params)\n}\n\nexport function forwardCallFinish (id, params) {\n  return callActionHelper(actionTypes.FORWARD_CALL_FINISH, id, params)\n}\n\nexport function consultativeTransfer (id, params) {\n  return callActionHelper(actionTypes.CONSULTATIVE_TRANSFER, id, params)\n}\n\nexport function pendingConsultativeTransfer (id, params) {\n  return callActionHelper(actionTypes.PENDING_CONSULTATIVE_TRANSFER, id, params)\n}\n\nexport function consultativeTransferFinish (id, params) {\n  return callActionHelper(actionTypes.CONSULTATIVE_TRANSFER_FINISH, id, params)\n}\n\nexport function directTransfer (id, params) {\n  return callActionHelper(actionTypes.DIRECT_TRANSFER, id, params)\n}\n\nexport function directTransferFinish (id, params) {\n  return callActionHelper(actionTypes.DIRECT_TRANSFER_FINISH, id, params)\n}\n\nexport function join (id, params) {\n  return callActionHelper(actionTypes.JOIN, id, params)\n}\n\nexport function joinStart (id, params) {\n  return callActionHelper(actionTypes.JOIN_START, id, params)\n}\n\nexport function pendingJoin (id, params) {\n  return callActionHelper(actionTypes.PENDING_JOIN, id, params)\n}\n\nexport function joinFinish (id, params) {\n  return callActionHelper(actionTypes.JOIN_FINISH, id, params)\n}\n\nexport function replaceTrack (id, params) {\n  return callActionHelper(actionTypes.REPLACE_TRACK, id, params)\n}\n\nexport function replaceTrackFinish (id, params) {\n  return callActionHelper(actionTypes.REPLACE_TRACK_FINISH, id, params)\n}\n\nexport function pendingOperation (id, params) {\n  return callActionHelper(actionTypes.PENDING_OPERATION, id, params)\n}\n\nexport function getAvailableCodecs (params, deferred) {\n  const action = {\n    type: actionTypes.GET_AVAILABLE_CODECS,\n    payload: {\n      ...params\n    },\n    meta: {\n      deferred\n    }\n  }\n  return action\n}\n\nexport function availableCodecsRetrieved (params) {\n  return callActionHelper(actionTypes.AVAILABLE_CODECS_RETRIEVED, undefined, params)\n}\n\n/*\n * Remote operations.\n */\n\nexport function remoteHoldFinish (id, params) {\n  return callActionHelper(actionTypes.CALL_REMOTE_HOLD_FINISH, id, params)\n}\n\nexport function remoteUnholdFinish (id, params) {\n  return callActionHelper(actionTypes.CALL_REMOTE_UNHOLD_FINISH, id, params)\n}\n\nexport function remoteAddMediaFinish (id, params) {\n  return callActionHelper(actionTypes.REMOTE_ADD_MEDIA_FINISH, id, params)\n}\n\nexport function remoteRemoveMediaFinish (id, params) {\n  return callActionHelper(actionTypes.REMOTE_REMOVE_MEDIA_FINISH, id, params)\n}\n\nexport function remoteStartMohFinish (id, params) {\n  return callActionHelper(actionTypes.REMOTE_START_MOH_FINISH, id, params)\n}\n\nexport function remoteStopMohFinish (id, params) {\n  return callActionHelper(actionTypes.REMOTE_STOP_MOH_FINISH, id, params)\n}\n\nexport function remoteSlowStart (id, params) {\n  return callActionHelper(actionTypes.REMOTE_SLOW_START, id, params)\n}\n\nexport function restartMedia (id, params) {\n  return callActionHelper(actionTypes.MEDIA_RESTART, id, params)\n}\n\nexport function restartMediaFinish (id, params) {\n  return callActionHelper(actionTypes.MEDIA_RESTART_FINISH, id, params)\n}\n\nexport function resync (id, params) {\n  return callActionHelper(actionTypes.RESYNC, id, params)\n}\n\nexport function resyncFinish (id, params) {\n  return callActionHelper(actionTypes.RESYNC_FINISH, id, params)\n}\n\n/**\n * API action to trigger the \"play audio\" saga.\n * @method playAudio\n * @param {string} id Call ID.\n * @param {string} filePath\n */\nexport function playAudio (id, filePath) {\n  return {\n    type: actionTypes.PLAY_AUDIO,\n    payload: { id, filePath }\n  }\n}\n\n/**\n * Saga action to signify the \"playAudioFile\" operation is midway through.\n * @method playAudioPending\n * @param {string} id Call ID.\n */\nexport function playAudioPending (id) {\n  return {\n    type: actionTypes.PENDING_PLAY_AUDIO,\n    payload: { id }\n  }\n}\n\n/**\n * Saga action to signify \"saga complete\".\n * @method playAudioFinish\n * @param {string} id Call ID.\n * @param {BasicError} [error] If the operation failed, the error.\n */\nexport function playAudioFinish (id, error) {\n  return {\n    type: actionTypes.PLAY_AUDIO_FINISH,\n    payload: {\n      id,\n      error\n    },\n    error: error !== undefined\n  }\n}\n\n// Generic action.\nexport function updateCall (id, params) {\n  return callActionHelper(actionTypes.UPDATE_CALL, id, params)\n}\n\n/**\n * Action to signify the state of an operation has changed.\n * @method operationUpdate\n * @param {string} id\n * @param {string} operation\n * @param {boolean} isLocal\n * @param {Object} state\n * @param {string} transition\n * @param {Object} operationData\n * @param {string} [eventId]\n */\nexport function operationUpdate (id, operation, isLocal, { transition, operationData, eventId }) {\n  return {\n    type: actionTypes.OPERATION_UPDATE,\n    payload: {\n      id,\n      operation,\n      transition,\n      operationData,\n      eventId,\n      isLocal\n    }\n  }\n}\n","import { cloneDeep } from 'lodash/fp'\n\n// Auth selectors for backwards compatibility.\nimport { getSubscriptionInfo as getAuthSubscriptionInfo } from '../../auth/interface/selectors'\n\n// Utilities.\nimport { mergeValues } from '../../common/utils'\n\n/**\n * Retrieves the config options provided by the subscription plugin.\n * NOTE: This is only used by CPaaS currently and won't work with\n * the old auth/subscription config on link.  It will work with the new\n * auth/subscription config on link.\n * @method getSubscriptionConfig\n * @return {Object}\n */\nexport function getSubscriptionConfig (state) {\n  return cloneDeep(state.config.subscription)\n}\n\n/**\n * Retrieves the maximum number of times this client will attempt to subscribe, while getting a\n * 'Service Unavailable' response from backend.\n * @method getServiceUnavailableMaxRetries\n * @param {Object} state Current state object.\n * @return {number}\n */\nexport function getServiceUnavailableMaxRetries (state) {\n  return state.config.subscription.serviceUnavailableMaxRetries\n}\n\n/**\n * Retrieves the list of services that plugins have registered for.\n * @method getRegisteredServices\n * @return {Array}\n */\nexport function getRegisteredServices (state) {\n  return cloneDeep(state.subscription.registeredServices)\n}\n\n/**\n * Retrieves the open notifications channels' info and their active subscriptions.\n * @method getNotificationChannels\n * @return {Object}\n */\n// TODO: Rename this selector. It gets more than notification channels.\nexport function getNotificationChannels (state) {\n  return cloneDeep({\n    notificationChannels: state.subscription.notificationChannels,\n    subscriptions: state.subscription.subscriptions\n  })\n}\n\n/**\n * Retrieve the list of services with current subscriptions.\n * @method getSubscribedServices\n * @param {string} type the type of subscription we want to get specifically\n * @return {Array}\n */\nexport function getSubscribedServices (state, type) {\n  const info = getSubscriptionInfo(state)\n  // For backwards compatibility, make sure that this is an array. It isn't when\n  //    the old Auth plugin is being used (eg. Link v3.X).\n  let subscriptions = Array.isArray(info) ? info : [info]\n\n  // If a type was specified, filter out subscriptions of other types.\n  if (type) {\n    subscriptions = subscriptions.filter(subscription => subscription.channelType === type)\n  }\n\n  // Massage the subscriptions to be a list of service names.\n\n  // For Link, subscription.service is an array of strings (all services).\n  // For CPaaS, subscription.service is a string (single service).\n  // Process the subscriptions in a way that will provide an array of strings in\n  //    both cases.\n  return subscriptions.reduce((acc, currentSub) => {\n    return acc.concat(currentSub.service)\n  }, [])\n}\n\n/**\n * Retrieves the subscription information.\n * @method getSubscriptionInfo\n * @return {Object}\n */\nexport function getSubscriptionInfo (state) {\n  if (state.subscription) {\n    return cloneDeep(state.subscription.subscriptions)\n  } else {\n    // For backwards compatibility, also check if the authentication substate\n    //    has subscription info. It will have the info when the oldAuth plugin\n    //    is being used (eg. Link v3.X).\n    // Warning: This returns an object, unlike the above which returns an array.\n    return cloneDeep(getAuthSubscriptionInfo(state))\n  }\n}\n\n/**\n * Retrieve the list of subscriptions matching a given channel type and service name.\n * @method getSubscriptions\n * @param {string} service the name of the service we want to get specifically (e.g. smsinbound)\n * @param {string} type the type of communication channel we want to get specifically (e.g. websocket)\n * @return {Array}\n */\nexport function getSubscriptions (state, service, type) {\n  let subscriptions = state.subscription.subscriptions\n  subscriptions = subscriptions.filter(\n    subscription => subscription.service === service && subscription.channelType === type\n  )\n  return cloneDeep(subscriptions)\n}\n\n/**\n * Retrieve the subscription expiry time from config.\n * @method getSubscriptionExpiry\n * @return {number}\n */\nexport function getSubscriptionExpiry (state) {\n  const subConfig = state.config.subscription\n  const authConfig = state.config.authentication\n\n  // In order to maintain backwards compatibility with the auth plugin config\n  // we need to first check if this setting is provided in the authentication plugin\n  // config, and if not use the one from subscription plugin.  We need to check\n  // authentication config first because if no value is provided in the subscription\n  // plugin, a default value will be used and we don't want that if one is provided in\n  // the authentication plugin.\n  const expires =\n    authConfig.subscription && authConfig.subscription.expires ? authConfig.subscription.expires : subConfig.expires\n\n  return expires\n}\n\n/**\n * Retrieve the websocket info from config. We merge the websocket config\n * from auth plugin with the one from subscription plugin giving precedence to\n * the websocket config in auth plugin since we need to maintain backwards compatibility\n * with the old format config.\n * @method getSubscriptionExpiry\n * @return {number}\n */\nexport function getWebsocketConfig (state) {\n  const subConfig = state.config.subscription\n  const authConfig = state.config.authentication\n\n  // In order to support legacy configurations, we need to do the following:\n  // Take the values (including defaults) from subscription config.  Merge into\n  // that any client provided values from the authentication config.  All keys existing\n  // in authentication config will overwrite those from subscription config.  However,\n  // since defaults are not set for websocket in the authentication plugin, only client\n  // provided values for websocket will be used from authentication config and defaults\n  // will come from the subscription plugin.\n  return mergeValues(subConfig.websocket, authConfig.websocket)\n}\n\n/**\n * Gets the websocket id being used by a current subscription.\n * @method getWebsocketId\n * @param {Object} state   Redux state.\n * @param {string} service The service name to get the websocket ID from.\n * @returns {string|undefiend} The websocket ID if it exists.\n */\nexport function getWebsocketId (state, service) {\n  let subscriptions = getSubscriptionInfo(state)\n  // For backwards compatibility, make sure that this is an array. It isn't for\n  //    CallMe since it uses the old Auth pluginb style.\n  subscriptions = Array.isArray(subscriptions) ? subscriptions : [subscriptions]\n\n  let sub\n  if (service) {\n    // Find the subscription for this service.\n    sub = subscriptions.find(sub => sub.service === 'service' || sub.service.includes(service))\n  } else {\n    // Just get the first subscription.\n    sub = subscriptions[0]\n  }\n\n  if (sub && typeof sub.notificationChannel === 'string') {\n    // Get anything after /websocket/ in the string. The ID should be after it.\n    const websocketId = sub.notificationChannel.split('/websocket/')[1]\n    return websocketId\n  } else {\n    // There is no subscription/websocket for this service.\n  }\n}\n\n/*\n * Return the pending operation if one is pending.\n * @method getPendingOperation\n * @return {string}\n */\nexport function getPendingOperation (state) {\n  return state.subscription.pendingOperation\n}\n","/**\n * Organize the return value of `mediaOps.createLocal` into lists of Tracks for\n *    each media kind.\n *\n * TODO: Simplify `mediaOps.createLocal` so we don't need a helper for it...\n * @method organizeTracks\n * @async\n * @param {Array<Object>} mediaObj\n * @param {string} mediaObj[].type The kind of media.\n * @param {Object} mediaObj[].media A Webrtc-Stack Media object.\n * @return {Object} tracks\n * @return {Array<Track>} tracks.audio The list of all audio Track objects.\n * @return {Array<Track>} tracks.video The list of all video Track objects.\n * @return {Array<Track>} tracks.screen The list of all screen Track objects.\n * @return {Array<Track>} tracks.all The list of all Track objects.\n * @example\n * const medias = [{ type: 'audio', media: media1 }, { type: 'video', media: media2 }]\n * const tracks = await organizeTracks(medias)\n * // tracks = {\n * //   audio: [<tracks of media1>],\n * //   video: [<tracks of media2>],\n * //   screen: [],\n * //   all: [<tracks of media1 and media2>]\n * // }\n */\nexport async function organizeTracks (medias = []) {\n  const trackLists = {\n    audio: [],\n    video: [],\n    screen: [],\n    all: []\n  }\n\n  await Promise.all(\n    medias.map(async obj => {\n      if (['audio', 'video', 'screen'].includes(obj.type)) {\n        // This is async when in Proxy mode, so use await (and the Promise.all).\n        const tracks = await obj.media.getTracks()\n        // Add the tracks of the Media object into the appropriate track list.\n        trackLists[obj.type] = trackLists[obj.type].concat(tracks)\n        // Also add the tracks to the \"all\" list.\n        trackLists.all = trackLists.all.concat(tracks)\n      } else {\n        // Invalid media kind was provided; ignore it.\n      }\n    })\n  )\n\n  return trackLists\n}\n","// Call plugin\nimport { CALL_STATES } from '../../../constants'\nimport { callActions } from '../../../interface/actions'\nimport { CALL_STATE_CHANGE } from '../../../interface/eventTypes'\nimport { getCallById } from '../../../interface/selectors'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../../errors'\n\n// Libraries\nimport { getBrowserDetails } from 'kandy-webrtc'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, mediaConstraints, options) {\n  const call = getCallById(state, callId)\n  /*\n   * `addMedia` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Connected` state.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (call.state !== CALL_STATES.CONNECTED) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Invalid call state: ${call.state}. It should be: ${CALL_STATES.CONNECTED}.`\n    })\n  }\n}\n\n/**\n * Bottle wrapper for addMedia call operation.\n * @return {Function}\n */\nexport default function addMediaOperation (container) {\n  const { context, CallRequests, Callstack, CallstackWebrtc, emitEvent, logManager } = container\n\n  /**\n   * Adds media to the call\n   *\n   * This function performs the webRTC and signaling operations to\n   *    update local and server sessions of a call.\n   * Assumptions:\n   *    1. Validate that the call state is \"Connected\".\n   *        - The call is connected.\n   * Responsibilities:\n   *    1. Perform webRTC operations to add media.\n   *    2. Update the backend with the new state.\n   *    3. Update local state, using Redux\n   * @method addMedia\n   * @param {Object}   callId The ID of the call.\n   * @param {Object}   mediaConstraints The constraints for the new media.\n   * @param {Object}   options Extra options for the media.\n   * @param {Object}   options.bandwidth Bandwidth options.\n   * @param {Object}   options.dscpControls DSCP controls.\n   */\n  async function addMedia (callId, mediaConstraints, options) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Adding media to call.')\n\n    const targetCall = getCallById(context.getState(), callId)\n    const { bandwidth, dscpControls } = options\n\n    // Get some call data.\n    const {\n      webrtcSessionId,\n      wrtcsSessionId,\n      bandwidth: callBandwidth,\n      isAnonymous,\n      account,\n      customParameters,\n      customBodies\n    } = targetCall\n\n    const finalBandwidth = {\n      audio: bandwidth && bandwidth.audio ? bandwidth.audio : callBandwidth.audio,\n      video: bandwidth && bandwidth.video ? bandwidth.video : callBandwidth.video\n    }\n    // Create media and add tracks using webRTC\n    const { sdp, medias } = await Callstack.utils.webrtcAddMedia(mediaConstraints, {\n      sessionId: webrtcSessionId,\n      bandwidth: finalBandwidth,\n      dscpControls\n    })\n\n    const callInfo = {\n      wrtcsSessionId,\n      offer: sdp,\n      isAnonymous,\n      account,\n      customParameters,\n      customBodies\n    }\n\n    // Perform signalling to add media\n    try {\n      await CallRequests.updateSession(callInfo)\n    } catch (responseError) {\n      log.info('Failed to add media to call.')\n      // Rollback is not supported on safari or for a plan other than unified-plan\n      let rollbackErr\n      try {\n        await Callstack.utils.rollbackAddMedia(webrtcSessionId, medias)\n      } catch (rollbackError) {\n        log.debug('Automatic add media rollback failed:', rollbackError)\n        // TODO:\n        //  1 - Don't handle the error in the catch since we do the chrome behaviour only after rollback operation\n        //  2 - Check if chrome still has a rollback issue\n        // Ideally, we would do the chrome behaviour checks before we even attempt the rollback, but for now we\n        // close the call on chrome after doing the rollback regardless of success/failure\n        rollbackErr = rollbackError\n      }\n\n      const browser = getBrowserDetails().browser\n      // There is an issue on Chrome where the remote track is removed from the call when the SDP rolls back\n      //  leaving the call in an awkward state.\n      if (rollbackErr || browser === 'chrome') {\n        // Although Safari can automatically rollback and set another local offer while in `have-local-offer`\n        //  signalling state, Safari does not perform an automatic rollback when a remote offer is\n        //  received while in that state. An InvalidStateError is thrown instead and call is in an awkward state.\n        if (browser === 'safari' || browser === 'chrome') {\n          log.info('Ending call due to unrecoverable state after call add media failure.')\n          // Hangup the call from WebRTC perspective\n          await CallstackWebrtc.closeCall(webrtcSessionId)\n\n          // Cleanup Redux state by sending END_CALL_FINISH action\n          context.dispatch(\n            callActions.endCallFinish(callId, {\n              isLocal: true,\n              transition: { reasonText: 'Call has ended due to call add media failure.' }\n            })\n          )\n\n          emitEvent(CALL_STATE_CHANGE, {\n            callId,\n            previous: {\n              state: targetCall.state,\n              localHold: targetCall.localHold,\n              remoteHold: targetCall.remoteHold\n            },\n            error: responseError\n          })\n          throw responseError\n        }\n        log.info('Unable to reset state after add media operation failure, future operations may not work as intended.')\n      }\n\n      throw responseError\n    }\n\n    let tracks = []\n    medias.forEach(media => {\n      tracks = tracks.concat(media.tracks.map(track => track.id))\n    })\n\n    log.info('Finished local portion of adding media. Waiting on remote response.')\n    // Return the operation data so the CallManager can handle it.\n    return {\n      operationData: {\n        local: true,\n        mediaIds: medias.map(media => media.id),\n        tracks,\n        bandwidth: finalBandwidth\n      }\n    }\n  }\n\n  return addMedia\n}\n","// Libraries\nimport sdpTransform from 'sdp-transform'\n\n/**\n * Helper function that returns a boolean if media is active or not.\n * @method hasMediaFlowing\n * @param  {string} sdp String representation of a calls sdp.\n */\nexport default function hasMediaFlowing (sdp) {\n  const objectSdp = sdpTransform.parse(sdp)\n\n  // Check that video directions (if there are any) indicate a \"hold\" scenario.\n  const isVideoInactive = objectSdp.media\n    .filter(item => item.type === 'video')\n    .every(media => media && media.direction === 'inactive')\n\n  // Check that audio directions (if there are any) indicate a \"hold\" scenario.\n  const isAudioInactive = objectSdp.media\n    .filter(item => item.type === 'audio')\n    // Special case: In music on hold scenarios, audio may be `sendonly`\n    //    so that the held user can still receive the \"hold music\".\n    .every(media => media && ['inactive', 'sendonly'].includes(media.direction))\n\n  return !isVideoInactive || !isAudioInactive\n}\n","// Library.\nimport sdpTransform from 'sdp-transform'\nimport { compose, join, map, trimCharsStart, trimEnd } from 'lodash/fp'\n\n// Refers to functions in src/callstack/sdp/pipeline.js\nexport const sdpToYaml = info => originalSdp => newSdp => results => finalDiffObject =>\n  `\n---\nsdp-pipeline-run:\n  info:\n    callId: ${info.callId}\n    type: ${info.type}\n    step: ${info.step}\n    endpoint: ${info.endpoint}\n    bandwidth: ${displayBandwidth(info.bandwidth)}\n  sdp: |\n    ${displaySdp(fourSpaces)(originalSdp)}\n  handlers:\n    ${displayHandlers(results)}\n  final:\n    diff: |\n      ${displayDiffs(sixSpaces)(finalDiffObject.text)}\n    sdp: |\n      ${finalDiffObject.changed ? displaySdp(sixSpaces)(newSdp) : 'No changes to the SDP'}\n...\n`\n\n// If the function is anonymous give the function body as the 'name'\nexport const formattedFunctionName = handler =>\n  handler.name ||\n  handler\n    .toString()\n    .slice(0, 120)\n    .replace(/\\n/g, '')\n\n// Display helper functions\nconst displayBandwidth = bandwidth =>\n  bandwidth &&\n  JSON.stringify(bandwidth, null, ' ')\n    .replace(/\\n/g, ' ')\n    .replace(/ {2}/g, ' ')\n\nconst displaySdp = indentation => sdp =>\n  sdpTransform\n    .write(sdp)\n    .replace(/\\n/g, `\\n${indentation}`)\n    .trimEnd()\n\nconst handlerToYaml = ({ name, diff }) =>\n  // replacing newlines in case the name is the function.\n  `${fourSpaces}- name: ${name.replace(/\\n/g, '')}\n      diff: |\n        ${displayDiffs(eightSpaces)(diff)}\n`\n\nconst displayHandlers = compose([trimEnd, trimCharsStart(' \\n'), join(''), map(handlerToYaml)])\n\nconst displayDiffs = indentation => diffed => (diffed ? diffed.replace(/\\n/g, `\\n${indentation}`) : 'No changes found')\n\n// Space constants\nconst fourSpaces = '    '\nconst sixSpaces = '      '\nconst eightSpaces = '        '\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","import { OPERATIONS } from '../../interface/constants'\n/*\n * This is a mapping between the operation constants and the names used for the\n *    operations in various places. This only exists because the Callstack is\n *    inconsistent with the names/casing it uses in various places.\n * TODO: Technical-debt to clean this up.\n */\nexport const operationMap = {\n  // Local operations.\n  [OPERATIONS.MAKE]: 'make',\n  [OPERATIONS.MAKE_ANONYMOUS]: 'makeAnonymousCall',\n  [OPERATIONS.ANSWER]: 'answer',\n  SLOW_ANSWER: 'answerSlow',\n  [OPERATIONS.REJECT]: 'reject',\n  [OPERATIONS.IGNORE]: 'ignore',\n  [OPERATIONS.FORWARD_CALL]: 'forward',\n  [OPERATIONS.END]: 'end',\n  [OPERATIONS.DIRECT_TRANSFER]: 'directTransfer',\n  [OPERATIONS.CONSULTATIVE_TRANSFER]: 'consultativeTransfer',\n  [OPERATIONS.JOIN]: 'join',\n  [OPERATIONS.HOLD]: 'hold',\n  [OPERATIONS.UNHOLD]: 'unhold',\n  [OPERATIONS.ADD_MEDIA]: 'addMedia',\n  [OPERATIONS.REMOVE_MEDIA]: 'removeMedia',\n  [OPERATIONS.ADD_BASIC_MEDIA]: 'addBasicMedia',\n  [OPERATIONS.REMOVE_BASIC_MEDIA]: 'removeBasicMedia',\n  [OPERATIONS.REPLACE_TRACK]: 'replaceTrack',\n  [OPERATIONS.MEDIA_RESTART]: 'iceRestart',\n  [OPERATIONS.RESYNC]: 'resyncCallState',\n  [OPERATIONS.PLAY_AUDIO]: 'playAudioFile',\n  [OPERATIONS.SEND_RINGING_FEEDBACK]: 'sendRingingFeedback',\n  [OPERATIONS.SEND_CUSTOM_PARAMETERS]: 'sendCustomParameters',\n  [OPERATIONS.SEND_DTMF]: 'sendDtmf',\n  [OPERATIONS.GET_STATS]: 'getStats',\n  [OPERATIONS.GET_AVAILABLE_CODECS]: 'getAvailableCodecs'\n}\n\n/*\n * List of Callstack notification handlers.\n */\nexport const notificationMap = {\n  CALL_STATUS_ENDED: 'callStatusUpdateEnded',\n  CALL_CANCELLED: 'callCancelled',\n  CALL_STATUS_RINGING: 'callStatusUpdateRinging',\n  CALL_STATUS_FAILED: 'callStatusUpdateFailed',\n  RECEIVE_EARLY_MEDIA: 'receiveEarlyMedia',\n  SESSION_STATUS_ENDED: 'sessionStatusUpdateEnded'\n}\n","import { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves the notifications state.\n * @method getNotificationsInfo\n * @param  {String} [channel] - Specific notification channel information to retrieve.\n * @return {Object}\n */\nexport function getNotificationsInfo (state, channel = undefined) {\n  if (channel) {\n    return state.notifications[channel]\n  } else {\n    return state.notifications\n  }\n}\n\n/**\n * Retrieves notification config.\n * @method getNotificationConfig\n * @return {Object}\n */\nexport function getNotificationConfig (state) {\n  return cloneDeep(state.config.notifications)\n}\n","// Request\nimport request from '../../request/effects'\n// Logs\nimport { logManager } from '../../logs'\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Registers a device token with On-Prem services.\n * @method pushNotificationsRegistration\n * @param  {Object} connection - Information for formatting the request.\n * @param  {Object} options\n * @param  {string[]} options.services - Push service to register to; either 'google' or 'apple'.\n * @param {string} options.pushProvider - The push provider, can be either 'apple' or 'google'.\n * @param  {string} options.bundleId - The bundle id to use for registration.\n * @param  {string} options.deviceToken\n * @param {string} options.voipDeviceToken - Token for call related service.\n * @param {string} options.standardDeviceToken - Token for non-call related service.\n * @param  {string} options.clientCorrelator - Unique identifier for a client device.\n * @param {string} options.realm - The realm used by the push registration service to identify\n *                                and establish a connection with the service gateway.\n * @param {boolean} options.isProduction - If true, push notification will be sent to production. If false, push notification will be sent to sandbox.\n * @return {Object} response\n */\nexport function * pushNotificationsRegistration (\n  connection,\n  {\n    services,\n    pushProvider,\n    bundleId,\n    deviceToken,\n    voipDeviceToken,\n    standardDeviceToken,\n    clientCorrelator,\n    realm,\n    isProduction\n  }\n) {\n  const { server } = connection\n  pushProvider = pushProvider.toLowerCase()\n  const url =\n    `${server.protocol}://${server.server}:${server.port}/` +\n    `rest/version/${server.version}/` +\n    `user/${connection.username}/` +\n    'push/' +\n    pushProvider +\n    '/devices/'\n  const method = 'POST'\n  let body = {\n    bundleID: bundleId,\n    service: services,\n    clientCorrelator: clientCorrelator,\n    realm: realm,\n    isProduction: isProduction\n  }\n\n  if (pushProvider === 'apple') {\n    body.voipDeviceToken = voipDeviceToken\n    body.standardDeviceToken = standardDeviceToken\n  } else {\n    body.deviceToken = deviceToken\n  }\n\n  body = JSON.stringify(body)\n  log.debug(`Sending PUSH register request: ${method} ${url}`)\n\n  const response = yield request({ url, method, body })\n\n  let registrationResponse\n  const responseName = pushProvider + 'DeviceRegistrationResponse'\n  if (response.payload.body && response.payload.body[responseName]) {\n    registrationResponse = response.payload.body[responseName]\n  }\n\n  if (response.error) {\n    log.info('Failed to register device token for PUSH notifications.')\n    if (registrationResponse) {\n      // Handle errors from the server.\n      const statusCode = registrationResponse.statusCode\n      log.debug(`Device registration request for PUSH notifications failed with status code: ${statusCode}`)\n\n      return {\n        error: true,\n        status: statusCode,\n        text: `Failed to register device token for PUSH notifications. Code: ${statusCode}`\n      }\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug(`Device registration request for PUSH notifications failed with message: ${message}.`)\n\n      return {\n        error: true,\n        status: response.payload.result.code,\n        text: `Failed to register device token for PUSH notifications. Error: ${response.payload.result.message}`\n      }\n    }\n  } else if (registrationResponse && registrationResponse.statusCode !== 0) {\n    log.info(`Failed to register device token for PUSH notifications. Code: ${registrationResponse.statuscode}`)\n    // TODO: Is this else-if needed?\n    return {\n      error: true,\n      status: registrationResponse.statuscode,\n      text: `Failed to register device token for PUSH notifications. Error: ${registrationResponse.statusCode}`\n    }\n  } else {\n    log.info('Successfully registered device token for PUSH notifications.')\n    return {\n      error: false,\n      ...registrationResponse\n    }\n  }\n}\n\n/**\n * De-Registers a device token with On-Prem services.\n * @method pushNotificationsDeRegistration\n * @param  {Object} connection - Information for formatting the request.\n * @param  {Object} options\n * @param  {string} options.registration\n * @return {Object} response\n */\nexport function * pushNotificationsDeRegistration (connection, { registration }) {\n  const { server } = connection\n  const url = `${server.protocol}://${server.server}:${server.port}${registration}`\n  const method = 'DELETE'\n  const responseType = 'none'\n\n  log.debug(`Sending PUSH unregister request: ${method} ${url}`)\n  const response = yield request({ url, method, responseType })\n\n  if (response.error) {\n    log.info('Failed to unregister device token for PUSH notifications.')\n    if (response.payload.body) {\n      // Handle errors from the server.\n      const { statusCode } = response.payload.body\n      log.debug(`Failed to unregister device token for PUSH notifications. Status code: ${statusCode}.`)\n      // TODO: Proper errors.\n      return {\n        error: true,\n        status: statusCode,\n        text: `Failed to unregister device token for PUSH notifications. Code: ${statusCode}.`\n      }\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug(`Device token unregistration request failed for PUSH notifications: ${message}`)\n      // TODO: Proper error.\n      return {\n        error: true,\n        status: response.payload.result.code,\n        text: `Device token unregistration request failed for PUSH notifications: ${message}`\n      }\n    }\n  } else {\n    log.info('Successfully unregistered device token for PUSH notifications.')\n    // Successful de-register has no response.\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Fetches SDP data from a given partial URL.\n * @method fetchSDP\n * @param  {Object} partialUrl - A partial URL. Contains everything after the protocol://server:port\n * @return {Object} response A response payload\n */\nexport function * fetchSDP (connection, partialUrl) {\n  const { server } = connection\n  const method = 'GET'\n  const url = `${server.protocol}://${server.server}:${server.port}${partialUrl}`\n  log.debug(`Sending request to fetch SDP: ${method} ${url}`)\n\n  const response = yield request({\n    url,\n    method\n  })\n\n  if (!response.error) {\n    log.info('SDP fetched successfully.')\n    // TODO: test and see what this format actually is.\n    return response.payload.body\n  } else {\n    log.debug(`Failed to fetch SDP. Error is: ${JSON.stringify(response.error)}`)\n  }\n}\n","// Request plugin.\nimport * as actionTypes from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport makeRequest from './makeRequest'\nimport * as authorizations from './authorization'\nimport { sanitizeRequest } from './utils'\n\n// Other plugins.\nimport { logManager } from '../logs'\n\n// Helpers.\nimport { getVersion } from '../common/version'\n\n// Libraries.\nimport { call, put, takeEvery } from 'redux-saga/effects'\n\n/*\n * Saga-factory for creating the `watchRequests` saga.\n *    If `platform` is undefined, then no extra, platform-specific handling is done.\n */\nexport default function watchRequests (platform) {\n  // Only allow our known platforms or undefined (for base).\n  if (!['link', 'uc', 'cpaas', undefined].includes(platform)) {\n    throw Error('Invalid platform specific for requests.')\n  }\n  return function * watchRequests () {\n    yield takeEvery(actionTypes.REQUEST, handleRequestSaga, platform)\n  }\n}\n\n/*\n * Saga that handles the request when it is triggered by an action.\n */\nfunction * handleRequestSaga (platform, action) {\n  const result = yield call(handleRequest, platform, action)\n\n  // If the platform was specified and this is not a 3.X build, perform the\n  //    authorization check side-effect.\n  if (platform && !getVersion().startsWith('3')) {\n    // Call the 'authorization' function specific for this platform.\n    //    They're all named ${platform}Authorization so it's easier to call them.\n    const error = authorizations[`${platform}Authorization`](result)\n\n    if (error) {\n      yield put(actions.authorizationError(error))\n    }\n  }\n\n  yield put(actions.response(action.meta.requestId, result, !!result.error))\n}\n\n/*\n * Generator that handles a request action with standard HTTP handling features.\n *\n * @param {string} [platform] The platform being used.\n * @param {FluxStandardAction} action The action to handle.\n * @return {Object} The results object.\n */\nexport function * handleRequest (platform, action) {\n  const log = logManager.getLogger('REQUEST', action.meta.requestId)\n\n  const logOptions = sanitizeRequest(action.payload)\n  log.debug(`Making REST request ${action.meta.requestId}.`, logOptions)\n\n  // Make the request based on the action\n  const result = yield makeRequest(action.payload, action.meta.requestId)\n\n  log.debug(`Received REST response ${action.meta.requestId}.`, result)\n\n  return result\n}\n\n// begin-test-code\nexport const __testonly__ = { watchRequests, handleRequestSaga }\n// end-test-code\n","/**\n * \"Authorization\" issues are REST errors caused by invalid user credentials.\n *    These are issues that should be solvable by an end-user updating/fixing\n *    the credentials that they have provided.\n */\nimport BasicError, { authCodes } from '../errors'\n\n/**\n * Function that checks a REST response action for Link authorization issues.\n * @param  {Object} response A REST response object.\n * @return {BasicError|undefined}\n */\nexport function linkAuthorization (response) {\n  if (!response.error) {\n    return\n  }\n\n  /*\n   * A SPiDR REST request will return\n   *  - '403 Forbidden', with body 'statusCode: 4' for bad password,\n   *  - '403 Forbidden', with html body (which is thrown away) for bad username.\n   *\n   * The SPiDR REST API document (v4.7, May 2019) says it will return '403 Forbidden'\n   *    with other statusCodes for numerous untestable scenarios. Some of these are\n   *    for credential/auth issues, others are for unrelated issues.\n   * Authorization related:\n   *    - 27 (generic auth failure), 61 (credentials issue), 65 (token expired)\n   * Unrelated:\n   *    - 29 (device not authorized), 35 (service not enabled), 37 (invalid value),\n   *      45 (invalid app_name), 46 (invalid CallMe token), 62 (account is disabled),\n   *      63 (account is locked), 64 (invalid CallMe realm)\n   */\n  // Status codes considered to be \"auth issues\".\n  const authIssues = [4, 27, 61, 65]\n\n  const statusCode = getStatusCode(response)\n\n  /*\n   * A case where Link REST request will return '401 Unauthorized'\n   */\n  if (response.result.code === 401) {\n    return new BasicError({\n      code: authCodes.INVALID_CREDENTIALS,\n      message: 'Authorization failed with server. Please check credentials.'\n    })\n  }\n\n  /*\n   * Define a Link authorization issue to be:\n   *  - a '403 Forbidden', with no body or with a specific statusCode.\n   */\n  if (response.result.code === 403 && (response.body === undefined || authIssues.includes(statusCode))) {\n    let message = 'Authorization failed with server. Please check credentials.'\n    if (statusCode) {\n      message += ` Status code: ${statusCode}`\n    }\n    return new BasicError({\n      code: authCodes.INVALID_CREDENTIALS,\n      message: message\n    })\n  }\n}\n\n/**\n * Function that checks a REST response action for UC authorization issues.\n *    UC includes both SPiDR and CIM REST requests.\n * @param  {Object} response A REST response object.\n * @return {BasicError|undefined}\n */\nexport function ucAuthorization (response) {\n  /*\n   * A CIM REST request will return\n   *    - '401 Login Please' (not 401 Unauthorized) with no body for credential issues.\n   *    - '401 Login Please', with body message \"expired token\" for token issues.\n   *\n   * SPiDR will return '401 Unauthorized' for non-auth issues though,\n   *    (statusCode 35 for \"service not enabled\").\n   */\n\n  /*\n   * Define a UC authorization issue to be:\n   *  - a '401 Login Please'.\n   */\n  const result = response.result\n  if (result.code === 401 && result.message === 'Login Please') {\n    let message = 'Authorization failed with server. Please check credentials.'\n\n    const statusCode = getStatusCode(response)\n\n    if (statusCode) {\n      message += ` Status code: ${statusCode}`\n    }\n\n    return new BasicError({\n      code: authCodes.INVALID_CREDENTIALS,\n      message\n    })\n  }\n}\n\n/**\n * Function that checks a REST response action for CPaaS authorization issues.\n * @param  {Object} response A REST response object.\n * @return {BasicError|undefined}\n */\nexport function cpaasAuthorization (response) {\n  /*\n   * A CPaaS REST request will return '401 Unauthorized' for authorization issues.\n   */\n  if (response.result.code === 401) {\n    return new BasicError({\n      code: authCodes.INVALID_CREDENTIALS,\n      message: 'Authorization failed with server. Please check credentials.'\n    })\n  }\n}\n\n/**\n * Helper function for parsing a statusCode from a SPiDR REST response body.\n * @param  {Object} response\n * @return {number|undefined}\n */\nfunction getStatusCode (response) {\n  let statusCode\n  /*\n   * Parse the statusCode out from the body.\n   */\n  if (response.body) {\n    if (response.body.statusCode) {\n      // In some cases (eg. KAA-1937), the statusCode is at the top-level of the body.\n      statusCode = response.body.statusCode\n    } else {\n      // In most cases, the statusCode is inside another object. The name of this\n      //    parameter is different depending which service the request was for,\n      //    so search for it.\n      Object.values(response.body).forEach(value => {\n        if (value.statusCode) {\n          statusCode = value.statusCode\n        }\n      })\n    }\n  }\n  return statusCode\n}\n","/**\n * An error occurred with server authorization.\n *\n * This event will be emitted anytime a REST request to the server is rejected\n *    due to an authorization issue. This may occur for invalid credentials or\n *    expired tokens, depending on which form of authentication the application\n *    has chosen to use.\n * @public\n * @memberof api\n * @requires restAuthorization\n * @event request:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const REQUEST_ERROR = 'request:error'\n","module.exports = curry;\n\n/*\n  function add(a, b, c) {\n    return a + b + c;\n  }\n  curry(add)(1)(2)(3); // 6\n  curry(add)(1)(2)(2); // 5\n  curry(add)(2)(4, 3); // 9\n\n  function add(...args) {\n    return args.reduce((sum, n) => sum + n, 0)\n  }\n  var curryAdd4 = curry(add, 4)\n  curryAdd4(1)(2, 3)(4); // 10\n\n  function converter(ratio, input) {\n    return (input*ratio).toFixed(1);\n  }\n  const curriedConverter = curry(converter)\n  const milesToKm = curriedConverter(1.62);\n  milesToKm(35); // 56.7\n  milesToKm(10); // 16.2\n*/\n\nfunction curry(fn, arity) {\n  return function curried() {\n    if (arity == null) {\n      arity = fn.length;\n    }\n    var args = [].slice.call(arguments);\n    if (args.length >= arity) {\n      return fn.apply(this, args);\n    } else {\n      return function() {\n        return curried.apply(this, args.concat([].slice.call(arguments)));\n      };\n    }\n  };\n}\n","import commonIndex from '../core'\n\nimport basePlugins from '../core/basePlugins.js'\nimport webrtc from '../../packages/kandy/src/webrtc'\nimport callMeAuth from '../../packages/kandy/src/auth/callMe'\nimport newCallMe from '../../packages/kandy/src/call/anonymous'\nimport connectivity from '../../packages/kandy/src/connectivity/link'\nimport notifications from '../../packages/kandy/src/notifications/link'\nimport { linkRequest } from '../../packages/kandy/src/request'\nimport '../../packages/kandy/src/docs/docs'\n\nimport { createCodecRemover } from '@kandy-io/sdp-handlers'\n\nconst defaultPlugins = [\n  ...basePlugins,\n  { name: 'authentication', fn: callMeAuth },\n  { name: 'webrtc', fn: webrtc },\n  { name: 'call', fn: newCallMe },\n  { name: 'connectivity', fn: connectivity },\n  { name: 'notifications', fn: notifications },\n  { name: 'request', fn: linkRequest }\n]\n\nfunction root (options = {}, plugins = []) {\n  return commonIndex(options, [...defaultPlugins, ...plugins])\n}\n\n// Alias 'create' to be equal to the root function\nroot.create = root\n\nroot.sdpHandlers = {\n  createCodecRemover\n}\n// Export this way as a work-around, so it can be used as `<export>();`.\n// See: https://github.com/webpack/webpack/issues/706\nmodule.exports = root\n","// Disabling eslint for the next comment as we want to be able to use a disallowed word\n// eslint-disable-next-line no-warning-comments\n/**\n * The SDK creation factory. Create an instance of the SDK by calling this factory with the desired configurations.\n * The SDK instance will be referred as 'api' throughout the rest of the documentation content.\n * @public\n * @method create\n * @param {config} config The configuration object.\n * @return {api} The SDK instance.\n * @example\n * // Instantiate the SDK.\n * import { create } from '@rbbn/webrtc-js-sdk'\n * const client = create({\n *     authentication: { ... },\n *     logs: { ... },\n *     ...\n * });\n * // Use the SDK's API.\n * client.on( ... );\n */\n\n/**\n * The 'api' is the type returned by the create function.\n * It contains various top-level functions that pertain to SDK global instance\n * as well as several nested namespaces that pertain to various features (e.g. call, contacts, presence, etc).\n *\n * @public\n * @module api\n */\n\n/**\n * The configuration object. This object defines what different configuration\n * values you can use when instantiating the SDK using the {@link create} function.\n * @public\n * @module config\n */\n\n// Disabling eslint for the next comment as we want to be able to use a disallowed word\n// eslint-disable-next-line no-warning-comments\n/**\n * A set of {@link call.SdpHandlerFunction SdpHandlerFunction}s for manipulating SDP information.\n * These handlers are used to customize low-level call behaviour for very specific\n * environments and/or scenarios.\n *\n * Note that SDP handlers are exposed on the entry point of the SDK. They can be added during\n * initialization of the SDK using the {@link #configconfigcall config.call.sdpHandlers} configuration\n * parameter. They can also be set after the SDK's creation by using the\n * {@link call.setSdpHandlers} function.\n *\n * @public\n * @namespace sdpHandlers\n * @example\n * import { create, sdpHandlers } from '@rbbn/webrtc-js-sdk';\n * const codecRemover = sdpHandlers.createCodecRemover(['VP8', 'VP9'])\n * const client = create({\n *   call: {\n *     sdpHandlers: [ codecRemover, <Your-SDP-Handler-Function>, ...]\n *   }\n * })\n * @example\n * // Through the Call API post-instantiation\n * client.call.setSdpHandlers([ codecRemover, <Your-SDP-Handler-Function>, ...])\n */\n\n/**\n * An object that represents a selector to match codecs of an RTP map in SDP.\n *\n * @public\n * @static\n * @typedef {Object} CodecSelector\n * @memberof sdpHandlers\n * @property {string} name The name of the codec.\n * @property {Array<string>} fmtpParams An array of strings to match against the \"a=fmtp\" format parameters for the corresponding codec.\n *                                      All of the elements in the array must be contained in the \"a=fmtp\" attribute in order to be a match.\n */\n\n/**\n * This function creates an SDP handler that will remove codecs matching the selectors specified for SDP offers and answers.\n *\n * In some scenarios it's necessary to remove certain codecs being offered by the SDK to remote parties. For example, some legacy call services limit the SDP\n * length (usually to 4KB) and will reject calls that have SDP size above this amount.\n *\n * While creating an SDP handler would allow a user to perform this type of manipulation, it is a non-trivial task that requires in-depth knowledge of WebRTC SDP.\n *\n * To facilitate this common task, the createCodecRemover function creates a codec removal handler that can be used for this purpose. Applications can use this codec\n * removal handler in combination with the {@link call.getAvailableCodecs call.getAvailableCodecs} function in order to build logic to determine the best codecs to use\n * for their application.\n *\n * @public\n * @memberof sdpHandlers\n * @method createCodecRemover\n * @param {Array<CodecSelector> | Array<string>} codecs A list of codec selectors to remove from the SDP. If passing a list of strings, they will be converted into\n *                                                      codec selectors that correspond to those names without any extra FMTP parameters.\n * @returns {call.SdpHandlerFunction} The resulting SDP handler that will remove the codec.\n * @example\n * import { create, sdpHandlers } from '@rbbn/webrtc-js-sdk';\n *\n * const codecRemover = sdpHandlers.createCodecRemover([\n *   // Remove all VP8 and VP9 codecs.\n *   'VP8',\n *   'VP9',\n *\n *   // Remove all H264 codecs with the specified FMTP parameters.\n *   {\n *     name: 'H264',\n *     fmtpParams: ['packetization-mode=0']\n *   }\n * ])\n *\n * const client = create({\n *   call: {\n *     sdpHandlers: [codecRemover]\n *   }\n * })\n *\n */\n\n/*\n * Index template file that is used to create pre-defined version of the SDK.\n */\nimport { factory } from '../../packages/kandy/src/factory'\nimport { _ } from 'lodash/fp'\n\n// This is a hack to fix an issue where Lodash will add itself to\n// the window scope even if it's loaded via ES6. You can remove this when\n// we have an answer to https://github.com/lodash/lodash/issues/1798 .\n// eslint-disable-next-line\nif (_) _.noConflict()\n\nexport default function commonIndex (options = {}, plugins = []) {\n  return factory(plugins, options)\n}\n","// Libraries.\nimport { combineReducers, createStore, applyMiddleware, compose as composeWithoutDevTools } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { cloneDeep, map, merge } from 'lodash/fp'\nimport { fork } from 'redux-saga/effects'\nimport compose from '@stamp/compose'\nimport Bottle from 'bottlejs'\n\n// Helpers.\nimport { autoRestart, mergeValues } from './common/utils'\nimport { getVersion } from './common/version'\n\n// Plugins.\nimport { logManager } from './logs'\n\n// Parse and/or Validate\nimport { validation as v8n, parse } from './common/validation'\nconst log = logManager.getLogger('FACTORY')\n\nconst factoryDefaults = {\n  enableReduxDevTools: false,\n  reduxDevToolsName: 'WebRTC SDK'\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  enableReduxDevTools: v8n.boolean(),\n  reduxDevToolsName: v8n.string()\n})\nconst parseOptions = parse('common', v8nValidation)\n\n/**\n * Creates an instance of the SDK with the specified plugins and configuration.\n *\n * @param {Function[]} pluginFactories - The list of factories to create plugins for this instance of the SDK.\n * @param {Object} [sdkOptions] - Factory and plugin options\n * @param {Object} [sdkOptions.common] - Factory specific options\n * @param {boolean} [sdkOptions.common.enableReduxDevTools] - A flag to indicate whether or not to include Redux Dev Tools\n * @param {string}  [sdkOptions.common.reduxDevToolsName=\"WebRTC SDK\"] - The name of the store that will show up in the\n *                                          Redux Dev tools. This helps differentiate the SDK from other redux instances.\n */\nexport function factory (pluginFactories, sdkOptions = {}) {\n  // Log the SDK's version (templated by webpack) on initialization.\n  const version = getVersion()\n  log.info(`SDK version: ${version}`)\n\n  // Clone the options so we don't mutate the application's object.\n  const clonedOptions = cloneDeep(sdkOptions)\n  // Separate factory and plugin options.\n  let { common: options, ...pluginOptions } = clonedOptions\n\n  options = mergeValues(factoryDefaults, options)\n  parseOptions(options)\n\n  // Create a bottle which will act as a container for plugin components.\n  const bottle = new Bottle()\n\n  var sagas = []\n  var store\n  var middlewares = []\n  const apis = []\n  var reducers = {}\n  var initSagas = []\n  var taskDescriptor\n  const shared = {}\n  var context = {\n    container: bottle.container,\n    capabilities: [],\n    api: {},\n    primitives: {},\n    getState () {\n      if (!store) {\n        throw Error('Store is not available during factory creation')\n      }\n      if (destroyedSDK) {\n        throw Error('State is not available if the SDK has been destroyed')\n      }\n      return store.getState()\n    },\n    dispatch (...args) {\n      if (!store) {\n        throw Error('Store is not available during factory creation')\n      }\n      return store.dispatch(...args)\n    },\n    subscribe (fn) {\n      if (!store) {\n        throw Error('Store is not available during factory creation')\n      }\n      return store.subscribe(fn)\n    }\n  }\n\n  // Add the context to the container so plugins can access it.\n  bottle.value('context', context)\n\n  // Special case middleware for logging.\n  var loggerMiddleware\n\n  var destroyedSDK = false\n  var destroyedSDKMiddleware = store => next => action => {\n    if (destroyedSDK) {\n      return null\n    } else {\n      return next(action)\n    }\n  }\n\n  // Instantiate the plugins.\n  let plugins = map(function (plugin) {\n    // Make sure the plugin factory is actually a function.\n    if (!plugin || !plugin.fn || typeof plugin.fn !== 'function') {\n      return false\n    }\n\n    // Provide the bottle to plugin factory functions so they can add their\n    //    components.\n    return plugin.fn(pluginOptions[plugin.name], bottle)\n  }, pluginFactories)\n\n  // Remove undefined plugins. Those are plugins that failed to load for some reason.\n  plugins = plugins.filter(plugin => Boolean(plugin))\n\n  // Run all the plugins to build the context.\n  // Set up each plugin component individually.\n  plugins.forEach(function (plugin) {\n    if (plugin.capabilities) {\n      context.capabilities = context.capabilities.concat(plugin.capabilities)\n    }\n    if (plugin.reducer) {\n      reducers[plugin.name] = plugin.reducer\n    }\n    if (plugin.middleware) {\n      if (plugin.name === 'logs') {\n        loggerMiddleware = plugin.middleware\n      } else {\n        middlewares.push(() => plugin.middleware(context)) // pass context to middleware instead of store\n      }\n    }\n    if (plugin.api) {\n      apis.push(plugin.api)\n    }\n    if (plugin.init) {\n      initSagas.push(plugin.init)\n    }\n    if (plugin.sagas) {\n      sagas = sagas.concat(plugin.sagas)\n    }\n    // TODO: Revisit this. Looks a little extreme for a couple stamps...\n    if (plugin.mixins) {\n      // Define a base stamp that all stamps will be composed with.\n      //      This gives stamps access to the factory's context.\n      const baseStamp = {\n        propertyDescriptors: {\n          context: {\n            get () {\n              return context\n            }\n          }\n        }\n      }\n      for (const objName in plugin.mixins) {\n        if (plugin.mixins.hasOwnProperty(objName)) {\n          // Ensure that every stamp starts with the base stamp.\n          if (!context.primitives.hasOwnProperty(objName)) {\n            context.primitives[objName] = baseStamp\n          }\n          context.primitives[objName] = compose(context.primitives[objName], plugin.mixins[objName])\n        }\n      }\n    }\n\n    /**\n     * Plugins are allowed to share data between them by providing it to the\n     *    factory. All shared data will be collected as a single object, and\n     *    that object will be provided to plugins during their `init` saga.\n     * It is intended that a plugin can \"override\" another plugin's shared data.\n     * The order that plugins are given to the factory matters because of this.\n     * `plugin.shared` is expected to be an object.\n     */\n    if (plugin.shared) {\n      for (const key in plugin.shared) {\n        if (shared[key]) {\n          log.debug(`Replacing shared ${key} with ${key} from ${plugin.name}.`)\n          shared[key] = plugin.shared[key]\n        } else {\n          shared[key] = plugin.shared[key]\n        }\n      }\n    }\n  })\n\n  if (loggerMiddleware) {\n    // The redux logger middleware should be the last middleware.\n    middlewares.push(() => loggerMiddleware(context))\n  }\n\n  // Compose the root saga\n  function * rootSaga () {\n    // Give all plugins an opportunity to initialize themselves.\n    // Note: Sagas have not been forked yet, so init cannot use them\n    //      by dispatching actions. See PR #698.\n    // Note: If anything asynchronous is done in an init, it MUST be\n    //      non-blocking (ie. use fork, not call). See PR #699.\n    for (const init of initSagas) {\n      // Note: Yield directly to init. If redux-saga's `call()` is used, then the\n      //      factory returns before the instance is done all inits. See PR #699.\n      // Provide the factory's shared data (from plugins) to the `init` saga.\n      yield * init(shared)\n    }\n    // Run all of the sagas provided by implementation plugins.\n    for (const saga of sagas) {\n      yield fork(autoRestart(saga))\n    }\n  }\n\n  // Alias our composeMiddleware to conditionally include devTools as per the provided configuration flag\n  const composeMiddleware = options.enableReduxDevTools\n    ? composeWithDevTools({ name: options.reduxDevToolsName })\n    : composeWithoutDevTools\n\n  // don't include saga stuff if there are no sagas.\n  if (initSagas.length + sagas.length > 0) {\n    var sagaMiddleware = createSagaMiddleware()\n\n    // Create the store with the plugins (incl. sagas) and with the configuration as the initial state.\n    store = createStore(\n      combineReducers(reducers),\n      composeMiddleware(applyMiddleware(destroyedSDKMiddleware, sagaMiddleware, ...middlewares))\n    )\n\n    taskDescriptor = sagaMiddleware.run(rootSaga)\n  } else {\n    // Create the store with the plugins (excl. sagas) and with the configuration as the initial state.\n    store = createStore(\n      combineReducers(reducers),\n      composeMiddleware(applyMiddleware(destroyedSDKMiddleware, ...middlewares))\n    )\n  }\n\n  // Use the plugins' API factories to build the public API.\n  //    Do this after the store has been created.\n  // Plugins can either have provided their API factory by:\n  //    - returning it directly from its factory function,\n  //    - registering it to the bottle.\n  apis.forEach(apiFactory => {\n    context.api = merge(context.api, apiFactory(context))\n  })\n  bottle.list().forEach(name => {\n    // Find API components on the bottle and add them to the SDK API.\n    if (name.toLowerCase().endsWith('api')) {\n      const api = bottle.container[name]\n      context.api = merge(context.api, api)\n    }\n  })\n\n  // Resolve all deferred functions. Provide them the container so they have the\n  //    same parameters as registered components.\n  bottle.resolve(bottle.container)\n\n  // setup the API\n  const publicAPI = {\n    ...context.api,\n    state: {\n      get: function () {\n        return store.getState()\n      },\n      subscribe: function (...args) {\n        return store.subscribe(...args)\n      }\n    },\n    /**\n     * Return all the capabilities currently available to the plugin system.\n     *\n     * @memberof api\n     * @method getCapabilities\n     */\n    getCapabilities () {\n      return context.capabilities\n    },\n    /**\n     * Returns the current version of the API.\n     *\n     * @public\n     * @memberof api\n     * @method getVersion\n     */\n    getVersion () {\n      return version\n    },\n    // Disabling eslint for the next comment as we want to be able to use a disallowed word\n    // eslint-disable-next-line no-warning-comments\n    /**\n     * Destroys the SDK, and removes its state, rendering the SDK unusable.\n     * Useful when a user logs out and their call data needs to be destroyed.\n     * The SDK must be recreated to be usable again.\n     * The destroy command is async, and will happen on the next tick\n     *   so as not to interfere with any ongoing events.\n     *\n     * @public\n     * @memberof api\n     * @method destroy\n     * @example\n     * // Instantiate the SDK.\n     * import { create } from '@rbbn/webrtc-js-sdk'\n     * const config = {\n     *     authentication: { ... },\n     *     logs: { ... },\n     *     ...\n     * }\n     * let client = create(config);\n     * client.on( ... )\n     * // Use the SDK\n     * ...\n     * // Destroy the SDK, then recreate on the next step\n     * client.destroy()\n     * client = create(config)\n     * client.on( ... )\n     */\n    destroy () {\n      // TODO: Is it possible for the store to auto-unsubscribe any listeners\n      //    (from client.state.subscribe API)? If not, may be easier to simply\n      //    protect from issues.\n\n      const _destroy = () => {\n        if (destroyedSDK) return\n\n        // Cancel all the sagas\n        if (taskDescriptor) taskDescriptor.cancel()\n\n        // Clear the state\n        function destroyStateReducer (state, action) {\n          return {}\n        }\n        store.replaceReducer(destroyStateReducer)\n\n        // Neuter all actions\n        destroyedSDK = true\n      }\n\n      // setTimeout is necessary so that the destroy\n      //   happens at the start of the next tick for\n      //   when destroy is called inside an event handler\n      const immediately = 0\n      setTimeout(_destroy, immediately)\n    }\n  }\n\n  // Return the public API.\n  return publicAPI\n}\n","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","'use strict';\n\nvar compose = require('redux').compose;\n\nexports.__esModule = true;\nexports.composeWithDevTools =\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : function () {\n        if (arguments.length === 0) return undefined;\n        if (typeof arguments[0] === 'object') return compose;\n        return compose.apply(null, arguments);\n      };\n\nexports.devToolsEnhancer =\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__\n    : function () {\n        return function (noop) {\n          return noop;\n        };\n      };\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n(function(){function n(n,t,r){switch(r.length){case 0:return n.call(t);case 1:return n.call(t,r[0]);case 2:return n.call(t,r[0],r[1]);case 3:return n.call(t,r[0],r[1],r[2])}return n.apply(t,r)}function t(n,t,r,e){for(var u=-1,i=null==n?0:n.length;++u<i;){var o=n[u];t(e,o,r(o),n)}return e}function r(n,t){for(var r=-1,e=null==n?0:n.length;++r<e&&t(n[r],r,n)!==!1;);return n}function e(n,t){for(var r=null==n?0:n.length;r--&&t(n[r],r,n)!==!1;);return n}function u(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(!t(n[r],r,n))return!1;\nreturn!0}function i(n,t){for(var r=-1,e=null==n?0:n.length,u=0,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[u++]=o)}return i}function o(n,t){return!!(null==n?0:n.length)&&y(n,t,0)>-1}function f(n,t,r){for(var e=-1,u=null==n?0:n.length;++e<u;)if(r(t,n[e]))return!0;return!1}function c(n,t){for(var r=-1,e=null==n?0:n.length,u=Array(e);++r<e;)u[r]=t(n[r],r,n);return u}function a(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function l(n,t,r,e){var u=-1,i=null==n?0:n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);\nreturn r}function s(n,t,r,e){var u=null==n?0:n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function h(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(t(n[r],r,n))return!0;return!1}function p(n){return n.split(\"\")}function _(n){return n.match($t)||[]}function v(n,t,r){var e;return r(n,function(n,r,u){if(t(n,r,u))return e=r,!1}),e}function g(n,t,r,e){for(var u=n.length,i=r+(e?1:-1);e?i--:++i<u;)if(t(n[i],i,n))return i;return-1}function y(n,t,r){return t===t?Z(n,t,r):g(n,b,r)}function d(n,t,r,e){\nfor(var u=r-1,i=n.length;++u<i;)if(e(n[u],t))return u;return-1}function b(n){return n!==n}function w(n,t){var r=null==n?0:n.length;return r?k(n,t)/r:Cn}function m(n){return function(t){return null==t?X:t[n]}}function x(n){return function(t){return null==n?X:n[t]}}function j(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=!1,n):t(r,n,u,i)}),r}function A(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].value;return n}function k(n,t){for(var r,e=-1,u=n.length;++e<u;){var i=t(n[e]);i!==X&&(r=r===X?i:r+i);\n}return r}function O(n,t){for(var r=-1,e=Array(n);++r<n;)e[r]=t(r);return e}function I(n,t){return c(t,function(t){return[t,n[t]]})}function R(n){return n?n.slice(0,H(n)+1).replace(Lt,\"\"):n}function z(n){return function(t){return n(t)}}function E(n,t){return c(t,function(t){return n[t]})}function S(n,t){return n.has(t)}function W(n,t){for(var r=-1,e=n.length;++r<e&&y(t,n[r],0)>-1;);return r}function L(n,t){for(var r=n.length;r--&&y(t,n[r],0)>-1;);return r}function C(n,t){for(var r=n.length,e=0;r--;)n[r]===t&&++e;\nreturn e}function U(n){return\"\\\\\"+Yr[n]}function B(n,t){return null==n?X:n[t]}function T(n){return Nr.test(n)}function $(n){return Pr.test(n)}function D(n){for(var t,r=[];!(t=n.next()).done;)r.push(t.value);return r}function M(n){var t=-1,r=Array(n.size);return n.forEach(function(n,e){r[++t]=[e,n]}),r}function F(n,t){return function(r){return n(t(r))}}function N(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r];o!==t&&o!==cn||(n[r]=cn,i[u++]=r)}return i}function P(n){var t=-1,r=Array(n.size);\nreturn n.forEach(function(n){r[++t]=n}),r}function q(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=[n,n]}),r}function Z(n,t,r){for(var e=r-1,u=n.length;++e<u;)if(n[e]===t)return e;return-1}function K(n,t,r){for(var e=r+1;e--;)if(n[e]===t)return e;return e}function V(n){return T(n)?J(n):_e(n)}function G(n){return T(n)?Y(n):p(n)}function H(n){for(var t=n.length;t--&&Ct.test(n.charAt(t)););return t}function J(n){for(var t=Mr.lastIndex=0;Mr.test(n);)++t;return t}function Y(n){return n.match(Mr)||[];\n}function Q(n){return n.match(Fr)||[]}var X,nn=\"4.17.21\",tn=200,rn=\"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\",en=\"Expected a function\",un=\"Invalid `variable` option passed into `_.template`\",on=\"__lodash_hash_undefined__\",fn=500,cn=\"__lodash_placeholder__\",an=1,ln=2,sn=4,hn=1,pn=2,_n=1,vn=2,gn=4,yn=8,dn=16,bn=32,wn=64,mn=128,xn=256,jn=512,An=30,kn=\"...\",On=800,In=16,Rn=1,zn=2,En=3,Sn=1/0,Wn=9007199254740991,Ln=1.7976931348623157e308,Cn=NaN,Un=4294967295,Bn=Un-1,Tn=Un>>>1,$n=[[\"ary\",mn],[\"bind\",_n],[\"bindKey\",vn],[\"curry\",yn],[\"curryRight\",dn],[\"flip\",jn],[\"partial\",bn],[\"partialRight\",wn],[\"rearg\",xn]],Dn=\"[object Arguments]\",Mn=\"[object Array]\",Fn=\"[object AsyncFunction]\",Nn=\"[object Boolean]\",Pn=\"[object Date]\",qn=\"[object DOMException]\",Zn=\"[object Error]\",Kn=\"[object Function]\",Vn=\"[object GeneratorFunction]\",Gn=\"[object Map]\",Hn=\"[object Number]\",Jn=\"[object Null]\",Yn=\"[object Object]\",Qn=\"[object Promise]\",Xn=\"[object Proxy]\",nt=\"[object RegExp]\",tt=\"[object Set]\",rt=\"[object String]\",et=\"[object Symbol]\",ut=\"[object Undefined]\",it=\"[object WeakMap]\",ot=\"[object WeakSet]\",ft=\"[object ArrayBuffer]\",ct=\"[object DataView]\",at=\"[object Float32Array]\",lt=\"[object Float64Array]\",st=\"[object Int8Array]\",ht=\"[object Int16Array]\",pt=\"[object Int32Array]\",_t=\"[object Uint8Array]\",vt=\"[object Uint8ClampedArray]\",gt=\"[object Uint16Array]\",yt=\"[object Uint32Array]\",dt=/\\b__p \\+= '';/g,bt=/\\b(__p \\+=) '' \\+/g,wt=/(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g,mt=/&(?:amp|lt|gt|quot|#39);/g,xt=/[&<>\"']/g,jt=RegExp(mt.source),At=RegExp(xt.source),kt=/<%-([\\s\\S]+?)%>/g,Ot=/<%([\\s\\S]+?)%>/g,It=/<%=([\\s\\S]+?)%>/g,Rt=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,zt=/^\\w*$/,Et=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,St=/[\\\\^$.*+?()[\\]{}|]/g,Wt=RegExp(St.source),Lt=/^\\s+/,Ct=/\\s/,Ut=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,Bt=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,Tt=/,? & /,$t=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,Dt=/[()=,{}\\[\\]\\/\\s]/,Mt=/\\\\(\\\\)?/g,Ft=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,Nt=/\\w*$/,Pt=/^[-+]0x[0-9a-f]+$/i,qt=/^0b[01]+$/i,Zt=/^\\[object .+?Constructor\\]$/,Kt=/^0o[0-7]+$/i,Vt=/^(?:0|[1-9]\\d*)$/,Gt=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,Ht=/($^)/,Jt=/['\\n\\r\\u2028\\u2029\\\\]/g,Yt=\"\\\\ud800-\\\\udfff\",Qt=\"\\\\u0300-\\\\u036f\",Xt=\"\\\\ufe20-\\\\ufe2f\",nr=\"\\\\u20d0-\\\\u20ff\",tr=Qt+Xt+nr,rr=\"\\\\u2700-\\\\u27bf\",er=\"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\",ur=\"\\\\xac\\\\xb1\\\\xd7\\\\xf7\",ir=\"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\",or=\"\\\\u2000-\\\\u206f\",fr=\" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",cr=\"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\",ar=\"\\\\ufe0e\\\\ufe0f\",lr=ur+ir+or+fr,sr=\"['\\u2019]\",hr=\"[\"+Yt+\"]\",pr=\"[\"+lr+\"]\",_r=\"[\"+tr+\"]\",vr=\"\\\\d+\",gr=\"[\"+rr+\"]\",yr=\"[\"+er+\"]\",dr=\"[^\"+Yt+lr+vr+rr+er+cr+\"]\",br=\"\\\\ud83c[\\\\udffb-\\\\udfff]\",wr=\"(?:\"+_r+\"|\"+br+\")\",mr=\"[^\"+Yt+\"]\",xr=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",jr=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",Ar=\"[\"+cr+\"]\",kr=\"\\\\u200d\",Or=\"(?:\"+yr+\"|\"+dr+\")\",Ir=\"(?:\"+Ar+\"|\"+dr+\")\",Rr=\"(?:\"+sr+\"(?:d|ll|m|re|s|t|ve))?\",zr=\"(?:\"+sr+\"(?:D|LL|M|RE|S|T|VE))?\",Er=wr+\"?\",Sr=\"[\"+ar+\"]?\",Wr=\"(?:\"+kr+\"(?:\"+[mr,xr,jr].join(\"|\")+\")\"+Sr+Er+\")*\",Lr=\"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\",Cr=\"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\",Ur=Sr+Er+Wr,Br=\"(?:\"+[gr,xr,jr].join(\"|\")+\")\"+Ur,Tr=\"(?:\"+[mr+_r+\"?\",_r,xr,jr,hr].join(\"|\")+\")\",$r=RegExp(sr,\"g\"),Dr=RegExp(_r,\"g\"),Mr=RegExp(br+\"(?=\"+br+\")|\"+Tr+Ur,\"g\"),Fr=RegExp([Ar+\"?\"+yr+\"+\"+Rr+\"(?=\"+[pr,Ar,\"$\"].join(\"|\")+\")\",Ir+\"+\"+zr+\"(?=\"+[pr,Ar+Or,\"$\"].join(\"|\")+\")\",Ar+\"?\"+Or+\"+\"+Rr,Ar+\"+\"+zr,Cr,Lr,vr,Br].join(\"|\"),\"g\"),Nr=RegExp(\"[\"+kr+Yt+tr+ar+\"]\"),Pr=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,qr=[\"Array\",\"Buffer\",\"DataView\",\"Date\",\"Error\",\"Float32Array\",\"Float64Array\",\"Function\",\"Int8Array\",\"Int16Array\",\"Int32Array\",\"Map\",\"Math\",\"Object\",\"Promise\",\"RegExp\",\"Set\",\"String\",\"Symbol\",\"TypeError\",\"Uint8Array\",\"Uint8ClampedArray\",\"Uint16Array\",\"Uint32Array\",\"WeakMap\",\"_\",\"clearTimeout\",\"isFinite\",\"parseInt\",\"setTimeout\"],Zr=-1,Kr={};\nKr[at]=Kr[lt]=Kr[st]=Kr[ht]=Kr[pt]=Kr[_t]=Kr[vt]=Kr[gt]=Kr[yt]=!0,Kr[Dn]=Kr[Mn]=Kr[ft]=Kr[Nn]=Kr[ct]=Kr[Pn]=Kr[Zn]=Kr[Kn]=Kr[Gn]=Kr[Hn]=Kr[Yn]=Kr[nt]=Kr[tt]=Kr[rt]=Kr[it]=!1;var Vr={};Vr[Dn]=Vr[Mn]=Vr[ft]=Vr[ct]=Vr[Nn]=Vr[Pn]=Vr[at]=Vr[lt]=Vr[st]=Vr[ht]=Vr[pt]=Vr[Gn]=Vr[Hn]=Vr[Yn]=Vr[nt]=Vr[tt]=Vr[rt]=Vr[et]=Vr[_t]=Vr[vt]=Vr[gt]=Vr[yt]=!0,Vr[Zn]=Vr[Kn]=Vr[it]=!1;var Gr={\"\\xc0\":\"A\",\"\\xc1\":\"A\",\"\\xc2\":\"A\",\"\\xc3\":\"A\",\"\\xc4\":\"A\",\"\\xc5\":\"A\",\"\\xe0\":\"a\",\"\\xe1\":\"a\",\"\\xe2\":\"a\",\"\\xe3\":\"a\",\"\\xe4\":\"a\",\"\\xe5\":\"a\",\n\"\\xc7\":\"C\",\"\\xe7\":\"c\",\"\\xd0\":\"D\",\"\\xf0\":\"d\",\"\\xc8\":\"E\",\"\\xc9\":\"E\",\"\\xca\":\"E\",\"\\xcb\":\"E\",\"\\xe8\":\"e\",\"\\xe9\":\"e\",\"\\xea\":\"e\",\"\\xeb\":\"e\",\"\\xcc\":\"I\",\"\\xcd\":\"I\",\"\\xce\":\"I\",\"\\xcf\":\"I\",\"\\xec\":\"i\",\"\\xed\":\"i\",\"\\xee\":\"i\",\"\\xef\":\"i\",\"\\xd1\":\"N\",\"\\xf1\":\"n\",\"\\xd2\":\"O\",\"\\xd3\":\"O\",\"\\xd4\":\"O\",\"\\xd5\":\"O\",\"\\xd6\":\"O\",\"\\xd8\":\"O\",\"\\xf2\":\"o\",\"\\xf3\":\"o\",\"\\xf4\":\"o\",\"\\xf5\":\"o\",\"\\xf6\":\"o\",\"\\xf8\":\"o\",\"\\xd9\":\"U\",\"\\xda\":\"U\",\"\\xdb\":\"U\",\"\\xdc\":\"U\",\"\\xf9\":\"u\",\"\\xfa\":\"u\",\"\\xfb\":\"u\",\"\\xfc\":\"u\",\"\\xdd\":\"Y\",\"\\xfd\":\"y\",\"\\xff\":\"y\",\"\\xc6\":\"Ae\",\n\"\\xe6\":\"ae\",\"\\xde\":\"Th\",\"\\xfe\":\"th\",\"\\xdf\":\"ss\",\"\\u0100\":\"A\",\"\\u0102\":\"A\",\"\\u0104\":\"A\",\"\\u0101\":\"a\",\"\\u0103\":\"a\",\"\\u0105\":\"a\",\"\\u0106\":\"C\",\"\\u0108\":\"C\",\"\\u010a\":\"C\",\"\\u010c\":\"C\",\"\\u0107\":\"c\",\"\\u0109\":\"c\",\"\\u010b\":\"c\",\"\\u010d\":\"c\",\"\\u010e\":\"D\",\"\\u0110\":\"D\",\"\\u010f\":\"d\",\"\\u0111\":\"d\",\"\\u0112\":\"E\",\"\\u0114\":\"E\",\"\\u0116\":\"E\",\"\\u0118\":\"E\",\"\\u011a\":\"E\",\"\\u0113\":\"e\",\"\\u0115\":\"e\",\"\\u0117\":\"e\",\"\\u0119\":\"e\",\"\\u011b\":\"e\",\"\\u011c\":\"G\",\"\\u011e\":\"G\",\"\\u0120\":\"G\",\"\\u0122\":\"G\",\"\\u011d\":\"g\",\"\\u011f\":\"g\",\"\\u0121\":\"g\",\n\"\\u0123\":\"g\",\"\\u0124\":\"H\",\"\\u0126\":\"H\",\"\\u0125\":\"h\",\"\\u0127\":\"h\",\"\\u0128\":\"I\",\"\\u012a\":\"I\",\"\\u012c\":\"I\",\"\\u012e\":\"I\",\"\\u0130\":\"I\",\"\\u0129\":\"i\",\"\\u012b\":\"i\",\"\\u012d\":\"i\",\"\\u012f\":\"i\",\"\\u0131\":\"i\",\"\\u0134\":\"J\",\"\\u0135\":\"j\",\"\\u0136\":\"K\",\"\\u0137\":\"k\",\"\\u0138\":\"k\",\"\\u0139\":\"L\",\"\\u013b\":\"L\",\"\\u013d\":\"L\",\"\\u013f\":\"L\",\"\\u0141\":\"L\",\"\\u013a\":\"l\",\"\\u013c\":\"l\",\"\\u013e\":\"l\",\"\\u0140\":\"l\",\"\\u0142\":\"l\",\"\\u0143\":\"N\",\"\\u0145\":\"N\",\"\\u0147\":\"N\",\"\\u014a\":\"N\",\"\\u0144\":\"n\",\"\\u0146\":\"n\",\"\\u0148\":\"n\",\"\\u014b\":\"n\",\"\\u014c\":\"O\",\n\"\\u014e\":\"O\",\"\\u0150\":\"O\",\"\\u014d\":\"o\",\"\\u014f\":\"o\",\"\\u0151\":\"o\",\"\\u0154\":\"R\",\"\\u0156\":\"R\",\"\\u0158\":\"R\",\"\\u0155\":\"r\",\"\\u0157\":\"r\",\"\\u0159\":\"r\",\"\\u015a\":\"S\",\"\\u015c\":\"S\",\"\\u015e\":\"S\",\"\\u0160\":\"S\",\"\\u015b\":\"s\",\"\\u015d\":\"s\",\"\\u015f\":\"s\",\"\\u0161\":\"s\",\"\\u0162\":\"T\",\"\\u0164\":\"T\",\"\\u0166\":\"T\",\"\\u0163\":\"t\",\"\\u0165\":\"t\",\"\\u0167\":\"t\",\"\\u0168\":\"U\",\"\\u016a\":\"U\",\"\\u016c\":\"U\",\"\\u016e\":\"U\",\"\\u0170\":\"U\",\"\\u0172\":\"U\",\"\\u0169\":\"u\",\"\\u016b\":\"u\",\"\\u016d\":\"u\",\"\\u016f\":\"u\",\"\\u0171\":\"u\",\"\\u0173\":\"u\",\"\\u0174\":\"W\",\"\\u0175\":\"w\",\n\"\\u0176\":\"Y\",\"\\u0177\":\"y\",\"\\u0178\":\"Y\",\"\\u0179\":\"Z\",\"\\u017b\":\"Z\",\"\\u017d\":\"Z\",\"\\u017a\":\"z\",\"\\u017c\":\"z\",\"\\u017e\":\"z\",\"\\u0132\":\"IJ\",\"\\u0133\":\"ij\",\"\\u0152\":\"Oe\",\"\\u0153\":\"oe\",\"\\u0149\":\"'n\",\"\\u017f\":\"s\"},Hr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},Jr={\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\"},Yr={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},Qr=parseFloat,Xr=parseInt,ne=\"object\"==typeof global&&global&&global.Object===Object&&global,te=\"object\"==typeof self&&self&&self.Object===Object&&self,re=ne||te||Function(\"return this\")(),ee=\"object\"==typeof exports&&exports&&!exports.nodeType&&exports,ue=ee&&\"object\"==typeof module&&module&&!module.nodeType&&module,ie=ue&&ue.exports===ee,oe=ie&&ne.process,fe=function(){\ntry{var n=ue&&ue.require&&ue.require(\"util\").types;return n?n:oe&&oe.binding&&oe.binding(\"util\")}catch(n){}}(),ce=fe&&fe.isArrayBuffer,ae=fe&&fe.isDate,le=fe&&fe.isMap,se=fe&&fe.isRegExp,he=fe&&fe.isSet,pe=fe&&fe.isTypedArray,_e=m(\"length\"),ve=x(Gr),ge=x(Hr),ye=x(Jr),de=function p(x){function Z(n){if(cc(n)&&!bh(n)&&!(n instanceof Ct)){if(n instanceof Y)return n;if(bl.call(n,\"__wrapped__\"))return eo(n)}return new Y(n)}function J(){}function Y(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,\nthis.__index__=0,this.__values__=X}function Ct(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=Un,this.__views__=[]}function $t(){var n=new Ct(this.__wrapped__);return n.__actions__=Tu(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=Tu(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=Tu(this.__views__),n}function Yt(){if(this.__filtered__){var n=new Ct(this);n.__dir__=-1,\nn.__filtered__=!0}else n=this.clone(),n.__dir__*=-1;return n}function Qt(){var n=this.__wrapped__.value(),t=this.__dir__,r=bh(n),e=t<0,u=r?n.length:0,i=Oi(0,u,this.__views__),o=i.start,f=i.end,c=f-o,a=e?f:o-1,l=this.__iteratees__,s=l.length,h=0,p=Hl(c,this.__takeCount__);if(!r||!e&&u==c&&p==c)return wu(n,this.__actions__);var _=[];n:for(;c--&&h<p;){a+=t;for(var v=-1,g=n[a];++v<s;){var y=l[v],d=y.iteratee,b=y.type,w=d(g);if(b==zn)g=w;else if(!w){if(b==Rn)continue n;break n}}_[h++]=g}return _}function Xt(n){\nvar t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function nr(){this.__data__=is?is(null):{},this.size=0}function tr(n){var t=this.has(n)&&delete this.__data__[n];return this.size-=t?1:0,t}function rr(n){var t=this.__data__;if(is){var r=t[n];return r===on?X:r}return bl.call(t,n)?t[n]:X}function er(n){var t=this.__data__;return is?t[n]!==X:bl.call(t,n)}function ur(n,t){var r=this.__data__;return this.size+=this.has(n)?0:1,r[n]=is&&t===X?on:t,this}function ir(n){\nvar t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function or(){this.__data__=[],this.size=0}function fr(n){var t=this.__data__,r=Wr(t,n);return!(r<0)&&(r==t.length-1?t.pop():Ll.call(t,r,1),--this.size,!0)}function cr(n){var t=this.__data__,r=Wr(t,n);return r<0?X:t[r][1]}function ar(n){return Wr(this.__data__,n)>-1}function lr(n,t){var r=this.__data__,e=Wr(r,n);return e<0?(++this.size,r.push([n,t])):r[e][1]=t,this}function sr(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){\nvar e=n[t];this.set(e[0],e[1])}}function hr(){this.size=0,this.__data__={hash:new Xt,map:new(ts||ir),string:new Xt}}function pr(n){var t=xi(this,n).delete(n);return this.size-=t?1:0,t}function _r(n){return xi(this,n).get(n)}function vr(n){return xi(this,n).has(n)}function gr(n,t){var r=xi(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this}function yr(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new sr;++t<r;)this.add(n[t])}function dr(n){return this.__data__.set(n,on),this}function br(n){\nreturn this.__data__.has(n)}function wr(n){this.size=(this.__data__=new ir(n)).size}function mr(){this.__data__=new ir,this.size=0}function xr(n){var t=this.__data__,r=t.delete(n);return this.size=t.size,r}function jr(n){return this.__data__.get(n)}function Ar(n){return this.__data__.has(n)}function kr(n,t){var r=this.__data__;if(r instanceof ir){var e=r.__data__;if(!ts||e.length<tn-1)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new sr(e)}return r.set(n,t),this.size=r.size,this}function Or(n,t){\nvar r=bh(n),e=!r&&dh(n),u=!r&&!e&&mh(n),i=!r&&!e&&!u&&Oh(n),o=r||e||u||i,f=o?O(n.length,hl):[],c=f.length;for(var a in n)!t&&!bl.call(n,a)||o&&(\"length\"==a||u&&(\"offset\"==a||\"parent\"==a)||i&&(\"buffer\"==a||\"byteLength\"==a||\"byteOffset\"==a)||Ci(a,c))||f.push(a);return f}function Ir(n){var t=n.length;return t?n[tu(0,t-1)]:X}function Rr(n,t){return Xi(Tu(n),Mr(t,0,n.length))}function zr(n){return Xi(Tu(n))}function Er(n,t,r){(r===X||Gf(n[t],r))&&(r!==X||t in n)||Br(n,t,r)}function Sr(n,t,r){var e=n[t];\nbl.call(n,t)&&Gf(e,r)&&(r!==X||t in n)||Br(n,t,r)}function Wr(n,t){for(var r=n.length;r--;)if(Gf(n[r][0],t))return r;return-1}function Lr(n,t,r,e){return ys(n,function(n,u,i){t(e,n,r(n),i)}),e}function Cr(n,t){return n&&$u(t,Pc(t),n)}function Ur(n,t){return n&&$u(t,qc(t),n)}function Br(n,t,r){\"__proto__\"==t&&Tl?Tl(n,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):n[t]=r}function Tr(n,t){for(var r=-1,e=t.length,u=il(e),i=null==n;++r<e;)u[r]=i?X:Mc(n,t[r]);return u}function Mr(n,t,r){return n===n&&(r!==X&&(n=n<=r?n:r),\nt!==X&&(n=n>=t?n:t)),n}function Fr(n,t,e,u,i,o){var f,c=t&an,a=t&ln,l=t&sn;if(e&&(f=i?e(n,u,i,o):e(n)),f!==X)return f;if(!fc(n))return n;var s=bh(n);if(s){if(f=zi(n),!c)return Tu(n,f)}else{var h=zs(n),p=h==Kn||h==Vn;if(mh(n))return Iu(n,c);if(h==Yn||h==Dn||p&&!i){if(f=a||p?{}:Ei(n),!c)return a?Mu(n,Ur(f,n)):Du(n,Cr(f,n))}else{if(!Vr[h])return i?n:{};f=Si(n,h,c)}}o||(o=new wr);var _=o.get(n);if(_)return _;o.set(n,f),kh(n)?n.forEach(function(r){f.add(Fr(r,t,e,r,n,o))}):jh(n)&&n.forEach(function(r,u){\nf.set(u,Fr(r,t,e,u,n,o))});var v=l?a?di:yi:a?qc:Pc,g=s?X:v(n);return r(g||n,function(r,u){g&&(u=r,r=n[u]),Sr(f,u,Fr(r,t,e,u,n,o))}),f}function Nr(n){var t=Pc(n);return function(r){return Pr(r,n,t)}}function Pr(n,t,r){var e=r.length;if(null==n)return!e;for(n=ll(n);e--;){var u=r[e],i=t[u],o=n[u];if(o===X&&!(u in n)||!i(o))return!1}return!0}function Gr(n,t,r){if(\"function\"!=typeof n)throw new pl(en);return Ws(function(){n.apply(X,r)},t)}function Hr(n,t,r,e){var u=-1,i=o,a=!0,l=n.length,s=[],h=t.length;\nif(!l)return s;r&&(t=c(t,z(r))),e?(i=f,a=!1):t.length>=tn&&(i=S,a=!1,t=new yr(t));n:for(;++u<l;){var p=n[u],_=null==r?p:r(p);if(p=e||0!==p?p:0,a&&_===_){for(var v=h;v--;)if(t[v]===_)continue n;s.push(p)}else i(t,_,e)||s.push(p)}return s}function Jr(n,t){var r=!0;return ys(n,function(n,e,u){return r=!!t(n,e,u)}),r}function Yr(n,t,r){for(var e=-1,u=n.length;++e<u;){var i=n[e],o=t(i);if(null!=o&&(f===X?o===o&&!bc(o):r(o,f)))var f=o,c=i}return c}function ne(n,t,r,e){var u=n.length;for(r=kc(r),r<0&&(r=-r>u?0:u+r),\ne=e===X||e>u?u:kc(e),e<0&&(e+=u),e=r>e?0:Oc(e);r<e;)n[r++]=t;return n}function te(n,t){var r=[];return ys(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function ee(n,t,r,e,u){var i=-1,o=n.length;for(r||(r=Li),u||(u=[]);++i<o;){var f=n[i];t>0&&r(f)?t>1?ee(f,t-1,r,e,u):a(u,f):e||(u[u.length]=f)}return u}function ue(n,t){return n&&bs(n,t,Pc)}function oe(n,t){return n&&ws(n,t,Pc)}function fe(n,t){return i(t,function(t){return uc(n[t])})}function _e(n,t){t=ku(t,n);for(var r=0,e=t.length;null!=n&&r<e;)n=n[no(t[r++])];\nreturn r&&r==e?n:X}function de(n,t,r){var e=t(n);return bh(n)?e:a(e,r(n))}function we(n){return null==n?n===X?ut:Jn:Bl&&Bl in ll(n)?ki(n):Ki(n)}function me(n,t){return n>t}function xe(n,t){return null!=n&&bl.call(n,t)}function je(n,t){return null!=n&&t in ll(n)}function Ae(n,t,r){return n>=Hl(t,r)&&n<Gl(t,r)}function ke(n,t,r){for(var e=r?f:o,u=n[0].length,i=n.length,a=i,l=il(i),s=1/0,h=[];a--;){var p=n[a];a&&t&&(p=c(p,z(t))),s=Hl(p.length,s),l[a]=!r&&(t||u>=120&&p.length>=120)?new yr(a&&p):X}p=n[0];\nvar _=-1,v=l[0];n:for(;++_<u&&h.length<s;){var g=p[_],y=t?t(g):g;if(g=r||0!==g?g:0,!(v?S(v,y):e(h,y,r))){for(a=i;--a;){var d=l[a];if(!(d?S(d,y):e(n[a],y,r)))continue n}v&&v.push(y),h.push(g)}}return h}function Oe(n,t,r,e){return ue(n,function(n,u,i){t(e,r(n),u,i)}),e}function Ie(t,r,e){r=ku(r,t),t=Gi(t,r);var u=null==t?t:t[no(jo(r))];return null==u?X:n(u,t,e)}function Re(n){return cc(n)&&we(n)==Dn}function ze(n){return cc(n)&&we(n)==ft}function Ee(n){return cc(n)&&we(n)==Pn}function Se(n,t,r,e,u){\nreturn n===t||(null==n||null==t||!cc(n)&&!cc(t)?n!==n&&t!==t:We(n,t,r,e,Se,u))}function We(n,t,r,e,u,i){var o=bh(n),f=bh(t),c=o?Mn:zs(n),a=f?Mn:zs(t);c=c==Dn?Yn:c,a=a==Dn?Yn:a;var l=c==Yn,s=a==Yn,h=c==a;if(h&&mh(n)){if(!mh(t))return!1;o=!0,l=!1}if(h&&!l)return i||(i=new wr),o||Oh(n)?pi(n,t,r,e,u,i):_i(n,t,c,r,e,u,i);if(!(r&hn)){var p=l&&bl.call(n,\"__wrapped__\"),_=s&&bl.call(t,\"__wrapped__\");if(p||_){var v=p?n.value():n,g=_?t.value():t;return i||(i=new wr),u(v,g,r,e,i)}}return!!h&&(i||(i=new wr),vi(n,t,r,e,u,i));\n}function Le(n){return cc(n)&&zs(n)==Gn}function Ce(n,t,r,e){var u=r.length,i=u,o=!e;if(null==n)return!i;for(n=ll(n);u--;){var f=r[u];if(o&&f[2]?f[1]!==n[f[0]]:!(f[0]in n))return!1}for(;++u<i;){f=r[u];var c=f[0],a=n[c],l=f[1];if(o&&f[2]){if(a===X&&!(c in n))return!1}else{var s=new wr;if(e)var h=e(a,l,c,n,t,s);if(!(h===X?Se(l,a,hn|pn,e,s):h))return!1}}return!0}function Ue(n){return!(!fc(n)||Di(n))&&(uc(n)?kl:Zt).test(to(n))}function Be(n){return cc(n)&&we(n)==nt}function Te(n){return cc(n)&&zs(n)==tt;\n}function $e(n){return cc(n)&&oc(n.length)&&!!Kr[we(n)]}function De(n){return\"function\"==typeof n?n:null==n?La:\"object\"==typeof n?bh(n)?Ze(n[0],n[1]):qe(n):Fa(n)}function Me(n){if(!Mi(n))return Vl(n);var t=[];for(var r in ll(n))bl.call(n,r)&&\"constructor\"!=r&&t.push(r);return t}function Fe(n){if(!fc(n))return Zi(n);var t=Mi(n),r=[];for(var e in n)(\"constructor\"!=e||!t&&bl.call(n,e))&&r.push(e);return r}function Ne(n,t){return n<t}function Pe(n,t){var r=-1,e=Hf(n)?il(n.length):[];return ys(n,function(n,u,i){\ne[++r]=t(n,u,i)}),e}function qe(n){var t=ji(n);return 1==t.length&&t[0][2]?Ni(t[0][0],t[0][1]):function(r){return r===n||Ce(r,n,t)}}function Ze(n,t){return Bi(n)&&Fi(t)?Ni(no(n),t):function(r){var e=Mc(r,n);return e===X&&e===t?Nc(r,n):Se(t,e,hn|pn)}}function Ke(n,t,r,e,u){n!==t&&bs(t,function(i,o){if(u||(u=new wr),fc(i))Ve(n,t,o,r,Ke,e,u);else{var f=e?e(Ji(n,o),i,o+\"\",n,t,u):X;f===X&&(f=i),Er(n,o,f)}},qc)}function Ve(n,t,r,e,u,i,o){var f=Ji(n,r),c=Ji(t,r),a=o.get(c);if(a)return Er(n,r,a),X;var l=i?i(f,c,r+\"\",n,t,o):X,s=l===X;\nif(s){var h=bh(c),p=!h&&mh(c),_=!h&&!p&&Oh(c);l=c,h||p||_?bh(f)?l=f:Jf(f)?l=Tu(f):p?(s=!1,l=Iu(c,!0)):_?(s=!1,l=Wu(c,!0)):l=[]:gc(c)||dh(c)?(l=f,dh(f)?l=Rc(f):fc(f)&&!uc(f)||(l=Ei(c))):s=!1}s&&(o.set(c,l),u(l,c,e,i,o),o.delete(c)),Er(n,r,l)}function Ge(n,t){var r=n.length;if(r)return t+=t<0?r:0,Ci(t,r)?n[t]:X}function He(n,t,r){t=t.length?c(t,function(n){return bh(n)?function(t){return _e(t,1===n.length?n[0]:n)}:n}):[La];var e=-1;return t=c(t,z(mi())),A(Pe(n,function(n,r,u){return{criteria:c(t,function(t){\nreturn t(n)}),index:++e,value:n}}),function(n,t){return Cu(n,t,r)})}function Je(n,t){return Ye(n,t,function(t,r){return Nc(n,r)})}function Ye(n,t,r){for(var e=-1,u=t.length,i={};++e<u;){var o=t[e],f=_e(n,o);r(f,o)&&fu(i,ku(o,n),f)}return i}function Qe(n){return function(t){return _e(t,n)}}function Xe(n,t,r,e){var u=e?d:y,i=-1,o=t.length,f=n;for(n===t&&(t=Tu(t)),r&&(f=c(n,z(r)));++i<o;)for(var a=0,l=t[i],s=r?r(l):l;(a=u(f,s,a,e))>-1;)f!==n&&Ll.call(f,a,1),Ll.call(n,a,1);return n}function nu(n,t){for(var r=n?t.length:0,e=r-1;r--;){\nvar u=t[r];if(r==e||u!==i){var i=u;Ci(u)?Ll.call(n,u,1):yu(n,u)}}return n}function tu(n,t){return n+Nl(Ql()*(t-n+1))}function ru(n,t,r,e){for(var u=-1,i=Gl(Fl((t-n)/(r||1)),0),o=il(i);i--;)o[e?i:++u]=n,n+=r;return o}function eu(n,t){var r=\"\";if(!n||t<1||t>Wn)return r;do t%2&&(r+=n),t=Nl(t/2),t&&(n+=n);while(t);return r}function uu(n,t){return Ls(Vi(n,t,La),n+\"\")}function iu(n){return Ir(ra(n))}function ou(n,t){var r=ra(n);return Xi(r,Mr(t,0,r.length))}function fu(n,t,r,e){if(!fc(n))return n;t=ku(t,n);\nfor(var u=-1,i=t.length,o=i-1,f=n;null!=f&&++u<i;){var c=no(t[u]),a=r;if(\"__proto__\"===c||\"constructor\"===c||\"prototype\"===c)return n;if(u!=o){var l=f[c];a=e?e(l,c,f):X,a===X&&(a=fc(l)?l:Ci(t[u+1])?[]:{})}Sr(f,c,a),f=f[c]}return n}function cu(n){return Xi(ra(n))}function au(n,t,r){var e=-1,u=n.length;t<0&&(t=-t>u?0:u+t),r=r>u?u:r,r<0&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0;for(var i=il(u);++e<u;)i[e]=n[e+t];return i}function lu(n,t){var r;return ys(n,function(n,e,u){return r=t(n,e,u),!r}),!!r}function su(n,t,r){\nvar e=0,u=null==n?e:n.length;if(\"number\"==typeof t&&t===t&&u<=Tn){for(;e<u;){var i=e+u>>>1,o=n[i];null!==o&&!bc(o)&&(r?o<=t:o<t)?e=i+1:u=i}return u}return hu(n,t,La,r)}function hu(n,t,r,e){var u=0,i=null==n?0:n.length;if(0===i)return 0;t=r(t);for(var o=t!==t,f=null===t,c=bc(t),a=t===X;u<i;){var l=Nl((u+i)/2),s=r(n[l]),h=s!==X,p=null===s,_=s===s,v=bc(s);if(o)var g=e||_;else g=a?_&&(e||h):f?_&&h&&(e||!p):c?_&&h&&!p&&(e||!v):!p&&!v&&(e?s<=t:s<t);g?u=l+1:i=l}return Hl(i,Bn)}function pu(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){\nvar o=n[r],f=t?t(o):o;if(!r||!Gf(f,c)){var c=f;i[u++]=0===o?0:o}}return i}function _u(n){return\"number\"==typeof n?n:bc(n)?Cn:+n}function vu(n){if(\"string\"==typeof n)return n;if(bh(n))return c(n,vu)+\"\";if(bc(n))return vs?vs.call(n):\"\";var t=n+\"\";return\"0\"==t&&1/n==-Sn?\"-0\":t}function gu(n,t,r){var e=-1,u=o,i=n.length,c=!0,a=[],l=a;if(r)c=!1,u=f;else if(i>=tn){var s=t?null:ks(n);if(s)return P(s);c=!1,u=S,l=new yr}else l=t?[]:a;n:for(;++e<i;){var h=n[e],p=t?t(h):h;if(h=r||0!==h?h:0,c&&p===p){for(var _=l.length;_--;)if(l[_]===p)continue n;\nt&&l.push(p),a.push(h)}else u(l,p,r)||(l!==a&&l.push(p),a.push(h))}return a}function yu(n,t){return t=ku(t,n),n=Gi(n,t),null==n||delete n[no(jo(t))]}function du(n,t,r,e){return fu(n,t,r(_e(n,t)),e)}function bu(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?au(n,e?0:i,e?i+1:u):au(n,e?i+1:0,e?u:i)}function wu(n,t){var r=n;return r instanceof Ct&&(r=r.value()),l(t,function(n,t){return t.func.apply(t.thisArg,a([n],t.args))},r)}function mu(n,t,r){var e=n.length;if(e<2)return e?gu(n[0]):[];\nfor(var u=-1,i=il(e);++u<e;)for(var o=n[u],f=-1;++f<e;)f!=u&&(i[u]=Hr(i[u]||o,n[f],t,r));return gu(ee(i,1),t,r)}function xu(n,t,r){for(var e=-1,u=n.length,i=t.length,o={};++e<u;){r(o,n[e],e<i?t[e]:X)}return o}function ju(n){return Jf(n)?n:[]}function Au(n){return\"function\"==typeof n?n:La}function ku(n,t){return bh(n)?n:Bi(n,t)?[n]:Cs(Ec(n))}function Ou(n,t,r){var e=n.length;return r=r===X?e:r,!t&&r>=e?n:au(n,t,r)}function Iu(n,t){if(t)return n.slice();var r=n.length,e=zl?zl(r):new n.constructor(r);\nreturn n.copy(e),e}function Ru(n){var t=new n.constructor(n.byteLength);return new Rl(t).set(new Rl(n)),t}function zu(n,t){return new n.constructor(t?Ru(n.buffer):n.buffer,n.byteOffset,n.byteLength)}function Eu(n){var t=new n.constructor(n.source,Nt.exec(n));return t.lastIndex=n.lastIndex,t}function Su(n){return _s?ll(_s.call(n)):{}}function Wu(n,t){return new n.constructor(t?Ru(n.buffer):n.buffer,n.byteOffset,n.length)}function Lu(n,t){if(n!==t){var r=n!==X,e=null===n,u=n===n,i=bc(n),o=t!==X,f=null===t,c=t===t,a=bc(t);\nif(!f&&!a&&!i&&n>t||i&&o&&c&&!f&&!a||e&&o&&c||!r&&c||!u)return 1;if(!e&&!i&&!a&&n<t||a&&r&&u&&!e&&!i||f&&r&&u||!o&&u||!c)return-1}return 0}function Cu(n,t,r){for(var e=-1,u=n.criteria,i=t.criteria,o=u.length,f=r.length;++e<o;){var c=Lu(u[e],i[e]);if(c){if(e>=f)return c;return c*(\"desc\"==r[e]?-1:1)}}return n.index-t.index}function Uu(n,t,r,e){for(var u=-1,i=n.length,o=r.length,f=-1,c=t.length,a=Gl(i-o,0),l=il(c+a),s=!e;++f<c;)l[f]=t[f];for(;++u<o;)(s||u<i)&&(l[r[u]]=n[u]);for(;a--;)l[f++]=n[u++];return l;\n}function Bu(n,t,r,e){for(var u=-1,i=n.length,o=-1,f=r.length,c=-1,a=t.length,l=Gl(i-f,0),s=il(l+a),h=!e;++u<l;)s[u]=n[u];for(var p=u;++c<a;)s[p+c]=t[c];for(;++o<f;)(h||u<i)&&(s[p+r[o]]=n[u++]);return s}function Tu(n,t){var r=-1,e=n.length;for(t||(t=il(e));++r<e;)t[r]=n[r];return t}function $u(n,t,r,e){var u=!r;r||(r={});for(var i=-1,o=t.length;++i<o;){var f=t[i],c=e?e(r[f],n[f],f,r,n):X;c===X&&(c=n[f]),u?Br(r,f,c):Sr(r,f,c)}return r}function Du(n,t){return $u(n,Is(n),t)}function Mu(n,t){return $u(n,Rs(n),t);\n}function Fu(n,r){return function(e,u){var i=bh(e)?t:Lr,o=r?r():{};return i(e,n,mi(u,2),o)}}function Nu(n){return uu(function(t,r){var e=-1,u=r.length,i=u>1?r[u-1]:X,o=u>2?r[2]:X;for(i=n.length>3&&\"function\"==typeof i?(u--,i):X,o&&Ui(r[0],r[1],o)&&(i=u<3?X:i,u=1),t=ll(t);++e<u;){var f=r[e];f&&n(t,f,e,i)}return t})}function Pu(n,t){return function(r,e){if(null==r)return r;if(!Hf(r))return n(r,e);for(var u=r.length,i=t?u:-1,o=ll(r);(t?i--:++i<u)&&e(o[i],i,o)!==!1;);return r}}function qu(n){return function(t,r,e){\nfor(var u=-1,i=ll(t),o=e(t),f=o.length;f--;){var c=o[n?f:++u];if(r(i[c],c,i)===!1)break}return t}}function Zu(n,t,r){function e(){return(this&&this!==re&&this instanceof e?i:n).apply(u?r:this,arguments)}var u=t&_n,i=Gu(n);return e}function Ku(n){return function(t){t=Ec(t);var r=T(t)?G(t):X,e=r?r[0]:t.charAt(0),u=r?Ou(r,1).join(\"\"):t.slice(1);return e[n]()+u}}function Vu(n){return function(t){return l(Ra(ca(t).replace($r,\"\")),n,\"\")}}function Gu(n){return function(){var t=arguments;switch(t.length){\ncase 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=gs(n.prototype),e=n.apply(r,t);return fc(e)?e:r}}function Hu(t,r,e){function u(){for(var o=arguments.length,f=il(o),c=o,a=wi(u);c--;)f[c]=arguments[c];var l=o<3&&f[0]!==a&&f[o-1]!==a?[]:N(f,a);\nreturn o-=l.length,o<e?oi(t,r,Qu,u.placeholder,X,f,l,X,X,e-o):n(this&&this!==re&&this instanceof u?i:t,this,f)}var i=Gu(t);return u}function Ju(n){return function(t,r,e){var u=ll(t);if(!Hf(t)){var i=mi(r,3);t=Pc(t),r=function(n){return i(u[n],n,u)}}var o=n(t,r,e);return o>-1?u[i?t[o]:o]:X}}function Yu(n){return gi(function(t){var r=t.length,e=r,u=Y.prototype.thru;for(n&&t.reverse();e--;){var i=t[e];if(\"function\"!=typeof i)throw new pl(en);if(u&&!o&&\"wrapper\"==bi(i))var o=new Y([],!0)}for(e=o?e:r;++e<r;){\ni=t[e];var f=bi(i),c=\"wrapper\"==f?Os(i):X;o=c&&$i(c[0])&&c[1]==(mn|yn|bn|xn)&&!c[4].length&&1==c[9]?o[bi(c[0])].apply(o,c[3]):1==i.length&&$i(i)?o[f]():o.thru(i)}return function(){var n=arguments,e=n[0];if(o&&1==n.length&&bh(e))return o.plant(e).value();for(var u=0,i=r?t[u].apply(this,n):e;++u<r;)i=t[u].call(this,i);return i}})}function Qu(n,t,r,e,u,i,o,f,c,a){function l(){for(var y=arguments.length,d=il(y),b=y;b--;)d[b]=arguments[b];if(_)var w=wi(l),m=C(d,w);if(e&&(d=Uu(d,e,u,_)),i&&(d=Bu(d,i,o,_)),\ny-=m,_&&y<a){return oi(n,t,Qu,l.placeholder,r,d,N(d,w),f,c,a-y)}var x=h?r:this,j=p?x[n]:n;return y=d.length,f?d=Hi(d,f):v&&y>1&&d.reverse(),s&&c<y&&(d.length=c),this&&this!==re&&this instanceof l&&(j=g||Gu(j)),j.apply(x,d)}var s=t&mn,h=t&_n,p=t&vn,_=t&(yn|dn),v=t&jn,g=p?X:Gu(n);return l}function Xu(n,t){return function(r,e){return Oe(r,n,t(e),{})}}function ni(n,t){return function(r,e){var u;if(r===X&&e===X)return t;if(r!==X&&(u=r),e!==X){if(u===X)return e;\"string\"==typeof r||\"string\"==typeof e?(r=vu(r),\ne=vu(e)):(r=_u(r),e=_u(e)),u=n(r,e)}return u}}function ti(t){return gi(function(r){return r=c(r,z(mi())),uu(function(e){var u=this;return t(r,function(t){return n(t,u,e)})})})}function ri(n,t){t=t===X?\" \":vu(t);var r=t.length;if(r<2)return r?eu(t,n):t;var e=eu(t,Fl(n/V(t)));return T(t)?Ou(G(e),0,n).join(\"\"):e.slice(0,n)}function ei(t,r,e,u){function i(){for(var r=-1,c=arguments.length,a=-1,l=u.length,s=il(l+c),h=this&&this!==re&&this instanceof i?f:t;++a<l;)s[a]=u[a];for(;c--;)s[a++]=arguments[++r];\nreturn n(h,o?e:this,s)}var o=r&_n,f=Gu(t);return i}function ui(n){return function(t,r,e){return e&&\"number\"!=typeof e&&Ui(t,r,e)&&(r=e=X),t=Ac(t),r===X?(r=t,t=0):r=Ac(r),e=e===X?t<r?1:-1:Ac(e),ru(t,r,e,n)}}function ii(n){return function(t,r){return\"string\"==typeof t&&\"string\"==typeof r||(t=Ic(t),r=Ic(r)),n(t,r)}}function oi(n,t,r,e,u,i,o,f,c,a){var l=t&yn,s=l?o:X,h=l?X:o,p=l?i:X,_=l?X:i;t|=l?bn:wn,t&=~(l?wn:bn),t&gn||(t&=~(_n|vn));var v=[n,t,u,p,s,_,h,f,c,a],g=r.apply(X,v);return $i(n)&&Ss(g,v),g.placeholder=e,\nYi(g,n,t)}function fi(n){var t=al[n];return function(n,r){if(n=Ic(n),r=null==r?0:Hl(kc(r),292),r&&Zl(n)){var e=(Ec(n)+\"e\").split(\"e\");return e=(Ec(t(e[0]+\"e\"+(+e[1]+r)))+\"e\").split(\"e\"),+(e[0]+\"e\"+(+e[1]-r))}return t(n)}}function ci(n){return function(t){var r=zs(t);return r==Gn?M(t):r==tt?q(t):I(t,n(t))}}function ai(n,t,r,e,u,i,o,f){var c=t&vn;if(!c&&\"function\"!=typeof n)throw new pl(en);var a=e?e.length:0;if(a||(t&=~(bn|wn),e=u=X),o=o===X?o:Gl(kc(o),0),f=f===X?f:kc(f),a-=u?u.length:0,t&wn){var l=e,s=u;\ne=u=X}var h=c?X:Os(n),p=[n,t,r,e,u,l,s,i,o,f];if(h&&qi(p,h),n=p[0],t=p[1],r=p[2],e=p[3],u=p[4],f=p[9]=p[9]===X?c?0:n.length:Gl(p[9]-a,0),!f&&t&(yn|dn)&&(t&=~(yn|dn)),t&&t!=_n)_=t==yn||t==dn?Hu(n,t,f):t!=bn&&t!=(_n|bn)||u.length?Qu.apply(X,p):ei(n,t,r,e);else var _=Zu(n,t,r);return Yi((h?ms:Ss)(_,p),n,t)}function li(n,t,r,e){return n===X||Gf(n,gl[r])&&!bl.call(e,r)?t:n}function si(n,t,r,e,u,i){return fc(n)&&fc(t)&&(i.set(t,n),Ke(n,t,X,si,i),i.delete(t)),n}function hi(n){return gc(n)?X:n}function pi(n,t,r,e,u,i){\nvar o=r&hn,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return!1;var a=i.get(n),l=i.get(t);if(a&&l)return a==t&&l==n;var s=-1,p=!0,_=r&pn?new yr:X;for(i.set(n,t),i.set(t,n);++s<f;){var v=n[s],g=t[s];if(e)var y=o?e(g,v,s,t,n,i):e(v,g,s,n,t,i);if(y!==X){if(y)continue;p=!1;break}if(_){if(!h(t,function(n,t){if(!S(_,t)&&(v===n||u(v,n,r,e,i)))return _.push(t)})){p=!1;break}}else if(v!==g&&!u(v,g,r,e,i)){p=!1;break}}return i.delete(n),i.delete(t),p}function _i(n,t,r,e,u,i,o){switch(r){case ct:if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)return!1;\nn=n.buffer,t=t.buffer;case ft:return!(n.byteLength!=t.byteLength||!i(new Rl(n),new Rl(t)));case Nn:case Pn:case Hn:return Gf(+n,+t);case Zn:return n.name==t.name&&n.message==t.message;case nt:case rt:return n==t+\"\";case Gn:var f=M;case tt:var c=e&hn;if(f||(f=P),n.size!=t.size&&!c)return!1;var a=o.get(n);if(a)return a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i.get(n),h=i.get(t);if(s&&h)return s==t&&h==n;var p=!0;i.set(n,t),i.set(t,n);for(var _=o;++a<c;){l=f[a];var v=n[l],g=t[l];if(e)var y=o?e(g,v,l,t,n,i):e(v,g,l,n,t,i);if(!(y===X?v===g||u(v,g,r,e,i):y)){p=!1;break}_||(_=\"constructor\"==l)}if(p&&!_){var d=n.constructor,b=t.constructor;d!=b&&\"constructor\"in n&&\"constructor\"in t&&!(\"function\"==typeof d&&d instanceof d&&\"function\"==typeof b&&b instanceof b)&&(p=!1)}return i.delete(n),\ni.delete(t),p}function gi(n){return Ls(Vi(n,X,_o),n+\"\")}function yi(n){return de(n,Pc,Is)}function di(n){return de(n,qc,Rs)}function bi(n){for(var t=n.name+\"\",r=fs[t],e=bl.call(fs,t)?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function wi(n){return(bl.call(Z,\"placeholder\")?Z:n).placeholder}function mi(){var n=Z.iteratee||Ca;return n=n===Ca?De:n,arguments.length?n(arguments[0],arguments[1]):n}function xi(n,t){var r=n.__data__;return Ti(t)?r[\"string\"==typeof t?\"string\":\"hash\"]:r.map;\n}function ji(n){for(var t=Pc(n),r=t.length;r--;){var e=t[r],u=n[e];t[r]=[e,u,Fi(u)]}return t}function Ai(n,t){var r=B(n,t);return Ue(r)?r:X}function ki(n){var t=bl.call(n,Bl),r=n[Bl];try{n[Bl]=X;var e=!0}catch(n){}var u=xl.call(n);return e&&(t?n[Bl]=r:delete n[Bl]),u}function Oi(n,t,r){for(var e=-1,u=r.length;++e<u;){var i=r[e],o=i.size;switch(i.type){case\"drop\":n+=o;break;case\"dropRight\":t-=o;break;case\"take\":t=Hl(t,n+o);break;case\"takeRight\":n=Gl(n,t-o)}}return{start:n,end:t}}function Ii(n){var t=n.match(Bt);\nreturn t?t[1].split(Tt):[]}function Ri(n,t,r){t=ku(t,n);for(var e=-1,u=t.length,i=!1;++e<u;){var o=no(t[e]);if(!(i=null!=n&&r(n,o)))break;n=n[o]}return i||++e!=u?i:(u=null==n?0:n.length,!!u&&oc(u)&&Ci(o,u)&&(bh(n)||dh(n)))}function zi(n){var t=n.length,r=new n.constructor(t);return t&&\"string\"==typeof n[0]&&bl.call(n,\"index\")&&(r.index=n.index,r.input=n.input),r}function Ei(n){return\"function\"!=typeof n.constructor||Mi(n)?{}:gs(El(n))}function Si(n,t,r){var e=n.constructor;switch(t){case ft:return Ru(n);\ncase Nn:case Pn:return new e(+n);case ct:return zu(n,r);case at:case lt:case st:case ht:case pt:case _t:case vt:case gt:case yt:return Wu(n,r);case Gn:return new e;case Hn:case rt:return new e(n);case nt:return Eu(n);case tt:return new e;case et:return Su(n)}}function Wi(n,t){var r=t.length;if(!r)return n;var e=r-1;return t[e]=(r>1?\"& \":\"\")+t[e],t=t.join(r>2?\", \":\" \"),n.replace(Ut,\"{\\n/* [wrapped with \"+t+\"] */\\n\")}function Li(n){return bh(n)||dh(n)||!!(Cl&&n&&n[Cl])}function Ci(n,t){var r=typeof n;\nreturn t=null==t?Wn:t,!!t&&(\"number\"==r||\"symbol\"!=r&&Vt.test(n))&&n>-1&&n%1==0&&n<t}function Ui(n,t,r){if(!fc(r))return!1;var e=typeof t;return!!(\"number\"==e?Hf(r)&&Ci(t,r.length):\"string\"==e&&t in r)&&Gf(r[t],n)}function Bi(n,t){if(bh(n))return!1;var r=typeof n;return!(\"number\"!=r&&\"symbol\"!=r&&\"boolean\"!=r&&null!=n&&!bc(n))||(zt.test(n)||!Rt.test(n)||null!=t&&n in ll(t))}function Ti(n){var t=typeof n;return\"string\"==t||\"number\"==t||\"symbol\"==t||\"boolean\"==t?\"__proto__\"!==n:null===n}function $i(n){\nvar t=bi(n),r=Z[t];if(\"function\"!=typeof r||!(t in Ct.prototype))return!1;if(n===r)return!0;var e=Os(r);return!!e&&n===e[0]}function Di(n){return!!ml&&ml in n}function Mi(n){var t=n&&n.constructor;return n===(\"function\"==typeof t&&t.prototype||gl)}function Fi(n){return n===n&&!fc(n)}function Ni(n,t){return function(r){return null!=r&&(r[n]===t&&(t!==X||n in ll(r)))}}function Pi(n){var t=Cf(n,function(n){return r.size===fn&&r.clear(),n}),r=t.cache;return t}function qi(n,t){var r=n[1],e=t[1],u=r|e,i=u<(_n|vn|mn),o=e==mn&&r==yn||e==mn&&r==xn&&n[7].length<=t[8]||e==(mn|xn)&&t[7].length<=t[8]&&r==yn;\nif(!i&&!o)return n;e&_n&&(n[2]=t[2],u|=r&_n?0:gn);var f=t[3];if(f){var c=n[3];n[3]=c?Uu(c,f,t[4]):f,n[4]=c?N(n[3],cn):t[4]}return f=t[5],f&&(c=n[5],n[5]=c?Bu(c,f,t[6]):f,n[6]=c?N(n[5],cn):t[6]),f=t[7],f&&(n[7]=f),e&mn&&(n[8]=null==n[8]?t[8]:Hl(n[8],t[8])),null==n[9]&&(n[9]=t[9]),n[0]=t[0],n[1]=u,n}function Zi(n){var t=[];if(null!=n)for(var r in ll(n))t.push(r);return t}function Ki(n){return xl.call(n)}function Vi(t,r,e){return r=Gl(r===X?t.length-1:r,0),function(){for(var u=arguments,i=-1,o=Gl(u.length-r,0),f=il(o);++i<o;)f[i]=u[r+i];\ni=-1;for(var c=il(r+1);++i<r;)c[i]=u[i];return c[r]=e(f),n(t,this,c)}}function Gi(n,t){return t.length<2?n:_e(n,au(t,0,-1))}function Hi(n,t){for(var r=n.length,e=Hl(t.length,r),u=Tu(n);e--;){var i=t[e];n[e]=Ci(i,r)?u[i]:X}return n}function Ji(n,t){if((\"constructor\"!==t||\"function\"!=typeof n[t])&&\"__proto__\"!=t)return n[t]}function Yi(n,t,r){var e=t+\"\";return Ls(n,Wi(e,ro(Ii(e),r)))}function Qi(n){var t=0,r=0;return function(){var e=Jl(),u=In-(e-r);if(r=e,u>0){if(++t>=On)return arguments[0]}else t=0;\nreturn n.apply(X,arguments)}}function Xi(n,t){var r=-1,e=n.length,u=e-1;for(t=t===X?e:t;++r<t;){var i=tu(r,u),o=n[i];n[i]=n[r],n[r]=o}return n.length=t,n}function no(n){if(\"string\"==typeof n||bc(n))return n;var t=n+\"\";return\"0\"==t&&1/n==-Sn?\"-0\":t}function to(n){if(null!=n){try{return dl.call(n)}catch(n){}try{return n+\"\"}catch(n){}}return\"\"}function ro(n,t){return r($n,function(r){var e=\"_.\"+r[0];t&r[1]&&!o(n,e)&&n.push(e)}),n.sort()}function eo(n){if(n instanceof Ct)return n.clone();var t=new Y(n.__wrapped__,n.__chain__);\nreturn t.__actions__=Tu(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}function uo(n,t,r){t=(r?Ui(n,t,r):t===X)?1:Gl(kc(t),0);var e=null==n?0:n.length;if(!e||t<1)return[];for(var u=0,i=0,o=il(Fl(e/t));u<e;)o[i++]=au(n,u,u+=t);return o}function io(n){for(var t=-1,r=null==n?0:n.length,e=0,u=[];++t<r;){var i=n[t];i&&(u[e++]=i)}return u}function oo(){var n=arguments.length;if(!n)return[];for(var t=il(n-1),r=arguments[0],e=n;e--;)t[e-1]=arguments[e];return a(bh(r)?Tu(r):[r],ee(t,1));\n}function fo(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===X?1:kc(t),au(n,t<0?0:t,e)):[]}function co(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===X?1:kc(t),t=e-t,au(n,0,t<0?0:t)):[]}function ao(n,t){return n&&n.length?bu(n,mi(t,3),!0,!0):[]}function lo(n,t){return n&&n.length?bu(n,mi(t,3),!0):[]}function so(n,t,r,e){var u=null==n?0:n.length;return u?(r&&\"number\"!=typeof r&&Ui(n,t,r)&&(r=0,e=u),ne(n,t,r,e)):[]}function ho(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:kc(r);\nreturn u<0&&(u=Gl(e+u,0)),g(n,mi(t,3),u)}function po(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e-1;return r!==X&&(u=kc(r),u=r<0?Gl(e+u,0):Hl(u,e-1)),g(n,mi(t,3),u,!0)}function _o(n){return(null==n?0:n.length)?ee(n,1):[]}function vo(n){return(null==n?0:n.length)?ee(n,Sn):[]}function go(n,t){return(null==n?0:n.length)?(t=t===X?1:kc(t),ee(n,t)):[]}function yo(n){for(var t=-1,r=null==n?0:n.length,e={};++t<r;){var u=n[t];e[u[0]]=u[1]}return e}function bo(n){return n&&n.length?n[0]:X}function wo(n,t,r){\nvar e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:kc(r);return u<0&&(u=Gl(e+u,0)),y(n,t,u)}function mo(n){return(null==n?0:n.length)?au(n,0,-1):[]}function xo(n,t){return null==n?\"\":Kl.call(n,t)}function jo(n){var t=null==n?0:n.length;return t?n[t-1]:X}function Ao(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e;return r!==X&&(u=kc(r),u=u<0?Gl(e+u,0):Hl(u,e-1)),t===t?K(n,t,u):g(n,b,u,!0)}function ko(n,t){return n&&n.length?Ge(n,kc(t)):X}function Oo(n,t){return n&&n.length&&t&&t.length?Xe(n,t):n;\n}function Io(n,t,r){return n&&n.length&&t&&t.length?Xe(n,t,mi(r,2)):n}function Ro(n,t,r){return n&&n.length&&t&&t.length?Xe(n,t,X,r):n}function zo(n,t){var r=[];if(!n||!n.length)return r;var e=-1,u=[],i=n.length;for(t=mi(t,3);++e<i;){var o=n[e];t(o,e,n)&&(r.push(o),u.push(e))}return nu(n,u),r}function Eo(n){return null==n?n:Xl.call(n)}function So(n,t,r){var e=null==n?0:n.length;return e?(r&&\"number\"!=typeof r&&Ui(n,t,r)?(t=0,r=e):(t=null==t?0:kc(t),r=r===X?e:kc(r)),au(n,t,r)):[]}function Wo(n,t){\nreturn su(n,t)}function Lo(n,t,r){return hu(n,t,mi(r,2))}function Co(n,t){var r=null==n?0:n.length;if(r){var e=su(n,t);if(e<r&&Gf(n[e],t))return e}return-1}function Uo(n,t){return su(n,t,!0)}function Bo(n,t,r){return hu(n,t,mi(r,2),!0)}function To(n,t){if(null==n?0:n.length){var r=su(n,t,!0)-1;if(Gf(n[r],t))return r}return-1}function $o(n){return n&&n.length?pu(n):[]}function Do(n,t){return n&&n.length?pu(n,mi(t,2)):[]}function Mo(n){var t=null==n?0:n.length;return t?au(n,1,t):[]}function Fo(n,t,r){\nreturn n&&n.length?(t=r||t===X?1:kc(t),au(n,0,t<0?0:t)):[]}function No(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===X?1:kc(t),t=e-t,au(n,t<0?0:t,e)):[]}function Po(n,t){return n&&n.length?bu(n,mi(t,3),!1,!0):[]}function qo(n,t){return n&&n.length?bu(n,mi(t,3)):[]}function Zo(n){return n&&n.length?gu(n):[]}function Ko(n,t){return n&&n.length?gu(n,mi(t,2)):[]}function Vo(n,t){return t=\"function\"==typeof t?t:X,n&&n.length?gu(n,X,t):[]}function Go(n){if(!n||!n.length)return[];var t=0;return n=i(n,function(n){\nif(Jf(n))return t=Gl(n.length,t),!0}),O(t,function(t){return c(n,m(t))})}function Ho(t,r){if(!t||!t.length)return[];var e=Go(t);return null==r?e:c(e,function(t){return n(r,X,t)})}function Jo(n,t){return xu(n||[],t||[],Sr)}function Yo(n,t){return xu(n||[],t||[],fu)}function Qo(n){var t=Z(n);return t.__chain__=!0,t}function Xo(n,t){return t(n),n}function nf(n,t){return t(n)}function tf(){return Qo(this)}function rf(){return new Y(this.value(),this.__chain__)}function ef(){this.__values__===X&&(this.__values__=jc(this.value()));\nvar n=this.__index__>=this.__values__.length;return{done:n,value:n?X:this.__values__[this.__index__++]}}function uf(){return this}function of(n){for(var t,r=this;r instanceof J;){var e=eo(r);e.__index__=0,e.__values__=X,t?u.__wrapped__=e:t=e;var u=e;r=r.__wrapped__}return u.__wrapped__=n,t}function ff(){var n=this.__wrapped__;if(n instanceof Ct){var t=n;return this.__actions__.length&&(t=new Ct(this)),t=t.reverse(),t.__actions__.push({func:nf,args:[Eo],thisArg:X}),new Y(t,this.__chain__)}return this.thru(Eo);\n}function cf(){return wu(this.__wrapped__,this.__actions__)}function af(n,t,r){var e=bh(n)?u:Jr;return r&&Ui(n,t,r)&&(t=X),e(n,mi(t,3))}function lf(n,t){return(bh(n)?i:te)(n,mi(t,3))}function sf(n,t){return ee(yf(n,t),1)}function hf(n,t){return ee(yf(n,t),Sn)}function pf(n,t,r){return r=r===X?1:kc(r),ee(yf(n,t),r)}function _f(n,t){return(bh(n)?r:ys)(n,mi(t,3))}function vf(n,t){return(bh(n)?e:ds)(n,mi(t,3))}function gf(n,t,r,e){n=Hf(n)?n:ra(n),r=r&&!e?kc(r):0;var u=n.length;return r<0&&(r=Gl(u+r,0)),\ndc(n)?r<=u&&n.indexOf(t,r)>-1:!!u&&y(n,t,r)>-1}function yf(n,t){return(bh(n)?c:Pe)(n,mi(t,3))}function df(n,t,r,e){return null==n?[]:(bh(t)||(t=null==t?[]:[t]),r=e?X:r,bh(r)||(r=null==r?[]:[r]),He(n,t,r))}function bf(n,t,r){var e=bh(n)?l:j,u=arguments.length<3;return e(n,mi(t,4),r,u,ys)}function wf(n,t,r){var e=bh(n)?s:j,u=arguments.length<3;return e(n,mi(t,4),r,u,ds)}function mf(n,t){return(bh(n)?i:te)(n,Uf(mi(t,3)))}function xf(n){return(bh(n)?Ir:iu)(n)}function jf(n,t,r){return t=(r?Ui(n,t,r):t===X)?1:kc(t),\n(bh(n)?Rr:ou)(n,t)}function Af(n){return(bh(n)?zr:cu)(n)}function kf(n){if(null==n)return 0;if(Hf(n))return dc(n)?V(n):n.length;var t=zs(n);return t==Gn||t==tt?n.size:Me(n).length}function Of(n,t,r){var e=bh(n)?h:lu;return r&&Ui(n,t,r)&&(t=X),e(n,mi(t,3))}function If(n,t){if(\"function\"!=typeof t)throw new pl(en);return n=kc(n),function(){if(--n<1)return t.apply(this,arguments)}}function Rf(n,t,r){return t=r?X:t,t=n&&null==t?n.length:t,ai(n,mn,X,X,X,X,t)}function zf(n,t){var r;if(\"function\"!=typeof t)throw new pl(en);\nreturn n=kc(n),function(){return--n>0&&(r=t.apply(this,arguments)),n<=1&&(t=X),r}}function Ef(n,t,r){t=r?X:t;var e=ai(n,yn,X,X,X,X,X,t);return e.placeholder=Ef.placeholder,e}function Sf(n,t,r){t=r?X:t;var e=ai(n,dn,X,X,X,X,X,t);return e.placeholder=Sf.placeholder,e}function Wf(n,t,r){function e(t){var r=h,e=p;return h=p=X,d=t,v=n.apply(e,r)}function u(n){return d=n,g=Ws(f,t),b?e(n):v}function i(n){var r=n-y,e=n-d,u=t-r;return w?Hl(u,_-e):u}function o(n){var r=n-y,e=n-d;return y===X||r>=t||r<0||w&&e>=_;\n}function f(){var n=fh();return o(n)?c(n):(g=Ws(f,i(n)),X)}function c(n){return g=X,m&&h?e(n):(h=p=X,v)}function a(){g!==X&&As(g),d=0,h=y=p=g=X}function l(){return g===X?v:c(fh())}function s(){var n=fh(),r=o(n);if(h=arguments,p=this,y=n,r){if(g===X)return u(y);if(w)return As(g),g=Ws(f,t),e(y)}return g===X&&(g=Ws(f,t)),v}var h,p,_,v,g,y,d=0,b=!1,w=!1,m=!0;if(\"function\"!=typeof n)throw new pl(en);return t=Ic(t)||0,fc(r)&&(b=!!r.leading,w=\"maxWait\"in r,_=w?Gl(Ic(r.maxWait)||0,t):_,m=\"trailing\"in r?!!r.trailing:m),\ns.cancel=a,s.flush=l,s}function Lf(n){return ai(n,jn)}function Cf(n,t){if(\"function\"!=typeof n||null!=t&&\"function\"!=typeof t)throw new pl(en);var r=function(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;if(i.has(u))return i.get(u);var o=n.apply(this,e);return r.cache=i.set(u,o)||i,o};return r.cache=new(Cf.Cache||sr),r}function Uf(n){if(\"function\"!=typeof n)throw new pl(en);return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:\nreturn!n.call(this,t[0],t[1]);case 3:return!n.call(this,t[0],t[1],t[2])}return!n.apply(this,t)}}function Bf(n){return zf(2,n)}function Tf(n,t){if(\"function\"!=typeof n)throw new pl(en);return t=t===X?t:kc(t),uu(n,t)}function $f(t,r){if(\"function\"!=typeof t)throw new pl(en);return r=null==r?0:Gl(kc(r),0),uu(function(e){var u=e[r],i=Ou(e,0,r);return u&&a(i,u),n(t,this,i)})}function Df(n,t,r){var e=!0,u=!0;if(\"function\"!=typeof n)throw new pl(en);return fc(r)&&(e=\"leading\"in r?!!r.leading:e,u=\"trailing\"in r?!!r.trailing:u),\nWf(n,t,{leading:e,maxWait:t,trailing:u})}function Mf(n){return Rf(n,1)}function Ff(n,t){return ph(Au(t),n)}function Nf(){if(!arguments.length)return[];var n=arguments[0];return bh(n)?n:[n]}function Pf(n){return Fr(n,sn)}function qf(n,t){return t=\"function\"==typeof t?t:X,Fr(n,sn,t)}function Zf(n){return Fr(n,an|sn)}function Kf(n,t){return t=\"function\"==typeof t?t:X,Fr(n,an|sn,t)}function Vf(n,t){return null==t||Pr(n,t,Pc(t))}function Gf(n,t){return n===t||n!==n&&t!==t}function Hf(n){return null!=n&&oc(n.length)&&!uc(n);\n}function Jf(n){return cc(n)&&Hf(n)}function Yf(n){return n===!0||n===!1||cc(n)&&we(n)==Nn}function Qf(n){return cc(n)&&1===n.nodeType&&!gc(n)}function Xf(n){if(null==n)return!0;if(Hf(n)&&(bh(n)||\"string\"==typeof n||\"function\"==typeof n.splice||mh(n)||Oh(n)||dh(n)))return!n.length;var t=zs(n);if(t==Gn||t==tt)return!n.size;if(Mi(n))return!Me(n).length;for(var r in n)if(bl.call(n,r))return!1;return!0}function nc(n,t){return Se(n,t)}function tc(n,t,r){r=\"function\"==typeof r?r:X;var e=r?r(n,t):X;return e===X?Se(n,t,X,r):!!e;\n}function rc(n){if(!cc(n))return!1;var t=we(n);return t==Zn||t==qn||\"string\"==typeof n.message&&\"string\"==typeof n.name&&!gc(n)}function ec(n){return\"number\"==typeof n&&Zl(n)}function uc(n){if(!fc(n))return!1;var t=we(n);return t==Kn||t==Vn||t==Fn||t==Xn}function ic(n){return\"number\"==typeof n&&n==kc(n)}function oc(n){return\"number\"==typeof n&&n>-1&&n%1==0&&n<=Wn}function fc(n){var t=typeof n;return null!=n&&(\"object\"==t||\"function\"==t)}function cc(n){return null!=n&&\"object\"==typeof n}function ac(n,t){\nreturn n===t||Ce(n,t,ji(t))}function lc(n,t,r){return r=\"function\"==typeof r?r:X,Ce(n,t,ji(t),r)}function sc(n){return vc(n)&&n!=+n}function hc(n){if(Es(n))throw new fl(rn);return Ue(n)}function pc(n){return null===n}function _c(n){return null==n}function vc(n){return\"number\"==typeof n||cc(n)&&we(n)==Hn}function gc(n){if(!cc(n)||we(n)!=Yn)return!1;var t=El(n);if(null===t)return!0;var r=bl.call(t,\"constructor\")&&t.constructor;return\"function\"==typeof r&&r instanceof r&&dl.call(r)==jl}function yc(n){\nreturn ic(n)&&n>=-Wn&&n<=Wn}function dc(n){return\"string\"==typeof n||!bh(n)&&cc(n)&&we(n)==rt}function bc(n){return\"symbol\"==typeof n||cc(n)&&we(n)==et}function wc(n){return n===X}function mc(n){return cc(n)&&zs(n)==it}function xc(n){return cc(n)&&we(n)==ot}function jc(n){if(!n)return[];if(Hf(n))return dc(n)?G(n):Tu(n);if(Ul&&n[Ul])return D(n[Ul]());var t=zs(n);return(t==Gn?M:t==tt?P:ra)(n)}function Ac(n){if(!n)return 0===n?n:0;if(n=Ic(n),n===Sn||n===-Sn){return(n<0?-1:1)*Ln}return n===n?n:0}function kc(n){\nvar t=Ac(n),r=t%1;return t===t?r?t-r:t:0}function Oc(n){return n?Mr(kc(n),0,Un):0}function Ic(n){if(\"number\"==typeof n)return n;if(bc(n))return Cn;if(fc(n)){var t=\"function\"==typeof n.valueOf?n.valueOf():n;n=fc(t)?t+\"\":t}if(\"string\"!=typeof n)return 0===n?n:+n;n=R(n);var r=qt.test(n);return r||Kt.test(n)?Xr(n.slice(2),r?2:8):Pt.test(n)?Cn:+n}function Rc(n){return $u(n,qc(n))}function zc(n){return n?Mr(kc(n),-Wn,Wn):0===n?n:0}function Ec(n){return null==n?\"\":vu(n)}function Sc(n,t){var r=gs(n);return null==t?r:Cr(r,t);\n}function Wc(n,t){return v(n,mi(t,3),ue)}function Lc(n,t){return v(n,mi(t,3),oe)}function Cc(n,t){return null==n?n:bs(n,mi(t,3),qc)}function Uc(n,t){return null==n?n:ws(n,mi(t,3),qc)}function Bc(n,t){return n&&ue(n,mi(t,3))}function Tc(n,t){return n&&oe(n,mi(t,3))}function $c(n){return null==n?[]:fe(n,Pc(n))}function Dc(n){return null==n?[]:fe(n,qc(n))}function Mc(n,t,r){var e=null==n?X:_e(n,t);return e===X?r:e}function Fc(n,t){return null!=n&&Ri(n,t,xe)}function Nc(n,t){return null!=n&&Ri(n,t,je);\n}function Pc(n){return Hf(n)?Or(n):Me(n)}function qc(n){return Hf(n)?Or(n,!0):Fe(n)}function Zc(n,t){var r={};return t=mi(t,3),ue(n,function(n,e,u){Br(r,t(n,e,u),n)}),r}function Kc(n,t){var r={};return t=mi(t,3),ue(n,function(n,e,u){Br(r,e,t(n,e,u))}),r}function Vc(n,t){return Gc(n,Uf(mi(t)))}function Gc(n,t){if(null==n)return{};var r=c(di(n),function(n){return[n]});return t=mi(t),Ye(n,r,function(n,r){return t(n,r[0])})}function Hc(n,t,r){t=ku(t,n);var e=-1,u=t.length;for(u||(u=1,n=X);++e<u;){var i=null==n?X:n[no(t[e])];\ni===X&&(e=u,i=r),n=uc(i)?i.call(n):i}return n}function Jc(n,t,r){return null==n?n:fu(n,t,r)}function Yc(n,t,r,e){return e=\"function\"==typeof e?e:X,null==n?n:fu(n,t,r,e)}function Qc(n,t,e){var u=bh(n),i=u||mh(n)||Oh(n);if(t=mi(t,4),null==e){var o=n&&n.constructor;e=i?u?new o:[]:fc(n)&&uc(o)?gs(El(n)):{}}return(i?r:ue)(n,function(n,r,u){return t(e,n,r,u)}),e}function Xc(n,t){return null==n||yu(n,t)}function na(n,t,r){return null==n?n:du(n,t,Au(r))}function ta(n,t,r,e){return e=\"function\"==typeof e?e:X,\nnull==n?n:du(n,t,Au(r),e)}function ra(n){return null==n?[]:E(n,Pc(n))}function ea(n){return null==n?[]:E(n,qc(n))}function ua(n,t,r){return r===X&&(r=t,t=X),r!==X&&(r=Ic(r),r=r===r?r:0),t!==X&&(t=Ic(t),t=t===t?t:0),Mr(Ic(n),t,r)}function ia(n,t,r){return t=Ac(t),r===X?(r=t,t=0):r=Ac(r),n=Ic(n),Ae(n,t,r)}function oa(n,t,r){if(r&&\"boolean\"!=typeof r&&Ui(n,t,r)&&(t=r=X),r===X&&(\"boolean\"==typeof t?(r=t,t=X):\"boolean\"==typeof n&&(r=n,n=X)),n===X&&t===X?(n=0,t=1):(n=Ac(n),t===X?(t=n,n=0):t=Ac(t)),n>t){\nvar e=n;n=t,t=e}if(r||n%1||t%1){var u=Ql();return Hl(n+u*(t-n+Qr(\"1e-\"+((u+\"\").length-1))),t)}return tu(n,t)}function fa(n){return Qh(Ec(n).toLowerCase())}function ca(n){return n=Ec(n),n&&n.replace(Gt,ve).replace(Dr,\"\")}function aa(n,t,r){n=Ec(n),t=vu(t);var e=n.length;r=r===X?e:Mr(kc(r),0,e);var u=r;return r-=t.length,r>=0&&n.slice(r,u)==t}function la(n){return n=Ec(n),n&&At.test(n)?n.replace(xt,ge):n}function sa(n){return n=Ec(n),n&&Wt.test(n)?n.replace(St,\"\\\\$&\"):n}function ha(n,t,r){n=Ec(n),t=kc(t);\nvar e=t?V(n):0;if(!t||e>=t)return n;var u=(t-e)/2;return ri(Nl(u),r)+n+ri(Fl(u),r)}function pa(n,t,r){n=Ec(n),t=kc(t);var e=t?V(n):0;return t&&e<t?n+ri(t-e,r):n}function _a(n,t,r){n=Ec(n),t=kc(t);var e=t?V(n):0;return t&&e<t?ri(t-e,r)+n:n}function va(n,t,r){return r||null==t?t=0:t&&(t=+t),Yl(Ec(n).replace(Lt,\"\"),t||0)}function ga(n,t,r){return t=(r?Ui(n,t,r):t===X)?1:kc(t),eu(Ec(n),t)}function ya(){var n=arguments,t=Ec(n[0]);return n.length<3?t:t.replace(n[1],n[2])}function da(n,t,r){return r&&\"number\"!=typeof r&&Ui(n,t,r)&&(t=r=X),\n(r=r===X?Un:r>>>0)?(n=Ec(n),n&&(\"string\"==typeof t||null!=t&&!Ah(t))&&(t=vu(t),!t&&T(n))?Ou(G(n),0,r):n.split(t,r)):[]}function ba(n,t,r){return n=Ec(n),r=null==r?0:Mr(kc(r),0,n.length),t=vu(t),n.slice(r,r+t.length)==t}function wa(n,t,r){var e=Z.templateSettings;r&&Ui(n,t,r)&&(t=X),n=Ec(n),t=Sh({},t,e,li);var u,i,o=Sh({},t.imports,e.imports,li),f=Pc(o),c=E(o,f),a=0,l=t.interpolate||Ht,s=\"__p += '\",h=sl((t.escape||Ht).source+\"|\"+l.source+\"|\"+(l===It?Ft:Ht).source+\"|\"+(t.evaluate||Ht).source+\"|$\",\"g\"),p=\"//# sourceURL=\"+(bl.call(t,\"sourceURL\")?(t.sourceURL+\"\").replace(/\\s/g,\" \"):\"lodash.templateSources[\"+ ++Zr+\"]\")+\"\\n\";\nn.replace(h,function(t,r,e,o,f,c){return e||(e=o),s+=n.slice(a,c).replace(Jt,U),r&&(u=!0,s+=\"' +\\n__e(\"+r+\") +\\n'\"),f&&(i=!0,s+=\"';\\n\"+f+\";\\n__p += '\"),e&&(s+=\"' +\\n((__t = (\"+e+\")) == null ? '' : __t) +\\n'\"),a=c+t.length,t}),s+=\"';\\n\";var _=bl.call(t,\"variable\")&&t.variable;if(_){if(Dt.test(_))throw new fl(un)}else s=\"with (obj) {\\n\"+s+\"\\n}\\n\";s=(i?s.replace(dt,\"\"):s).replace(bt,\"$1\").replace(wt,\"$1;\"),s=\"function(\"+(_||\"obj\")+\") {\\n\"+(_?\"\":\"obj || (obj = {});\\n\")+\"var __t, __p = ''\"+(u?\", __e = _.escape\":\"\")+(i?\", __j = Array.prototype.join;\\nfunction print() { __p += __j.call(arguments, '') }\\n\":\";\\n\")+s+\"return __p\\n}\";\nvar v=Xh(function(){return cl(f,p+\"return \"+s).apply(X,c)});if(v.source=s,rc(v))throw v;return v}function ma(n){return Ec(n).toLowerCase()}function xa(n){return Ec(n).toUpperCase()}function ja(n,t,r){if(n=Ec(n),n&&(r||t===X))return R(n);if(!n||!(t=vu(t)))return n;var e=G(n),u=G(t);return Ou(e,W(e,u),L(e,u)+1).join(\"\")}function Aa(n,t,r){if(n=Ec(n),n&&(r||t===X))return n.slice(0,H(n)+1);if(!n||!(t=vu(t)))return n;var e=G(n);return Ou(e,0,L(e,G(t))+1).join(\"\")}function ka(n,t,r){if(n=Ec(n),n&&(r||t===X))return n.replace(Lt,\"\");\nif(!n||!(t=vu(t)))return n;var e=G(n);return Ou(e,W(e,G(t))).join(\"\")}function Oa(n,t){var r=An,e=kn;if(fc(t)){var u=\"separator\"in t?t.separator:u;r=\"length\"in t?kc(t.length):r,e=\"omission\"in t?vu(t.omission):e}n=Ec(n);var i=n.length;if(T(n)){var o=G(n);i=o.length}if(r>=i)return n;var f=r-V(e);if(f<1)return e;var c=o?Ou(o,0,f).join(\"\"):n.slice(0,f);if(u===X)return c+e;if(o&&(f+=c.length-f),Ah(u)){if(n.slice(f).search(u)){var a,l=c;for(u.global||(u=sl(u.source,Ec(Nt.exec(u))+\"g\")),u.lastIndex=0;a=u.exec(l);)var s=a.index;\nc=c.slice(0,s===X?f:s)}}else if(n.indexOf(vu(u),f)!=f){var h=c.lastIndexOf(u);h>-1&&(c=c.slice(0,h))}return c+e}function Ia(n){return n=Ec(n),n&&jt.test(n)?n.replace(mt,ye):n}function Ra(n,t,r){return n=Ec(n),t=r?X:t,t===X?$(n)?Q(n):_(n):n.match(t)||[]}function za(t){var r=null==t?0:t.length,e=mi();return t=r?c(t,function(n){if(\"function\"!=typeof n[1])throw new pl(en);return[e(n[0]),n[1]]}):[],uu(function(e){for(var u=-1;++u<r;){var i=t[u];if(n(i[0],this,e))return n(i[1],this,e)}})}function Ea(n){\nreturn Nr(Fr(n,an))}function Sa(n){return function(){return n}}function Wa(n,t){return null==n||n!==n?t:n}function La(n){return n}function Ca(n){return De(\"function\"==typeof n?n:Fr(n,an))}function Ua(n){return qe(Fr(n,an))}function Ba(n,t){return Ze(n,Fr(t,an))}function Ta(n,t,e){var u=Pc(t),i=fe(t,u);null!=e||fc(t)&&(i.length||!u.length)||(e=t,t=n,n=this,i=fe(t,Pc(t)));var o=!(fc(e)&&\"chain\"in e&&!e.chain),f=uc(n);return r(i,function(r){var e=t[r];n[r]=e,f&&(n.prototype[r]=function(){var t=this.__chain__;\nif(o||t){var r=n(this.__wrapped__);return(r.__actions__=Tu(this.__actions__)).push({func:e,args:arguments,thisArg:n}),r.__chain__=t,r}return e.apply(n,a([this.value()],arguments))})}),n}function $a(){return re._===this&&(re._=Al),this}function Da(){}function Ma(n){return n=kc(n),uu(function(t){return Ge(t,n)})}function Fa(n){return Bi(n)?m(no(n)):Qe(n)}function Na(n){return function(t){return null==n?X:_e(n,t)}}function Pa(){return[]}function qa(){return!1}function Za(){return{}}function Ka(){return\"\";\n}function Va(){return!0}function Ga(n,t){if(n=kc(n),n<1||n>Wn)return[];var r=Un,e=Hl(n,Un);t=mi(t),n-=Un;for(var u=O(e,t);++r<n;)t(r);return u}function Ha(n){return bh(n)?c(n,no):bc(n)?[n]:Tu(Cs(Ec(n)))}function Ja(n){var t=++wl;return Ec(n)+t}function Ya(n){return n&&n.length?Yr(n,La,me):X}function Qa(n,t){return n&&n.length?Yr(n,mi(t,2),me):X}function Xa(n){return w(n,La)}function nl(n,t){return w(n,mi(t,2))}function tl(n){return n&&n.length?Yr(n,La,Ne):X}function rl(n,t){return n&&n.length?Yr(n,mi(t,2),Ne):X;\n}function el(n){return n&&n.length?k(n,La):0}function ul(n,t){return n&&n.length?k(n,mi(t,2)):0}x=null==x?re:be.defaults(re.Object(),x,be.pick(re,qr));var il=x.Array,ol=x.Date,fl=x.Error,cl=x.Function,al=x.Math,ll=x.Object,sl=x.RegExp,hl=x.String,pl=x.TypeError,_l=il.prototype,vl=cl.prototype,gl=ll.prototype,yl=x[\"__core-js_shared__\"],dl=vl.toString,bl=gl.hasOwnProperty,wl=0,ml=function(){var n=/[^.]+$/.exec(yl&&yl.keys&&yl.keys.IE_PROTO||\"\");return n?\"Symbol(src)_1.\"+n:\"\"}(),xl=gl.toString,jl=dl.call(ll),Al=re._,kl=sl(\"^\"+dl.call(bl).replace(St,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),Ol=ie?x.Buffer:X,Il=x.Symbol,Rl=x.Uint8Array,zl=Ol?Ol.allocUnsafe:X,El=F(ll.getPrototypeOf,ll),Sl=ll.create,Wl=gl.propertyIsEnumerable,Ll=_l.splice,Cl=Il?Il.isConcatSpreadable:X,Ul=Il?Il.iterator:X,Bl=Il?Il.toStringTag:X,Tl=function(){\ntry{var n=Ai(ll,\"defineProperty\");return n({},\"\",{}),n}catch(n){}}(),$l=x.clearTimeout!==re.clearTimeout&&x.clearTimeout,Dl=ol&&ol.now!==re.Date.now&&ol.now,Ml=x.setTimeout!==re.setTimeout&&x.setTimeout,Fl=al.ceil,Nl=al.floor,Pl=ll.getOwnPropertySymbols,ql=Ol?Ol.isBuffer:X,Zl=x.isFinite,Kl=_l.join,Vl=F(ll.keys,ll),Gl=al.max,Hl=al.min,Jl=ol.now,Yl=x.parseInt,Ql=al.random,Xl=_l.reverse,ns=Ai(x,\"DataView\"),ts=Ai(x,\"Map\"),rs=Ai(x,\"Promise\"),es=Ai(x,\"Set\"),us=Ai(x,\"WeakMap\"),is=Ai(ll,\"create\"),os=us&&new us,fs={},cs=to(ns),as=to(ts),ls=to(rs),ss=to(es),hs=to(us),ps=Il?Il.prototype:X,_s=ps?ps.valueOf:X,vs=ps?ps.toString:X,gs=function(){\nfunction n(){}return function(t){if(!fc(t))return{};if(Sl)return Sl(t);n.prototype=t;var r=new n;return n.prototype=X,r}}();Z.templateSettings={escape:kt,evaluate:Ot,interpolate:It,variable:\"\",imports:{_:Z}},Z.prototype=J.prototype,Z.prototype.constructor=Z,Y.prototype=gs(J.prototype),Y.prototype.constructor=Y,Ct.prototype=gs(J.prototype),Ct.prototype.constructor=Ct,Xt.prototype.clear=nr,Xt.prototype.delete=tr,Xt.prototype.get=rr,Xt.prototype.has=er,Xt.prototype.set=ur,ir.prototype.clear=or,ir.prototype.delete=fr,\nir.prototype.get=cr,ir.prototype.has=ar,ir.prototype.set=lr,sr.prototype.clear=hr,sr.prototype.delete=pr,sr.prototype.get=_r,sr.prototype.has=vr,sr.prototype.set=gr,yr.prototype.add=yr.prototype.push=dr,yr.prototype.has=br,wr.prototype.clear=mr,wr.prototype.delete=xr,wr.prototype.get=jr,wr.prototype.has=Ar,wr.prototype.set=kr;var ys=Pu(ue),ds=Pu(oe,!0),bs=qu(),ws=qu(!0),ms=os?function(n,t){return os.set(n,t),n}:La,xs=Tl?function(n,t){return Tl(n,\"toString\",{configurable:!0,enumerable:!1,value:Sa(t),\nwritable:!0})}:La,js=uu,As=$l||function(n){return re.clearTimeout(n)},ks=es&&1/P(new es([,-0]))[1]==Sn?function(n){return new es(n)}:Da,Os=os?function(n){return os.get(n)}:Da,Is=Pl?function(n){return null==n?[]:(n=ll(n),i(Pl(n),function(t){return Wl.call(n,t)}))}:Pa,Rs=Pl?function(n){for(var t=[];n;)a(t,Is(n)),n=El(n);return t}:Pa,zs=we;(ns&&zs(new ns(new ArrayBuffer(1)))!=ct||ts&&zs(new ts)!=Gn||rs&&zs(rs.resolve())!=Qn||es&&zs(new es)!=tt||us&&zs(new us)!=it)&&(zs=function(n){var t=we(n),r=t==Yn?n.constructor:X,e=r?to(r):\"\";\nif(e)switch(e){case cs:return ct;case as:return Gn;case ls:return Qn;case ss:return tt;case hs:return it}return t});var Es=yl?uc:qa,Ss=Qi(ms),Ws=Ml||function(n,t){return re.setTimeout(n,t)},Ls=Qi(xs),Cs=Pi(function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(\"\"),n.replace(Et,function(n,r,e,u){t.push(e?u.replace(Mt,\"$1\"):r||n)}),t}),Us=uu(function(n,t){return Jf(n)?Hr(n,ee(t,1,Jf,!0)):[]}),Bs=uu(function(n,t){var r=jo(t);return Jf(r)&&(r=X),Jf(n)?Hr(n,ee(t,1,Jf,!0),mi(r,2)):[]}),Ts=uu(function(n,t){\nvar r=jo(t);return Jf(r)&&(r=X),Jf(n)?Hr(n,ee(t,1,Jf,!0),X,r):[]}),$s=uu(function(n){var t=c(n,ju);return t.length&&t[0]===n[0]?ke(t):[]}),Ds=uu(function(n){var t=jo(n),r=c(n,ju);return t===jo(r)?t=X:r.pop(),r.length&&r[0]===n[0]?ke(r,mi(t,2)):[]}),Ms=uu(function(n){var t=jo(n),r=c(n,ju);return t=\"function\"==typeof t?t:X,t&&r.pop(),r.length&&r[0]===n[0]?ke(r,X,t):[]}),Fs=uu(Oo),Ns=gi(function(n,t){var r=null==n?0:n.length,e=Tr(n,t);return nu(n,c(t,function(n){return Ci(n,r)?+n:n}).sort(Lu)),e}),Ps=uu(function(n){\nreturn gu(ee(n,1,Jf,!0))}),qs=uu(function(n){var t=jo(n);return Jf(t)&&(t=X),gu(ee(n,1,Jf,!0),mi(t,2))}),Zs=uu(function(n){var t=jo(n);return t=\"function\"==typeof t?t:X,gu(ee(n,1,Jf,!0),X,t)}),Ks=uu(function(n,t){return Jf(n)?Hr(n,t):[]}),Vs=uu(function(n){return mu(i(n,Jf))}),Gs=uu(function(n){var t=jo(n);return Jf(t)&&(t=X),mu(i(n,Jf),mi(t,2))}),Hs=uu(function(n){var t=jo(n);return t=\"function\"==typeof t?t:X,mu(i(n,Jf),X,t)}),Js=uu(Go),Ys=uu(function(n){var t=n.length,r=t>1?n[t-1]:X;return r=\"function\"==typeof r?(n.pop(),\nr):X,Ho(n,r)}),Qs=gi(function(n){var t=n.length,r=t?n[0]:0,e=this.__wrapped__,u=function(t){return Tr(t,n)};return!(t>1||this.__actions__.length)&&e instanceof Ct&&Ci(r)?(e=e.slice(r,+r+(t?1:0)),e.__actions__.push({func:nf,args:[u],thisArg:X}),new Y(e,this.__chain__).thru(function(n){return t&&!n.length&&n.push(X),n})):this.thru(u)}),Xs=Fu(function(n,t,r){bl.call(n,r)?++n[r]:Br(n,r,1)}),nh=Ju(ho),th=Ju(po),rh=Fu(function(n,t,r){bl.call(n,r)?n[r].push(t):Br(n,r,[t])}),eh=uu(function(t,r,e){var u=-1,i=\"function\"==typeof r,o=Hf(t)?il(t.length):[];\nreturn ys(t,function(t){o[++u]=i?n(r,t,e):Ie(t,r,e)}),o}),uh=Fu(function(n,t,r){Br(n,r,t)}),ih=Fu(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),oh=uu(function(n,t){if(null==n)return[];var r=t.length;return r>1&&Ui(n,t[0],t[1])?t=[]:r>2&&Ui(t[0],t[1],t[2])&&(t=[t[0]]),He(n,ee(t,1),[])}),fh=Dl||function(){return re.Date.now()},ch=uu(function(n,t,r){var e=_n;if(r.length){var u=N(r,wi(ch));e|=bn}return ai(n,e,t,r,u)}),ah=uu(function(n,t,r){var e=_n|vn;if(r.length){var u=N(r,wi(ah));e|=bn;\n}return ai(t,e,n,r,u)}),lh=uu(function(n,t){return Gr(n,1,t)}),sh=uu(function(n,t,r){return Gr(n,Ic(t)||0,r)});Cf.Cache=sr;var hh=js(function(t,r){r=1==r.length&&bh(r[0])?c(r[0],z(mi())):c(ee(r,1),z(mi()));var e=r.length;return uu(function(u){for(var i=-1,o=Hl(u.length,e);++i<o;)u[i]=r[i].call(this,u[i]);return n(t,this,u)})}),ph=uu(function(n,t){return ai(n,bn,X,t,N(t,wi(ph)))}),_h=uu(function(n,t){return ai(n,wn,X,t,N(t,wi(_h)))}),vh=gi(function(n,t){return ai(n,xn,X,X,X,t)}),gh=ii(me),yh=ii(function(n,t){\nreturn n>=t}),dh=Re(function(){return arguments}())?Re:function(n){return cc(n)&&bl.call(n,\"callee\")&&!Wl.call(n,\"callee\")},bh=il.isArray,wh=ce?z(ce):ze,mh=ql||qa,xh=ae?z(ae):Ee,jh=le?z(le):Le,Ah=se?z(se):Be,kh=he?z(he):Te,Oh=pe?z(pe):$e,Ih=ii(Ne),Rh=ii(function(n,t){return n<=t}),zh=Nu(function(n,t){if(Mi(t)||Hf(t))return $u(t,Pc(t),n),X;for(var r in t)bl.call(t,r)&&Sr(n,r,t[r])}),Eh=Nu(function(n,t){$u(t,qc(t),n)}),Sh=Nu(function(n,t,r,e){$u(t,qc(t),n,e)}),Wh=Nu(function(n,t,r,e){$u(t,Pc(t),n,e);\n}),Lh=gi(Tr),Ch=uu(function(n,t){n=ll(n);var r=-1,e=t.length,u=e>2?t[2]:X;for(u&&Ui(t[0],t[1],u)&&(e=1);++r<e;)for(var i=t[r],o=qc(i),f=-1,c=o.length;++f<c;){var a=o[f],l=n[a];(l===X||Gf(l,gl[a])&&!bl.call(n,a))&&(n[a]=i[a])}return n}),Uh=uu(function(t){return t.push(X,si),n(Mh,X,t)}),Bh=Xu(function(n,t,r){null!=t&&\"function\"!=typeof t.toString&&(t=xl.call(t)),n[t]=r},Sa(La)),Th=Xu(function(n,t,r){null!=t&&\"function\"!=typeof t.toString&&(t=xl.call(t)),bl.call(n,t)?n[t].push(r):n[t]=[r]},mi),$h=uu(Ie),Dh=Nu(function(n,t,r){\nKe(n,t,r)}),Mh=Nu(function(n,t,r,e){Ke(n,t,r,e)}),Fh=gi(function(n,t){var r={};if(null==n)return r;var e=!1;t=c(t,function(t){return t=ku(t,n),e||(e=t.length>1),t}),$u(n,di(n),r),e&&(r=Fr(r,an|ln|sn,hi));for(var u=t.length;u--;)yu(r,t[u]);return r}),Nh=gi(function(n,t){return null==n?{}:Je(n,t)}),Ph=ci(Pc),qh=ci(qc),Zh=Vu(function(n,t,r){return t=t.toLowerCase(),n+(r?fa(t):t)}),Kh=Vu(function(n,t,r){return n+(r?\"-\":\"\")+t.toLowerCase()}),Vh=Vu(function(n,t,r){return n+(r?\" \":\"\")+t.toLowerCase()}),Gh=Ku(\"toLowerCase\"),Hh=Vu(function(n,t,r){\nreturn n+(r?\"_\":\"\")+t.toLowerCase()}),Jh=Vu(function(n,t,r){return n+(r?\" \":\"\")+Qh(t)}),Yh=Vu(function(n,t,r){return n+(r?\" \":\"\")+t.toUpperCase()}),Qh=Ku(\"toUpperCase\"),Xh=uu(function(t,r){try{return n(t,X,r)}catch(n){return rc(n)?n:new fl(n)}}),np=gi(function(n,t){return r(t,function(t){t=no(t),Br(n,t,ch(n[t],n))}),n}),tp=Yu(),rp=Yu(!0),ep=uu(function(n,t){return function(r){return Ie(r,n,t)}}),up=uu(function(n,t){return function(r){return Ie(n,r,t)}}),ip=ti(c),op=ti(u),fp=ti(h),cp=ui(),ap=ui(!0),lp=ni(function(n,t){\nreturn n+t},0),sp=fi(\"ceil\"),hp=ni(function(n,t){return n/t},1),pp=fi(\"floor\"),_p=ni(function(n,t){return n*t},1),vp=fi(\"round\"),gp=ni(function(n,t){return n-t},0);return Z.after=If,Z.ary=Rf,Z.assign=zh,Z.assignIn=Eh,Z.assignInWith=Sh,Z.assignWith=Wh,Z.at=Lh,Z.before=zf,Z.bind=ch,Z.bindAll=np,Z.bindKey=ah,Z.castArray=Nf,Z.chain=Qo,Z.chunk=uo,Z.compact=io,Z.concat=oo,Z.cond=za,Z.conforms=Ea,Z.constant=Sa,Z.countBy=Xs,Z.create=Sc,Z.curry=Ef,Z.curryRight=Sf,Z.debounce=Wf,Z.defaults=Ch,Z.defaultsDeep=Uh,\nZ.defer=lh,Z.delay=sh,Z.difference=Us,Z.differenceBy=Bs,Z.differenceWith=Ts,Z.drop=fo,Z.dropRight=co,Z.dropRightWhile=ao,Z.dropWhile=lo,Z.fill=so,Z.filter=lf,Z.flatMap=sf,Z.flatMapDeep=hf,Z.flatMapDepth=pf,Z.flatten=_o,Z.flattenDeep=vo,Z.flattenDepth=go,Z.flip=Lf,Z.flow=tp,Z.flowRight=rp,Z.fromPairs=yo,Z.functions=$c,Z.functionsIn=Dc,Z.groupBy=rh,Z.initial=mo,Z.intersection=$s,Z.intersectionBy=Ds,Z.intersectionWith=Ms,Z.invert=Bh,Z.invertBy=Th,Z.invokeMap=eh,Z.iteratee=Ca,Z.keyBy=uh,Z.keys=Pc,Z.keysIn=qc,\nZ.map=yf,Z.mapKeys=Zc,Z.mapValues=Kc,Z.matches=Ua,Z.matchesProperty=Ba,Z.memoize=Cf,Z.merge=Dh,Z.mergeWith=Mh,Z.method=ep,Z.methodOf=up,Z.mixin=Ta,Z.negate=Uf,Z.nthArg=Ma,Z.omit=Fh,Z.omitBy=Vc,Z.once=Bf,Z.orderBy=df,Z.over=ip,Z.overArgs=hh,Z.overEvery=op,Z.overSome=fp,Z.partial=ph,Z.partialRight=_h,Z.partition=ih,Z.pick=Nh,Z.pickBy=Gc,Z.property=Fa,Z.propertyOf=Na,Z.pull=Fs,Z.pullAll=Oo,Z.pullAllBy=Io,Z.pullAllWith=Ro,Z.pullAt=Ns,Z.range=cp,Z.rangeRight=ap,Z.rearg=vh,Z.reject=mf,Z.remove=zo,Z.rest=Tf,\nZ.reverse=Eo,Z.sampleSize=jf,Z.set=Jc,Z.setWith=Yc,Z.shuffle=Af,Z.slice=So,Z.sortBy=oh,Z.sortedUniq=$o,Z.sortedUniqBy=Do,Z.split=da,Z.spread=$f,Z.tail=Mo,Z.take=Fo,Z.takeRight=No,Z.takeRightWhile=Po,Z.takeWhile=qo,Z.tap=Xo,Z.throttle=Df,Z.thru=nf,Z.toArray=jc,Z.toPairs=Ph,Z.toPairsIn=qh,Z.toPath=Ha,Z.toPlainObject=Rc,Z.transform=Qc,Z.unary=Mf,Z.union=Ps,Z.unionBy=qs,Z.unionWith=Zs,Z.uniq=Zo,Z.uniqBy=Ko,Z.uniqWith=Vo,Z.unset=Xc,Z.unzip=Go,Z.unzipWith=Ho,Z.update=na,Z.updateWith=ta,Z.values=ra,Z.valuesIn=ea,\nZ.without=Ks,Z.words=Ra,Z.wrap=Ff,Z.xor=Vs,Z.xorBy=Gs,Z.xorWith=Hs,Z.zip=Js,Z.zipObject=Jo,Z.zipObjectDeep=Yo,Z.zipWith=Ys,Z.entries=Ph,Z.entriesIn=qh,Z.extend=Eh,Z.extendWith=Sh,Ta(Z,Z),Z.add=lp,Z.attempt=Xh,Z.camelCase=Zh,Z.capitalize=fa,Z.ceil=sp,Z.clamp=ua,Z.clone=Pf,Z.cloneDeep=Zf,Z.cloneDeepWith=Kf,Z.cloneWith=qf,Z.conformsTo=Vf,Z.deburr=ca,Z.defaultTo=Wa,Z.divide=hp,Z.endsWith=aa,Z.eq=Gf,Z.escape=la,Z.escapeRegExp=sa,Z.every=af,Z.find=nh,Z.findIndex=ho,Z.findKey=Wc,Z.findLast=th,Z.findLastIndex=po,\nZ.findLastKey=Lc,Z.floor=pp,Z.forEach=_f,Z.forEachRight=vf,Z.forIn=Cc,Z.forInRight=Uc,Z.forOwn=Bc,Z.forOwnRight=Tc,Z.get=Mc,Z.gt=gh,Z.gte=yh,Z.has=Fc,Z.hasIn=Nc,Z.head=bo,Z.identity=La,Z.includes=gf,Z.indexOf=wo,Z.inRange=ia,Z.invoke=$h,Z.isArguments=dh,Z.isArray=bh,Z.isArrayBuffer=wh,Z.isArrayLike=Hf,Z.isArrayLikeObject=Jf,Z.isBoolean=Yf,Z.isBuffer=mh,Z.isDate=xh,Z.isElement=Qf,Z.isEmpty=Xf,Z.isEqual=nc,Z.isEqualWith=tc,Z.isError=rc,Z.isFinite=ec,Z.isFunction=uc,Z.isInteger=ic,Z.isLength=oc,Z.isMap=jh,\nZ.isMatch=ac,Z.isMatchWith=lc,Z.isNaN=sc,Z.isNative=hc,Z.isNil=_c,Z.isNull=pc,Z.isNumber=vc,Z.isObject=fc,Z.isObjectLike=cc,Z.isPlainObject=gc,Z.isRegExp=Ah,Z.isSafeInteger=yc,Z.isSet=kh,Z.isString=dc,Z.isSymbol=bc,Z.isTypedArray=Oh,Z.isUndefined=wc,Z.isWeakMap=mc,Z.isWeakSet=xc,Z.join=xo,Z.kebabCase=Kh,Z.last=jo,Z.lastIndexOf=Ao,Z.lowerCase=Vh,Z.lowerFirst=Gh,Z.lt=Ih,Z.lte=Rh,Z.max=Ya,Z.maxBy=Qa,Z.mean=Xa,Z.meanBy=nl,Z.min=tl,Z.minBy=rl,Z.stubArray=Pa,Z.stubFalse=qa,Z.stubObject=Za,Z.stubString=Ka,\nZ.stubTrue=Va,Z.multiply=_p,Z.nth=ko,Z.noConflict=$a,Z.noop=Da,Z.now=fh,Z.pad=ha,Z.padEnd=pa,Z.padStart=_a,Z.parseInt=va,Z.random=oa,Z.reduce=bf,Z.reduceRight=wf,Z.repeat=ga,Z.replace=ya,Z.result=Hc,Z.round=vp,Z.runInContext=p,Z.sample=xf,Z.size=kf,Z.snakeCase=Hh,Z.some=Of,Z.sortedIndex=Wo,Z.sortedIndexBy=Lo,Z.sortedIndexOf=Co,Z.sortedLastIndex=Uo,Z.sortedLastIndexBy=Bo,Z.sortedLastIndexOf=To,Z.startCase=Jh,Z.startsWith=ba,Z.subtract=gp,Z.sum=el,Z.sumBy=ul,Z.template=wa,Z.times=Ga,Z.toFinite=Ac,Z.toInteger=kc,\nZ.toLength=Oc,Z.toLower=ma,Z.toNumber=Ic,Z.toSafeInteger=zc,Z.toString=Ec,Z.toUpper=xa,Z.trim=ja,Z.trimEnd=Aa,Z.trimStart=ka,Z.truncate=Oa,Z.unescape=Ia,Z.uniqueId=Ja,Z.upperCase=Yh,Z.upperFirst=Qh,Z.each=_f,Z.eachRight=vf,Z.first=bo,Ta(Z,function(){var n={};return ue(Z,function(t,r){bl.call(Z.prototype,r)||(n[r]=t)}),n}(),{chain:!1}),Z.VERSION=nn,r([\"bind\",\"bindKey\",\"curry\",\"curryRight\",\"partial\",\"partialRight\"],function(n){Z[n].placeholder=Z}),r([\"drop\",\"take\"],function(n,t){Ct.prototype[n]=function(r){\nr=r===X?1:Gl(kc(r),0);var e=this.__filtered__&&!t?new Ct(this):this.clone();return e.__filtered__?e.__takeCount__=Hl(r,e.__takeCount__):e.__views__.push({size:Hl(r,Un),type:n+(e.__dir__<0?\"Right\":\"\")}),e},Ct.prototype[n+\"Right\"]=function(t){return this.reverse()[n](t).reverse()}}),r([\"filter\",\"map\",\"takeWhile\"],function(n,t){var r=t+1,e=r==Rn||r==En;Ct.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({iteratee:mi(n,3),type:r}),t.__filtered__=t.__filtered__||e,t}}),r([\"head\",\"last\"],function(n,t){\nvar r=\"take\"+(t?\"Right\":\"\");Ct.prototype[n]=function(){return this[r](1).value()[0]}}),r([\"initial\",\"tail\"],function(n,t){var r=\"drop\"+(t?\"\":\"Right\");Ct.prototype[n]=function(){return this.__filtered__?new Ct(this):this[r](1)}}),Ct.prototype.compact=function(){return this.filter(La)},Ct.prototype.find=function(n){return this.filter(n).head()},Ct.prototype.findLast=function(n){return this.reverse().find(n)},Ct.prototype.invokeMap=uu(function(n,t){return\"function\"==typeof n?new Ct(this):this.map(function(r){\nreturn Ie(r,n,t)})}),Ct.prototype.reject=function(n){return this.filter(Uf(mi(n)))},Ct.prototype.slice=function(n,t){n=kc(n);var r=this;return r.__filtered__&&(n>0||t<0)?new Ct(r):(n<0?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==X&&(t=kc(t),r=t<0?r.dropRight(-t):r.take(t-n)),r)},Ct.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Ct.prototype.toArray=function(){return this.take(Un)},ue(Ct.prototype,function(n,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),e=/^(?:head|last)$/.test(t),u=Z[e?\"take\"+(\"last\"==t?\"Right\":\"\"):t],i=e||/^find/.test(t);\nu&&(Z.prototype[t]=function(){var t=this.__wrapped__,o=e?[1]:arguments,f=t instanceof Ct,c=o[0],l=f||bh(t),s=function(n){var t=u.apply(Z,a([n],o));return e&&h?t[0]:t};l&&r&&\"function\"==typeof c&&1!=c.length&&(f=l=!1);var h=this.__chain__,p=!!this.__actions__.length,_=i&&!h,v=f&&!p;if(!i&&l){t=v?t:new Ct(this);var g=n.apply(t,o);return g.__actions__.push({func:nf,args:[s],thisArg:X}),new Y(g,h)}return _&&v?n.apply(this,o):(g=this.thru(s),_?e?g.value()[0]:g.value():g)})}),r([\"pop\",\"push\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){\nvar t=_l[n],r=/^(?:push|sort|unshift)$/.test(n)?\"tap\":\"thru\",e=/^(?:pop|shift)$/.test(n);Z.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(bh(u)?u:[],n)}return this[r](function(r){return t.apply(bh(r)?r:[],n)})}}),ue(Ct.prototype,function(n,t){var r=Z[t];if(r){var e=r.name+\"\";bl.call(fs,e)||(fs[e]=[]),fs[e].push({name:t,func:r})}}),fs[Qu(X,vn).name]=[{name:\"wrapper\",func:X}],Ct.prototype.clone=$t,Ct.prototype.reverse=Yt,Ct.prototype.value=Qt,Z.prototype.at=Qs,\nZ.prototype.chain=tf,Z.prototype.commit=rf,Z.prototype.next=ef,Z.prototype.plant=of,Z.prototype.reverse=ff,Z.prototype.toJSON=Z.prototype.valueOf=Z.prototype.value=cf,Z.prototype.first=Z.prototype.head,Ul&&(Z.prototype[Ul]=uf),Z},be=de();\"function\"==typeof define&&\"object\"==typeof define.amd&&define.amd?(re._=be,define(function(){return be})):ue?((ue.exports=be)._=be,ee._=be):re._=be}).call(this);","var mapping = require('./_mapping'),\n    fallbackHolder = require('./placeholder');\n\n/** Built-in value reference. */\nvar push = Array.prototype.push;\n\n/**\n * Creates a function, with an arity of `n`, that invokes `func` with the\n * arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} n The arity of the new function.\n * @returns {Function} Returns the new function.\n */\nfunction baseArity(func, n) {\n  return n == 2\n    ? function(a, b) { return func.apply(undefined, arguments); }\n    : function(a) { return func.apply(undefined, arguments); };\n}\n\n/**\n * Creates a function that invokes `func`, with up to `n` arguments, ignoring\n * any additional arguments.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @param {number} n The arity cap.\n * @returns {Function} Returns the new function.\n */\nfunction baseAry(func, n) {\n  return n == 2\n    ? function(a, b) { return func(a, b); }\n    : function(a) { return func(a); };\n}\n\n/**\n * Creates a clone of `array`.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the cloned array.\n */\nfunction cloneArray(array) {\n  var length = array ? array.length : 0,\n      result = Array(length);\n\n  while (length--) {\n    result[length] = array[length];\n  }\n  return result;\n}\n\n/**\n * Creates a function that clones a given object using the assignment `func`.\n *\n * @private\n * @param {Function} func The assignment function.\n * @returns {Function} Returns the new cloner function.\n */\nfunction createCloner(func) {\n  return function(object) {\n    return func({}, object);\n  };\n}\n\n/**\n * A specialized version of `_.spread` which flattens the spread array into\n * the arguments of the invoked `func`.\n *\n * @private\n * @param {Function} func The function to spread arguments over.\n * @param {number} start The start position of the spread.\n * @returns {Function} Returns the new function.\n */\nfunction flatSpread(func, start) {\n  return function() {\n    var length = arguments.length,\n        lastIndex = length - 1,\n        args = Array(length);\n\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var array = args[start],\n        otherArgs = args.slice(0, start);\n\n    if (array) {\n      push.apply(otherArgs, array);\n    }\n    if (start != lastIndex) {\n      push.apply(otherArgs, args.slice(start + 1));\n    }\n    return func.apply(this, otherArgs);\n  };\n}\n\n/**\n * Creates a function that wraps `func` and uses `cloner` to clone the first\n * argument it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} cloner The function to clone arguments.\n * @returns {Function} Returns the new immutable function.\n */\nfunction wrapImmutable(func, cloner) {\n  return function() {\n    var length = arguments.length;\n    if (!length) {\n      return;\n    }\n    var args = Array(length);\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var result = args[0] = cloner.apply(undefined, args);\n    func.apply(undefined, args);\n    return result;\n  };\n}\n\n/**\n * The base implementation of `convert` which accepts a `util` object of methods\n * required to perform conversions.\n *\n * @param {Object} util The util object.\n * @param {string} name The name of the function to convert.\n * @param {Function} func The function to convert.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.cap=true] Specify capping iteratee arguments.\n * @param {boolean} [options.curry=true] Specify currying.\n * @param {boolean} [options.fixed=true] Specify fixed arity.\n * @param {boolean} [options.immutable=true] Specify immutable operations.\n * @param {boolean} [options.rearg=true] Specify rearranging arguments.\n * @returns {Function|Object} Returns the converted function or object.\n */\nfunction baseConvert(util, name, func, options) {\n  var isLib = typeof name == 'function',\n      isObj = name === Object(name);\n\n  if (isObj) {\n    options = func;\n    func = name;\n    name = undefined;\n  }\n  if (func == null) {\n    throw new TypeError;\n  }\n  options || (options = {});\n\n  var config = {\n    'cap': 'cap' in options ? options.cap : true,\n    'curry': 'curry' in options ? options.curry : true,\n    'fixed': 'fixed' in options ? options.fixed : true,\n    'immutable': 'immutable' in options ? options.immutable : true,\n    'rearg': 'rearg' in options ? options.rearg : true\n  };\n\n  var defaultHolder = isLib ? func : fallbackHolder,\n      forceCurry = ('curry' in options) && options.curry,\n      forceFixed = ('fixed' in options) && options.fixed,\n      forceRearg = ('rearg' in options) && options.rearg,\n      pristine = isLib ? func.runInContext() : undefined;\n\n  var helpers = isLib ? func : {\n    'ary': util.ary,\n    'assign': util.assign,\n    'clone': util.clone,\n    'curry': util.curry,\n    'forEach': util.forEach,\n    'isArray': util.isArray,\n    'isError': util.isError,\n    'isFunction': util.isFunction,\n    'isWeakMap': util.isWeakMap,\n    'iteratee': util.iteratee,\n    'keys': util.keys,\n    'rearg': util.rearg,\n    'toInteger': util.toInteger,\n    'toPath': util.toPath\n  };\n\n  var ary = helpers.ary,\n      assign = helpers.assign,\n      clone = helpers.clone,\n      curry = helpers.curry,\n      each = helpers.forEach,\n      isArray = helpers.isArray,\n      isError = helpers.isError,\n      isFunction = helpers.isFunction,\n      isWeakMap = helpers.isWeakMap,\n      keys = helpers.keys,\n      rearg = helpers.rearg,\n      toInteger = helpers.toInteger,\n      toPath = helpers.toPath;\n\n  var aryMethodKeys = keys(mapping.aryMethod);\n\n  var wrappers = {\n    'castArray': function(castArray) {\n      return function() {\n        var value = arguments[0];\n        return isArray(value)\n          ? castArray(cloneArray(value))\n          : castArray.apply(undefined, arguments);\n      };\n    },\n    'iteratee': function(iteratee) {\n      return function() {\n        var func = arguments[0],\n            arity = arguments[1],\n            result = iteratee(func, arity),\n            length = result.length;\n\n        if (config.cap && typeof arity == 'number') {\n          arity = arity > 2 ? (arity - 2) : 1;\n          return (length && length <= arity) ? result : baseAry(result, arity);\n        }\n        return result;\n      };\n    },\n    'mixin': function(mixin) {\n      return function(source) {\n        var func = this;\n        if (!isFunction(func)) {\n          return mixin(func, Object(source));\n        }\n        var pairs = [];\n        each(keys(source), function(key) {\n          if (isFunction(source[key])) {\n            pairs.push([key, func.prototype[key]]);\n          }\n        });\n\n        mixin(func, Object(source));\n\n        each(pairs, function(pair) {\n          var value = pair[1];\n          if (isFunction(value)) {\n            func.prototype[pair[0]] = value;\n          } else {\n            delete func.prototype[pair[0]];\n          }\n        });\n        return func;\n      };\n    },\n    'nthArg': function(nthArg) {\n      return function(n) {\n        var arity = n < 0 ? 1 : (toInteger(n) + 1);\n        return curry(nthArg(n), arity);\n      };\n    },\n    'rearg': function(rearg) {\n      return function(func, indexes) {\n        var arity = indexes ? indexes.length : 0;\n        return curry(rearg(func, indexes), arity);\n      };\n    },\n    'runInContext': function(runInContext) {\n      return function(context) {\n        return baseConvert(util, runInContext(context), options);\n      };\n    }\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Casts `func` to a function with an arity capped iteratee if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCap(name, func) {\n    if (config.cap) {\n      var indexes = mapping.iterateeRearg[name];\n      if (indexes) {\n        return iterateeRearg(func, indexes);\n      }\n      var n = !isLib && mapping.iterateeAry[name];\n      if (n) {\n        return iterateeAry(func, n);\n      }\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to a curried function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCurry(name, func, n) {\n    return (forceCurry || (config.curry && n > 1))\n      ? curry(func, n)\n      : func;\n  }\n\n  /**\n   * Casts `func` to a fixed arity function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the cast function.\n   */\n  function castFixed(name, func, n) {\n    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {\n      var data = mapping.methodSpread[name],\n          start = data && data.start;\n\n      return start  === undefined ? ary(func, n) : flatSpread(func, start);\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to an rearged function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castRearg(name, func, n) {\n    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))\n      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])\n      : func;\n  }\n\n  /**\n   * Creates a clone of `object` by `path`.\n   *\n   * @private\n   * @param {Object} object The object to clone.\n   * @param {Array|string} path The path to clone by.\n   * @returns {Object} Returns the cloned object.\n   */\n  function cloneByPath(object, path) {\n    path = toPath(path);\n\n    var index = -1,\n        length = path.length,\n        lastIndex = length - 1,\n        result = clone(Object(object)),\n        nested = result;\n\n    while (nested != null && ++index < length) {\n      var key = path[index],\n          value = nested[key];\n\n      if (value != null &&\n          !(isFunction(value) || isError(value) || isWeakMap(value))) {\n        nested[key] = clone(index == lastIndex ? value : Object(value));\n      }\n      nested = nested[key];\n    }\n    return result;\n  }\n\n  /**\n   * Converts `lodash` to an immutable auto-curried iteratee-first data-last\n   * version with conversion `options` applied.\n   *\n   * @param {Object} [options] The options object. See `baseConvert` for more details.\n   * @returns {Function} Returns the converted `lodash`.\n   */\n  function convertLib(options) {\n    return _.runInContext.convert(options)(undefined);\n  }\n\n  /**\n   * Create a converter function for `func` of `name`.\n   *\n   * @param {string} name The name of the function to convert.\n   * @param {Function} func The function to convert.\n   * @returns {Function} Returns the new converter function.\n   */\n  function createConverter(name, func) {\n    var realName = mapping.aliasToReal[name] || name,\n        methodName = mapping.remap[realName] || realName,\n        oldOptions = options;\n\n    return function(options) {\n      var newUtil = isLib ? pristine : helpers,\n          newFunc = isLib ? pristine[methodName] : func,\n          newOptions = assign(assign({}, oldOptions), options);\n\n      return baseConvert(newUtil, realName, newFunc, newOptions);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`\n   * arguments, ignoring any additional arguments.\n   *\n   * @private\n   * @param {Function} func The function to cap iteratee arguments for.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeAry(func, n) {\n    return overArg(func, function(func) {\n      return typeof func == 'function' ? baseAry(func, n) : func;\n    });\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee with arguments\n   * arranged according to the specified `indexes` where the argument value at\n   * the first index is provided as the first argument, the argument value at\n   * the second index is provided as the second argument, and so on.\n   *\n   * @private\n   * @param {Function} func The function to rearrange iteratee arguments for.\n   * @param {number[]} indexes The arranged argument indexes.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeRearg(func, indexes) {\n    return overArg(func, function(func) {\n      var n = indexes.length;\n      return baseArity(rearg(baseAry(func, n), indexes), n);\n    });\n  }\n\n  /**\n   * Creates a function that invokes `func` with its first argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function() {\n      var length = arguments.length;\n      if (!length) {\n        return func();\n      }\n      var args = Array(length);\n      while (length--) {\n        args[length] = arguments[length];\n      }\n      var index = config.rearg ? 0 : (length - 1);\n      args[index] = transform(args[index]);\n      return func.apply(undefined, args);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` and applys the conversions\n   * rules by `name`.\n   *\n   * @private\n   * @param {string} name The name of the function to wrap.\n   * @param {Function} func The function to wrap.\n   * @returns {Function} Returns the converted function.\n   */\n  function wrap(name, func, placeholder) {\n    var result,\n        realName = mapping.aliasToReal[name] || name,\n        wrapped = func,\n        wrapper = wrappers[realName];\n\n    if (wrapper) {\n      wrapped = wrapper(func);\n    }\n    else if (config.immutable) {\n      if (mapping.mutate.array[realName]) {\n        wrapped = wrapImmutable(func, cloneArray);\n      }\n      else if (mapping.mutate.object[realName]) {\n        wrapped = wrapImmutable(func, createCloner(func));\n      }\n      else if (mapping.mutate.set[realName]) {\n        wrapped = wrapImmutable(func, cloneByPath);\n      }\n    }\n    each(aryMethodKeys, function(aryKey) {\n      each(mapping.aryMethod[aryKey], function(otherName) {\n        if (realName == otherName) {\n          var data = mapping.methodSpread[realName],\n              afterRearg = data && data.afterRearg;\n\n          result = afterRearg\n            ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)\n            : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);\n\n          result = castCap(realName, result);\n          result = castCurry(realName, result, aryKey);\n          return false;\n        }\n      });\n      return !result;\n    });\n\n    result || (result = wrapped);\n    if (result == func) {\n      result = forceCurry ? curry(result, 1) : function() {\n        return func.apply(this, arguments);\n      };\n    }\n    result.convert = createConverter(realName, func);\n    result.placeholder = func.placeholder = placeholder;\n\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  if (!isObj) {\n    return wrap(name, func, defaultHolder);\n  }\n  var _ = func;\n\n  // Convert methods by ary cap.\n  var pairs = [];\n  each(aryMethodKeys, function(aryKey) {\n    each(mapping.aryMethod[aryKey], function(key) {\n      var func = _[mapping.remap[key] || key];\n      if (func) {\n        pairs.push([key, wrap(key, func, _)]);\n      }\n    });\n  });\n\n  // Convert remaining methods.\n  each(keys(_), function(key) {\n    var func = _[key];\n    if (typeof func == 'function') {\n      var length = pairs.length;\n      while (length--) {\n        if (pairs[length][0] == key) {\n          return;\n        }\n      }\n      func.convert = createConverter(key, func);\n      pairs.push([key, func]);\n    }\n  });\n\n  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.\n  each(pairs, function(pair) {\n    _[pair[0]] = pair[1];\n  });\n\n  _.convert = convertLib;\n  _.placeholder = _;\n\n  // Assign aliases.\n  each(keys(_), function(key) {\n    each(mapping.realToAlias[key] || [], function(alias) {\n      _[alias] = _[key];\n    });\n  });\n\n  return _;\n}\n\nmodule.exports = baseConvert;\n","/** Used to map aliases to their real names. */\nexports.aliasToReal = {\n\n  // Lodash aliases.\n  'each': 'forEach',\n  'eachRight': 'forEachRight',\n  'entries': 'toPairs',\n  'entriesIn': 'toPairsIn',\n  'extend': 'assignIn',\n  'extendAll': 'assignInAll',\n  'extendAllWith': 'assignInAllWith',\n  'extendWith': 'assignInWith',\n  'first': 'head',\n\n  // Methods that are curried variants of others.\n  'conforms': 'conformsTo',\n  'matches': 'isMatch',\n  'property': 'get',\n\n  // Ramda aliases.\n  '__': 'placeholder',\n  'F': 'stubFalse',\n  'T': 'stubTrue',\n  'all': 'every',\n  'allPass': 'overEvery',\n  'always': 'constant',\n  'any': 'some',\n  'anyPass': 'overSome',\n  'apply': 'spread',\n  'assoc': 'set',\n  'assocPath': 'set',\n  'complement': 'negate',\n  'compose': 'flowRight',\n  'contains': 'includes',\n  'dissoc': 'unset',\n  'dissocPath': 'unset',\n  'dropLast': 'dropRight',\n  'dropLastWhile': 'dropRightWhile',\n  'equals': 'isEqual',\n  'identical': 'eq',\n  'indexBy': 'keyBy',\n  'init': 'initial',\n  'invertObj': 'invert',\n  'juxt': 'over',\n  'omitAll': 'omit',\n  'nAry': 'ary',\n  'path': 'get',\n  'pathEq': 'matchesProperty',\n  'pathOr': 'getOr',\n  'paths': 'at',\n  'pickAll': 'pick',\n  'pipe': 'flow',\n  'pluck': 'map',\n  'prop': 'get',\n  'propEq': 'matchesProperty',\n  'propOr': 'getOr',\n  'props': 'at',\n  'symmetricDifference': 'xor',\n  'symmetricDifferenceBy': 'xorBy',\n  'symmetricDifferenceWith': 'xorWith',\n  'takeLast': 'takeRight',\n  'takeLastWhile': 'takeRightWhile',\n  'unapply': 'rest',\n  'unnest': 'flatten',\n  'useWith': 'overArgs',\n  'where': 'conformsTo',\n  'whereEq': 'isMatch',\n  'zipObj': 'zipObject'\n};\n\n/** Used to map ary to method names. */\nexports.aryMethod = {\n  '1': [\n    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',\n    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',\n    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',\n    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',\n    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',\n    'uniqueId', 'words', 'zipAll'\n  ],\n  '2': [\n    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',\n    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',\n    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',\n    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',\n    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',\n    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',\n    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',\n    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',\n    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',\n    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',\n    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',\n    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',\n    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',\n    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',\n    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',\n    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',\n    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',\n    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',\n    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',\n    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',\n    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',\n    'zipObjectDeep'\n  ],\n  '3': [\n    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',\n    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',\n    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',\n    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',\n    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',\n    'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',\n    'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',\n    'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',\n    'xorWith', 'zipWith'\n  ],\n  '4': [\n    'fill', 'setWith', 'updateWith'\n  ]\n};\n\n/** Used to map ary to rearg configs. */\nexports.aryRearg = {\n  '2': [1, 0],\n  '3': [2, 0, 1],\n  '4': [3, 2, 0, 1]\n};\n\n/** Used to map method names to their iteratee ary. */\nexports.iterateeAry = {\n  'dropRightWhile': 1,\n  'dropWhile': 1,\n  'every': 1,\n  'filter': 1,\n  'find': 1,\n  'findFrom': 1,\n  'findIndex': 1,\n  'findIndexFrom': 1,\n  'findKey': 1,\n  'findLast': 1,\n  'findLastFrom': 1,\n  'findLastIndex': 1,\n  'findLastIndexFrom': 1,\n  'findLastKey': 1,\n  'flatMap': 1,\n  'flatMapDeep': 1,\n  'flatMapDepth': 1,\n  'forEach': 1,\n  'forEachRight': 1,\n  'forIn': 1,\n  'forInRight': 1,\n  'forOwn': 1,\n  'forOwnRight': 1,\n  'map': 1,\n  'mapKeys': 1,\n  'mapValues': 1,\n  'partition': 1,\n  'reduce': 2,\n  'reduceRight': 2,\n  'reject': 1,\n  'remove': 1,\n  'some': 1,\n  'takeRightWhile': 1,\n  'takeWhile': 1,\n  'times': 1,\n  'transform': 2\n};\n\n/** Used to map method names to iteratee rearg configs. */\nexports.iterateeRearg = {\n  'mapKeys': [1],\n  'reduceRight': [1, 0]\n};\n\n/** Used to map method names to rearg configs. */\nexports.methodRearg = {\n  'assignInAllWith': [1, 0],\n  'assignInWith': [1, 2, 0],\n  'assignAllWith': [1, 0],\n  'assignWith': [1, 2, 0],\n  'differenceBy': [1, 2, 0],\n  'differenceWith': [1, 2, 0],\n  'getOr': [2, 1, 0],\n  'intersectionBy': [1, 2, 0],\n  'intersectionWith': [1, 2, 0],\n  'isEqualWith': [1, 2, 0],\n  'isMatchWith': [2, 1, 0],\n  'mergeAllWith': [1, 0],\n  'mergeWith': [1, 2, 0],\n  'padChars': [2, 1, 0],\n  'padCharsEnd': [2, 1, 0],\n  'padCharsStart': [2, 1, 0],\n  'pullAllBy': [2, 1, 0],\n  'pullAllWith': [2, 1, 0],\n  'rangeStep': [1, 2, 0],\n  'rangeStepRight': [1, 2, 0],\n  'setWith': [3, 1, 2, 0],\n  'sortedIndexBy': [2, 1, 0],\n  'sortedLastIndexBy': [2, 1, 0],\n  'unionBy': [1, 2, 0],\n  'unionWith': [1, 2, 0],\n  'updateWith': [3, 1, 2, 0],\n  'xorBy': [1, 2, 0],\n  'xorWith': [1, 2, 0],\n  'zipWith': [1, 2, 0]\n};\n\n/** Used to map method names to spread configs. */\nexports.methodSpread = {\n  'assignAll': { 'start': 0 },\n  'assignAllWith': { 'start': 0 },\n  'assignInAll': { 'start': 0 },\n  'assignInAllWith': { 'start': 0 },\n  'defaultsAll': { 'start': 0 },\n  'defaultsDeepAll': { 'start': 0 },\n  'invokeArgs': { 'start': 2 },\n  'invokeArgsMap': { 'start': 2 },\n  'mergeAll': { 'start': 0 },\n  'mergeAllWith': { 'start': 0 },\n  'partial': { 'start': 1 },\n  'partialRight': { 'start': 1 },\n  'without': { 'start': 1 },\n  'zipAll': { 'start': 0 }\n};\n\n/** Used to identify methods which mutate arrays or objects. */\nexports.mutate = {\n  'array': {\n    'fill': true,\n    'pull': true,\n    'pullAll': true,\n    'pullAllBy': true,\n    'pullAllWith': true,\n    'pullAt': true,\n    'remove': true,\n    'reverse': true\n  },\n  'object': {\n    'assign': true,\n    'assignAll': true,\n    'assignAllWith': true,\n    'assignIn': true,\n    'assignInAll': true,\n    'assignInAllWith': true,\n    'assignInWith': true,\n    'assignWith': true,\n    'defaults': true,\n    'defaultsAll': true,\n    'defaultsDeep': true,\n    'defaultsDeepAll': true,\n    'merge': true,\n    'mergeAll': true,\n    'mergeAllWith': true,\n    'mergeWith': true,\n  },\n  'set': {\n    'set': true,\n    'setWith': true,\n    'unset': true,\n    'update': true,\n    'updateWith': true\n  }\n};\n\n/** Used to map real names to their aliases. */\nexports.realToAlias = (function() {\n  var hasOwnProperty = Object.prototype.hasOwnProperty,\n      object = exports.aliasToReal,\n      result = {};\n\n  for (var key in object) {\n    var value = object[key];\n    if (hasOwnProperty.call(result, value)) {\n      result[value].push(key);\n    } else {\n      result[value] = [key];\n    }\n  }\n  return result;\n}());\n\n/** Used to map method names to other names. */\nexports.remap = {\n  'assignAll': 'assign',\n  'assignAllWith': 'assignWith',\n  'assignInAll': 'assignIn',\n  'assignInAllWith': 'assignInWith',\n  'curryN': 'curry',\n  'curryRightN': 'curryRight',\n  'defaultsAll': 'defaults',\n  'defaultsDeepAll': 'defaultsDeep',\n  'findFrom': 'find',\n  'findIndexFrom': 'findIndex',\n  'findLastFrom': 'findLast',\n  'findLastIndexFrom': 'findLastIndex',\n  'getOr': 'get',\n  'includesFrom': 'includes',\n  'indexOfFrom': 'indexOf',\n  'invokeArgs': 'invoke',\n  'invokeArgsMap': 'invokeMap',\n  'lastIndexOfFrom': 'lastIndexOf',\n  'mergeAll': 'merge',\n  'mergeAllWith': 'mergeWith',\n  'padChars': 'pad',\n  'padCharsEnd': 'padEnd',\n  'padCharsStart': 'padStart',\n  'propertyOf': 'get',\n  'rangeStep': 'range',\n  'rangeStepRight': 'rangeRight',\n  'restFrom': 'rest',\n  'spreadFrom': 'spread',\n  'trimChars': 'trim',\n  'trimCharsEnd': 'trimEnd',\n  'trimCharsStart': 'trimStart',\n  'zipAll': 'zip'\n};\n\n/** Used to track methods that skip fixing their arity. */\nexports.skipFixed = {\n  'castArray': true,\n  'flow': true,\n  'flowRight': true,\n  'iteratee': true,\n  'mixin': true,\n  'rearg': true,\n  'runInContext': true\n};\n\n/** Used to track methods that skip rearranging arguments. */\nexports.skipRearg = {\n  'add': true,\n  'assign': true,\n  'assignIn': true,\n  'bind': true,\n  'bindKey': true,\n  'concat': true,\n  'difference': true,\n  'divide': true,\n  'eq': true,\n  'gt': true,\n  'gte': true,\n  'isEqual': true,\n  'lt': true,\n  'lte': true,\n  'matchesProperty': true,\n  'merge': true,\n  'multiply': true,\n  'overArgs': true,\n  'partial': true,\n  'partialRight': true,\n  'propertyOf': true,\n  'random': true,\n  'range': true,\n  'rangeRight': true,\n  'subtract': true,\n  'zip': true,\n  'zipObject': true,\n  'zipObjectDeep': true\n};\n","/**\n * The default argument placeholder value for methods.\n *\n * @type {Object}\n */\nmodule.exports = {};\n","var isArray = require('@stamp/is/array');\nvar isFunction = require('@stamp/is/function');\nvar isObject = require('@stamp/is/object');\nvar isStamp = require('@stamp/is/stamp');\nvar isComposable = require('@stamp/is/composable');\n\nvar assign = require('@stamp/core/assign');\nvar merge = require('@stamp/core/merge');\n\nvar slice = Array.prototype.slice;\n\n/**\n * Creates new factory instance.\n * @returns {Function} The new factory function.\n */\nfunction createFactory() {\n  return function Stamp(options) {\n    var descriptor = Stamp.compose || {};\n    // Next line was optimized for most JS VMs. Please, be careful here!\n    var obj = {__proto__: descriptor.methods}; // jshint ignore:line\n\n    merge(obj, descriptor.deepProperties);\n    assign(obj, descriptor.properties);\n    Object.defineProperties(obj, descriptor.propertyDescriptors || {});\n\n    if (!descriptor.initializers || descriptor.initializers.length === 0) return obj;\n\n    if (options === undefined) options = {};\n    var inits = descriptor.initializers;\n    var length = inits.length;\n    for (var i = 0; i < length; i += 1) {\n      var initializer = inits[i];\n      if (isFunction(initializer)) {\n        var returnedValue = initializer.call(obj, options,\n          {instance: obj, stamp: Stamp, args: slice.apply(arguments)});\n        obj = returnedValue === undefined ? obj : returnedValue;\n      }\n    }\n\n    return obj;\n  };\n}\n\n/**\n * Returns a new stamp given a descriptor and a compose function implementation.\n * @param {Descriptor} [descriptor={}] The information about the object the stamp will be creating.\n * @param {Compose} composeFunction The \"compose\" function implementation.\n * @returns {Stamp}\n */\nfunction createStamp(descriptor, composeFunction) {\n  var Stamp = createFactory();\n\n  if (descriptor.staticDeepProperties) {\n    merge(Stamp, descriptor.staticDeepProperties);\n  }\n  if (descriptor.staticProperties) {\n    assign(Stamp, descriptor.staticProperties);\n  }\n  if (descriptor.staticPropertyDescriptors) {\n    Object.defineProperties(Stamp, descriptor.staticPropertyDescriptors);\n  }\n\n  var composeImplementation = isFunction(Stamp.compose) ? Stamp.compose : composeFunction;\n  Stamp.compose = function _compose() {\n    'use strict'; // to make sure `this` is not pointing to `global` or `window`\n    return composeImplementation.apply(this, arguments);\n  };\n  assign(Stamp.compose, descriptor);\n\n  return Stamp;\n}\n\nfunction concatAssignFunctions(dstObject, srcArray, propName) {\n  if (!isArray(srcArray)) return;\n\n  var length = srcArray.length;\n  var dstArray = dstObject[propName] || [];\n  dstObject[propName] = dstArray;\n  for (var i = 0; i < length; i += 1) {\n    var fn = srcArray[i];\n    if (isFunction(fn) && dstArray.indexOf(fn) < 0) {\n      dstArray.push(fn);\n    }\n  }\n}\n\n\nfunction combineProperties(dstObject, srcObject, propName, action) {\n  if (!isObject(srcObject[propName])) return;\n  if (!isObject(dstObject[propName])) dstObject[propName] = {};\n  action(dstObject[propName], srcObject[propName]);\n}\n\nfunction deepMergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, merge);\n}\nfunction mergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, assign);\n}\n\n/**\n * Mutates the dstDescriptor by merging the srcComposable data into it.\n * @param {Descriptor} dstDescriptor The descriptor object to merge into.\n * @param {Composable} [srcComposable] The composable\n * (either descriptor or stamp) to merge data form.\n */\nfunction mergeComposable(dstDescriptor, srcComposable) {\n  var srcDescriptor = (srcComposable && srcComposable.compose) || srcComposable;\n\n  mergeAssign(dstDescriptor, srcDescriptor, 'methods');\n  mergeAssign(dstDescriptor, srcDescriptor, 'properties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'propertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticProperties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'staticDeepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticPropertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'configuration');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepConfiguration');\n  concatAssignFunctions(dstDescriptor, srcDescriptor.initializers, 'initializers');\n  concatAssignFunctions(dstDescriptor, srcDescriptor.composers, 'composers');\n}\n\n/**\n * Given the list of composables (stamp descriptors and stamps) returns\n * a new stamp (composable factory function).\n * @typedef {Function} Compose\n * @param {...(Composable)} [arguments] The list of composables.\n * @returns {Stamp} A new stamp (aka composable factory function)\n */\nmodule.exports = function compose() {\n  'use strict'; // to make sure `this` is not pointing to `global` or `window`\n  var descriptor = {};\n  var composables = [];\n  if (isComposable(this)) {\n    mergeComposable(descriptor, this);\n    composables.push(this);\n  }\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n    if (isComposable(arg)) {\n      mergeComposable(descriptor, arg);\n      composables.push(arg);\n    }\n  }\n\n  var stamp = createStamp(descriptor, compose);\n\n  var composers = descriptor.composers;\n  if (isArray(composers) && composers.length > 0) {\n    for (var j = 0; j < composers.length; j += 1) {\n      var composer = composers[j];\n      var returnedValue = composer({stamp: stamp, composables: composables});\n      stamp = isStamp(returnedValue) ? returnedValue : stamp;\n    }\n  }\n\n  return stamp;\n};\n\n\n/**\n * The Stamp Descriptor\n * @typedef {Function|Object} Descriptor\n * @returns {Stamp} A new stamp based on this Stamp\n * @property {Object} [methods] Methods or other data used as object instances' prototype\n * @property {Array<Function>} [initializers] List of initializers called for each object instance\n * @property {Array<Function>} [composers] List of callbacks called each time a composition happens\n * @property {Object} [properties] Shallow assigned properties of object instances\n * @property {Object} [deepProperties] Deeply merged properties of object instances\n * @property {Object} [staticProperties] Shallow assigned properties of Stamps\n * @property {Object} [staticDeepProperties] Deeply merged properties of Stamps\n * @property {Object} [configuration] Shallow assigned properties of Stamp arbitrary metadata\n * @property {Object} [deepConfiguration] Deeply merged properties of Stamp arbitrary metadata\n * @property {Object} [propertyDescriptors] ES5 Property Descriptors applied to object instances\n * @property {Object} [staticPropertyDescriptors] ES5 Property Descriptors applied to Stamps\n */\n\n/**\n * The Stamp factory function\n * @typedef {Function} Stamp\n * @returns {*} Instantiated object\n * @property {Descriptor} compose - The Stamp descriptor and composition function\n */\n\n/**\n * A composable object - stamp or descriptor\n * @typedef {Stamp|Descriptor} Composable\n */\n\n","var isFunction = require('./function');\n\nmodule.exports = function isStamp(arg) {\n  return isFunction(arg) && isFunction(arg.compose);\n};\n","// More proper implementation would be\n// isDescriptor(obj) || isStamp(obj)\n// but there is no sense since stamp is function and function is object.\nmodule.exports = require('./object');\n","module.exports = Object.assign;\n","var isPlainObject = require('@stamp/is/plain-object');\nvar isObject = require('@stamp/is/object');\nvar isArray = require('@stamp/is/array');\n\n/**\n * The 'src' argument plays the command role.\n * The returned values is always of the same type as the 'src'.\n * @param dst The object to merge into\n * @param src The object to merge from\n * @returns {*}\n */\nfunction mergeOne(dst, src) {\n  if (src === undefined) return dst;\n\n  // According to specification arrays must be concatenated.\n  // Also, the '.concat' creates a new array instance. Overrides the 'dst'.\n  if (isArray(src)) return (isArray(dst) ? dst : []).concat(src);\n\n  // Now deal with non plain 'src' object. 'src' overrides 'dst'\n  // Note that functions are also assigned! We do not deep merge functions.\n  if (!isPlainObject(src)) return src;\n\n  // See if 'dst' is allowed to be mutated.\n  // If not - it's overridden with a new plain object.\n  var returnValue = isObject(dst) ? dst : {};\n\n  var keys = Object.keys(src);\n  for (var i = 0; i < keys.length; i += 1) {\n    var key = keys[i];\n\n    var srcValue = src[key];\n    // Do not merge properties with the 'undefined' value.\n    if (srcValue !== undefined) {\n      var dstValue = returnValue[key];\n      // Recursive calls to mergeOne() must allow only plain objects or arrays in dst\n      var newDst = isPlainObject(dstValue) || isArray(srcValue) ? dstValue : {};\n\n      // deep merge each property. Recursion!\n      returnValue[key] = mergeOne(newDst, srcValue);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = function (dst) {\n  for (var i = 1; i < arguments.length; i++) {\n    dst = mergeOne(dst, arguments[i]);\n  }\n  return dst;\n};\n","module.exports = function isPlainObject(value) {\n  return Boolean(value) && typeof value === 'object' &&\n    Object.getPrototypeOf(value) === Object.prototype;\n};\n","/**\n * BottleJS v2.0.1 - 2022-06-28\n * A powerful dependency injection micro container\n *\n * Copyright (c) 2022 Stephen Young\n * Licensed MIT\n */\nvar Bottle;\n\n/**\n * String constants\n */\nvar DELIMITER = '.';\nvar FUNCTION_TYPE = 'function';\nvar STRING_TYPE = 'string';\nvar GLOBAL_NAME = '__global__';\nvar PROVIDER_SUFFIX = 'Provider';\n\n/**\n * Unique id counter;\n *\n * @type Number\n */\nvar id = 0;\n\n/**\n * Local slice alias\n *\n * @type Functions\n */\nvar slice = Array.prototype.slice;\n\n/**\n * Iterator used to walk down a nested object.\n *\n * If Bottle.config.strict is true, this method will throw an exception if it encounters an\n * undefined path\n *\n * @param Object obj\n * @param String prop\n * @return mixed\n * @throws Error if Bottle is unable to resolve the requested service.\n */\nvar getNested = function getNested(obj, prop) {\n    var service = obj[prop];\n    if (service === undefined && Bottle.config.strict) {\n        throw new Error('Bottle was unable to resolve a service.  `' + prop + '` is undefined.');\n    }\n    return service;\n};\n\n/**\n * Get a nested bottle. Will set and return if not set.\n *\n * @param String name\n * @return Bottle\n */\nvar getNestedBottle = function getNestedBottle(name) {\n    var bottle;\n    if (!this.nested[name]) {\n        bottle = Bottle.pop();\n        this.nested[name] = bottle;\n        this.factory(name, function SubProviderFactory() {\n            return bottle.container;\n        });\n    }\n    return this.nested[name];\n};\n\n/**\n * Get a service stored under a nested key\n *\n * @param String fullname\n * @return Service\n */\nvar getNestedService = function getNestedService(fullname) {\n    return fullname.split(DELIMITER).reduce(getNested, this);\n};\n\n/**\n * Function used by provider to set up middleware for each request.\n *\n * @param Number id\n * @param String name\n * @param Object instance\n * @param Object container\n * @return void\n */\nvar applyMiddleware = function applyMiddleware(middleware, name, instance, container) {\n    var descriptor = {\n        configurable : true,\n        enumerable : true\n    };\n    if (middleware.length) {\n        descriptor.get = function getWithMiddlewear() {\n            var index = 0;\n            var next = function nextMiddleware(err) {\n                if (err) {\n                    throw err;\n                }\n                if (middleware[index]) {\n                    middleware[index++](instance, next);\n                }\n            };\n            next();\n            return instance;\n        };\n    } else {\n        descriptor.value = instance;\n        descriptor.writable = true;\n    }\n\n    Object.defineProperty(container, name, descriptor);\n\n    return container[name];\n};\n\n/**\n * Register middleware.\n *\n * @param String name\n * @param Function func\n * @return Bottle\n */\nvar middleware = function middleware(fullname, func) {\n    var parts, name;\n    if (typeof fullname === FUNCTION_TYPE) {\n        func = fullname;\n        fullname = GLOBAL_NAME;\n    }\n\n    parts = fullname.split(DELIMITER);\n    name = parts.shift();\n    if (parts.length) {\n        getNestedBottle.call(this, name).middleware(parts.join(DELIMITER), func);\n    } else {\n        if (!this.middlewares[name]) {\n            this.middlewares[name] = [];\n        }\n        this.middlewares[name].push(func);\n    }\n    return this;\n};\n\n/**\n * Used to process decorators in the provider\n *\n * @param Object instance\n * @param Function func\n * @return Mixed\n */\nvar reducer = function reducer(instance, func) {\n    return func(instance);\n};\n\n\n/**\n * Get decorators and middleware including globals\n *\n * @return array\n */\nvar getWithGlobal = function getWithGlobal(collection, name) {\n    return (collection[name] || []).concat(collection.__global__ || []);\n};\n\n\n/**\n * Create the provider properties on the container\n *\n * @param String name\n * @param Function Provider\n * @return Bottle\n */\nvar createProvider = function createProvider(name, Provider) {\n    var providerName, properties, container, id, decorators, middlewares;\n\n    id = this.id;\n    container = this.container;\n    decorators = this.decorators;\n    middlewares = this.middlewares;\n    providerName = name + PROVIDER_SUFFIX;\n\n    properties = Object.create(null);\n    properties[providerName] = {\n        configurable : true,\n        enumerable : true,\n        get : function getProvider() {\n            var instance = new Provider();\n            delete container[providerName];\n            container[providerName] = instance;\n            return instance;\n        }\n    };\n\n    properties[name] = {\n        configurable : true,\n        enumerable : true,\n        get : function getService() {\n            var provider = container[providerName];\n            var instance;\n            if (provider) {\n                // filter through decorators\n                instance = getWithGlobal(decorators, name).reduce(reducer, provider.$get(container));\n\n                delete container[providerName];\n                delete container[name];\n            }\n            return instance === undefined ? instance : applyMiddleware(getWithGlobal(middlewares, name),\n                name, instance, container);\n        }\n    };\n\n    Object.defineProperties(container, properties);\n    return this;\n};\n\n\n/**\n * Register a provider.\n *\n * @param String fullname\n * @param Function Provider\n * @return Bottle\n */\nvar provider = function provider(fullname, Provider) {\n    var parts, name;\n    parts = fullname.split(DELIMITER);\n    if (this.providerMap[fullname] && parts.length === 1 && !this.container[fullname + PROVIDER_SUFFIX]) {\n        return console.error(fullname + ' provider already instantiated.');\n    }\n    this.originalProviders[fullname] = Provider;\n    this.providerMap[fullname] = true;\n\n    name = parts.shift();\n\n    if (parts.length) {\n        getNestedBottle.call(this, name).provider(parts.join(DELIMITER), Provider);\n        return this;\n    }\n    return createProvider.call(this, name, Provider);\n};\n\n/**\n * Register a factory inside a generic provider.\n *\n * @param String name\n * @param Function Factory\n * @return Bottle\n */\nvar factory = function factory(name, Factory) {\n    return provider.call(this, name, function GenericProvider() {\n        this.$get = Factory;\n    });\n};\n\n/**\n * Private helper for creating service and service factories.\n *\n * @param String name\n * @param Function Service\n * @return Bottle\n */\nvar createService = function createService(name, Service, isClass) {\n    var deps = arguments.length > 3 ? slice.call(arguments, 3) : [];\n    var bottle = this;\n    return factory.call(this, name, function GenericFactory() {\n        var serviceFactory = Service; // alias for jshint\n        var args = deps.map(getNestedService, bottle.container);\n\n        if (!isClass) {\n            return serviceFactory.apply(null, args);\n        }\n        return new (Service.bind.apply(Service, [null].concat(args)))();\n    });\n};\n\n/**\n * Register a class service\n *\n * @param String name\n * @param Function Service\n * @return Bottle\n */\nvar service = function service(name, Service) {\n    return createService.apply(this, [name, Service, true].concat(slice.call(arguments, 2)));\n};\n\n/**\n * Register a function service\n */\nvar serviceFactory = function serviceFactory(name, factoryService) {\n    return createService.apply(this, [name, factoryService, false].concat(slice.call(arguments, 2)));\n};\n\n/**\n * Define a mutable property on the container.\n *\n * @param String name\n * @param mixed val\n * @return void\n * @scope container\n */\nvar defineValue = function defineValue(name, val) {\n    Object.defineProperty(this, name, {\n        configurable : true,\n        enumerable : true,\n        value : val,\n        writable : true\n    });\n};\n\n/**\n * Iterator for setting a plain object literal via defineValue\n *\n * @param Object container\n * @param string name\n */\nvar setValueObject = function setValueObject(container, name) {\n    var nestedContainer = container[name];\n    if (!nestedContainer) {\n        nestedContainer = {};\n        defineValue.call(container, name, nestedContainer);\n    }\n    return nestedContainer;\n};\n\n\n/**\n * Register a value\n *\n * @param String name\n * @param mixed val\n * @return Bottle\n */\nvar value = function value(name, val) {\n    var parts;\n    parts = name.split(DELIMITER);\n    name = parts.pop();\n    defineValue.call(parts.reduce(setValueObject, this.container), name, val);\n    return this;\n};\n\n/**\n * Define an enumerable, non-configurable, non-writable value.\n *\n * @param String name\n * @param mixed value\n * @return undefined\n */\nvar defineConstant = function defineConstant(name, value) {\n    Object.defineProperty(this, name, {\n        configurable : false,\n        enumerable : true,\n        value : value,\n        writable : false\n    });\n};\n\n/**\n * Register a constant\n *\n * @param String name\n * @param mixed value\n * @return Bottle\n */\nvar constant = function constant(name, value) {\n    var parts = name.split(DELIMITER);\n    name = parts.pop();\n    defineConstant.call(parts.reduce(setValueObject, this.container), name, value);\n    return this;\n};\n\n/**\n * Register decorator.\n *\n * @param String fullname\n * @param Function func\n * @return Bottle\n */\nvar decorator = function decorator(fullname, func) {\n    var parts, name;\n    if (typeof fullname === FUNCTION_TYPE) {\n        func = fullname;\n        fullname = GLOBAL_NAME;\n    }\n\n    parts = fullname.split(DELIMITER);\n    name = parts.shift();\n    if (parts.length) {\n        getNestedBottle.call(this, name).decorator(parts.join(DELIMITER), func);\n    } else {\n        if (!this.decorators[name]) {\n            this.decorators[name] = [];\n        }\n        this.decorators[name].push(func);\n    }\n    return this;\n};\n\n/**\n * Register a function that will be executed when Bottle#resolve is called.\n *\n * @param Function func\n * @return Bottle\n */\nvar defer = function defer(func) {\n    this.deferred.push(func);\n    return this;\n};\n\n\n/**\n * Immediately instantiates the provided list of services and returns them.\n *\n * @param Array services\n * @return Array Array of instances (in the order they were provided)\n */\nvar digest = function digest(services) {\n    return (services || []).map(getNestedService, this.container);\n};\n\n/**\n * Register an instance factory inside a generic factory.\n *\n * @param {String} name - The name of the service\n * @param {Function} Factory - The factory function, matches the signature required for the\n * `factory` method\n * @return Bottle\n */\nvar instanceFactory = function instanceFactory(name, Factory) {\n    return factory.call(this, name, function GenericInstanceFactory(container) {\n        return {\n            instance : Factory.bind(Factory, container)\n        };\n    });\n};\n\n/**\n * A filter function for removing bottle container methods and providers from a list of keys\n */\nvar byMethod = function byMethod(name) {\n    return !/^\\$(?:decorator|register|list)$|Provider$/.test(name);\n};\n\n/**\n * List the services registered on the container.\n *\n * @param Object container\n * @return Array\n */\nvar list = function list(container) {\n    return Object.keys(container || this.container || {}).filter(byMethod);\n};\n\n/**\n * Named bottle instances\n *\n * @type Object\n */\nvar bottles = {};\n\n/**\n * Get an instance of bottle.\n *\n * If a name is provided the instance will be stored in a local hash.  Calling Bottle.pop multiple\n * times with the same name will return the same instance.\n *\n * @param String name\n * @return Bottle\n */\nvar pop = function pop(name) {\n    var instance;\n    if (typeof name === STRING_TYPE) {\n        instance = bottles[name];\n        if (!instance) {\n            bottles[name] = instance = new Bottle();\n            instance.constant('BOTTLE_NAME', name);\n        }\n        return instance;\n    }\n    return new Bottle();\n};\n\n/**\n * Clear all named bottles.\n */\nvar clear = function clear(name) {\n    if (typeof name === STRING_TYPE) {\n        delete bottles[name];\n    } else {\n        bottles = {};\n    }\n};\n\n/**\n * Register a service, factory, provider, or value based on properties on the object.\n *\n * properties:\n *  * Obj.$name   String required ex: `'Thing'`\n *  * Obj.$type   String optional 'service', 'factory', 'provider', 'value'.  Default: 'service'\n *  * Obj.$inject Mixed  optional only useful with $type 'service' name or array of names\n *  * Obj.$value  Mixed  optional Normally Obj is registered on the container.  However, if this\n *                       property is included, it's value will be registered on the container\n *                       instead of the object itsself.  Useful for registering objects on the\n *                       bottle container without modifying those objects with bottle specific keys.\n *\n * @param Function Obj\n * @return Bottle\n */\nvar register = function register(Obj) {\n    var value = Obj.$value === undefined ? Obj : Obj.$value;\n    return this[Obj.$type || 'service'].apply(this, [Obj.$name, value].concat(Obj.$inject || []));\n};\n\n/**\n * Deletes providers from the map and container.\n *\n * @param String name\n * @return void\n */\nvar removeProviderMap = function resetProvider(name) {\n    delete this.providerMap[name];\n    delete this.container[name];\n    delete this.container[name + PROVIDER_SUFFIX];\n};\n\n/**\n * Resets providers on a bottle instance. If 'names' array is provided, only the named providers will be reset.\n *\n * @param Array names\n * @return void\n */\nvar resetProviders = function resetProviders(names) {\n    var tempProviders = this.originalProviders;\n    var shouldFilter = Array.isArray(names);\n\n    Object.keys(this.originalProviders).forEach(function resetProvider(originalProviderName) {\n        if (shouldFilter && names.indexOf(originalProviderName) === -1) {\n            return;\n        }\n        var parts = originalProviderName.split(DELIMITER);\n        if (parts.length > 1) {\n            parts.forEach(removeProviderMap, getNestedBottle.call(this, parts[0]));\n        }\n        removeProviderMap.call(this, originalProviderName);\n        this.provider(originalProviderName, tempProviders[originalProviderName]);\n    }, this);\n};\n\n\n/**\n * Execute any deferred functions\n *\n * @param Mixed data\n * @return Bottle\n */\nvar resolve = function resolve(data) {\n    this.deferred.forEach(function deferredIterator(func) {\n        func(data);\n    });\n\n    return this;\n};\n\n\n/**\n * Bottle constructor\n *\n * @param String name Optional name for functional construction\n */\nBottle = function Bottle(name) {\n    if (!(this instanceof Bottle)) {\n        return Bottle.pop(name);\n    }\n\n    this.id = id++;\n\n    this.decorators = {};\n    this.middlewares = {};\n    this.nested = {};\n    this.providerMap = {};\n    this.originalProviders = {};\n    this.deferred = [];\n    this.container = {\n        $decorator : decorator.bind(this),\n        $register : register.bind(this),\n        $list : list.bind(this)\n    };\n};\n\n/**\n * Bottle prototype\n */\nBottle.prototype = {\n    constant : constant,\n    decorator : decorator,\n    defer : defer,\n    digest : digest,\n    factory : factory,\n    instanceFactory: instanceFactory,\n    list : list,\n    middleware : middleware,\n    provider : provider,\n    resetProviders : resetProviders,\n    register : register,\n    resolve : resolve,\n    service : service,\n    serviceFactory : serviceFactory,\n    value : value\n};\n\n/**\n * Bottle static\n */\nBottle.pop = pop;\nBottle.clear = clear;\nBottle.list = list;\n\n/**\n * Global config\n */\nBottle.config = {\n    strict : false\n};\n\nexport default Bottle","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","module.exports = function () { /* empty */ };\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher) || [];\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","import createLogger from './logger'\nimport defaultLogHandler from './logHandler'\nimport { logLevels } from './constants'\nimport { checkLevel, checkHandler } from './validation'\n\nconst defaultType = Symbol('Default')\n\n/**\n * Creates a Log Manager.\n * @method createManager\n * @param  {Object}     [options={}]\n * @param  {Function}   [options.handler]      The default log handler used for\n *    Loggers that don't have a handler set.\n * @param  {string}     [options.level='INFO'] The default log level used for\n *    Loggers that don't have a level set.\n * @return {LogManager}\n */\nexport default function createManager (options = {}) {\n  const loggers = {}\n\n  /**\n   * Mapping between a Logger `type` and their default settings. Created Loggers\n   *    will use their `type` settings if they exist. Otherwise the \"global\"\n   *    options provided during Manager creation.\n   * @type {Object}\n   */\n  const settings = {\n    [defaultType]: {\n      handler: options.handler ? checkHandler(options.handler) : defaultLogHandler,\n      level: options.level ? checkLevel(options.level) : logLevels.INFO\n    }\n  }\n\n  /**\n   * Gets a specific logger. If the logger doesn't exist, a new one will be\n   *    created.\n   * @method getLogger\n   * @param  {string} type Human-readable type/name for the logger.\n   * @param  {string} [id] A unique identifier for the logger.\n   * @return {Logger}\n   */\n  function getLogger (type, id = '') {\n    id = String(id)\n\n    // Combine the name and ID to create the \"full\" logger name.\n    const loggerName = id ? `${type}-${id}` : type\n\n    let logger = loggers[loggerName]\n    // If the logger does not exist, create a new one.\n    if (!logger) {\n      // This logger logs items from a specific \"target\".\n      const target = { type, id, name: loggerName }\n      const options = {\n        level: getLevel(type),\n        handler: getHandler(type)\n      }\n\n      logger = createLogger(target, options)\n\n      // Save the new logger to be returned by future getter calls.\n      loggers[loggerName] = logger\n    }\n\n    return logger\n  }\n\n  /**\n   * Gets all created loggers, or Loggers of a specific type.\n   * @method getLoggers\n   * @param {string} [type] The type of Loggers to retrieve.\n   * @return {Array<Logger>} List of Loggers.\n   */\n  function getLoggers (type) {\n    if (type) {\n      return Object.values(loggers).filter(logger => logger.type === type)\n    } else {\n      return Object.values(loggers)\n    }\n  }\n\n  /**\n   * Sets the default `level` to be used when creating Loggers.\n   *\n   * Can set the level \"globally\" or per `type`, depending if `type` is provided\n   *    or not. When set for a specific type, only Loggers of that type will use\n   *    the set level. When set \"globally\", all Loggers without a set type will\n   *    use the level as a default.\n   *\n   * Setting the level only affects Loggers created after that point.\n   * @method setLevel\n   * @param  {string} type  The type of Logger to set the option for.\n   * @param  {string} level The logLevel to be set.\n   * @throws Throws an error if level is not a valid log level.\n   * @example\n   * const manager = createManager({ level: logLevels.WARN })\n   *\n   * // Setting the level for a type sets it for created Loggers of that type.\n   * manager.setLevel('Call', logLevels.DEBUG)\n   * const logger1 = manager.getLogger('Call')\n   * // logger1.getLevel() === logLevels.DEBUG\n   *\n   * // Loggers created of types without a set level uses the Manager's level.\n   * const logger2 = manager.getLogger('Auth')\n   * // logger2.getLevel() === logLevels.WARN\n   *\n   * // Setting the level without a type changes the Manager's level.\n   * manager.setLevel(logLevels.INFO)\n   * const logger3 = manager.getLogger('Messaging')\n   * // logger3.getLevel() === logLevels.INFO\n   *\n   * // Setting the level for a type does not affect previously created Loggers.\n   * manager.setLevel('Auth', logLevels.INFO)\n   * // logger2.getLevel() !== logLevels.INFO\n   * // logger2.getLevel() === logLevels.WARN\n   */\n  function setLevel (type, level) {\n    // Signature can be: `setLevel(type, level)` or `setLevel(level)`.\n    // Normalize the parameters to always be consistent.\n    if (level === undefined) {\n      level = type\n      type = defaultType\n    }\n\n    // Ensure `settings[type]` is an object.\n    if (!settings[type]) {\n      settings[type] = {}\n    }\n\n    // Set the level.\n    settings[type].level = checkLevel(level)\n  }\n\n  /**\n   * Gets the default `level` that is used when creating Loggers.\n   *\n   * Can get the level used \"globally\" or per `type`, depending if `type` is\n   *    provided or not.\n   *\n   * See the `setLevel` API for setting these values.\n   * See the Logger APIs for getting this value for an already created Logger.\n   * @method getLevel\n   * @param  {string} [type] A type of Logger.\n   * @return {LogLevel}\n   * @example\n   * const manager = createManager({ level: logLevels.WARN })\n   *\n   * // If a type's level has not been set, gets the \"global\" level.\n   * // manager.getLevel('Call') === logLevels.WARN\n   *\n   * // If a type's level has been set, gets its level.\n   * manager.setLevel('Auth', logLevels.DEBUG)\n   * // manager.getLevel('Auth') === logLevels.DEBUG\n   *\n   * // Can get the \"global\" level.\n   * manager.setLevel(logLevels.INFO)\n   * // manager.getLevel() === logLevels.INFO\n   */\n  function getLevel (type) {\n    // Signature can be: `getLevel(type)` or `getLevel()`.\n    // Normalize the parameters to always be consistent.\n    type = type || defaultType\n\n    return (settings[type] && settings[type].level) || settings[defaultType].level\n  }\n\n  /**\n   * Sets the default `handler` to be used when creating Loggers.\n   *\n   * Can set the handler \"globally\" or per `type`, depending if `type` is\n   *    provided or not. When set for a specific type, only Loggers of that type\n   *    will use the set handler. When set \"globally\", all Loggers without a set\n   *    type will use the handler as a default.\n   *\n   * Setting the handler only affects Loggers created after that point.\n   * @method setHandler\n   * @param  {string}     type    The type of Logger to set the option for.\n   * @param  {LogHandler} handler The log handler to be set.\n   * @throws Throws an error if handler is not a function.\n   * @example\n   * const manager = createManager({ handler: managerHandler })\n   *\n   * // Setting the handler for a type sets it for created Loggers of that type.\n   * manager.setHandler('Call', callHandler)\n   * const logger1 = manager.getLogger('Call')\n   * // logger1.getHandler() === callHandler\n   *\n   * // Loggers created of types without a set handler uses the Manager's handler.\n   * const logger2 = manager.getLogger('Auth')\n   * // logger2.getHandler() === managerHandler\n   *\n   * // Setting the handler without a type changes the Manager's handler.\n   * manager.setHandler(newHandler)\n   * const logger3 = manager.getLogger('Messaging')\n   * // logger3.getHandler() === newHandler\n   *\n   * // Setting the handler for a type does not affect previously created Loggers.\n   * manager.setHandler('Auth', authHandler)\n   * // logger2.getHandler() !== authHandler\n   * // logger2.getHandler() === managerHandler\n   */\n  function setHandler (type, handler) {\n    // Signature can be: `setHandler(type, handler)` or `setHandler(handler)`.\n    // Normalize the parameters to always be consistent.\n    if (typeof type === 'function' && handler === undefined) {\n      handler = type\n      type = defaultType\n    }\n\n    // Ensure `settings[type]` is an object.\n    if (!settings[type]) {\n      settings[type] = {}\n    }\n\n    // Set the handler.\n    settings[type].handler = checkHandler(handler)\n  }\n\n  /**\n   * Gets the default `handler` that is used when creating Loggers.\n   *\n   * Can get the handler used \"globally\" or per `type`, depending if `type` is\n   *    provided or not.\n   *\n   * See the `setHandler` API for setting these values.\n   * See the Logger APIs for getting this value for an already created Logger.\n   * @method getHandler\n   * @param  {string} [type] A type of Logger.\n   * @return {LogHandler}\n   * @example\n   * const manager = createManager({ handler: managerHandler })\n   *\n   * // If a type's handler has not been set, gets the \"global\" handler.\n   * // manager.getHandler('Call') === managerHandler\n   *\n   * // If a type's handler has been set, gets its handler.\n   * manager.setHandler('Auth', authHandler)\n   * // manager.getHandler('Auth') === authHandler\n   *\n   * // Can get the \"global\" handler.\n   * manager.setHandler(newHandler)\n   * // manager.getHandler() === newHandler\n   */\n  function getHandler (type) {\n    // Signature can be: `getHandler(type)` or `getHandler()`.\n    // Normalize the parameters to always be consistent.\n    type = type || defaultType\n\n    return (settings[type] && settings[type].handler) || settings[defaultType].handler\n  }\n\n  return {\n    getLogger,\n    getLoggers,\n    setLevel,\n    getLevel,\n    setHandler,\n    getHandler\n  }\n}\n","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toObject = require('./_to-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $GOPS = require('./_object-gops');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  $GOPS.f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });\n\n$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return $GOPS.f(toObject(it));\n  }\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","require('./_wks-define')('asyncIterator');\n","require('./_wks-define')('observable');\n","import { levelValues, logMethods, logLevels, timeLevel } from './constants'\nimport { checkLevel, checkHandler } from './validation'\nimport createTimer from './timer'\n\n/**\n * Creates a Logger.\n * @method createLogger\n * @param  {Object}   target          The subject of the logs from this logger.\n * @param  {Object}   options\n * @param  {Function} options.handler The function to receive/handle log entries.\n * @param  {string}   options.level   The log level to be set.\n * @return {Logger}\n */\nexport default function createLogger (target, options = {}) {\n  // Validate provided options. Do not let invalid options be set.\n  const level = checkLevel(options.level)\n  const handler = checkHandler(options.handler)\n\n  /**\n   * Logger data.\n   * @type {Object}\n   * @property {Object}   target  Metadata about the \"target\" of the Logger.\n   * @property {LogLevel} level   The currently set log level.\n   * @property {Function} handler The currently set Log Handler.\n   */\n  const logger = {\n    target,\n    level,\n    handler\n  }\n\n  /**\n   * Currying function to dynamically create the Logger's logging methods.\n   * @method logFunc\n   * @param  {string} method   Name of the logger method to create.\n   * @param  {string} logLevel The log level for the method.\n   * @param  {Object} [injectables] Other values to include in the LogEntry.\n   * @return {Function} A log method.\n   */\n  function logFunc (method, logLevel, injectables) {\n    /*\n     * Return the function that will be used as `log.<method>`.\n     */\n    return function (...args) {\n      // Compare the logged level and the configured level.\n      const shouldLog = levelValues[logLevel] >= levelValues[logger.level]\n      // If this entry shouldn't be logged, don't do anything.\n      if (!shouldLog) {\n        return\n      }\n\n      // Create the Log Entry to be handed off to the handler.\n      const entry = {\n        // Extra data to be added to the LogEntry.\n        ...injectables,\n        // Meta-info about the log.\n        method,\n        timestamp: Date.now(),\n        level: logLevel,\n        target: logger.target,\n        // The actual arguments logged.\n        messages: [...args]\n      }\n\n      logger.handler(entry)\n    }\n  }\n\n  /**\n   * Sets the Logger's current log level.\n   * @method setLevel\n   * @param  {string} level The logLevel to be set.\n   * @throws Throws an error if level is not a valid log level.\n   * @example\n   * logger.setLevel(logLevels.INFO)\n   * logger.info('This will be logged.')\n   * logger.debug('This will not be logged.')\n   */\n  function setLevel (level) {\n    logger.level = checkLevel(level)\n  }\n\n  /**\n   * Gets the Logger's current log level.\n   * @method getLevel\n   * @return {string} The log level.\n   * @example\n   * logger.setLevel(logLevels.DEBUG)\n   * const level = logger.getLevel()\n   * // level === logLevels.DEBUG\n   */\n  function getLevel () {\n    return logger.level\n  }\n\n  /**\n   * Sets the Logger's current log handler.\n   * @method setHandler\n   * @param  {Function} handler The log handler to be set.\n   * @throws Throws an error if handler is not a function.\n   * @example\n   * const logger = manager.getLogger('Test', '123')\n   * logger.setHandler((logEntry) => {\n   *    console.log(logEntry.target.name, ...logEntry.messages)\n   * })\n   * logger.info('I am a logged message.')\n   * // logs: \"Test-123 I am a logged message.\"\n   */\n  function setHandler (handler) {\n    logger.handler = checkHandler(handler)\n  }\n\n  /**\n   * Gets the Logger's current log handler.\n   * @method getHandler\n   * @return {Function} The log handler.\n   * @example\n   * logger.setHandler(customHandler)\n   * const handler = logger.getHandler()\n   * // handler === customHandler.DEBUG\n   */\n  function getHandler () {\n    return logger.handler\n  }\n\n  const api = {\n    getHandler,\n    setHandler,\n    getLevel,\n    setLevel,\n    get type () {\n      return logger.target.type\n    },\n    get id () {\n      return logger.target.id\n    },\n    get name () {\n      return logger.target.name\n    }\n  }\n\n  // For all supported log methods, create a function on the Logger for it.\n  for (const method in logMethods) {\n    api[method] = logFunc(method, logMethods[method])\n  }\n\n  // Create log functions for the Timer to use.\n  // Follows the same style as above logMethods, but curries it once more\n  //    to align the timer parameters as needed.\n  const timeLog = (message, data) => logFunc(data.event, timeLevel, { timer: data })(message)\n  const timeWarn = (message, data) => logFunc('warn', logLevels.WARN, { timer: data })(message)\n  const timer = createTimer(timeLog, timeWarn)\n\n  return {\n    ...api,\n    ...timer\n  }\n}\n","import { checkHandler } from './validation'\n\n/**\n * Timer factory function.\n * The Timer imitates the Console's Time APIs.\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/console#Timers\n * @method createTimer\n * @param  {Function} log  Function for logging timer information.\n * @param  {Function} warn Function for warning about timer misuse.\n * @return {Timer}\n */\nexport default function createTimer (log, warn) {\n  // Validate that params are a function.\n  //    Uses functions as `log(message, data)`.\n  checkHandler(log)\n  checkHandler(warn)\n\n  /**\n   * Mapping of on-going timers; <name>: <start>.\n   * @type {Object}\n   */\n  const timers = {}\n\n  /**\n   * Starts a timer. Logs a message to indicate it was started.\n   * Logs a warning if the timer has already been started.\n   * @method timeStart\n   * @param  {string} name Name to identify the timer.\n   */\n  function time (name) {\n    const now = Date.now()\n    // Base info about this timer call.\n    const data = {\n      event: 'time',\n      name\n    }\n\n    if (timers.hasOwnProperty(name)) {\n      data.start = timers[name]\n      warn(`Timer ${name} already started.`, data)\n    } else {\n      // Set the new timer.\n      timers[name] = now\n\n      data.start = now\n      log(`Timer ${name} started.`, data)\n    }\n  }\n\n  /**\n   * Ends a timer. Logs a message with the elapsed time.\n   * @method timeEnd\n   * @param  {string} name Name to identify the timer.\n   */\n  function timeEnd (name) {\n    const now = Date.now()\n    // Base info about this timer call.\n    const data = {\n      event: 'timeEnd',\n      name,\n      start: timers[name]\n    }\n\n    if (timers.hasOwnProperty(name)) {\n      const start = timers[name]\n      // End the timer.\n      delete timers[name]\n\n      const elapsed = now - start\n      data.end = now\n      data.elapsed = elapsed\n\n      log(`Timer ${name} ended, taking ${elapsed}ms.`, data)\n    } else {\n      warn(`Timer ${name} has not been started.`, data)\n    }\n  }\n\n  /**\n   * Adds a split to the timer. Logs a message with the elapsed time so far.\n   * Logs a warning if the timer has not been started.\n   * @method timeSplit\n   * @param  {string} name Name to identify the timer.\n   */\n  function timeLog (name) {\n    const now = Date.now()\n    // Base info about this timer call.\n    const data = {\n      event: 'timeLog',\n      name,\n      start: timers[name]\n    }\n\n    if (timers.hasOwnProperty(name)) {\n      const elapsed = now - timers[name]\n      data.split = now\n      data.elapsed = elapsed\n\n      log(`Timer ${name} split, at ${elapsed}ms so far.`, data)\n    } else {\n      warn(`Timer ${name} has not been started.`, data)\n    }\n  }\n\n  return {\n    time,\n    timeEnd,\n    timeLog\n  }\n}\n","import defaultLogFormatter from './logFormatter'\n/**\n * Default function for the SDK to use for logging.\n *    Uses entry information to form a prefix, then logs to console.\n * @method defaultLogHandler\n * @param  {LogEntry} entry\n */\nexport default function defaultLogHandler (entry) {\n  let { method } = entry\n\n  // For the time-related methods, don't actually use the console methods.\n  //    The Logger already did the timing, so simply log out the info.\n  if (method.includes('time')) {\n    method = 'debug'\n  }\n\n  const formattedString = defaultLogFormatter(entry)\n  const tail = entry.messages.slice(1)\n  console[method](formattedString, ...tail)\n}\n","/* Helper function for styling logs based on the log type.\n * This function will inspect the log entry and format the log\n * accordingly.\n */\nfunction styleLog (entry) {\n  const { timestamp, level } = entry\n  const logInfo = `${timestamp} - ACTION - ${level}`\n\n  let [logType, payload] = entry.messages\n\n  let prefix\n  let style = ''\n  if (logType.includes('state')) {\n    // If the log is for prev state / next state, display that in the prefix.\n    prefix = `${logInfo} - ${logType.toUpperCase()}`\n  } else if (logType.includes('ADDED') || logType.includes('DELETED') || logType.includes('ARRAY')) {\n    // If the log has added or removed keys from state, log the operation, keys affected and new values.\n    prefix = `${entry.messages[0]}: ${entry.messages[2]}`\n    style = entry.messages[1]\n    payload = entry.messages[3]\n  } else if (logType.includes('CHANGED')) {\n    // If the log has changed keys in state, log the operation, keys, old and new values.\n    prefix = `${entry.messages[0]}: ${entry.messages[2]}`\n    style = entry.messages[1]\n    payload = `${entry.messages[3]} ${entry.messages[4]} ${entry.messages[5]}`\n  } else if (logType.includes('no diff')) {\n    // If action results in no change in state, just log no diff.\n    prefix = `${logInfo} - NO DIFF`\n    payload = ''\n  } else {\n    // Else the log is the action itself, so use the action type.\n    prefix = `${logInfo} - ${payload.type} - ${logType}`\n  }\n\n  return { prefix, style, payload }\n}\n\n/**\n * Default function for the SDK to use for logging actions.\n * Action entries come in 4 different types:\n *    1. start: Log the message directly and \"open the group\".\n *    2. state: Log a prefix, state type, and state itself.\n *      (prev state and next state)\n *    3. payload: Log a prefix, action type, and payload.\n *    4. end: Close the group.\n * @method defaultActionHandler\n * @param  {LogEntry} entry\n */\nexport default function defaultActionHandler (entry) {\n  // Handle the \"start\" and \"stop\" action log entries specifically.\n  if (['group', 'groupCollapsed'].includes(entry.method)) {\n    console[entry.method](...entry.messages)\n    return\n  } else if (entry.method === 'groupEnd') {\n    console.groupEnd()\n    return\n  }\n\n  const { prefix, style, payload } = styleLog(entry)\n  console[entry.method](prefix, style, payload)\n}\n","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","var Rule = function Rule(name, fn, args, modifiers) {\n  this.name = name;\n  this.fn = fn;\n  this.args = args;\n  this.modifiers = modifiers;\n};\n\nRule.prototype._test = function _test (value) {\n  var fn = this.fn;\n\n  try {\n    testAux(this.modifiers.slice(), fn, this)(value);\n  } catch (ex) {\n    fn = function () { return false; };\n  }\n\n  try {\n    return testAux(this.modifiers.slice(), fn, this)(value);\n  } catch (ex$1) {\n    return false;\n  }\n};\n\nRule.prototype._check = function _check (value) {\n  try {\n    testAux(this.modifiers.slice(), this.fn, this)(value);\n  } catch (ex) {\n    if (testAux(this.modifiers.slice(), function (it) { return it; }, this)(false)) {\n      return;\n    }\n  }\n\n  if (!testAux(this.modifiers.slice(), this.fn, this)(value)) {\n    throw null;\n  }\n};\n\nRule.prototype._testAsync = function _testAsync (value) {\n    var this$1 = this;\n\n  return new Promise(function (resolve, reject) {\n    testAsyncAux(\n      this$1.modifiers.slice(),\n      this$1.fn,\n      this$1\n    )(value)\n      .then(function (valid) {\n        if (valid) {\n          resolve(value);\n        } else {\n          reject(null);\n        }\n      })\n      .catch(function (ex) { return reject(ex); });\n  });\n};\n\nfunction pickFn(fn, variant) {\n  if ( variant === void 0 ) variant = 'simple';\n\n  return typeof fn === 'object' ? fn[variant] : fn;\n}\n\nfunction testAux(modifiers, fn, rule) {\n  if (modifiers.length) {\n    var modifier = modifiers.shift();\n    var nextFn = testAux(modifiers, fn, rule);\n    return modifier.perform(nextFn, rule);\n  } else {\n    return pickFn(fn);\n  }\n}\n\nfunction testAsyncAux(modifiers, fn, rule) {\n  if (modifiers.length) {\n    var modifier = modifiers.shift();\n    var nextFn = testAsyncAux(modifiers, fn, rule);\n    return modifier.performAsync(nextFn, rule);\n  } else {\n    return function (value) { return Promise.resolve(pickFn(fn, 'async')(value)); };\n  }\n}\n\nvar Modifier = function Modifier(name, perform, performAsync) {\n  this.name = name;\n  this.perform = perform;\n  this.performAsync = performAsync;\n};\n\nvar ValidationError = /*@__PURE__*/(function (Error) {\n  function ValidationError(rule, value, cause, target) {\n    var remaining = [], len = arguments.length - 4;\n    while ( len-- > 0 ) remaining[ len ] = arguments[ len + 4 ];\n\n    Error.call(this, remaining);\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ValidationError);\n    }\n    this.rule = rule;\n    this.value = value;\n    this.cause = cause;\n    this.target = target;\n  }\n\n  if ( Error ) ValidationError.__proto__ = Error;\n  ValidationError.prototype = Object.create( Error && Error.prototype );\n  ValidationError.prototype.constructor = ValidationError;\n\n  return ValidationError;\n}(Error));\n\nvar Context = function Context(chain, nextRuleModifiers) {\n  if ( chain === void 0 ) chain = [];\n  if ( nextRuleModifiers === void 0 ) nextRuleModifiers = [];\n\n  this.chain = chain;\n  this.nextRuleModifiers = nextRuleModifiers;\n};\n\nContext.prototype._applyRule = function _applyRule (ruleFn, name) {\n    var this$1 = this;\n\n  return function () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    this$1.chain.push(\n      new Rule(name, ruleFn.apply(this$1, args), args, this$1.nextRuleModifiers)\n    );\n    this$1.nextRuleModifiers = [];\n    return this$1;\n  };\n};\n\nContext.prototype._applyModifier = function _applyModifier (modifier, name) {\n  this.nextRuleModifiers.push(\n    new Modifier(name, modifier.simple, modifier.async)\n  );\n  return this;\n};\n\nContext.prototype._clone = function _clone () {\n  return new Context(this.chain.slice(), this.nextRuleModifiers.slice());\n};\n\nContext.prototype.test = function test (value) {\n  return this.chain.every(function (rule) { return rule._test(value); });\n};\n\nContext.prototype.testAll = function testAll (value) {\n  var err = [];\n  this.chain.forEach(function (rule) {\n    try {\n      rule._check(value);\n    } catch (ex) {\n      err.push(new ValidationError(rule, value, ex));\n    }\n  });\n  return err;\n};\n\nContext.prototype.check = function check (value) {\n  this.chain.forEach(function (rule) {\n    try {\n      rule._check(value);\n    } catch (ex) {\n      throw new ValidationError(rule, value, ex);\n    }\n  });\n};\n\nContext.prototype.testAsync = function testAsync (value) {\n    var this$1 = this;\n\n  return new Promise(function (resolve, reject) {\n    executeAsyncRules(value, this$1.chain.slice(), resolve, reject);\n  });\n};\n\nfunction executeAsyncRules(value, rules, resolve, reject) {\n  if (rules.length) {\n    var rule = rules.shift();\n    rule._testAsync(value).then(\n      function () {\n        executeAsyncRules(value, rules, resolve, reject);\n      },\n      function (cause) {\n        reject(new ValidationError(rule, value, cause));\n      }\n    );\n  } else {\n    resolve(value);\n  }\n}\n\nvar consideredEmpty = function (value, considerTrimmedEmptyString) {\n  if (\n    considerTrimmedEmptyString &&\n    typeof value === 'string' &&\n    value.trim().length === 0\n  ) {\n    return true;\n  }\n\n  return value === undefined || value === null;\n};\n\nfunction optional (validation, considerTrimmedEmptyString) {\n  if ( considerTrimmedEmptyString === void 0 ) considerTrimmedEmptyString = false;\n\n  return ({\n  simple: function (value) { return consideredEmpty(value, considerTrimmedEmptyString) ||\n    validation.check(value) === undefined; },\n  async: function (value) { return consideredEmpty(value, considerTrimmedEmptyString) ||\n    validation.testAsync(value); },\n});\n}\n\nfunction v8n() {\n  return typeof Proxy !== 'undefined'\n    ? proxyContext(new Context())\n    : proxylessContext(new Context());\n}\n\n// Custom rules\nvar customRules = {};\n\nv8n.extend = function(newRules) {\n  Object.assign(customRules, newRules);\n};\n\nv8n.clearCustomRules = function() {\n  customRules = {};\n};\n\nfunction proxyContext(context) {\n  return new Proxy(context, {\n    get: function get(obj, prop) {\n      if (prop in obj) {\n        return obj[prop];\n      }\n\n      var newContext = proxyContext(context._clone());\n\n      if (prop in availableModifiers) {\n        return newContext._applyModifier(availableModifiers[prop], prop);\n      }\n      if (prop in customRules) {\n        return newContext._applyRule(customRules[prop], prop);\n      }\n      if (prop in availableRules) {\n        return newContext._applyRule(availableRules[prop], prop);\n      }\n    },\n  });\n}\n\nfunction proxylessContext(context) {\n  var addRuleSet = function (ruleSet, targetContext) {\n    Object.keys(ruleSet).forEach(function (prop) {\n      targetContext[prop] = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var newContext = proxylessContext(targetContext._clone());\n        var contextWithRuleApplied = newContext._applyRule(\n          ruleSet[prop],\n          prop\n        ).apply(void 0, args);\n        return contextWithRuleApplied;\n      };\n    });\n    return targetContext;\n  };\n\n  var contextWithAvailableRules = addRuleSet(availableRules, context);\n  var contextWithAllRules = addRuleSet(\n    customRules,\n    contextWithAvailableRules\n  );\n\n  Object.keys(availableModifiers).forEach(function (prop) {\n    Object.defineProperty(contextWithAllRules, prop, {\n      get: function () {\n        var newContext = proxylessContext(contextWithAllRules._clone());\n        return newContext._applyModifier(availableModifiers[prop], prop);\n      },\n    });\n  });\n\n  return contextWithAllRules;\n}\n\nvar availableModifiers = {\n  not: {\n    simple: function (fn) { return function (value) { return !fn(value); }; },\n    async: function (fn) { return function (value) { return Promise.resolve(fn(value))\n        .then(function (result) { return !result; })\n        .catch(function () { return true; }); }; },\n  },\n\n  some: {\n    simple: function (fn) { return function (value) {\n      return split(value).some(function (item) {\n        try {\n          return fn(item);\n        } catch (ex) {\n          return false;\n        }\n      });\n    }; },\n    async: function (fn) { return function (value) {\n      return Promise.all(\n        split(value).map(function (item) {\n          try {\n            return fn(item).catch(function () { return false; });\n          } catch (ex) {\n            return false;\n          }\n        })\n      ).then(function (result) { return result.some(Boolean); });\n    }; },\n  },\n\n  every: {\n    simple: function (fn) { return function (value) { return value !== false && split(value).every(fn); }; },\n    async: function (fn) { return function (value) { return Promise.all(split(value).map(fn)).then(function (result) { return result.every(Boolean); }); }; },\n  },\n\n  strict: {\n    simple: function (fn, rule) { return function (value) {\n      if (isSchemaRule(rule) && value && typeof value === 'object') {\n        return (\n          Object.keys(rule.args[0]).length === Object.keys(value).length &&\n          fn(value)\n        );\n      }\n      return fn(value);\n    }; },\n    async: function (fn, rule) { return function (value) { return Promise.resolve(fn(value))\n        .then(function (result) {\n          if (isSchemaRule(rule) && value && typeof value === 'object') {\n            return (\n              Object.keys(rule.args[0]).length === Object.keys(value).length &&\n              result\n            );\n          }\n          return result;\n        })\n        .catch(function () { return false; }); }; },\n  },\n};\n\nfunction isSchemaRule(rule) {\n  return (\n    rule &&\n    rule.name === 'schema' &&\n    rule.args.length > 0 &&\n    typeof rule.args[0] === 'object'\n  );\n}\n\nfunction split(value) {\n  if (typeof value === 'string') {\n    return value.split('');\n  }\n  return value;\n}\n\nvar availableRules = {\n  // Value\n\n  equal: function (expected) { return function (value) { return value == expected; }; },\n\n  exact: function (expected) { return function (value) { return value === expected; }; },\n\n  // Types\n\n  number: function (allowInfinite) {\n    if ( allowInfinite === void 0 ) allowInfinite = true;\n\n    return function (value) { return typeof value === 'number' && (allowInfinite || isFinite(value)); };\n},\n\n  integer: function () { return function (value) {\n    var isInteger = Number.isInteger || isIntegerPolyfill;\n    return isInteger(value);\n  }; },\n\n  numeric: function () { return function (value) { return !isNaN(parseFloat(value)) && isFinite(value); }; },\n\n  string: function () { return testType('string'); },\n\n  boolean: function () { return testType('boolean'); },\n\n  undefined: function () { return testType('undefined'); },\n\n  null: function () { return testType('null'); },\n\n  array: function () { return testType('array'); },\n\n  object: function () { return testType('object'); },\n\n  instanceOf: function (instance) { return function (value) { return value instanceof instance; }; },\n\n  // Pattern\n\n  pattern: function (expected) { return function (value) { return expected.test(value); }; },\n\n  lowercase: function () { return function (value) {\n    return (\n      typeof value === 'boolean' ||\n      (value === value.toLowerCase() && value.trim() !== '')\n    );\n  }; },\n\n  uppercase: function () { return function (value) { return value === value.toUpperCase() && value.trim() !== ''; }; },\n\n  vowel: function () { return function (value) { return /^[aeiou]+$/i.test(value); }; },\n\n  consonant: function () { return function (value) { return /^(?=[^aeiou])([a-z]+)$/i.test(value); }; },\n\n  // Value at\n\n  first: function (expected) { return function (value) { return value[0] == expected; }; },\n\n  last: function (expected) { return function (value) { return value[value.length - 1] == expected; }; },\n\n  // Length\n\n  empty: function () { return function (value) { return value.length === 0; }; },\n\n  length: function (min, max) { return function (value) { return value.length >= min && value.length <= (max || min); }; },\n\n  minLength: function (min) { return function (value) { return value.length >= min; }; },\n\n  maxLength: function (max) { return function (value) { return value.length <= max; }; },\n\n  // Range\n\n  negative: function () { return function (value) { return value < 0; }; },\n\n  positive: function () { return function (value) { return value >= 0; }; },\n\n  between: function (a, b) { return function (value) { return value >= a && value <= b; }; },\n\n  range: function (a, b) { return function (value) { return value >= a && value <= b; }; },\n\n  lessThan: function (n) { return function (value) { return value < n; }; },\n\n  lessThanOrEqual: function (n) { return function (value) { return value <= n; }; },\n\n  greaterThan: function (n) { return function (value) { return value > n; }; },\n\n  greaterThanOrEqual: function (n) { return function (value) { return value >= n; }; },\n\n  // Divisible\n\n  even: function () { return function (value) { return value % 2 === 0; }; },\n\n  odd: function () { return function (value) { return value % 2 !== 0; }; },\n\n  includes: function (expected) { return function (value) { return ~value.indexOf(expected); }; },\n\n  schema: function (schema) { return testSchema(schema); },\n\n  // branching\n\n  passesAnyOf: function () {\n    var validations = [], len = arguments.length;\n    while ( len-- ) validations[ len ] = arguments[ len ];\n\n    return function (value) { return validations.some(function (validation) { return validation.test(value); }); };\n},\n\n  optional: optional,\n};\n\nfunction testType(expected) {\n  return function (value) {\n    return (\n      (Array.isArray(value) && expected === 'array') ||\n      (value === null && expected === 'null') ||\n      typeof value === expected\n    );\n  };\n}\n\nfunction isIntegerPolyfill(value) {\n  return (\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n  );\n}\n\nfunction testSchema(schema) {\n  return {\n    simple: function (value) {\n      var causes = [];\n      Object.keys(schema).forEach(function (key) {\n        var nestedValidation = schema[key];\n        try {\n          nestedValidation.check((value || {})[key]);\n        } catch (ex) {\n          ex.target = key;\n          causes.push(ex);\n        }\n      });\n      if (causes.length > 0) {\n        throw causes;\n      }\n      return true;\n    },\n    async: function (value) {\n      var causes = [];\n      var nested = Object.keys(schema).map(function (key) {\n        var nestedValidation = schema[key];\n        return nestedValidation.testAsync((value || {})[key]).catch(function (ex) {\n          ex.target = key;\n          causes.push(ex);\n        });\n      });\n      return Promise.all(nested).then(function () {\n        if (causes.length > 0) {\n          throw causes;\n        }\n\n        return true;\n      });\n    },\n  };\n}\n\nexport default v8n;\n","import logs from '../../packages/kandy/src/logs/plugin'\nimport config from '../../packages/kandy/src/config'\nimport events from '../../packages/kandy/src/events'\n\n/**\n * This is a list of base plugins that most solutions will need. These plugins provide service-like capabilities\n * to the SDK.\n */\nexport default [\n  { name: 'logs', fn: logs },\n  { name: 'config', fn: config },\n  { name: 'events', fn: events }\n]\n","/**\nNote regarding this file's name:\n\nUsually plugins factories are in the index.js file of their corresponding folder.\nThis used to be the case. However this file was also being used to host the logManager\nthat is being used with the SDK.\n\nSince the logManager is being included in almost every file it was preferable to rename this\nfile rather than point 100s of files to a new place for the logManager.\n**/\n\n// Logs plugin.\nimport api from './interface/api'\nimport reducer from './interface/reducers'\nimport * as actions from './interface/actions'\n\nimport { defaultOptions, partialDefaultLogActions /*,  parseLogConfig */ } from './config'\nimport { setLevelEntry, setHandlerEntry, getLevelMap } from './sagas'\nimport createActionLogger from './actions'\n\n// Other plugins.\nimport { update as updateConfig } from '../config/interface/actions'\nimport { mergeValues } from '../common/utils'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { logLevels } from 'kandy-logger'\nimport { logManager, API_LOG_TAG } from './index'\n\n// Include the extra JSDoc items.\nimport './docs'\n\nexport default function logPlugin (options = {}, bottle) {\n  const name = 'logs'\n  // Register the logManager with the bottle so that other plugins have access to it.\n  bottle.value('logManager', logManager)\n  bottle.constant('API_LOG_TAG', API_LOG_TAG)\n\n  const logger = logManager.getLogger('LOGS')\n\n  // Make sure the configured log handler was a function.\n  if (options.handler && typeof options.handler !== 'function') {\n    delete options.handler\n    logger.warn('Invalid log handler configuration provided; using default instead.')\n  }\n\n  // Make sure configured log level is supported.\n  if (options.logLevel && !Object.keys(logLevels).includes(options.logLevel.toUpperCase())) {\n    delete options.logLevel\n    logger.warn('Invalid log level configuration provided; using default instead.')\n  }\n\n  options = mergeValues(defaultOptions, options)\n\n  // Check if `logActions` is true and apply defaults for action logging\n  if (options.logActions !== false) {\n    if (options.logActions instanceof Object) {\n      options.logActions = mergeValues(partialDefaultLogActions, options.logActions)\n    } else {\n      options.logActions = partialDefaultLogActions\n    }\n  }\n\n  // Now that we have the application's log configs, update everything to\n  //    use those values instead of default values.\n  logManager.setLevel(options.logLevel)\n  if (options.handler) {\n    logManager.setHandler(options.handler)\n  }\n\n  Object.values(logManager.getLoggers()).forEach(logger => {\n    logger.setLevel(options.logLevel)\n    if (options.handler) {\n      logger.setHandler(options.handler)\n    }\n  })\n\n  function * init ({ webRTC }) {\n    // Send the provided options to the store.\n    // This will be `state.config[name]`.\n    yield put(updateConfig(options, name))\n    // Update state with the initial Logger levels.\n    yield put(actions.levelsChanged(getLevelMap(logManager)))\n\n    // Ensure the webRTC object exists. It won't in 3.X.\n    if (webRTC) {\n      // Update everything to\n      //    use those values from the application configs instead of default values in the webrtc Stack.\n      const webRTCLogManager = webRTC.managers.logs\n      if (options.handler) {\n        webRTCLogManager.setHandler(options.handler)\n      }\n      Object.values(webRTCLogManager.getLoggers()).forEach(logger => {\n        logger.setLevel(options.logLevel)\n        if (options.handler) {\n          logger.setHandler(options.handler)\n        }\n      })\n    }\n  }\n\n  const components = {\n    name,\n    capabilities: ['logs'],\n    init,\n    api,\n    reducer,\n    sagas: [setLevelEntry, setHandlerEntry]\n  }\n\n  options.logLevel = options.logLevel.toUpperCase()\n  const setLevel = logLevels[options.logLevel]\n  // Consider actions to be at the INFO log level.\n  // Only export a middleware (for actions) at the appropriate levels.\n  if (setLevel <= logLevels.INFO && options.logActions !== false) {\n    components.middleware = createActionLogger(options)\n  }\n\n  return components\n}\n","// Logs plugin.\nimport { logManager, API_LOG_TAG } from '../index'\nimport * as actions from './actions'\nimport { getLevel, getTypes } from './selectors'\n\n/**\n * The SDK has an internal logging system for providing information about its\n *    behaviour. The SDK will generate logs, at different levels for different\n *    types of information, which are routed to a\n *    \"{@link logger.LogHandler Log Handler}\" for consumption. An application\n *    can provide their own Log Handler (see\n *    {@link #configconfiglogs config.logs}) to customize how the logs are\n *    handled, or allow the default Log Handler to print the logs to the\n *    console.\n *\n * The SDK's default Log Handler is merely a thin wrapper around the browser's\n *    console API (ie. `window.console`). It receives the log generated by the\n *    SDK, called a \"{@link logger.LogEntry Log Entry}\", formats a\n *    human-readable message with it, then uses the console to log it at the\n *    appropriate level. This is important to be aware of, since your browser's\n *    console may affect how you see the SDK's default log messages. Since the\n *    default Log Handler uses the console's levels, the browser may filter\n *    which messages are shown depending on which levels it has configured. For\n *    a user that understands console log levels, this can be helpful for\n *    filtering the logs to only the relevant information. But it can equally\n *    be a hindrance by hiding the more detailed log messages (at the 'debug'\n *    level), since browser can have this level hidden by default. For this\n *    reason, we recommend providing a custom Log Handler to the SDK that is\n *    better suited for your application and its users.\n *\n * @public\n * @namespace logger\n * @requires logs\n */\n\nexport default function api ({ dispatch, getState }) {\n  const log = logManager.getLogger('LOGS')\n\n  const api = {\n    /**\n     * Possible levels for the SDK logger.\n     *\n     * The SDK will provide {@link logger.LogEntry Log Entries} to the\n     *    {@link logger.LogHandler Log Handler} for all logs at or above the set\n     *    log level. 'debug' is considered the lowest level and 'silent' the\n     *    highest level. For example, if the current level is 'info', then the\n     *    {@link logger.LogHandler Log Handler} will receive\n     *    {@link logger.LogEntry Log Entries} for logs at 'info', 'warn', and\n     *    'error', but not for the 'debug' level.\n     * @public\n     * @static\n     * @memberof logger\n     * @method levels\n     * @property {string} SILENT Nothing will be logged.\n     * @property {string} ERROR Unhandled error information will be logged. If\n     *    the SDK encounters an issue it cannot resolve, the error will be included\n     *    in the logs. This likely points to an issue with the SDK itself or an\n     *    issue with how the SDK is being used.\n     * @property {string} WARN Warning messages for the application developer will\n     *    be logged. If the SDK encounters an issue that it can recover and continue,\n     *    a warning about the issue will be included in the logs. These logs point\n     *    to issues that need to be handled by the application. For example, providing\n     *    an invalid configuration to the SDK will cause a warning log that explains\n     *    the issue.\n     * @property {string} INFO General information about the SDK's operations will\n     *    be logged, outlining how the SDK is handling the operations. Reading through\n     *    these logs should provide a high-level view of what the SDK is doing,\n     *    and why it is doing it.\n     * @property {string} DEBUG Detailed information about the SDK's operations,\n     *    meant for debugging issues, will be logged. Specific information and relevant\n     *    operation data are provided for understanding the scenario that the SDK\n     *    was in during the operation.\n     */\n    levels: {\n      SILENT: 'silent',\n      ERROR: 'error',\n      WARN: 'warn',\n      INFO: 'info',\n      DEBUG: 'debug'\n    },\n\n    /**\n     * Update the log level used by the SDK's loggers.\n     *\n     * Changing the log level will affect the amount of logs that the SDK will\n     *    output for debugging purposes.\n     *\n     * See {@link logger.levels} for valid log levels. Other values will not be\n     *    accepted. See the {@link logger.getTypes} API for valid logger types.\n     *    Other values will have no affect.\n     * @private\n     * @static\n     * @memberof logger\n     * @method setLevel\n     * @param  {string} level The log level to set.\n     * @param  {string} [type] An optional subset of loggers to update.\n     * @example\n     * // Set logs to be at the warn level.\n     * client.logger.setLevel(client.logger.levels.WARN)\n     */\n    setLevel (level, type) {\n      log.debug(API_LOG_TAG + 'logger.setLevel: ', level, type)\n\n      dispatch(actions.setLevel(level, type))\n    },\n\n    /**\n     * Get the currently set log level used by the SDK's loggers.\n     *\n     * @private\n     * @static\n     * @memberof logger\n     * @method getLevel\n     * @param  {string} [type] An optional subset of loggers.\n     * @return {logger.levels} A log level.\n     */\n    getLevel (type) {\n      log.debug(API_LOG_TAG + 'logger.getLevel: ', type)\n\n      return getLevel(getState(), type)\n    },\n\n    /**\n     * Updates the {@link logger.LogHandler LogHandler} used by the SDK's\n     *    loggers.\n     *\n     * Changing the log handler will change how the SDK's logs are handled by\n     *    the application.\n     *\n     * See {@link logger.LogHandler} and {@link logger.LogEntry} for information\n     *    about the handler. See the {@link logger.getTypes} API for valid\n     *    logger types. Other values will have no affect.\n     * @private\n     * @static\n     * @memberof logger\n     * @method setHandler\n     * @param  {logger.LogEntry} handler A {@link logger.LogHandler} function.\n     * @param  {string}   [type] An optional subset of loggers to update.\n     * @example\n     * // Change the SDK's Log Handler to a custom function.\n     * client.logger.setHandler((logEntry) => {\n     *    // Handle the SDK's logs in a custom way.\n     *    ...\n     * })\n     *\n     */\n    setHandler (handler, type) {\n      log.debug(API_LOG_TAG + 'logger.setHandler: ', handler, type)\n\n      dispatch(actions.setHandler(handler, type))\n    },\n\n    /**\n     * Get the list of logger types used by the SDK.\n     *\n     * Logs for different SDK features can be managed separately from one\n     *    another by specifying the type when using the {@link logger.setLevel}\n     *    and {@link logger.setHandler} APIs.\n     * @private\n     * @static\n     * @memberof logger\n     * @method getTypes\n     * @return {Array<string>} Logger types.\n     * @example\n     * const types = client.logger.getTypes()\n     * // types: ['DEFAULT', 'AUTH', 'CALL', ...]\n     *\n     * // Set the Call logs to be at the debug level.\n     * client.logger.setLevel('DEBUG', 'CALL')\n     */\n    getTypes () {\n      log.debug(API_LOG_TAG + 'logger.getTypes')\n\n      return getTypes(getState())\n    }\n  }\n\n  return {\n    logger: api\n  }\n}\n","import * as actionTypes from './actionTypes'\n\n// Libraries\nimport { handleActions } from 'redux-actions'\n\n/**\n * Logs state is a mapping between every Logger type (and the default type)\n *    and its set log level.\n * eg. {\n *    DEFAULT: 'DEBUG',\n *    AUTH: 'DEBUG',\n *    CALL: 'INFO',\n *    ...\n * }\n */\n\nconst reducers = {}\n\nreducers[actionTypes.LEVELS_CHANGE] = {\n  next (state, action) {\n    // Replace all levels that have been changed.\n    return {\n      ...state,\n      ...action.payload\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","\nvar clean = require('to-no-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toSpaceCase\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSpaceCase(string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : ''\n  }).trim()\n}\n","\n/**\n * Export.\n */\n\nmodule.exports = toNoCase\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/\nvar hasSeparator = /(_|-|\\.|:)/\nvar hasCamel = /([a-z][A-Z]|[A-Z][a-z])/\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase(string) {\n  if (hasSpace.test(string)) return string.toLowerCase()\n  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()\n  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()\n  return string.toLowerCase()\n}\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate(string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : ''\n  })\n}\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize(string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ')\n  })\n}\n","// Logs plugin.\nimport * as actionTypes from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport { logManager } from './index'\n\n// Libraries.\nimport { put, takeEvery } from 'redux-saga/effects'\n\n// The SDK's name for the default/global log level.\nconst defaultType = 'DEFAULT'\n\n/**\n * Taker saga for \"set log level\" actions.\n * @method setLevelEntry\n */\nexport function * setLevelEntry () {\n  yield takeEvery(actionTypes.SET_LEVEL, setLogLevel)\n}\n\n/**\n * Taker saga for \"set log handler\" actions.\n * @method setHandlerEntry\n */\nexport function * setHandlerEntry () {\n  yield takeEvery(actionTypes.SET_HANDLER, setLogHandler)\n}\n\n/**\n * Functionality saga for \"set log level\" actions.\n * @method setLogLevel\n * @param  {Object} action\n * @param  {string} action.level\n * @param  {string} [action.type]\n */\nexport function * setLogLevel (action) {\n  const { level, type } = action.payload\n\n  try {\n    if (!type || type === defaultType) {\n      // Update the Manager's default level.\n      logManager.setLevel(level)\n      // Update all Loggers' levels.\n      logManager.getLoggers().forEach(logger => {\n        logger.setLevel(level)\n      })\n\n      // Update all Logger levels in state, because changing the default level\n      //    will affect all Loggers without their own explicit level set.\n      yield put(actions.levelsChanged(getLevelMap(logManager)))\n    } else {\n      // Update the Manager's default level for this type.\n      logManager.setLevel(type, level)\n      // Update all Loggers of this type.\n      logManager.getLoggers(type).forEach(logger => {\n        logger.setLevel(level)\n      })\n\n      // Update the one type's level in state.\n      yield put(actions.levelsChanged({ [type]: level }))\n    }\n  } catch (err) {\n    const log = logManager.getLogger('LOGS')\n    log.error(err.message)\n  }\n}\n\n/**\n * Functionality saga for \"set log handler\" actions.\n * @method setLogHandler\n * @param  {Object}   action\n * @param  {Function} action.handler\n * @param  {string}   [action.type]\n */\nexport function * setLogHandler (action) {\n  const { handler, type } = action.payload\n\n  try {\n    if (!type || type === defaultType) {\n      // Update the Manager's default level.\n      logManager.setHandler(handler)\n      // Update all Loggers' handlers.\n      logManager.getLoggers().forEach(logger => {\n        logger.setHandler(handler)\n      })\n\n      // Notify that all Logger handlers [may] have changed (because changing\n      //    the default handler will affect all Loggers without their own\n      //    handler explicitly set).\n      yield put(actions.handlersChanged(getHandlerMap(logManager)))\n    } else {\n      // Update the Manager's default handler for this type.\n      logManager.setHandler(type, handler)\n      // Update all Loggers of this type.\n      logManager.getLoggers(type).forEach(logger => {\n        logger.setHandler(handler)\n      })\n\n      // Notify that the one type's handler has changed.\n      yield put(actions.handlersChanged({ [type]: handler }))\n    }\n  } catch (err) {\n    const log = logManager.getLogger('LOGS')\n    log.error(err.message)\n  }\n}\n\n/**\n * Helper function.\n * Gets the log levels for every Logger type (and default).\n * @method getLevelMap\n * @return {Object} Mapping of Logger type to its log level.\n */\nexport function getLevelMap (logManager) {\n  // Get unique types from all Loggers.\n  const loggers = logManager.getLoggers()\n  const types = [...new Set(loggers.map(logger => logger.type))]\n\n  const levels = {}\n  // Add the default level to the beginning.\n  levels[defaultType] = logManager.getLevel()\n\n  // Get the level for each Logger type.\n  types.forEach(type => {\n    levels[type] = logManager.getLevel(type)\n  })\n\n  return levels\n}\n\n/**\n * Helper function.\n * Gets the log handler for every Logger type (and default).\n * @method getHandlerMap\n * @return {Object} Mapping of Logger type to its log handler.\n */\nexport function getHandlerMap (logManager) {\n  // Get unique types from all Loggers.\n  const loggers = logManager.getLoggers()\n  const types = [...new Set(loggers.map(logger => logger.type))]\n\n  const handlers = {}\n  // Add the default level to the beginning.\n  handlers[defaultType] = logManager.getHandler()\n\n  // Get the handler for each Logger type.\n  types.forEach(type => {\n    handlers[type] = logManager.getHandler(type)\n  })\n\n  return handlers\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/set\"), __esModule: true };","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.set');\nrequire('../modules/es7.set.to-json');\nrequire('../modules/es7.set.of');\nrequire('../modules/es7.set.from');\nmodule.exports = require('../modules/_core').Set;\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });\n","var forOf = require('./_for-of');\n\nmodule.exports = function (iter, ITERATOR) {\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of\nrequire('./_set-collection-of')('Set');\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from\nrequire('./_set-collection-from')('Set');\n","// Logs plugin.\nimport { logManager } from '../index'\nimport { logLevels } from 'kandy-logger/src/constants'\n// Action specific.\nimport setupTransformers from './transformers'\nimport { titleFormatter } from './utils'\n\n// Libraries.\nimport { createLogger } from 'redux-logger'\n\n/**\n * Creates a redux middleware for logging actions.\n * @method createActionLogger\n * @param  {Object}     options\n * @return {Middleware}\n */\nexport default function createActionLogger (options) {\n  // Create a Logger for handling the action logs.\n  const logger = logManager.getLogger('ACTION')\n  logger.setHandler(options.logActions.handler)\n  logger.setLevel(options.logActions.level)\n\n  const setLevel = logLevels[options.logLevel]\n\n  let actionOptions = {}\n  // Use different options for redux-logger depending on log level.\n  if (setLevel === logLevels.INFO) {\n    // At the INFO level, hide everything except the action name.\n    actionOptions.level = false\n    actionOptions.diff = false\n  } else {\n    // At the DEBUG+ levels, use the configs.\n    actionOptions = {\n      ...options.logActions\n    }\n  }\n\n  if (options.logActions.actionOnly) {\n    // Hide prevState and nextState.\n    // Log action and error at info level, so the browser won't hide it by default.\n    actionOptions.level = {\n      prevState: false,\n      action: 'info',\n      error: 'info',\n      nextState: false\n    }\n  }\n\n  if (options.logActions.excludeActions) {\n    actionOptions.predicate = excludeActions(options.logActions.excludeActions)\n  }\n\n  // ALWAYS use our own logger\n  actionOptions.logger = logger\n  // ALWAYS remove theming/styling from the action log messages\n  actionOptions.titleFormatter = titleFormatter\n  actionOptions.colors = false\n\n  // Setup the transformers based on the options.\n  const transformers = setupTransformers(options.logActions)\n  // Create the logger middleware.\n\n  return createLogger({\n    ...actionOptions,\n    ...transformers\n  })\n}\n\n/**\n * Logger predicate function that will take an array of action types\n * and exclude them from logs\n * @param {Array} actions An array of action types to exclude from logs\n * @returns {function} A predicate function\n */\nfunction excludeActions (actions) {\n  return (getState, action) => !actions.includes(action.type)\n}\n","// Libraries\nimport { omit } from 'lodash/fp'\n\n/**\n * Determines which redux-logger transformers we need based on options.\n * @method setupTransformers\n * @param  {Object} options\n * @return {Object} An object of transformers to be provided to redux-logger.\n */\nexport default function setupTransformers (options) {\n  // A \"pipeline\" of all redux-logger action transformers.\n  function actionPipeline (transformers) {\n    return function (action) {\n      transformers.forEach(function (transformer) {\n        action = transformer(action)\n      })\n      return action\n    }\n  }\n\n  const transformers = {}\n  const actionTransformers = []\n  if (!options.exposePayloads) {\n    // If exposePayloads is disabled, include the removePayloads transformer\n    actionTransformers.push(removePayloads)\n  } else {\n    // Otherwise, we should still hide passwords\n    actionTransformers.push(passwordHider)\n  }\n  // Create the actionTransformer pipeline with the included transformers.\n  transformers.actionTransformer = actionPipeline(actionTransformers)\n\n  return transformers\n}\n\n// Redux-logger actionTransformer to prevent passwords from being logged.\nfunction passwordHider (action) {\n  if (action.meta && action.meta.isSensitive) {\n    // Only log the action name for actions that have sensitive data in them.\n    return omit('payload', action)\n  }\n  return action\n}\n\n/**\n * Helper function removes secure data if secure mode is enabled\n * @param {Object} action\n */\nfunction removePayloads (action) {\n  if (!(action.meta && action.meta.isSafe)) {\n    return omit('payload', action)\n  }\n  return action\n}\n","/**\n * Standard title formatter function is almost identical to the defaultTitleFormatter found in redux-logger\n * but removes placeholder characters previously used for styling, which is not being used in the logging\n * configuration\n *\n * @param action\n * @param time\n * @param took\n * @returns {string}\n */\nexport function titleFormatter (action, time, took) {\n  var parts = ['action']\n  parts.push(action.type)\n  parts.push('@ ' + time)\n  parts.push('(in ' + took.toFixed(2) + ' ms)')\n\n  return parts.join(' ')\n}\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t(e.reduxLogger=e.reduxLogger||{})}(this,function(e){\"use strict\";function t(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,\"kind\",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,\"path\",{value:t,enumerable:!0})}function n(e,t,r){n.super_.call(this,\"E\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0}),Object.defineProperty(this,\"rhs\",{value:r,enumerable:!0})}function o(e,t){o.super_.call(this,\"N\",e),Object.defineProperty(this,\"rhs\",{value:t,enumerable:!0})}function i(e,t){i.super_.call(this,\"D\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0})}function a(e,t,r){a.super_.call(this,\"A\",e),Object.defineProperty(this,\"index\",{value:t,enumerable:!0}),Object.defineProperty(this,\"item\",{value:r,enumerable:!0})}function f(e,t,r){var n=e.slice((r||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,n),e}function u(e){var t=\"undefined\"==typeof e?\"undefined\":N(e);return\"object\"!==t?t:e===Math?\"math\":null===e?\"null\":Array.isArray(e)?\"array\":\"[object Date]\"===Object.prototype.toString.call(e)?\"date\":\"function\"==typeof e.toString&&/^\\/.*\\//.test(e.toString())?\"regexp\":\"object\"}function l(e,t,r,c,s,d,p){s=s||[],p=p||[];var g=s.slice(0);if(\"undefined\"!=typeof d){if(c){if(\"function\"==typeof c&&c(g,d))return;if(\"object\"===(\"undefined\"==typeof c?\"undefined\":N(c))){if(c.prefilter&&c.prefilter(g,d))return;if(c.normalize){var h=c.normalize(g,d,e,t);h&&(e=h[0],t=h[1])}}}g.push(d)}\"regexp\"===u(e)&&\"regexp\"===u(t)&&(e=e.toString(),t=t.toString());var y=\"undefined\"==typeof e?\"undefined\":N(e),v=\"undefined\"==typeof t?\"undefined\":N(t),b=\"undefined\"!==y||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),m=\"undefined\"!==v||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!b&&m)r(new o(g,t));else if(!m&&b)r(new i(g,e));else if(u(e)!==u(t))r(new n(g,e,t));else if(\"date\"===u(e)&&e-t!==0)r(new n(g,e,t));else if(\"object\"===y&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&r(new n(g,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;e.length;for(w=0;w<e.length;w++)w>=t.length?r(new a(g,w,new i(void 0,e[w]))):l(e[w],t[w],r,c,g,w,p);for(;w<t.length;)r(new a(g,w,new o(void 0,t[w++])))}else{var x=Object.keys(e),S=Object.keys(t);x.forEach(function(n,o){var i=S.indexOf(n);i>=0?(l(e[n],t[n],r,c,g,n,p),S=f(S,i)):l(e[n],void 0,r,c,g,n,p)}),S.forEach(function(e){l(void 0,t[e],r,c,g,e,p)})}p.length=p.length-1}else e!==t&&(\"number\"===y&&isNaN(e)&&isNaN(t)||r(new n(g,e,t)))}function c(e,t,r,n){return n=n||[],l(e,t,function(e){e&&n.push(e)},r),n.length?n:void 0}function s(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":s(o[r.path[n]],r.index,r.item);break;case\"D\":delete o[r.path[n]];break;case\"E\":case\"N\":o[r.path[n]]=r.rhs}}else switch(r.kind){case\"A\":s(e[t],r.index,r.item);break;case\"D\":e=f(e,t);break;case\"E\":case\"N\":e[t]=r.rhs}return e}function d(e,t,r){if(e&&t&&r&&r.kind){for(var n=e,o=-1,i=r.path?r.path.length-1:0;++o<i;)\"undefined\"==typeof n[r.path[o]]&&(n[r.path[o]]=\"number\"==typeof r.path[o]?[]:{}),n=n[r.path[o]];switch(r.kind){case\"A\":s(r.path?n[r.path[o]]:n,r.index,r.item);break;case\"D\":delete n[r.path[o]];break;case\"E\":case\"N\":n[r.path[o]]=r.rhs}}}function p(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":p(o[r.path[n]],r.index,r.item);break;case\"D\":o[r.path[n]]=r.lhs;break;case\"E\":o[r.path[n]]=r.lhs;break;case\"N\":delete o[r.path[n]]}}else switch(r.kind){case\"A\":p(e[t],r.index,r.item);break;case\"D\":e[t]=r.lhs;break;case\"E\":e[t]=r.lhs;break;case\"N\":e=f(e,t)}return e}function g(e,t,r){if(e&&t&&r&&r.kind){var n,o,i=e;for(o=r.path.length-1,n=0;n<o;n++)\"undefined\"==typeof i[r.path[n]]&&(i[r.path[n]]={}),i=i[r.path[n]];switch(r.kind){case\"A\":p(i[r.path[n]],r.index,r.item);break;case\"D\":i[r.path[n]]=r.lhs;break;case\"E\":i[r.path[n]]=r.lhs;break;case\"N\":delete i[r.path[n]]}}}function h(e,t,r){if(e&&t){var n=function(n){r&&!r(e,t,n)||d(e,t,n)};l(e,t,n)}}function y(e){return\"color: \"+F[e].color+\"; font-weight: bold\"}function v(e){var t=e.kind,r=e.path,n=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case\"E\":return[r.join(\".\"),n,\"→\",o];case\"N\":return[r.join(\".\"),o];case\"D\":return[r.join(\".\")];case\"A\":return[r.join(\".\")+\"[\"+i+\"]\",a];default:return[]}}function b(e,t,r,n){var o=c(e,t);try{n?r.groupCollapsed(\"diff\"):r.group(\"diff\")}catch(e){r.log(\"diff\")}o?o.forEach(function(e){var t=e.kind,n=v(e);r.log.apply(r,[\"%c \"+F[t].text,y(t)].concat(P(n)))}):r.log(\"—— no diff ——\");try{r.groupEnd()}catch(e){r.log(\"—— diff end —— \")}}function m(e,t,r,n){switch(\"undefined\"==typeof e?\"undefined\":N(e)){case\"object\":return\"function\"==typeof e[n]?e[n].apply(e,P(r)):e[n];case\"function\":return e(t);default:return e}}function w(e){var t=e.timestamp,r=e.duration;return function(e,n,o){var i=[\"action\"];return i.push(\"%c\"+String(e.type)),t&&i.push(\"%c@ \"+n),r&&i.push(\"%c(in \"+o.toFixed(2)+\" ms)\"),i.join(\" \")}}function x(e,t){var r=t.logger,n=t.actionTransformer,o=t.titleFormatter,i=void 0===o?w(t):o,a=t.collapsed,f=t.colors,u=t.level,l=t.diff,c=\"undefined\"==typeof t.titleFormatter;e.forEach(function(o,s){var d=o.started,p=o.startedTime,g=o.action,h=o.prevState,y=o.error,v=o.took,w=o.nextState,x=e[s+1];x&&(w=x.prevState,v=x.started-d);var S=n(g),k=\"function\"==typeof a?a(function(){return w},g,o):a,j=D(p),E=f.title?\"color: \"+f.title(S)+\";\":\"\",A=[\"color: gray; font-weight: lighter;\"];A.push(E),t.timestamp&&A.push(\"color: gray; font-weight: lighter;\"),t.duration&&A.push(\"color: gray; font-weight: lighter;\");var O=i(S,j,v);try{k?f.title&&c?r.groupCollapsed.apply(r,[\"%c \"+O].concat(A)):r.groupCollapsed(O):f.title&&c?r.group.apply(r,[\"%c \"+O].concat(A)):r.group(O)}catch(e){r.log(O)}var N=m(u,S,[h],\"prevState\"),P=m(u,S,[S],\"action\"),C=m(u,S,[y,h],\"error\"),F=m(u,S,[w],\"nextState\");if(N)if(f.prevState){var L=\"color: \"+f.prevState(h)+\"; font-weight: bold\";r[N](\"%c prev state\",L,h)}else r[N](\"prev state\",h);if(P)if(f.action){var T=\"color: \"+f.action(S)+\"; font-weight: bold\";r[P](\"%c action    \",T,S)}else r[P](\"action    \",S);if(y&&C)if(f.error){var M=\"color: \"+f.error(y,h)+\"; font-weight: bold;\";r[C](\"%c error     \",M,y)}else r[C](\"error     \",y);if(F)if(f.nextState){var _=\"color: \"+f.nextState(w)+\"; font-weight: bold\";r[F](\"%c next state\",_,w)}else r[F](\"next state\",w);l&&b(h,w,r,k);try{r.groupEnd()}catch(e){r.log(\"—— log end ——\")}})}function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},L,e),r=t.logger,n=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,f=t.diffPredicate;if(\"undefined\"==typeof r)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error(\"[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\\n// Logger with default options\\nimport { logger } from 'redux-logger'\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\\nimport createLogger from 'redux-logger'\\nconst logger = createLogger({\\n  // ...options\\n});\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n\"),function(){return function(e){return function(t){return e(t)}}};var u=[];return function(e){var r=e.getState;return function(e){return function(l){if(\"function\"==typeof i&&!i(r,l))return e(l);var c={};u.push(c),c.started=O.now(),c.startedTime=new Date,c.prevState=n(r()),c.action=l;var s=void 0;if(a)try{s=e(l)}catch(e){c.error=o(e)}else s=e(l);c.took=O.now()-c.started,c.nextState=n(r());var d=t.diff&&\"function\"==typeof f?f(r,l):t.diff;if(x(u,Object.assign({},t,{diff:d})),u.length=0,c.error)throw c.error;return s}}}}var k,j,E=function(e,t){return new Array(t+1).join(e)},A=function(e,t){return E(\"0\",t-e.toString().length)+e},D=function(e){return A(e.getHours(),2)+\":\"+A(e.getMinutes(),2)+\":\"+A(e.getSeconds(),2)+\".\"+A(e.getMilliseconds(),3)},O=\"undefined\"!=typeof performance&&null!==performance&&\"function\"==typeof performance.now?performance:Date,N=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},P=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},C=[];k=\"object\"===(\"undefined\"==typeof global?\"undefined\":N(global))&&global?global:\"undefined\"!=typeof window?window:{},j=k.DeepDiff,j&&C.push(function(){\"undefined\"!=typeof j&&k.DeepDiff===c&&(k.DeepDiff=j,j=void 0)}),t(n,r),t(o,r),t(i,r),t(a,r),Object.defineProperties(c,{diff:{value:c,enumerable:!0},observableDiff:{value:l,enumerable:!0},applyDiff:{value:h,enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:g,enumerable:!0},isConflict:{value:function(){return\"undefined\"!=typeof j},enumerable:!0},noConflict:{value:function(){return C&&(C.forEach(function(e){e()}),C=null),c},enumerable:!0}});var F={E:{color:\"#2196F3\",text:\"CHANGED:\"},N:{color:\"#4CAF50\",text:\"ADDED:\"},D:{color:\"#F44336\",text:\"DELETED:\"},A:{color:\"#2196F3\",text:\"ARRAY:\"}},L={level:\"log\",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return\"inherit\"},prevState:function(){return\"#9E9E9E\"},action:function(){return\"#03A9F4\"},nextState:function(){return\"#4CAF50\"},error:function(){return\"#F20404\"}},diff:!1,diffPredicate:void 0,transformer:void 0},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,r=e.getState;return\"function\"==typeof t||\"function\"==typeof r?S()({dispatch:t,getState:r}):void console.error(\"\\n[redux-logger v3] BREAKING CHANGE\\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\\n[redux-logger v3] Change\\n[redux-logger v3] import createLogger from 'redux-logger'\\n[redux-logger v3] to\\n[redux-logger v3] import { createLogger } from 'redux-logger'\\n\")};e.defaults=L,e.createLogger=S,e.logger=T,e.default=T,Object.defineProperty(e,\"__esModule\",{value:!0})});\n","/**\n * SDP handler function that should be passed into session object's `processOffer` and `processAnswer` function.\n * This function disables old media encryption method SDES (Modifies sdp by removing crypto).\n * However, if only SDES is available, don't disable it.\n *\n * @method sanitizeSdesFromSdp\n * @param {Object} newSdp The SDP so far (could have been modified by previous handlers).\n * @param {Object} info Information about the session description.\n * @param {RTCSdpType} info.type The session description's type.\n * @param {string} info.step The step that will occur after the Pipeline is run.\n * @param {string} info.endpoint Which end of the connection created the SDP.\n * @param {Object} originalSdp The SDP in its initial state.\n * @return {Object} The sanitized SDP with crypto removed (if fingerprint exists)\n */\nexport function sanitizeSdesFromSdp (newSdp, info, originalSdp) {\n  for (const mLine of newSdp.media) {\n    if (mLine.crypto && mLine.fingerprint) {\n      delete mLine.crypto\n    }\n  }\n  return newSdp\n}\n","/**\n * An SDP handler that adds bandwidth options to the SDP.\n * Supports Chrome & Firefox by generating 2 types of configs:\n *  - 'AS' for Chrome in kilobits per second\n *  - 'TIAS' for Firefox in bits per second\n * @method modifySdpBandwidth\n * @param {BandwidthControls} bandwidthControls\n * @return {Function} SDP handler.\n */\nexport function modifySdpBandwidth (newSdp, info, originalSdp) {\n  /**\n   * Generates bandwidth configs that Chrome & Firefox can recognize.\n   * @param {number} limit The bandwidth limit in kilobits per second.\n   */\n  function generateBandwidthConfigs (limit) {\n    return [\n      {\n        type: 'AS', // Chrome supports this (in kilobits per second)\n        limit\n      },\n      {\n        type: 'TIAS', // Firefox supports this (in bits per second)\n        limit: limit * 1000\n      }\n    ]\n  }\n\n  if (info.bandwidth) {\n    // For more details on bandwidth controls, see here https://webrtchacks.com/limit-webrtc-bandwidth-sdp/.\n\n    if (info.bandwidth.call) {\n      // Set session level bandwidth limit\n      newSdp.bandwidth = generateBandwidthConfigs(info.bandwidth.call)\n    }\n\n    if (info.bandwidth.audio) {\n      // Set audio bandwidth limit\n      newSdp.media\n        .filter(media => media.type === 'audio')\n        .forEach(media => {\n          media.bandwidth = generateBandwidthConfigs(info.bandwidth.audio)\n        })\n    }\n\n    if (info.bandwidth.video) {\n      // Set video bandwidth limit\n      newSdp.media\n        .filter(media => media.type === 'video')\n        .forEach(media => {\n          media.bandwidth = generateBandwidthConfigs(info.bandwidth.video)\n        })\n    }\n  }\n  return newSdp\n}\n","/*\n * This file contains SDK documentation for stuff defined by the Logger package.\n * They are here to 1) ensure they are picked up by our documentation tool and\n *    2) ensure they are written from the perspective of the SDK (not the Logger\n *    library).\n */\n\n/**\n * A LogEntry object is the data that the SDK compiles when information is\n *    logged. It contains both the logged information and meta-info about when\n *    and who logged it.\n *\n * A {@link logger.LogHandler LogHandler} provided to the SDK (see\n *    {@link #configconfiglogs config.logs}) will need to handle LogEntry\n *    objects.\n *\n * @public\n * @static\n * @typedef {Object} LogEntry\n * @memberof logger\n * @requires logs\n * @property {number} timestamp When the log was created, based on UNIX epoch.\n * @property {string} method The log function that was used to create the log.\n * @property {string} level The level of severity the log.\n * @property {Object} target The subject that the log is about.\n * @property {string} target.type The type of the target. This is also\n *    used as part of the name of the Logger.\n * @property {string} [target.id] A unique identifier for the target.\n * @property {string} target.name A combination of the target type and ID. If no\n *    id was provided, this will be the same as the type.\n * @property {Array} messages The logged information, given to the Logger\n *    method as parameters.\n * @property {Object} [timer] Timing data, if the log method was a timer method.\n * @example\n * function defaultLogHandler (logEntry) {\n *   // Compile the meta info of the log for a prefix.\n *   const { timestamp, level, target } = logEntry\n *   let { method } = logEntry\n *   const logInfo = `${timestamp} - ${target.type} - ${level}`\n *\n *   // Assume that the first message parameter is a string.\n *   const [log, ...extra] = logEntry.messages\n *\n *   // For the timer methods, don't actually use the console methods.\n *   //    The Logger already did the timing, so simply log out the info.\n *   if (['time', 'timeLog', 'timeEnd'].includes(method)) {\n *     method = 'debug'\n *   }\n *\n *   console[method](`${logInfo} - ${log}`, ...extra)\n * }\n */\n\n/**\n * A LogHandler can be used to customize how the SDK should log information. By\n *    default, the SDK will log information to the console, but a LogHandler can\n *    be configured to change this behaviour.\n *\n * A LogHandler can be provided to the SDK as part of its configuration (see\n *    {@link #configconfiglogs config.logs}). The SDK will then provide this\n *    function with the logged information.\n *\n * @public\n * @static\n * @typedef {Function} LogHandler\n * @memberof logger\n * @requires logs\n * @param {Object} LogEntry The LogEntry to be logged.\n * @example\n * // Define a custom function to handle logs.\n * function logHandler (logEntry) {\n *   // Compile the meta info of the log for a prefix.\n *   const { timestamp, level, target } = logEntry\n *   let { method } = logEntry\n *   const logInfo = `${timestamp} - ${target.type} - ${level}`\n *\n *   // Assume that the first message parameter is a string.\n *   const [log, ...extra] = logEntry.messages\n *\n *   // For the timer methods, don't actually use the console methods.\n *   //    The Logger already did the timing, so simply log out the info.\n *   if (['time', 'timeLog', 'timeEnd'].includes(method)) {\n *     method = 'debug'\n *   }\n *\n *   console[method](`${logInfo} - ${log}`, ...extra)\n * }\n *\n * // Provide the LogHandler as part of the SDK configurations.\n * const configs = { ... }\n * configs.logs.handler = logHandler\n * const client = create(configs)\n */\n","/**\n * This file is a plugin for the \"Config\" plugin\n * Reference info: https://confluence.genband.com/display/KSDK/Plugins\n */\nimport pluginInterface from './interface'\n\n/**\n * Config Plugin\n *\n * @method configImplementation\n * @return {Object} An instance of the \"Config\" plugin.\n */\n\n// yarn lint:docs complains if this isn't defined in a plugin.\n/**\n * @module config\n */\nexport default function configImplementation () {\n  return {\n    // Interface Components:\n    name: pluginInterface.name,\n    capabilities: ['config'],\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer\n  }\n}\n","import api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a Config plugin.\n * @type {string}\n */\nconst name = 'config'\n\nexport default {\n  reducer,\n  name,\n  api\n}\n","// Config plugin.\nimport * as actions from './actions'\nimport { getConfiguration } from './selectors'\n\n// Other plugins.\nimport { logManager, API_LOG_TAG } from '../../logs'\nimport parseCallConfigs from '../../call/configs'\n\nimport { cloneDeep } from 'lodash/fp'\n\nconst log = logManager.getLogger('CONFIG')\n\nexport default function api (context) {\n  const configApi = {\n    /**\n     * Gets the current configuration Object. This is the object that is initially set as part of SDK creation using 'create' function.\n     *\n     * @public\n     * @static\n     * @memberof api\n     * @requires config\n     * @method getConfig\n     * @returns {Object} A configuration Object.\n     */\n    getConfig: function () {\n      log.debug(API_LOG_TAG + 'getConfig')\n      return getConfiguration(context.getState())\n    },\n\n    /**\n     * Update the configuration values for the SDK to use.\n     *\n     * This API will only modify the configurations provided, leaving other configurations\n     *   as they were originally set, by performing a merge of the new values into the\n     *   previous values.\n     *\n     * Please note that the object provided to the `updateConfig` API may be different\n     *   than the object retrieved from the {@link api.getConfig getConfig} API. This may happen when a format\n     *   change has happened and the SDK modifies the provided format to alleviate\n     *   backwards-compatibility issues. We recommend ensuring the configurations you\n     *   provide are as described by the {@link config} section.\n     *\n     * @public\n     * @static\n     * @memberof api\n     * @requires config\n     * @method updateConfig\n     * @param {Object} newConfigValues Key-value pairs that will be placed into the store. See {@link config} for details on what key-value pairs are available for use.\n     * @example\n     * // Instantiate the SDK with certain configs.\n     * const client = create({\n     *   authentication: { ... },\n     *   logs: { ... },\n     *   ...\n     * })\n     *\n     * // Modify a subsection of the configs at a later time.\n     * // This will only update the specified configurations.\n     * client.updateConfig({\n     *     logs: {\n     *       loglevel: 'DEBUG'\n     *     }\n     * })\n     */\n    updateConfig: function (newConfigValues) {\n      log.debug(API_LOG_TAG + 'updateConfig: ', newConfigValues)\n\n      // Clone the configs so we don't mutate the application's object.\n      const configs = cloneDeep(newConfigValues)\n\n      // Validate the new config provided by the application.\n      if (configs.call) {\n        // TODO: Should add validation for all configs, not just the call-related ones\n        //      (by parsing using the specific 'v8nValidation' constant,\n        //       available in each plugin).\n        configs.call = parseCallConfigs(configs.call)\n      }\n\n      context.dispatch(actions.update(configs))\n    }\n  }\n\n  return configApi\n}\n","import { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves configuration Object stored in state\n *\n * @method getConfiguration\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getConfiguration (state) {\n  return cloneDeep(state.config)\n}\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","import { ICE_COLLECTION_RESULT_TYPES } from '../constants'\nimport sdpTransform from 'sdp-transform'\n\n/**\n * Default function used for the SDK's ICE collection process. Will determine when enough\n *     candidates have been collected, or enough time has passed, until negotiation can\n *     continue or if the call should be considered failed.\n *\n * If ICE collection completes normally (at any point),\n *   - start the call if we have some ICE candidates.\n *   - error the call if there are no ICE candidates.\n *\n * If a candidate is collected, follow logic based on below timings.\n *\n * If before the ideal timeout,\n *   - start the call if every media section has a relay candidate for every TURN server.\n *   - otherwise wait until max timeout.\n *\n * If before the max timeout (but after ideal),\n *   - start the call if every media section has at least one relay candidate.\n *   - otherwise wait until max timeout.\n *\n * If we reach max timeout,\n *   - start the call if we have some ICE candidates.\n *   - error the call if there are no ICE candidates.\n * @param {Object} iceCollectionInfo\n * @param {string} iceCollectionInfo.callId The ID of the call.\n * @param {string} iceCollectionInfo.callOperation The current operation of the call.\n * @param {string} iceCollectionInfo.reason The reason the check function was called.\n * @param {Array<Object>} iceCollectionInfo.iceCandidates The array of ICE candidates collected so far.\n * @param {number} iceCollectionInfo.iceCollectionDuration The time elapsed since the start of the ICE collection process.\n * @param {string} iceCollectionInfo.iceGatheringState The current ICE gathering state.\n * @param {Object} iceCollectionInfo.rtcPeerConnectionConfig The config of the RTC peer connection.\n * @param {string} iceCollectionInfo.rtcLocalSessionDescription The local description set on the peer.\n * @param {Object} timeoutConfigs Timeout configuration values provided by the application.\n * @param {number} timeoutConfigs.iceCollectionIdealTimeout The desired ideal ice collection check timeout.\n * @param {number} timeoutConfigs.iceCollectionMaxTimeout The desired max ice collection check timeout.\n * @return {call.iceCollectionCheckResult} Information on how to proceed with the ice collection check.\n */\nexport function iceCollectionCheckFunction (iceCollectionInfo = {}, timeoutConfigs) {\n  const {\n    iceCollectionDuration,\n    iceCandidates,\n    iceGatheringState,\n    rtcPeerConnectionConfig,\n    rtcLocalSessionDescription\n  } = iceCollectionInfo\n\n  const { iceCollectionIdealTimeout, iceCollectionMaxTimeout } = timeoutConfigs\n\n  if (iceGatheringState === 'complete') {\n    // If the ice gathering state is 'complete', but no candidates are available, end the call\n    if (iceCandidates.length === 0) {\n      return { type: ICE_COLLECTION_RESULT_TYPES.ERROR, error: 'No ICE candidates available for call to proceed.' }\n    }\n    return { type: ICE_COLLECTION_RESULT_TYPES.START_CALL }\n  }\n\n  // If we are under the ideal timeout time and iceGathering state is not complete, we will check that the amount\n  //  relay candidates for each transport is equal to the number of configured TURN servers.\n  if (iceCollectionDuration < iceCollectionIdealTimeout) {\n    // Number of TURN servers\n    let totalTurnServers = 0\n    const configuredIceServers = rtcPeerConnectionConfig.rtcConfig.iceServers || []\n    configuredIceServers.forEach(iceServer => {\n      if (Array.isArray(iceServer.urls)) {\n        totalTurnServers += iceServer.urls.filter(url => url.startsWith('turn')).length\n      } else if (typeof iceServer.urls === 'string' && iceServer.urls.startsWith('turn')) {\n        totalTurnServers += 1\n      }\n    })\n\n    // RTP Relay candidates collected so far\n    const relayCandidates = iceCandidates.filter(\n      candidate => candidate.component === 'rtp' && candidate.type === 'relay'\n    )\n\n    // Check whether there is atleast candidates for each media transport equal to the number of configured\n    //  turn servers before starting the call.\n    const parsedSdp = sdpTransform.parse(rtcLocalSessionDescription.sdp)\n    const readyToStart = parsedSdp.media.every(media => {\n      const sectionRelays = relayCandidates.filter(\n        candidate => parseInt(candidate.sdpMid) === media.mid || candidate.sdpMid === media.mid\n      )\n      return sectionRelays.length >= totalTurnServers\n    })\n\n    // If no TURN servers we're provided we will wait till the ideal collection timeout.\n    if (!readyToStart || !totalTurnServers) {\n      return { type: ICE_COLLECTION_RESULT_TYPES.WAIT, wait: iceCollectionIdealTimeout - iceCollectionDuration }\n    } else {\n      return { type: ICE_COLLECTION_RESULT_TYPES.START_CALL }\n    }\n  } else if (iceCollectionDuration < iceCollectionMaxTimeout) {\n    // If we are passed the ideal timeout time, we will check that the amount relay candidates for each transport is\n    //  1 or more.\n\n    // RTP Relay candidates collected so far\n    const relayCandidates = iceCandidates.filter(\n      candidate => candidate.component === 'rtp' && candidate.type === 'relay'\n    )\n\n    // Check whether there is atleast 1 candidate for each media transport before starting the call.\n    const parsedSdp = sdpTransform.parse(rtcLocalSessionDescription.sdp)\n    const readyToStart = parsedSdp.media.every(media => {\n      const sectionRelays = relayCandidates.filter(\n        candidate => parseInt(candidate.sdpMid) === media.mid || candidate.sdpMid === media.mid\n      )\n      return sectionRelays.length >= 1\n    })\n\n    if (readyToStart) {\n      return { type: ICE_COLLECTION_RESULT_TYPES.START_CALL }\n    } else {\n      return { type: ICE_COLLECTION_RESULT_TYPES.WAIT, wait: iceCollectionMaxTimeout - iceCollectionDuration }\n    }\n  } else {\n    // If we are passed the max timeout and no candidates are available, end the call\n    if (iceCandidates.length === 0) {\n      return { type: ICE_COLLECTION_RESULT_TYPES.ERROR, error: 'No ICE candidates available for call to proceed.' }\n    }\n    // Otherwise, if there are some candidates, we can attempt to start the call.\n    return { type: ICE_COLLECTION_RESULT_TYPES.START_CALL }\n  }\n}\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { mergeValues } from '../../common/utils'\n\nconst reducers = {}\n\nreducers[actionTypes.CONFIG_UPDATE] = {\n  next (state, action) {\n    return mergeValues(state, action.payload)\n  }\n}\n\nreducers[actionTypes.SET_SDP_HANDLERS] = {\n  next (state, action) {\n    return {\n      ...state,\n      call: {\n        ...state.call,\n        sdpHandlers: action.payload.sdpHandlers\n      }\n    }\n  }\n}\n\n// Config default state is an empty Object\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","// Events plugin.\nimport pluginInterface from './interface'\nimport { emitEvent } from './interface/actions'\nimport * as actionTypes from './interface/actionTypes'\n\nimport eventEmitter from './eventEmitter'\n\n// Logs\nimport { logManager } from '../logs'\nconst log = logManager.getLogger('EVENTS')\n\n/**\n * Event Emitter Implementation.\n * Factory function to create the Event Emitter Implementation.\n * Defines the functionality exposed by an Event Emitter Interface.\n */\nexport default function eventsImplementation (options = {}, bottle) {\n  // Create the emitter and provide it to the middleware.\n  //    It is created here so that it can also be provided to the bottle.\n  const emitter = eventEmitter()\n  const middleware = setupMiddleware(emitter)\n\n  // Provide the emit function to the bottle container.\n  //    This function will be provided to other plugins for emitting events.\n  bottle.value('emitEvent', function emitEvent (type, args) {\n    log.info(`Emitting event: ${type}`, args)\n    emitter.emit(type, args)\n  })\n\n  return {\n    name: pluginInterface.name,\n    middleware: middleware,\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer\n  }\n}\n\n/*\n * Extra wrapper function for the middleware so that we can provide an already\n *     created emitter to it.\n */\nfunction setupMiddleware (emitter) {\n  /**\n   * Implementation of Event Emitter Interface.\n   * @return {Middleware} middleware Middleware to be applied to the redux store.\n   */\n  return function middleware (context) {\n    var eventMap = {}\n\n    /**\n     * Middleware to handle Event Emitter Interface actions.\n     * Redirects Interface actions to the Plugin functionality, and dispatches\n     *      actions to update the store if needed.\n     * @type {Function}\n     */\n    return next => action => {\n      switch (action.type) {\n        case actionTypes.EVENTS_ON:\n          emitter.on(action.payload.eventType, action.payload.listener)\n          break\n        case actionTypes.EVENTS_OFF:\n          emitter.off(action.payload.eventType, action.payload.listener)\n          break\n        case actionTypes.EVENTS_SUBSCRIBE:\n          emitter.subscribe(action.payload)\n          break\n        case actionTypes.EVENTS_UNSUBSCRIBE:\n          emitter.unsubscribe(action.payload)\n          break\n        case actionTypes.EVENTS_ALIAS:\n          emitter.alias(action.payload.eventType, action.payload.alias)\n          break\n        case actionTypes.EVENTS_EMIT:\n          log.info(`Emitting event: ${action.payload.eventType}`, action.payload.args[0])\n          emitter.emit(action.payload.eventType, ...action.payload.args)\n          break\n        case actionTypes.MAP_EVENTS:\n          for (const actionType in action.payload) {\n            if (action.payload.hasOwnProperty(actionType)) {\n              const mapper = action.payload[actionType]\n              if (eventMap.hasOwnProperty(actionType)) {\n                eventMap[actionType].push(mapper)\n              } else {\n                eventMap[actionType] = [mapper]\n              }\n            }\n          }\n          break\n        default:\n          if (eventMap.hasOwnProperty(action.type)) {\n            // Get state both before and after allowing the action to go through\n            //    the reducers. This lets events have compare state changes.\n            const prevState = context.getState()\n            let result = next(action)\n            const state = context.getState()\n\n            // make this compatible with promise middleware by ensuring we\n            // wait for the promise to resolve. It's easier to just always\n            // use a promise, as opposed to handling cases.\n            if (!result || !result.then) {\n              result = Promise.resolve(result)\n            }\n            result.then(function () {\n              for (const mapper of eventMap[action.type]) {\n                // Use the mapper(s) for this specific event to create the event object(s).\n                // Event mappings have access to the action and states pre+post reducer.\n                let events = mapper(action, { prevState, state })\n                if (!events) {\n                  events = []\n                } else if (!Array.isArray(events)) {\n                  events = [events]\n                }\n                for (const event of events) {\n                  if (typeof event !== 'undefined') {\n                    if (!event.args) {\n                      event.args = {}\n                    }\n                    context.dispatch(emitEvent(event.type, event.args))\n                  }\n                }\n              }\n            })\n            return result\n          }\n          break\n      }\n\n      return next(action)\n    }\n  }\n}\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for an events plugin.\n * @type {string}\n */\nconst name = 'events'\n\nexport default {\n  name,\n  api,\n  reducer\n}\n","// Actions the interface uses.\nimport { on, off, subscribe, unsubscribe } from './actions'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('EVENTS')\n\n/**\n * API for Event Emitter plugin.\n * Defines the public end-points exposed by event plugins.\n * @param  {Object} context The sdk instance context.\n * @returns {Object} api     The interface object.\n */\nexport default function api ({ dispatch }) {\n  var api = {}\n\n  /**\n   * Add an event listener for the specified event type. The event is emitted by the SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method on\n   * @param {string} type The event type for which to add the listener.\n   * @param {Function} listener The listener for the event type. The parameters of the listener depend on the event type.\n   * @throws {Error} Invalid event type\n   * @example\n   * // Listen for events of a specific type emitted by the SDK.\n   * client.on('dummy:event', function (params) {\n   *    // Handle the event.\n   * })\n   */\n  api.on = function (type, listener) {\n    log.debug(API_LOG_TAG + 'on: ', type)\n    dispatch(on(type, listener))\n  }\n\n  /**\n   * Removes an event listener for the specified event type. The event is emitted by the SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method off\n   * @param {string} type The event type for which to remote the listener.\n   * @param {Function} listener The listener to remove.\n   * @throws {Error} Invalid event type\n   */\n  api.off = function (type, listener) {\n    log.debug(API_LOG_TAG + 'off: ', type)\n    dispatch(off(type, listener))\n  }\n\n  /**\n   * Adds a global event listener to SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method subscribe\n   * @param {Function} listener The event listener to add. The parameters are (type, ...args), where args depend on the event type.\n   * @throws {Error} Listener not a function\n   */\n  api.subscribe = function (listener) {\n    log.debug(API_LOG_TAG + 'subscribe')\n    dispatch(subscribe(listener))\n  }\n\n  /**\n   * Removes a global event listener from SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method unsubscribe\n   * @param {Function} listener The event listener to remove.\n   * @throws {Error} Listener not a function\n   */\n  api.unsubscribe = function (listener) {\n    log.debug(API_LOG_TAG + 'unsubscribe')\n    dispatch(unsubscribe(listener))\n  }\n\n  return api\n}\n","// Events plugin.\nimport * as actionTypes from './actionTypes'\n\n// Libraries.\nimport { update, add, concat, contains } from 'lodash/fp'\n\nfunction eventReducer (state = { aliases: [], count: 0 }, action) {\n  switch (action.type) {\n    case actionTypes.EVENTS_ON:\n      return update('count', add(1), state)\n    case actionTypes.EVENTS_OFF:\n      return update('count', add(-1), state)\n    case actionTypes.EVENTS_ALIAS:\n      return update('aliases', concat(action.payload.alias), state)\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for Event Emitter plugin.\n * Defines the events an Event plugin should dispatch to modify state.\n * @param  {Object} [state={}] The events substate.\n * @param  {Object} action     A Flux Standard action.\n * @returns {Object} state      The new event substate.\n */\nexport default function reducer (state = {}, action) {\n  // Only handle event types.\n  if (!contains(action.type, actionTypes)) {\n    return state\n  }\n\n  return {\n    ...state,\n    [action.payload.eventType]: eventReducer(state[action.payload.eventType], action)\n  }\n}\n","/*\n * Event emitter module. Can be used as a standalone factory or as a mixin.\n *\n * @private\n * @class emitter\n * @example\n * ``` javascript\n * var eventEmitter = emitter(); // Create a new emitter.\n * emitter(myEmittingObject.prototype); // Mixin to an existing object.\n * ```\n */\nexport default function eventEmitter (prototype = {}) {\n  var eventMap = []\n  var subscribeMap = []\n  var strictMode = false\n\n  /*\n   * Check if the event is a valid event type.\n   */\n  function checkEvent (type) {\n    if (strictMode && !eventMap[type]) {\n      throw new Error('Invalid event type: ' + type)\n    }\n  }\n\n  return Object.assign(prototype, {\n    /*\n     * Define an event type with the event emitter.\n     *\n     * @method define\n     * @param {String} type The name for the event type.\n     */\n    define: function (type) {\n      eventMap[type] = eventMap[type] || []\n    },\n\n    /*\n     * Define an alias for an event type.\n     *\n     * @method alias\n     * @param {String} type The event type for which to add an alias.\n     * @param {String} alias The alias name for the event type.\n     * @throws {Error} Invalid event type\n     */\n    alias: function (type, alias) {\n      checkEvent(type)\n\n      eventMap[alias] = eventMap[type] = eventMap[type] || []\n    },\n\n    /*\n     * Add an event listener for the specified event type.\n     *\n     * @method on\n     * @param {String} type The event type for which to add the listener.\n     * @param {Function} listener The listener for the event type. The parameters\n     *                            of the listener depend on the event type.\n     * @throws {Error} Invalid event type\n     */\n    on: function (type, listener) {\n      checkEvent(type)\n      ;(eventMap[type] = eventMap[type] || []).push(listener)\n    },\n\n    /*\n     * Removes an event listener for the specified event type.\n     *\n     * @method off\n     * @param {String} type The event type for which to remote the listener.\n     * @param {Function} listener The listener to remove.\n     * @throws {Error} Invalid event type\n     */\n    off: function (type, listener) {\n      checkEvent(type)\n\n      var list = eventMap[type] || []\n      var i = list.length\n      while (i--) {\n        if (listener === list[i]) {\n          list.splice(i, 1)\n        }\n      }\n    },\n\n    /*\n     * Emits an event of the specified type.\n     *\n     * @method emit\n     * @param {String} type The event type to emit.\n     * @param {any} [...args] The arguments to pass to the listeners of the event.\n     * @throws {Error} Invalid event type\n     */\n    emit: function (type) {\n      checkEvent(type)\n\n      var args = Array.prototype.slice.call(arguments, 1)\n      var list = eventMap[type] || []\n      var i = 0\n\n      for (; i < list.length; i++) {\n        list[i].apply(undefined, args)\n      }\n      for (var j = 0; j < subscribeMap.length; j++) {\n        subscribeMap[j].call(undefined, type, args)\n      }\n    },\n\n    /*\n     * Add a subscription for all event types.\n     *\n     * @method subscribe\n     * @param {Function} listener The listener for all event types.\n     * @throws {Error} Listener not a function\n     */\n    subscribe: function (listener) {\n      if (typeof listener === 'function') {\n        subscribeMap.push(listener)\n      } else {\n        throw new Error('Listener not a function')\n      }\n    },\n\n    /*\n     * Remove a subscription for all event types.\n     *\n     * @method unsubscribe\n     * @param {Function} listener The listener for all event types.\n     * @throws {Error} Listener not a function\n     */\n    unsubscribe: function (listener) {\n      if (typeof listener === 'function') {\n        var i = subscribeMap.length\n        while (i--) {\n          if (listener === subscribeMap[i]) {\n            subscribeMap.splice(i, 1)\n          }\n        }\n      } else {\n        throw new Error('Listener not a function')\n      }\n    },\n\n    /*\n     * Sets the emitter in strict mode where it only allows events that have been defined or aliases.\n     *\n     * @method setStrictMode\n     * @param {Boolean} strict Whether to set strict mode for the emitter.\n     */\n    setStrictMode: function (strict) {\n      strictMode = strict\n    }\n  })\n}\n","// Webrtc plugin.\nimport pluginInterface from './interface'\nimport createAPI from './interface/api/index'\nimport createMediaOperations from './operations/media'\nimport createLogOperations from './operations/logs'\nimport { miscActions } from './interface/actions'\nimport watchManagers from './channels'\nimport createMiddleware from './middleware'\n\n// Other plugins.\nimport { logManager } from '../logs'\nimport { getLevel } from '../logs/interface/selectors'\n\n// Libraries.\nimport initialize, { getBrowserDetails, getWebRTCSupportCapabilities } from 'kandy-webrtc'\n\nconst log = logManager.getLogger('WEBRTC')\n\n/**\n * WebRTC plugin factory.\n * @method webrtcPlugin\n */\nexport default function webrtcPlugin (options = {}, bottle) {\n  const { mediaDevices, peerConnection } = getWebRTCSupportCapabilities()\n  if (!mediaDevices || !peerConnection) {\n    log.warn(\n      'Calls are not supported on this platform due to lack of WebRTC support. Media APIs will not be available.'\n    )\n    return\n  }\n\n  // Initialize the webRTC.\n  const webRTC = initialize()\n\n  // Register the component factory functions to the bottle.\n  bottle.factory('WebRTCAPI', createAPI)\n  bottle.factory('WebRTCMediaOperations', createMediaOperations)\n  bottle.factory('WebRTCLogOperations', createLogOperations)\n\n  // Register the WebRTC stack to the bottle. This lets other component access it.\n  bottle.factory('WebRTC', () => webRTC.managers)\n\n  // Register a function to check browser info after SDK initialization has finished.\n  bottle.defer(initWebrtc)\n\n  // Configure the WebRTC stack's log level on SDK initialization.\n  bottle.defer(initLogLevel)\n\n  // Register a function to start listening for events from the WebRTC managers after SDK initialization has finished.\n  bottle.defer(watchManagers)\n\n  return {\n    name: 'webrtc',\n    reducer: pluginInterface.reducer,\n    middleware: createMiddleware,\n    shared: {\n      webRTC\n    }\n  }\n}\n\n/**\n * WebRTC initialization function to check and set browser details.\n * @method initWebrtc\n * @param {Object} container The bottle container.\n */\nexport function initWebrtc (container) {\n  const { logManager, context } = container\n  const log = logManager.getLogger('WEBRTC')\n\n  // Use the webRTC stack to check the browser details.\n  const details = getBrowserDetails()\n  log.info(`Browser details: ${details.browser}, version ${details.version}.`)\n  context.dispatch(miscActions.setBrowserDetails(details))\n}\n\n/**\n * WebRTC initialization function to set the log level on SDK initialization\n * @method initLogLevel\n * @param  {Object} container The bottle container.\n */\nexport function * initLogLevel (container) {\n  const { WebRTCLogOperations: operations } = container\n  // Get the WEBRTC logger's level.\n  const level = getLevel('WEBRTC')\n  // Call the \"set log level\" saga for the WEBRTC logger, pretending that we\n  //    received an action updating its level.\n  operations.updateLogLevel({ WEBRTC: level })\n}\n","import api from './api'\nimport reducer from './reducers'\n\nexport default {\n  name: 'webrtc',\n  api,\n  reducer\n}\n","// Webrtc plugin.\nimport { getDevices, getMediaById, getTrackById } from '../selectors'\nimport * as eventTypes from '../eventTypes'\n\n/**\n * Media related APIs.\n * @method mediaAPI\n * @param  {Function} dispatch Redux dispatch.\n * @param  {Function} getState Redux getState.\n * @return {Object}\n */\nexport default function createMediaAPI (container) {\n  const { context, WebRTCMediaOperations: operations, logManager, API_LOG_TAG, emitEvent } = container\n  const log = logManager.getLogger('MEDIA')\n\n  return {\n    /**\n     * Retrieves the available media devices for use.\n     *\n     * The {@link media.event:devices:change devices:change} event will be\n     *    emitted when the available media devices have changed.\n     *\n     * @public\n     * @static\n     * @memberof media\n     * @method getDevices\n     * @return {Object} The lists of camera, microphone, and speaker devices.\n     */\n    getDevices () {\n      log.debug(API_LOG_TAG + 'media.getDevices')\n      return getDevices(context.getState())\n    },\n\n    /**\n     * Retrieves an available Media object with a specific Media ID.\n     * @public\n     * @static\n     * @memberof media\n     * @method getById\n     * @param  {string} mediaId The ID of the Media to retrieve.\n     * @return {call.MediaObject} A Media object.\n     */\n    getById (mediaId) {\n      log.debug(API_LOG_TAG + 'media.getById: ', mediaId)\n      return getMediaById(context.getState(), mediaId)\n    },\n\n    /**\n     * Retrieve an available Track object with a specific Track ID.\n     * @public\n     * @static\n     * @memberof media\n     * @method getTrackById\n     * @param  {string} trackId The ID of the Track to retrieve.\n     * @return {call.TrackObject} A Track object.\n     */\n    getTrackById (trackId) {\n      log.debug(API_LOG_TAG + 'media.getTrackById: ', trackId)\n      return getTrackById(context.getState(), trackId)\n    },\n\n    /**\n     * Requests permission to access media devices on the end-user's machine.\n     *\n     * This API will trigger the browser to ask the end-user for permission to\n     *    access their camera and/or microphone. These permissions are\n     *    needed for the SDK to read information about the devices (the label,\n     *    for example) and for using the devices for a call.\n     *\n     * If the browser does not yet have permission, it will prompt the end-user\n     *    with a small pop-up window, giving the user a chance to allow/deny the\n     *    permissions. The behaviour of this pop-up window differs slightly\n     *    based on the browser; it may automatically save the user's decision\n     *    (such as in Chrome and Safari) or it may require the user to choose\n     *    whether their decision should be saved (such as in Firefox).\n     *\n     * This API is not required for proper usage of media and/or calls, but\n     *    helps to prepare a user before a call is made or received. It allows\n     *    an application to prompt the user for device permissions when it is\n     *    convenient for them, rather than during call setup. If the user saves\n     *    their decision, they will not be prompted again when the SDK accesses\n     *    those devices for a call.\n     *\n     * For device information, the {@link media.getDevices} API will retrieve\n     *    the list of media devices available for the SDK to use. If this list\n     *    is empty, or is missing information, it is likely that the browser\n     *    does not have permission to access the device's information. We\n     *    recommend using the {@link media.initializeDevices} API in this\n     *    scenario if you would like to allow the end-user to select which\n     *    device(s) they would like to use when they make a call, rather than\n     *    using the system default.\n     *\n     * The SDK will emit a {@link media.event:devices:change devices:change}\n     *    event when the operation is successful or a\n     *    {@link media.event:devices:error devices:error} event if an error is\n     *    encountered.\n     * @public\n     * @static\n     * @memberof media\n     * @method initializeDevices\n     * @param {Object} [constraints]\n     * @param {boolean} [constraints.audio=true] Whether to ask for audio device permissions.\n     * @param {boolean} [constraints.video=true] Whether to ask for video device permissions.\n     * @example\n     * // The SDK will ask for both audio and video permissions by default.\n     * client.media.initializeDevices()\n     *\n     * // The SDK will only ask for audio permissions.\n     * client.media.initializeDevices({ audio: true, video: false })\n     */\n    async initializeDevices (constraints) {\n      log.debug(API_LOG_TAG + 'media.initializeDevices: ', constraints)\n      const browserConstraints = {\n        audio: constraints === undefined ? true : constraints.audio,\n        video: constraints === undefined ? true : constraints.video\n      }\n\n      try {\n        await operations.initializeDevices(browserConstraints)\n      } catch (error) {\n        emitEvent(eventTypes.INITIALIZE_DEVICES_ERROR, { error }) // error is the payload\n        return\n      }\n\n      emitEvent(eventTypes.DEVICES_CHANGED, {}) // empty payload.\n    },\n\n    /**\n     * Render Media Tracks in a container.\n     *\n     * The container is specified by providing a CSS selector string that\n     *    corresponds to the HTMLElement to act as the container.\n     * @public\n     * @static\n     * @memberof media\n     * @method renderTracks\n     * @param  {Array<string>} trackIds List of Track IDs to be rendered.\n     * @param  {string} cssSelector A CSS selector string that uniquely\n     *    identifies an element. Ensure that special characters are properly\n     *    escaped.\n     * @param  {Object} [options] Additional options for rendering the tracks.\n     * @param  {string} [options.speakerId] The speaker's Device ID to use for audio tracks.\n     * @example\n     * // When a Call receives a new track, render it.\n     * client.on('call:tracksAdded', function (params) {\n     *    params.trackIds.forEach(trackId => {\n     *      const track = client.media.getTrackById(trackId)\n     *      const container = track.isLocal ? localContainer : remoteContainer\n\n     *      // Render the Call's new track when it first becomes available.\n     *      client.media.renderTracks([ trackId ], container)\n     *    }\n     * })\n     */\n    async renderTracks (trackIds, cssSelector, options = {}) {\n      log.debug(API_LOG_TAG + 'media.renderTracks: ', trackIds, cssSelector, options)\n      let retValue\n      try {\n        retValue = await operations.renderTracks(trackIds, cssSelector, options)\n      } catch (error) {\n        emitEvent(eventTypes.TRACK_RENDERED, { trackIds: error.filteredTrackIds, error: error.basicError })\n        return\n      }\n\n      emitEvent(eventTypes.TRACK_RENDERED, retValue)\n    },\n\n    /**\n     * Remove Media Tracks from a container.\n     *\n     * The container is specified by providing a CSS selector string that\n     *    corresponds to the HTMLElement to act as the container.\n     * @public\n     * @static\n     * @memberof media\n     * @method removeTracks\n     * @param  {Array<string>} trackIds List of Track IDs to stop being rendered.\n     * @param  {string} cssSelector A CSS selector string that uniquely\n     *    identifies an element. Ensure that special characters are properly\n     *    escaped.\n     */\n    async removeTracks (trackIds, cssSelector) {\n      log.debug(API_LOG_TAG + 'media.removeTracks: ', trackIds, cssSelector)\n      await operations.removeTracks(trackIds, cssSelector)\n    },\n\n    /**\n     * Mutes the specified Tracks.\n     *\n     * This API prevents the media of the specified Tracks from being rendered. Audio\n     *     Tracks will become silent and video Tracks will be a black frame.\n     * This does not stop media from being received by those Tracks. The media simply\n     *     cannot be used by the application while the Track is muted.\n     *\n     * If a local Track being sent in a Call is muted, the Track will be\n     *    noticeably muted for the remote user. If a remote Track received in a\n     *    call is muted, the result will only be noticeable locally.\n     *\n     * This mute operation acts on those specified Tracks directly.\n     * It does not act on the active Call as a whole.\n     *\n     * The SDK will emit a {@link media.event:media:muted media:muted} event\n     *    when a Track has been muted.\n     * @public\n     * @static\n     * @memberof media\n     * @method muteTracks\n     * @param  {Array<string>} trackIds List of Track IDs.\n     */\n    async muteTracks (trackIds) {\n      log.debug(API_LOG_TAG + 'media.muteTracks: ', trackIds)\n      let affectedTrackIds\n\n      try {\n        affectedTrackIds = await operations.muteTracks(trackIds)\n      } catch (error) {\n        // TODO: Remove duplication of data in payload of this event\n        emitEvent(eventTypes.TRACKS_MUTED, {\n          trackIds: error.trackIds,\n          tracks: error.trackIds,\n          error: error.basicError\n        })\n        return\n      }\n      // TODO: Remove duplication of data in payload of this event\n      emitEvent(eventTypes.TRACKS_MUTED, { trackIds: affectedTrackIds, tracks: affectedTrackIds })\n    },\n\n    /**\n     * Unmutes the specified Tracks.\n     *\n     * Media will resume its normal rendering for the Tracks.\n     * Like the 'muteTracks' API, this unmute operation acts on those specified Tracks directly.\n     * Therefore it does not act on active Call as a whole.\n     *\n     * The SDK will emit a {@link media.event:media:unmuted media:unmuted} event\n     *    when a Track has been unmuted.\n     * @public\n     * @static\n     * @memberof media\n     * @method unmuteTracks\n     * @param  {Array<string>} trackIds List of Track IDs.\n     */\n    async unmuteTracks (trackIds) {\n      log.debug(API_LOG_TAG + 'media.unmuteTracks: ', trackIds)\n      let affectedTrackIds\n\n      try {\n        affectedTrackIds = await operations.unmuteTracks(trackIds)\n      } catch (error) {\n        // TODO: Remove duplication of data in payload of this event\n        emitEvent(eventTypes.TRACKS_UNMUTED, {\n          trackIds: error.trackIds,\n          tracks: error.trackIds,\n          error: error.basicError\n        })\n        return\n      }\n      // TODO: Remove duplication of data in payload of this event\n      emitEvent(eventTypes.TRACKS_UNMUTED, { trackIds: affectedTrackIds, tracks: affectedTrackIds })\n    }\n  }\n}\n","import devices from './devices'\nimport media from './media'\nimport tracks from './tracks'\nimport sessions from './sessions'\nimport browser from './browser'\n\n/**\n * Webrtc plugin top-level reducer.\n * @method reducer\n * @param  {Object} [state={}]\n * @param  {Object} action\n * @return {Object}\n */\nexport default function (state = {}, action) {\n  return {\n    devices: devices(state.devices, action),\n    tracks: tracks(state.tracks, action),\n    sessions: sessions(state.sessions, action),\n    media: media(state.media, action),\n    browser: browser(state.browser, action)\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\n\n/**\n * The devices substate keeps tracks the of the media devices available for use.\n */\nconst reducers = {}\n\n// Replace old devices with newly checked devices.\nreducers[actionTypes.DEVICES_CHANGE] = {\n  next (state, action) {\n    return action.payload\n  }\n}\n\n// Replace with newly checked devices.\nreducers[actionTypes.INITIALIZE_DEVICES_FINISH] = {\n  next (state, action) {\n    return action.payload\n  }\n}\n\n// The initial state of the reducer.\nconst defaultState = {\n  camera: [],\n  microphone: [],\n  speaker: []\n}\n\nconst reducer = handleActions(reducers, defaultState)\nexport default reducer\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { combineActions, handleActions } from 'redux-actions'\nimport { concat, remove } from 'lodash/fp'\n\n// Top-tier reducers: Handles the whole state.\nconst reducers = {}\n\n// Add the new media object to state.\nreducers[actionTypes.MEDIA_NEW] = {\n  next (state, action) {\n    return concat(state, {\n      ...action.payload\n    })\n  }\n}\n\n// Remove the media object from state.\nreducers[actionTypes.MEDIA_REMOVED] = {\n  next (state, action) {\n    const removeMedia = media => media.id === action.payload.id\n    return remove(removeMedia)(state)\n  }\n}\n\n// Media-tier reducers: Handles only a specific portion of the substate.\nconst mediaReducers = {}\n\nmediaReducers[actionTypes.MEDIA_NEW_TRACK] = {\n  next (state, action) {\n    return {\n      ...state,\n      tracks: concat(state.tracks, [action.payload.trackId])\n    }\n  }\n}\n\n// Remove specified track from media state.\nmediaReducers[actionTypes.MEDIA_TRACK_ENDED] = {\n  next (state, action) {\n    const removeTrack = trackId => trackId === action.payload.trackId\n    return {\n      ...state,\n      tracks: remove(removeTrack, state.tracks)\n    }\n  }\n}\nconst mediaReducer = handleActions(mediaReducers, {})\n\nconst specificMediaActions = combineActions(actionTypes.MEDIA_NEW_TRACK, actionTypes.MEDIA_TRACK_ENDED)\n\nreducers[specificMediaActions] = (state, action) => {\n  return state.map(media => {\n    if (media.id === action.payload.id) {\n      return mediaReducer(media, action)\n    } else {\n      return media\n    }\n  })\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\nimport { concat, remove } from 'lodash/fp'\n\nconst reducers = {}\n\n// Add the new Track to state.\nreducers[actionTypes.TRACK_ADDED] = {\n  next (state, action) {\n    return concat(state, action.payload)\n  }\n}\n\n/*\n  Bad Workaround: Don't remove the Track information from state when it is\n    removed. Instead, just mark it as \"ended\".\n\n  When a track is removed from a Call, the application only gets the trackId. If\n    they try to get the track with that ID, it will not exist in state. This means\n    the application cannot unrender the track if they rely on the Track state\n    (eg. isLocal or media kind).\n\n  A better alternative would be to remove the Track from state when the Call it\n    is used for ends. That would allow the \"call:tracksRemoved\" event access to\n    the state before they were removed so it could include that information\n    (instead of the app needing to re-get it).\n  That does not work, though, because this reducer does not have access to the Call\n    state (meaning we can't figure out which Session was used for the Call to figure\n    out which Tracks were in that Session...) and the \"end call\" action itself doesn't\n    have the information needed either.\n\n  So leave it in state instead to make sure the application can access it. This\n    should be fixed when the Callstack and WebrtcStack work together better instead\n    of the WebrtcStack just emitting all events as soon as something changes at the\n    lower-level WebRTC.\n*/\nreducers[actionTypes.TRACK_REMOVED] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackId === track.trackId) {\n        return {\n          ...track,\n          state: 'ended'\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\n// Store the selector used for rendering the track.\nreducers[actionTypes.RENDER_TRACKS_FINISH] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          containers: concat(track.containers, action.payload.selector)\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\n// Remove the selector used for rendering the track.\nreducers[actionTypes.REMOVE_TRACKS_FINISH] = {\n  next (state, action) {\n    // TODO: Only remove one container (instead of all that match)?\n    const removeContainer = container => container === action.payload.selector\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          containers: remove(removeContainer)(track.containers)\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\n// TODO: Update this on an action from the track channel?\nreducers[actionTypes.MUTE_TRACKS_FINISH] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          muted: true\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\nreducers[actionTypes.UNMUTE_TRACKS_FINISH] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          muted: false\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\nreducers[actionTypes.TRACK_SOURCE_MUTED] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          sourceMuted: true\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\nreducers[actionTypes.TRACK_SOURCE_UNMUTED] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          sourceMuted: false\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { combineActions, handleActions } from 'redux-actions'\nimport { concat, remove } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.SESSION_ADDED] = {\n  next (state, action) {\n    return concat(state, action.payload)\n  }\n}\n\nreducers[actionTypes.SESSION_REMOVED] = {\n  next (state, action) {\n    const removeSession = session => session.id === action.payload.id\n    return remove(removeSession)(state)\n  }\n}\n\nconst sessionReducers = {}\n\nsessionReducers[actionTypes.SESSION_NEW_TRACK] = {\n  next (state, action) {\n    if (action.payload.local) {\n      return {\n        ...state,\n        localTracks: concat(state.localTracks, [action.payload.trackId])\n      }\n    } else {\n      return {\n        ...state,\n        remoteTracks: concat(state.remoteTracks, [action.payload.trackId])\n      }\n    }\n  }\n}\n\nsessionReducers[actionTypes.SESSION_TRACK_ENDED] = {\n  next (state, action) {\n    const removeTrack = trackId => trackId === action.payload.trackId\n    if (action.payload.local) {\n      return {\n        ...state,\n        localTracks: remove(removeTrack, state.localTracks)\n      }\n    } else {\n      return {\n        ...state,\n        remoteTracks: remove(removeTrack, state.remoteTracks)\n      }\n    }\n  }\n}\n\nsessionReducers[actionTypes.SESSION_TRACK_REPLACED] = {\n  next (state, action) {\n    // Remove old track id if it still exists\n    const removeTrack = trackId => trackId === action.payload.oldTrackId\n    const newLocalTracks = remove(removeTrack, state.localTracks)\n    // Add new track id if it doesn't exist\n    if (newLocalTracks.indexOf(action.payload.trackId) === -1) {\n      newLocalTracks.push(action.payload.trackId)\n    }\n    return {\n      ...state,\n      localTracks: newLocalTracks\n    }\n  }\n}\n\nconst sessionReducer = handleActions(sessionReducers, {})\n\nconst specificSessionActions = combineActions(\n  actionTypes.SESSION_NEW_TRACK,\n  actionTypes.SESSION_TRACK_ENDED,\n  actionTypes.SESSION_TRACK_REPLACED\n)\n\nreducers[specificSessionActions] = (state, action) => {\n  return state.map(session => {\n    if (session.id === action.payload.id) {\n      return sessionReducer(session, action)\n    } else {\n      return session\n    }\n  })\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\n\n/**\n * The devices substate keeps tracks the of the media devices available for use.\n */\nconst reducers = {}\n\n// Replace old devices with newly checked devices.\nreducers[actionTypes.SET_BROWSER_DETAILS] = {\n  next (state, action) {\n    return action.payload\n  }\n}\n\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","// Webrtc plugin.\nimport { trackActions, deviceActions } from '../interface/actions'\n\n// Libraries.\nimport { isUndefined, isString } from 'lodash/fp'\nimport BasicError, { webrtcCodes } from '../../errors'\n\n/**\n * WebRTC Media Operations factory function.\n * @method createMediaOperations\n * @param  {Object} container The bottle container.\n * @return {Object} Available operations for WebRTC Media.\n */\nexport default function createMediaOperations (container) {\n  const { WebRTC, context, logManager } = container\n  const log = logManager.getLogger('MEDIA')\n\n  /**\n   * Render Tracks in a specified container.\n   * @method renderTracks\n   * @param  {Array} trackIds A list of track IDs.\n   * @param  {Object} selector A CSS selector string that uniquely identifies an element.\n   * @param  {Object} [options] Additional options for rendering the tracks.\n   * @param  {string} [options.speakerId] The speaker's Device ID to use for audio tracks.\n   */\n  async function renderTracks (trackIds, selector, options) {\n    const { dispatch } = context\n    // Dispatch the associated action for backwards-compatibility\n    dispatch(\n      trackActions.renderTracks(trackIds, {\n        selector,\n        ...options\n      })\n    )\n\n    // Get the tracks that are to be rendered.\n    const tracks = await WebRTC.track.getTracks(trackIds)\n    const filteredTracks = tracks.filter(track => !isUndefined(track))\n    let payload = {}\n\n    // Each of trackIds, selector and speakerId must be present in order to render a track\n    if (\n      trackIds &&\n      // trackIds is an array\n      trackIds instanceof Array &&\n      // trackIds is not empty\n      trackIds.length > 0 &&\n      // selector is not empty\n      selector &&\n      // selector is a string or a DOM element\n      // (note: We can't use instanceof here since elements part of another window are not of the same instance as window.Element)\n      (isString(selector) || 'tagName' in selector)\n    ) {\n      log.info(`Rendering track(s) in element ${selector}.`, trackIds)\n\n      // Render the tracks.\n      await Promise.all(\n        filteredTracks.map(async track => {\n          await WebRTC.renderer.renderTrack(track, selector, options.speakerId)\n        })\n      )\n\n      log.info(\n        'Finished rendering track(s).',\n        filteredTracks.map(track => track.id)\n      )\n\n      payload = { selector }\n    } else {\n      const message = 'Failed to render tracks. One of trackIds or cssSelector is missing from request.'\n\n      log.info(\n        message,\n        filteredTracks.map(track => track.id)\n      )\n\n      payload.error = new BasicError({\n        message,\n        code: webrtcCodes.INVALID_PARAM\n      })\n\n      // Include the filtered track IDs in the error to ensure complete backwards compability with the event that is emitted\n      // Since the error event also includes only the filtered track ids\n      const error = {\n        basicError: payload.error,\n        filteredTrackIds: filteredTracks.map(track => track.id)\n      }\n\n      // Report operation done.\n      dispatch(\n        trackActions.renderTracksFinish(\n          filteredTracks.map(track => track.id),\n          payload\n        )\n      )\n\n      throw error\n    }\n\n    // Report operation done.\n    dispatch(\n      trackActions.renderTracksFinish(\n        filteredTracks.map(track => track.id),\n        payload\n      )\n    )\n\n    return {\n      trackIds: filteredTracks.map(track => track.id),\n      selector\n    }\n  }\n\n  /**\n   * Stop Tracks from being rendered in a specified container.\n   * @method removeTracks\n   * @param  {Array} trackIds A list of track IDs.\n   * @param  {Object} selector A CSS selector string that uniquely identifies an element.\n   */\n  async function removeTracks (trackIds, selector) {\n    const { dispatch } = context\n    // Dispatch the associated action for backwards-compatibility\n    dispatch(trackActions.removeTracks(trackIds, { selector }))\n\n    log.info(`Removing track(s) from element ${selector}.`, trackIds)\n\n    // Remove the tracks.\n    await Promise.all(\n      trackIds.map(async id => {\n        await WebRTC.renderer.unrenderTrack(id, selector)\n      })\n    )\n\n    log.info('Finished removing track(s).', trackIds)\n\n    // Report operation done.\n    dispatch(trackActions.removeTracksFinish(trackIds, { selector }))\n  }\n\n  /**\n   * Mute certain tracks.\n   * @method muteTracks\n   * @param  {Array} trackIds A list of track IDs.\n   * @return {Array} The list of track IDs which were muted.\n   */\n  async function muteTracks (trackIds) {\n    const { dispatch } = context\n    // Dispatch the associated action for backwards-compatibility\n    dispatch(trackActions.muteTracks(trackIds))\n\n    log.info('Muting track(s).', trackIds)\n\n    if (\n      trackIds &&\n      // trackIds is an array\n      trackIds instanceof Array &&\n      // trackIds is not empty\n      trackIds.length > 0\n    ) {\n      // Get the tracks that are to be muted.\n      const allTracks = await WebRTC.track.getTracks()\n      const tracks = allTracks.filter(track => trackIds.includes(track.id))\n\n      // Mute the tracks\n      Promise.all(tracks.map(track => track.mute()))\n\n      const affectedTrackIds = tracks.map(track => track.id)\n      log.info('Finished muting track(s).', affectedTrackIds)\n\n      // Report operation done.\n      dispatch(trackActions.muteTracksFinish(affectedTrackIds))\n      return affectedTrackIds\n    } else {\n      const message = 'Failed to mute tracks. trackIds is missing (or empty) from request.'\n\n      log.info(message, trackIds)\n\n      const payload = {}\n      payload.error = new BasicError({\n        message,\n        code: webrtcCodes.INVALID_PARAM\n      })\n\n      // Report operation done, but with a failure.\n      dispatch(trackActions.muteTracksFinish(trackIds, payload))\n\n      const error = {\n        basicError: payload.error,\n        trackIds\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Unmute certain tracks.\n   * @method unmuteTracks\n   * @param  {Array} trackIds A list of track IDs.\n   * @return {Array} The list of track IDs which were unmuted.\n   */\n  async function unmuteTracks (trackIds) {\n    const { dispatch } = context\n    // Dispatch the associated action for backwards-compatibility\n    dispatch(trackActions.unmuteTracks(trackIds))\n\n    log.info('Unmuting track(s).', trackIds)\n\n    if (\n      trackIds &&\n      // trackIds is an array\n      trackIds instanceof Array &&\n      // trackIds is not empty\n      trackIds.length > 0\n    ) {\n      // Get the tracks that are to be unmuted.\n      const allTracks = await WebRTC.track.getTracks()\n      const tracks = allTracks.filter(track => trackIds.includes(track.id))\n\n      // Unmute the tracks\n      Promise.all(tracks.map(track => track.unmute()))\n\n      const affectedTrackIds = tracks.map(track => track.id)\n      log.info('Finished unmuting track(s).', affectedTrackIds)\n\n      // Report operation done.\n      dispatch(trackActions.unmuteTracksFinish(affectedTrackIds))\n      return affectedTrackIds\n    } else {\n      const message = 'Failed to unmute tracks. trackIds is missing (or empty) from request.'\n\n      log.info(message, trackIds)\n\n      const payload = {}\n      payload.error = new BasicError({\n        message,\n        code: webrtcCodes.INVALID_PARAM\n      })\n\n      // Report operation done, but with a failure.\n      dispatch(trackActions.unmuteTracksFinish(trackIds, payload))\n\n      const error = {\n        basicError: payload.error,\n        trackIds\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Initialize the media devices.\n   * @method initializeDevices\n   * @param  {Oject} browserConstraints The media constraints\n   */\n  async function initializeDevices (browserConstraints) {\n    const { dispatch } = context\n    // Dispatch the associated action for backwards-compatibility\n    dispatch(deviceActions.initializeDevice(browserConstraints))\n\n    try {\n      // 'browserConstraints' param is optional, so no need to up front validation\n      const devices = await WebRTC.devices.setupDeviceInitialization(browserConstraints)\n      if (devices.error) {\n        // Throw this error (we'll catch it below)\n        throw devices\n      } else {\n        log.info('Successfully initialized devices.', devices)\n\n        // Dispatch the associated action for backwards-compatibility\n        dispatch(deviceActions.initializeDeviceFinish({ devices }))\n      }\n    } catch (error) {\n      log.info(`Encountered error while initializing devices: ${error.message}.`)\n\n      // Dispatch the associated action for backwards-compatibility\n      dispatch(deviceActions.initializeDeviceFinish({ error }))\n      throw error\n    }\n  }\n\n  return {\n    renderTracks,\n    removeTracks,\n    muteTracks,\n    unmuteTracks,\n    initializeDevices\n  }\n}\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\nexport function devicesChanged (devices) {\n  return {\n    type: actionTypes.DEVICES_CHANGE,\n    payload: devices\n  }\n}\n\nexport function initializeDevice (browserConstraints) {\n  return {\n    type: actionTypes.INITIALIZE_DEVICES,\n    payload: browserConstraints\n  }\n}\n\n/**\n * The finishing action which follows the INITIALIZE_DEVICES action\n * @param {Object} $0\n * @param {Object} [$0.devices] The device object.\n * @param {Object} [$0.error] An error object. Only present if an error occurred.\n * @returns {Object} A flux standard action representing the INITIALIZE_DEVICES_FINISH action.\n */\nexport function initializeDeviceFinish ({ devices, error }) {\n  return {\n    payload: error || devices,\n    error: Boolean(error),\n    type: actionTypes.INITIALIZE_DEVICES_FINISH\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\nfunction trackManagerHelper (type, trackId, payload = {}, meta = {}) {\n  return {\n    type,\n    payload: {\n      ...payload,\n      trackId\n    },\n    meta\n  }\n}\n\nexport function trackAdded (trackId, params) {\n  return trackManagerHelper(actionTypes.TRACK_ADDED, trackId, params)\n}\n\nexport function trackRemoved (trackId, params) {\n  return trackManagerHelper(actionTypes.TRACK_REMOVED, trackId, params)\n}\n\nfunction trackHelper (type, payload = {}, meta = {}) {\n  const action = {\n    type,\n    payload,\n    meta\n  }\n\n  if (payload.error) {\n    action.error = true\n  }\n\n  return action\n}\n\nexport function muteTracks (trackIds) {\n  return trackHelper(actionTypes.MUTE_TRACKS, trackIds)\n}\n\nexport function muteTracksFinish (trackIds, params) {\n  return trackHelper(actionTypes.MUTE_TRACKS_FINISH, { trackIds: trackIds, ...params })\n}\n\nexport function unmuteTracks (trackIds) {\n  return trackHelper(actionTypes.UNMUTE_TRACKS, trackIds)\n}\n\nexport function unmuteTracksFinish (trackIds, params) {\n  return trackHelper(actionTypes.UNMUTE_TRACKS_FINISH, { trackIds: trackIds, ...params })\n}\n\nexport function trackSourceMuted (trackIds, params) {\n  return trackHelper(actionTypes.TRACK_SOURCE_MUTED, { trackIds: trackIds, ...params })\n}\n\nexport function trackSourceUnmuted (trackIds, params) {\n  return trackHelper(actionTypes.TRACK_SOURCE_UNMUTED, { trackIds: trackIds, ...params })\n}\n\nexport function renderTracks (trackIds, params) {\n  return trackHelper(actionTypes.RENDER_TRACKS, {\n    trackIds,\n    ...params\n  })\n}\n\nexport function renderTracksFinish (trackIds, params) {\n  return trackHelper(actionTypes.RENDER_TRACKS_FINISH, {\n    trackIds,\n    ...params\n  })\n}\n\nexport function removeTracks (trackIds, params) {\n  return trackHelper(actionTypes.REMOVE_TRACKS, {\n    trackIds,\n    ...params\n  })\n}\n\nexport function removeTracksFinish (trackIds, params) {\n  return trackHelper(actionTypes.REMOVE_TRACKS_FINISH, {\n    trackIds,\n    ...params\n  })\n}\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { isEmpty } from 'lodash/fp'\n\nfunction mediaActionHelper (type, id, payload = {}, meta = {}) {\n  const action = {\n    type,\n    payload: {\n      ...payload,\n      id\n    }\n  }\n\n  // Only have meta and error properties on the action if they're needed.\n  if (!isEmpty(meta)) {\n    action.meta = meta\n  }\n  if (payload.error) {\n    action.error = true\n  }\n  return action\n}\n\nexport function newMedia (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_NEW, id, params)\n}\n\nexport function removedMedia (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_REMOVED, id, params)\n}\n\nexport function mediaNewTrack (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_NEW_TRACK, id, params)\n}\n\nexport function mediaTrackEnded (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_TRACK_ENDED, id, params)\n}\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n/**\n * Action creator\n * @method setBrowserDetails\n * @param  {Object} details\n * @param  {string} details.browser\n * @param  {number} details.version\n * @return {Object} A Flux-Standard-action.\n */\nexport function setBrowserDetails (details) {\n  return {\n    type: actionTypes.SET_BROWSER_DETAILS,\n    payload: details\n  }\n}\n","/**\n * WebRTC Log Operations factory function.\n * @method createLogOperations\n * @param  {Object} container The bottle container.\n * @return {Object} Available operations for WebRTC logs.\n */\nexport default function createLogOperations (container) {\n  const { WebRTC } = container\n  const webrtcLogManager = WebRTC.logs\n\n  /**\n   * Functionality operation for \"update webrtc log level\" actions.\n   * @method updateLogLevel\n   * @param  {Object} action A \"log level change\" action.\n   */\n  async function updateLogLevel (action) {\n    // If the WebRTC log level was changed, update the WebRTC stack's loggers.\n    if (action.payload.WEBRTC) {\n      await webrtcLogManager.setLevel(action.payload.WEBRTC)\n      const loggers = await webrtcLogManager.getLoggers()\n\n      loggers.map(logger => logger.setLevel(action.payload.WEBRTC))\n    }\n  }\n\n  /**\n   * Functionality operation for \"update webrtc log handler\" actions.\n   * @method updateLogHandler\n   * @param  {Object} action A \"log handler change\" action.\n   */\n  async function updateLogHandler (action) {\n    // If the WebRTC log handler was changed, update the WebRTC stack's loggers.\n    if (action.payload.WEBRTC) {\n      await webrtcLogManager.setHandler(action.payload.WEBRTC)\n      const loggers = await webrtcLogManager.getLoggers()\n\n      loggers.map(logger => logger.setHandler(action.payload.WEBRTC))\n    }\n  }\n\n  return {\n    // Operations\n    updateLogLevel,\n    updateLogHandler\n  }\n}\n","// Manager channels.\nimport watchDeviceEvents from './devices'\nimport watchTrackManagerEvents from './trackManager'\nimport watchSessionManagerEvents from './sessionManager'\nimport watchMediaManagerEvents from './mediaManager'\nimport getAssociatedCallEvent from '../../common/helpers/getAssociatedCallEvent'\n\n/**\n * Function that connects the Webrtc-stack's events directly to the SDK.\n *\n * Sets up all of the \"manager channels\" to listen for Webrtc-stack events\n *    and passes in a \"handler\" for what the manager channels should do with\n *    actions/events generated from the Webrtc-stack events.\n * @method watchManagers\n * @param {Object} container The bottle container.\n */\nexport default function watchManagers (container) {\n  const { WebRTC, context, emitEvent } = container\n\n  // Create a function to handle the actions/events that come from the webrc\n  //    channels. In this context, they can be directly dispatched / emitted.\n  const contextHelper = (action, event) => {\n    // Before we dispatch the action check if there is a call-level event associated with this action\n    //  For example the session ice connection state change action needs to dispatch an event with the\n    //  call ID instead of the session ID that comes with the action.\n    //  This check also needs to happen before we dispatch the action because the event needs the call's previous state.\n    const callEvent = getAssociatedCallEvent(context, action)\n    context.dispatch(action)\n    // Not all handlers emit events\n    if (event) {\n      emitEvent(event.type, event.args)\n    }\n    // Emit any associated call events\n    if (callEvent) {\n      emitEvent(callEvent.type, callEvent.args)\n    }\n  }\n  // These functions return unsubscribe functions to turn off the event listeners\n  // TODO: These events should be unsubscribed from gracefully along with SDK destruction.\n  //  However, there is no mechanism to easily allow that currently.\n  watchDeviceEvents(WebRTC.devices, contextHelper)\n  watchTrackManagerEvents(WebRTC.track, contextHelper)\n  watchMediaManagerEvents(WebRTC.media, contextHelper)\n  watchSessionManagerEvents(WebRTC.sessionManager, contextHelper)\n}\n","// Webrtc plugin.\nimport { deviceActions } from '../interface/actions'\nimport * as eventTypes from '../interface/eventTypes'\n\n/**\n * Sets up listeners for events emitted from the Webrtc-stack's Device Manager.\n *\n * Events received from the Webrtc-stack are used to:\n *    1) Create actions to update SDK state about Webrtc-layer changes.\n *    2) Sometimes create events to emit to the application to reflect the changes\n *        to SDK state.\n *\n * The actions and events are passed to a \"handler\" which knows what to do with\n *    them in the current context (ie. not always direct dispatch/emit).\n * @method watchDeviceEvents\n * @param {Object} manager The WebRTC Device Manager.\n * @param {Function} handler Function for handling actions and events.\n */\nexport default function watchDeviceEvents (manager, handler) {\n  // Manager event handlers.\n  const change = () => {\n    // Get the latest devices after they changed, then emit the device list\n    //  upwards.\n    manager.checkDevices().then(devices => {\n      const devicesChangedAction = deviceActions.devicesChanged(devices)\n      const devicesChangedEvent = {\n        type: eventTypes.DEVICES_CHANGED,\n        args: {}\n      }\n      handler(devicesChangedAction, devicesChangedEvent)\n    })\n  }\n\n  manager.on('change', change)\n\n  // Return an unsubscribe function that removes all event listeners.\n  const unsubscribe = () => {\n    manager.off('change', change)\n  }\n\n  return unsubscribe\n}\n","// Call plugin.\nimport { trackActions } from '../interface/actions'\nimport watchTrackEvents from './track'\n\n/**\n * Sets up event listeners for Track Manager Events.\n * The events are turned into actions and dispatched\n *    to be handled by redux.\n * @method watchTrackManagerEvents\n * @param {Object} manager The webRTC Track Manager.\n * @param {Object} handler Handler function for handling actions and events.\n */\nexport default function watchTrackManagerEvents (manager, handler) {\n  // Handler for new tracks\n  const trackAdded = id => {\n    const track = manager.get(id)\n    const state = track.getState()\n\n    // Translate the track state from native WebRTC to SDK style.\n    // This is to change the \"muted\" property to be what people generally know\n    //    \"muted\" to be.\n    state.sourceMuted = state.muted\n    state.muted = !state.enabled\n\n    delete state.enabled\n    delete state.id\n\n    // Set up event listeners for the added track\n    watchTrackEvents(track, handler)\n\n    // Pass the action to the handler to be handled as appropriate\n    const trackAddedAction = trackActions.trackAdded(id, state)\n    handler(trackAddedAction)\n  }\n\n  // Handler for removed/ended tracks\n  const trackRemoved = id => {\n    // Pass the action to the handler to be handled as appropriate\n    const trackRemovedAction = trackActions.trackRemoved(id)\n    handler(trackRemovedAction)\n  }\n\n  // Listen for track add or remove events\n  manager.on('add', trackAdded)\n  manager.on('remove', trackRemoved)\n\n  // Return an unsubscribe function that removes all event listeners.\n  const unsubscribe = () => {\n    manager.off('add', trackAdded)\n    manager.off('remove', trackRemoved)\n  }\n\n  return unsubscribe\n}\n","// Libraries.\nimport { trackActions } from '../interface/actions'\nimport * as eventTypes from '../interface/eventTypes'\n\n/**\n * Sets up event listeners for a Track object's events.\n * The events simply dispatch actions to be handled by redux.\n * @method watchTrackEvents\n * @param {Object} track A Track object.\n * @param {Object} handler Handler function for handling actions and events.\n */\nexport default function watchTrackEvents (track, handler) {\n  // The track source (which affected the track identified by trackId) was muted.\n  // An example of a track source is a physical media device such as:\n  // microphone or camera.\n  const trackSourceMuted = trackData => {\n    const trackSourceMutedAction = trackActions.trackSourceMuted([trackData.trackId], {\n      mediaId: trackData.mediaId,\n      isLocal: trackData.isLocal\n    })\n    const trackSourceMutedEvent = {\n      type: eventTypes.TRACK_SOURCE_MUTED,\n      args: {\n        trackIds: [trackData.trackId],\n        trackId: trackData.trackId,\n        isLocal: trackData.isLocal,\n        id: trackData.mediaId\n      }\n    }\n    // Pass the action and event to the handler to be handled as appropriate\n    handler(trackSourceMutedAction, trackSourceMutedEvent)\n  }\n\n  // The track source (which affected the track identified by trackId) was unmuted.\n  const trackSourceUnmuted = trackData => {\n    const trackSourceUnmutedAction = trackActions.trackSourceUnmuted([trackData.trackId], {\n      mediaId: trackData.mediaId,\n      isLocal: trackData.isLocal\n    })\n    const trackSourceUnmutedEvent = {\n      type: eventTypes.TRACK_SOURCE_UNMUTED,\n      args: {\n        trackIds: [trackData.trackId],\n        trackId: trackData.trackId,\n        isLocal: trackData.isLocal,\n        id: trackData.mediaId\n      }\n    }\n    // Pass the action and event to the handler to be handled as appropriate\n    handler(trackSourceUnmutedAction, trackSourceUnmutedEvent)\n  }\n\n  const unsubscribe = () => {\n    track.off('ended', unsubscribe)\n    track.off('muted', trackSourceMuted)\n    track.off('unmuted', trackSourceUnmuted)\n  }\n\n  // If the track is ended we will turn off event listeners for the track object.\n  //  The trackManager will handle updating state with the track \"remove\" event that gets emitted\n  //  following track \"ended\" events.\n  track.on('ended', unsubscribe)\n  track.on('muted', trackSourceMuted)\n  track.on('unmuted', trackSourceUnmuted)\n\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport { sessionActions } from '../interface/actions'\nimport watchSessionEvents from './session'\n\n/**\n * Sets up event listeners for Session Manager Events.\n * The events are turned into actions and dispatched\n *    to be handled by redux elsewhere.\n * @method watchSessionManagerEvents\n * @param {Object} manager The webRTC Session Manager.\n * @param {Object} handler Handler function for handling actions and events.\n */\nexport default function watchSessionManagerEvents (manager, handler) {\n  // Handle new Session.\n  const sessionAdded = id => {\n    const session = manager.get(id)\n    const state = session.getState()\n    delete state.id\n\n    // If it is a new Session, watch for its events.\n    watchSessionEvents(session, handler)\n\n    // Pass the action to the handler to be handled as appropriate\n    const sessionAddedAction = sessionActions.sessionAdded(id, state)\n    handler(sessionAddedAction)\n  }\n\n  // Handle Sessions ending.\n  const sessionRemoved = id => {\n    // Pass the action to the handler to be handled as appropriate\n    const sessionRemovedAction = sessionActions.sessionRemoved(id)\n    handler(sessionRemovedAction)\n  }\n\n  manager.on('session:new', sessionAdded)\n  manager.on('session:removed', sessionRemoved)\n  const unsubscribe = () => {\n    manager.off('session:new', sessionAdded)\n    manager.off('session:removed', sessionRemoved)\n  }\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport { sessionActions } from '../interface/actions'\n\n/**\n * Sets up event listeners for a Session's events.\n * The events are turned into actions and dispatched\n *    to be handled by redux elsewhere.\n * @method watchSessionEvents\n * @param {Object} session The Session object.\n * @param {Object} handler Handler function for handling actions and events.\n */\nexport default function watchSessionEvents (session, handler) {\n  // Session received a new track.\n  const newTrack = ({ local, trackId }) => {\n    // Pass the action to the handler to be handled as appropriate\n    const newTrackAction = sessionActions.sessionNewTrack(session.id, {\n      local,\n      trackId\n    })\n    handler(newTrackAction)\n  }\n\n  const trackEnded = ({ local, trackId, isUnsolicited }) => {\n    /**\n     * When a track has ended,\n     * update redux state's webrtc.session.localTracks/remoteTracks array\n     * by removing the specified trackId.\n     * ('local' boolean will determine whether to update localTracks or remoteTracks)\n     */\n    handler(\n      sessionActions.sessionTrackEnded(session.id, {\n        local,\n        trackId,\n        isUnsolicited\n      })\n    )\n  }\n\n  const trackReplaced = ({ oldTrackId, trackId }) => {\n    // Pass the action to the handler to be handled as appropriate\n    const trackReplacedAction = sessionActions.sessionTrackReplaced(session.id, {\n      oldTrackId,\n      trackId\n    })\n    handler(trackReplacedAction)\n  }\n\n  const iceConnectionStateChange = obj => {\n    // Pass the action to the handler to be handled as appropriate\n    const iceConnectionStateChangeAction = sessionActions.sessionIceConnectionStateChange(session.id, {\n      iceConnectionState: obj.iceConnectionState\n    })\n    handler(iceConnectionStateChangeAction)\n  }\n\n  const iceCandidateCollected = obj => {\n    // Pass the action to the handler to be handled as appropriate\n    const iceCandidateCollectedAction = sessionActions.sessionIceCandidateCollected(session.id, obj)\n    handler(iceCandidateCollectedAction)\n  }\n\n  const iceGatheringStateChange = obj => {\n    // Pass the action to the handler to be handled as appropriate\n    const iceGatheringStateChangeAction = sessionActions.sessionIceGatheringStateChange(session.id, obj)\n    handler(iceGatheringStateChangeAction)\n  }\n\n  const iceCollectionScheduledCheck = obj => {\n    // Pass the action to the handler to be handled as appropriate\n    const iceCollectionScheduledCheckAction = sessionActions.sessionIceCollectionScheduledCheck(session.id, obj)\n    handler(iceCollectionScheduledCheckAction)\n  }\n\n  // Listen for when audio files end (from `insertAudio` API).\n  const audioFileEnded = isSuccess => {\n    handler(sessionActions.sessionAudioEnded(session.id, { error: !isSuccess }))\n  }\n\n  session.on('new:track', newTrack)\n  session.on('track:ended', trackEnded)\n  session.on('track:replaced', trackReplaced)\n  session.on('peer:iceConnectionStateChange', iceConnectionStateChange)\n  session.on('peer:iceGatheringStateChange', iceGatheringStateChange)\n  session.on('peer:iceCandidateCollected', iceCandidateCollected)\n  session.on('peer:iceCollectionScheduledCheck', iceCollectionScheduledCheck)\n  session.on('audioFileEnded', audioFileEnded)\n\n  const unsubscribe = () => {\n    session.off('new:track', newTrack)\n    session.off('track:ended', trackEnded)\n    session.off('track:replaced', trackReplaced)\n    session.off('peer:iceConnectionStateChange', iceConnectionStateChange)\n    session.off('peer:iceGatheringStateChange', iceGatheringStateChange)\n    session.off('peer:iceCandidateCollected', iceCandidateCollected)\n    session.off('peer:iceCollectionScheduledCheck', iceCollectionScheduledCheck)\n    session.off('audioFileEnded', audioFileEnded)\n  }\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport { mediaActions } from '../interface/actions'\nimport watchMediaEvents from './media'\n\n/**\n * Sets up event listeners for Media Manager events. The events are turned into\n *    actions and dispatched to be handled by redux.\n * @method watchMediaManagerEvents\n * @param {Object} manager The Media Manager.\n * @param {Object} handler Handler function for handling actions and events.\n */\nexport default function watchMediaManagerEvents (manager, handler) {\n  const newMedia = id => {\n    const media = manager.get(id)\n\n    // If it is a new Media, watch for its events.\n    watchMediaEvents(media, handler)\n\n    // Pass the action to the handler to be handled as appropriate\n    const newMediaAction = mediaActions.newMedia(id, {\n      local: media.getState().isLocal,\n      tracks: media.getTracks().map(track => track.id)\n    })\n    handler(newMediaAction)\n  }\n\n  const removedMedia = id => {\n    // Pass the action to the handler to be handled as appropriate\n    const removedMediaAction = mediaActions.removedMedia(id)\n    handler(removedMediaAction)\n  }\n\n  manager.on('media:new', newMedia)\n  manager.on('media:removed', removedMedia)\n\n  const unsubscribe = () => {\n    manager.off('media:new', newMedia)\n    manager.off('media:removed', removedMedia)\n  }\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport { mediaActions } from '../interface/actions'\n\n/**\n * Sets up event listeners for a Media's events.\n * The events are turned into actions and dispatched\n *    to be handled by redux.\n * @method watchMediaEvents\n * @param {Object} media A Media object.\n * @param {Object} handler Handler function for handling actions and events.\n */\nexport default function watchMediaEvents (media, handler) {\n  // Media received a new track.\n  const newTrack = ({ mediaId, trackId }) => {\n    // Pass the action to the handler to be handled as appropriate\n    const mediaNewTrackAction = mediaActions.mediaNewTrack(mediaId, { trackId })\n    handler(mediaNewTrackAction)\n  }\n\n  const trackEnded = ({ mediaId, trackId }) => {\n    // Pass the action to the handler to be handled as appropriate\n    const mediaTrackEndedAction = mediaActions.mediaTrackEnded(mediaId, { trackId })\n    handler(mediaTrackEndedAction)\n  }\n\n  const unsubscribe = () => {\n    media.off('media:stopped', unsubscribe)\n    media.off('track:new', newTrack)\n    media.off('track:ended', trackEnded)\n  }\n\n  // If the media is stopped we will turn off event listeners for this media.\n  //  The Media Manager will handle updating state with the media \"remove\" event that gets emitted\n  //  following media \"stopped\" events.\n  media.on('media:stopped', unsubscribe)\n  media.on('track:new', newTrack)\n  media.on('track:ended', trackEnded)\n\n  return unsubscribe\n}\n","import { MEDIA_CONNECTION_CHANGE } from '../../call/interface/eventTypes'\nimport { getCallByWebrtcSessionId } from '../../call/interface/selectors'\nimport * as webrtcActionTypes from '../../webrtc/interface/actionTypes'\n\nexport default function getAssociatedCallEvent (context, action) {\n  switch (action.type) {\n    case webrtcActionTypes.SESSION_ICE_CONNECTION_STATE_CHANGE: {\n      const call = getCallByWebrtcSessionId(context.getState(), action.payload.id)\n      if (call) {\n        return {\n          type: MEDIA_CONNECTION_CHANGE,\n          args: { callId: call.id, previous: { state: call.mediaConnectionState } }\n        }\n      }\n    }\n  }\n}\n","import { LEVELS_CHANGE, HANDLERS_CHANGE } from '../logs/interface/actionTypes'\n\n/**\n * WebRTC middleware factory function.\n * @method createMiddleware\n * @param {Object} context The factory context.\n * @return {Function} A redux middleware.\n */\nexport default function createMiddleware (context) {\n  const logOperations = context.container.WebRTCLogOperations\n  /**\n   * Redux middleware: Watch for specific actions and trigger operations\n   *   when we see them.\n   */\n  return next => action => {\n    /**\n     * Let the action happen as it is received.\n     *\n     * The WebRTC middleware operations are not side-effects, they are\n     *   relevant to the operation being performed. As such they can\n     *   happen when necessary without waiting for other operations.\n     */\n\n    // WebRTC doesn't act on any other actions.\n    if (action.type === LEVELS_CHANGE) {\n      // When an action to change log levels is dispatched, WebRTC plugin should deal with it\n      logOperations.updateLogLevel(action)\n    }\n\n    if (action.type === HANDLERS_CHANGE) {\n      // When an action to change log handlers is dispatched, WebRTC plugin should deal with it\n      logOperations.updateLogHandler(action)\n    }\n\n    return next(action)\n  }\n}\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nrequire('../modules/es7.map.of');\nrequire('../modules/es7.map.from');\nmodule.exports = require('../modules/_core').Map;\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of\nrequire('./_set-collection-of')('Map');\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from\nrequire('./_set-collection-from')('Map');\n","module.exports = { \"default\": require(\"core-js/library/fn/reflect/set\"), __esModule: true };","require('../../modules/es6.reflect.set');\nmodule.exports = require('../../modules/_core').Reflect.set;\n","// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\nvar dP = require('./_object-dp');\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar createDesc = require('./_property-desc');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\n\nfunction set(target, propertyKey, V /* , receiver */) {\n  var receiver = arguments.length < 4 ? target : arguments[3];\n  var ownDesc = gOPD.f(anObject(target), propertyKey);\n  var existingDescriptor, proto;\n  if (!ownDesc) {\n    if (isObject(proto = getPrototypeOf(target))) {\n      return set(proto, propertyKey, V, receiver);\n    }\n    ownDesc = createDesc(0);\n  }\n  if (has(ownDesc, 'value')) {\n    if (ownDesc.writable === false || !isObject(receiver)) return false;\n    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {\n      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;\n      existingDescriptor.value = V;\n      dP.f(receiver, propertyKey, existingDescriptor);\n    } else dP.f(receiver, propertyKey, createDesc(0, V));\n    return true;\n  }\n  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n}\n\n$export($export.S, 'Reflect', { set: set });\n","import onicecandidate from './icecandidate'\nimport oniceconnectionstatechange from './iceconnectionstatechange'\nimport onicegatheringstatechange from './icegatheringstatechange'\nimport onnegotiationneeded from './negotiationneeded'\nimport onsignalingstatechange from './signalingstatechange'\nimport ontrack from './track'\n\nexport default {\n  onicecandidate,\n  oniceconnectionstatechange,\n  onicegatheringstatechange,\n  onnegotiationneeded,\n  onsignalingstatechange,\n  ontrack\n}\n","import { PEER } from '../../constants'\n\n/**\n * Event wrapper for `icecandidate` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onicecandidate\n * @method onicecandidate\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function onicecandidate (listener) {\n  const { nativePeer, proxyPeer, config, iceTimer, emitter, iceCandidates, log } = this\n\n  /**\n   * Intercept the PeerConnection onicecandidate event.\n   * Handle the candidate as defined by the current trickle ICE mode config.\n   * Trickle ICE scenarios:\n   *   - FULL: Trickle.\n   *   - HALF, pre-half: Wait for \"half\" or null candidate.\n   *   - HALF, post-half: Trickle.\n   *   - NONE: Wait for null candidate.\n   */\n  nativePeer.onicecandidate = event => {\n    log.debug(\n      `ICE candidate received (trickling?: ${config.trickleIceMode === PEER.TRICKLE_ICE.FULL}): `,\n      event.candidate\n    )\n\n    // Keep track of all candidates gathered by this collection process.\n    if (event.candidate !== null) {\n      iceCandidates.push(event.candidate)\n    }\n\n    // Emit an event for the session to pick up for the ice collection check\n    const elapsedTime = iceTimer.timeFromStart()\n    emitter.emit('iceCandidateCollected', {\n      iceCollectionDuration: elapsedTime,\n      iceCandidates,\n      iceGatheringState: proxyPeer.iceGatheringState,\n      rtcPeerConnectionConfig: config,\n      rtcLocalSessionDescription: proxyPeer.localDescription\n    })\n\n    if (config.trickleIceMode === PEER.TRICKLE_ICE.FULL) {\n      // If trickling is enabled, emit an event for every ICE candidate. The\n      //    Peer is already ready for negotiation at this point.\n      if (event.candidate) {\n        // Only trickle non-null (ie. actual) candidates.\n        listener(event)\n      }\n    } else if (config.trickleIceMode === PEER.TRICKLE_ICE.HALF) {\n      // For half trickle, only start trickling after a certain threshold.\n      //    Peer will be considered ready for negotiation after that point.\n      const haveHalf = config.halfTrickleThreshold({\n        sdp: proxyPeer.localDescription.sdp,\n        iceCandidate: event.candidate,\n        time: elapsedTime\n      })\n\n      if (haveHalf) {\n        log.debug('Half ICE collection process complete; ready for negotiation.')\n        config.trickleIceMode = PEER.TRICKLE_ICE.FULL\n        emitter.emit('onnegotiationready')\n      } else {\n        log.debug(\"Peer's half trickle threshold not reached.\")\n      }\n    }\n  }\n\n  return true\n}\n","/**\n * Event wrapper for `iceconnectionstatechange` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/oniceconnectionstatechange\n * @method oniceconnectionstatechange\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function oniceconnectionstatechange (listener) {\n  const { nativePeer, log } = this\n\n  nativePeer.oniceconnectionstatechange = function (event) {\n    log.debug(`Peer received iceconnectionstatechange event: ${nativePeer.iceConnectionState}`)\n    listener(event)\n  }\n\n  return true\n}\n","import { PEER } from '../../constants'\n\n/**\n * Event wrapper for `icegatheringstatechange` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onicegatheringstatechange\n * @method onicegatheringstatechange\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function onicegatheringstatechange (listener) {\n  const { nativePeer, iceTimer, log } = this\n\n  /**\n   * Intercept the PeerConnection onicegatheringstatechange event.\n   * Time how long ICE collection takes and handles scenarios when it takes\n   *    too long.\n   */\n  nativePeer.onicegatheringstatechange = event => {\n    const gatheringState = event.target.iceGatheringState\n    log.debug(`Peer iceGatheringState changed to ${gatheringState}.`)\n\n    if (gatheringState === PEER.ICE_GATHERING_STATE.GATHERING) {\n      iceTimer.start()\n      // TODO: Handle \"ICE collection taking too long\" scenario.\n    } else if (gatheringState === PEER.ICE_GATHERING_STATE.COMPLETE) {\n      log.debug(`Peer took ${iceTimer.timeFromStart()}ms to collect ICE candidates.`)\n      iceTimer.stop()\n    }\n    // Bubble the event up.\n    listener(event)\n  }\n\n  return true\n}\n","/**\n * Event wrapper for `negotiationneeded` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onnegotiationneeded\n * @method onnegotiationneeded\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function onnegotiationneeded (listener) {\n  const { nativePeer, log } = this\n\n  nativePeer.onnegotiationneeded = function (event) {\n    log.debug('Peer received negotiationneeded event.')\n    listener(event)\n  }\n\n  return true\n}\n","/**\n * Event wrapper for `signalingstatechange` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onsignalingstatechange\n * @method onsignalingstatechange\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function onsignalingstatechange (listener) {\n  const { nativePeer, log } = this\n\n  nativePeer.onsignalingstatechange = function (event) {\n    log.debug(`Peer received signalingstatechange event: ${nativePeer.signalingState}`)\n    listener(event)\n  }\n\n  return true\n}\n","/**\n * Event wrapper for `track` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/ontrack\n * @method ontrack\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function ontrack (listener) {\n  const { nativePeer, trackManager, log } = this\n\n  nativePeer.ontrack = event => {\n    /**\n     * transceiver: The RTCRtpTransceiver for this remote track. (Available in unified-plan)\n     * receiver: The RTCRtpReceiver for this remote track.\n     * track: The remote MediaStreamTrack.\n     * streams: Array of MediaStreams the track is in.\n     */\n    // event object contains transceiver which already has track attached to its receiver\n    const { track: nativeTrack, streams } = event\n    log.debug(`Peer received ${nativeTrack.kind} Track ${nativeTrack.id}.`)\n\n    /*\n     * When the remote side adds a track, it should have an associated MediaStream\n     *    which we get access to here. This allows us to listen for events on that\n     *    MediaStream (important for knowing when the track has ended).\n     * It's possible that the remote Sender does not have a Stream set, so we create\n     *    a Stream for it. This should be considered a problematic scenario, since\n     *    we rely on the remote Stream for certain events.\n     * Reference: KAA-2628\n     */\n    let targetStream\n    if (streams.length === 0) {\n      targetStream = new MediaStream([nativeTrack])\n      log.debug('New Track is not associated with remote Stream.')\n    } else {\n      targetStream = streams[0]\n      log.debug(`New Track is associated with remote Stream ${targetStream.id}.`)\n    }\n\n    // Convert the native MediaStreamTrack into a Track object.\n    // Specify that this is not a local one (i.e. it's a remote track)\n    const track = trackManager.add(nativeTrack, targetStream, false)\n\n    listener(track)\n  }\n\n  return true\n}\n","import addIceCandidate from './addIceCandidate'\nimport addTrack from './addTrack'\nimport close from './close'\nimport createAnswer from './createAnswer'\nimport createOffer from './createOffer'\nimport findReusableTransceiver from './findReusableTransceiver'\nimport getState from './getState'\nimport getStats from './getStats'\nimport removeTrack from './removeTrack'\nimport replaceTrack from './replaceTrack'\nimport sendDTMF from './sendDTMF'\nimport setLocalDescription from './setLocalDescription'\nimport setRemoteDescription from './setRemoteDescription'\n\nconst methods = {\n  addIceCandidate,\n  addTrack,\n  close,\n  createAnswer,\n  createOffer,\n  findReusableTransceiver,\n  getState,\n  getStats,\n  removeTrack,\n  replaceTrack,\n  sendDTMF,\n  setLocalDescription,\n  setRemoteDescription\n}\n\nexport default methods\n","/**\n * Add an ICE candidate to the connection.\n * @method addIceCandidate\n * @param  {RTCIceCandidate} candidate A native candidate object.\n * @return {Promise} Resolves when the candidate is successfully added.\n */\nexport default function addIceCandidate (candidate) {\n  const { nativePeer, proxyPeer, id, log } = this\n  log.info('Adding ICE candidate.')\n\n  return new Promise((resolve, reject) => {\n    if (proxyPeer.remoteDescription.type && proxyPeer.remoteDescription.sdp) {\n      nativePeer\n        .addIceCandidate(candidate)\n        .then(resolve)\n        .catch(reject)\n    } else {\n      log.info('Cannot set remote ICE candidate without a remote description.')\n      // TODO: Better error.\n      reject(new Error(`Peer ${id} cannot set remote ICE candidate without a remote description.`))\n    }\n  })\n}\n","/**\n * Add a Track to the connection.\n * @method addTrack\n * @param  {Track} track A Track object.\n * @return {RTCRtpSender}\n */\nexport default function addTrack (track) {\n  const { nativePeer, log } = this\n  log.info(`Adding new ${track.track.kind} track.`)\n\n  let sender\n  try {\n    sender = nativePeer.addTrack(track.track, track.getStream())\n  } catch (err) {\n    // TODO: Better error handling.\n    log.info(`Failed to add track: ${err.message}`)\n  }\n  // TODO: What to return here? Probably shouldn't expose the rtpSender itself.\n  return sender\n}\n","/**\n * Clean the Peer by closing the RTCPeerConnection.\n * @method close\n */\nexport default function close () {\n  const { nativePeer, id, emitter, iceLoop, log } = this\n  log.info('Closing Peer.')\n\n  if (iceLoop) {\n    // Clear the ICE collection loop timeout if it exists.\n    clearTimeout(iceLoop)\n  }\n\n  nativePeer.close()\n  emitter.emit('peer:closed', id)\n}\n","import { PEER } from '../../constants'\n\nimport { runPipeline } from '../../sdpUtils/pipeline'\nimport { removeTrickleIce, removeBundling, changeMediaDirection, preventDtlsRoleChange } from '../../sdpUtils/handlers'\n\n/**\n * Creates an SDP answer, given that a remote offer has been set.\n * @method createAnswer\n * @param  {RTCAnswerOptions} [options={}] Options used to customize the answer.\n * @param  {Object} [options.mediaDirections] Directions to use for media.\n * @param  {string} [options.mediaDirections.audio]\n * @param  {string} [options.mediaDirections.video]\n * @return {Promise} Resolves with the answer.\n */\nexport default function createAnswer (options = {}) {\n  const { nativePeer, config, dtlsRole, log } = this\n  log.info('Creating local answer.')\n\n  // Remove options.mediaDirections.\n  // This is because directions are now set in transceivers.\n  delete options.mediaDirections\n\n  return new Promise((resolve, reject) => {\n    nativePeer\n      .createAnswer(options)\n      .then(answer => {\n        const sdpHandlers = []\n\n        /*\n         * Always include the `preventDtlsRoleChange` handler. This ensures\n         *    that the SDP's DTLS role does not change during a renegotiation.\n         */\n        sdpHandlers.push(preventDtlsRoleChange)\n\n        if (config.trickleIceMode === PEER.TRICKLE_ICE.NONE) {\n          // Modify the answer to claim the Peer doesn't support trickle ICE.\n          sdpHandlers.push(removeTrickleIce)\n        }\n        if (config.removeBundling) {\n          // Modify the offer to remove media bundling\n          sdpHandlers.push(removeBundling)\n        }\n        if (options.mediaDirections) {\n          // Modify the answer to set media directions as desired.\n          sdpHandlers.push(changeMediaDirection(options.mediaDirections))\n        }\n        if (sdpHandlers.length > 0) {\n          // Run the SDP pipeline with only these handlers.\n          answer.sdp = runPipeline(sdpHandlers, answer.sdp, {\n            type: answer.type,\n            endpoint: PEER.ENDPOINT.LOCAL,\n            dtlsRole: dtlsRole\n          })\n        }\n\n        log.info('Finished creating local answer.')\n        resolve(answer)\n      })\n      .catch(reject)\n  })\n}\n","require('../../modules/es6.object.freeze');\nmodule.exports = require('../../modules/_core').Object.freeze;\n","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","import { PEER } from '../../constants'\n\nimport { runPipeline } from '../../sdpUtils/pipeline'\nimport { removeTrickleIce, removeBundling, changeMediaDirection } from '../../sdpUtils/handlers'\n\n/**\n * Creates an SDP offer.\n * @method createOffer\n * @param  {RTCOfferOptions} [options={}] Options used to customize the offer.\n * @param  {Object} [options.mediaDirections] Directions to use for media.\n * @param  {string} [options.mediaDirections.audio]\n * @param  {string} [options.mediaDirections.video]\n * @return {Promise} Resolves with the offer.\n */\nexport default function createOffer (options = {}) {\n  const { nativePeer, config, log } = this\n  log.info('Creating local offer.')\n\n  // Remove options.mediaDirections.\n  // This is because directions are now set in transceivers.\n  delete options.mediaDirections\n\n  return new Promise((resolve, reject) => {\n    nativePeer\n      .createOffer(options)\n      .then(offer => {\n        const sdpHandlers = []\n        if (config.trickleIceMode === PEER.TRICKLE_ICE.NONE) {\n          // Modify the offer to claim the Peer doesn't support trickle ICE.\n          sdpHandlers.push(removeTrickleIce)\n        }\n        if (config.removeBundling) {\n          // Modify the offer to remove media bundling\n          sdpHandlers.push(removeBundling)\n        }\n        if (options.mediaDirections) {\n          // Modify the offer to set media directions as desired.\n          sdpHandlers.push(changeMediaDirection(options.mediaDirections))\n        }\n        if (sdpHandlers.length > 0) {\n          // Run the SDP pipeline with only these handlers.\n          offer.sdp = runPipeline(sdpHandlers, offer.sdp, {\n            type: offer.type,\n            endpoint: PEER.ENDPOINT.LOCAL\n          })\n        }\n\n        log.info('Finished creating local offer.')\n        resolve(offer)\n      })\n      .catch(reject)\n  })\n}\n","/**\n * Finds a transceiver that can be reused.\n * A transceiver can be reused if it satisfies the following conditions:\n *   - it does not have a track on its sender\n *   - it has the same kind (audio or video) as what we specified\n *   - it has been used before (if it has not been used then we are not \"reusing\" it)\n * @method findReusableTransceiver\n * @param {string} kind The kind of transceiver to find (audio or video)\n * @returns {Object} Transceiver object that matches kind, has no sender track, and has currentDirection. Otherwise undefined.\n */\nexport default function findReusableTransceiver (kind) {\n  const { proxyPeer } = this\n\n  const transceivers = proxyPeer.getTransceivers()\n  return transceivers.find(\n    transceiver =>\n      transceiver.sender.track == null &&\n      transceiver.receiver &&\n      transceiver.receiver.track &&\n      transceiver.receiver.track.kind === kind &&\n      transceiver.currentDirection // If this has been set, then transceiver has been used before.\n  )\n}\n","/**\n * Retrieve a snapshot of the Peer object's current state.\n * @method getState\n * @return {Object}\n */\nexport default function getState () {\n  const { proxyPeer, config, id } = this\n\n  return {\n    id,\n    config: config,\n    localDesc: proxyPeer.localDescription,\n    signalingState: proxyPeer.signalingState,\n    localTracks: proxyPeer.localTracks,\n    remoteTracks: proxyPeer.remoteTracks,\n    senderTracks: proxyPeer.senderTracks\n  }\n}\n","/**\n * Retrieve RTCStatsReport for a sender or the peerConnection.\n * @method getStats\n * @param {string} [TrackId] Return stats for peerConnection if trackId is not provided\n * @return {Promise} Resolves with the RTCStatsReport\n */\nexport default function getStats (trackId) {\n  const { nativePeer, proxyPeer, log } = this\n  log.info(`Getting stats ${trackId ? 'for track.' : '.'}`)\n  // If no trackId is supplied, get the stats from the RTCPeerConnection. Otherwise, find an RTCSender\n  // associated with the trackId and get the stats from it.\n\n  // Use the trackId if it was provided\n  if (trackId) {\n    return new Promise((resolve, reject) => {\n      const senders = proxyPeer.getSenders()\n      // search for a sender associated with the trackId\n      const sender = senders.find(sender => sender.track.id === trackId)\n      if (sender) {\n        sender\n          .getStats()\n          .then(resolve)\n          .catch(reject)\n      } else {\n        const errMsg = `Cannot find sender with trackId: ${trackId}`\n        log.info(errMsg)\n        reject(new Error(errMsg))\n      }\n    })\n  } else {\n    // get the stats associated with the peerConnection if no trackId is supplied\n    return nativePeer.getStats()\n  }\n}\n","/**\n * Remove a Track from the connection.\n * @method removeTrack\n * @param  {string} trackId An id for a Track object.\n */\nexport default function removeTrack (trackId) {\n  const { nativePeer, proxyPeer, log } = this\n  log.info(`Removing track ${trackId}.`)\n\n  const track = proxyPeer.senderTracks.find(track => track.id === trackId)\n  if (!track) {\n    log.info(`Invalid track ID ${trackId}; no such track found.`)\n    return\n  } else if (proxyPeer.signalingState === ' closed') {\n    log.info('Peer is closed; cannot remove track.')\n    return\n  }\n\n  // Get the RtpSender for the Track we want to remove.\n  const sender = proxyPeer\n    .getSenders()\n    .filter(sender => sender.track !== null)\n    .find(sender => sender.track.id === trackId)\n  nativePeer.removeTrack(sender)\n}\n","/**\n * Replaces a specified transceiver's sender.track.\n * @method replaceTrack\n * @param {Object} newTrack The MediaStreamTrack we want to place into the sender.\n * @param {Object} options Options for specifying which transceiver's sender should be replaced. They are ordered by priority.\n * @param {Array} [options.trackId] The track id whose transceivers we want to set the direction of.\n * @return {Object} A Promise object which is fulfilled once the track has been replaced\n */\nexport default function replaceTrack (newTrack, options) {\n  const { proxyPeer, log } = this\n  log.info(`Replacing track ${options.trackId} with new ${newTrack.kind} track.`)\n\n  return new Promise((resolve, reject) => {\n    // Find the transceiver related to the provided track ID.\n    const targetTransceiver = proxyPeer\n      .getTransceivers()\n      .find(transceiver => transceiver.sender.track && transceiver.sender.track.id === options.trackId)\n\n    const sender = targetTransceiver ? targetTransceiver.sender : undefined\n\n    if (sender) {\n      sender\n        .replaceTrack(newTrack)\n        .then(resolve)\n        .catch(error => {\n          log.info(`Failed to replace track; ${error.message}`)\n          reject(error)\n        })\n    } else {\n      log.info(`Failed to replace track; could not find track ${options.trackId}.`)\n      reject(new Error(`Sender for track ${options.trackId} not found.`))\n    }\n  })\n}\n","/**\n * Send DTMF tones.\n * @method sendDTMF\n * @param {Object} DTMFOptions The DTMF options.\n * @param {string} DTMFOptions.tone DTMF tone to send. Valid values are [0,1,2,3,4,5,6,7,8,9,#].\n * @param {number} DTMFOptions.duration=100 The amount of time, in milliseconds, that each DTMF tone should last.\n * @param {number} DTMFOptions.intertoneGap=70 The length of time, in milliseconds, to wait between tones.\n * @param {Object} [sendOptions] The send options.\n * @param {func} [sendOptions.callback] Optional callback for tone event .\n * @param {string} [sendOptions.trackId] The trackId of the sender to use.\n * @return {Boolean} Whether the DTMF tones were inserted\n */\nexport default function sendDTMF ({ tone, duration = 100, intertoneGap = 70 }, { callback, trackId }) {\n  const { proxyPeer, log } = this\n  log.info('Sending DTMF tones.', tone)\n\n  if (!proxyPeer.getSenders) {\n    log.info('Failed to send tones; getSenders is not supported by this browser.')\n    return false\n  }\n  const senders = proxyPeer.getSenders()\n  // Use the trackId if it was provided\n  if (trackId) {\n    const sender = senders.find(sender => sender.track.id === trackId)\n    if (!sender) {\n      log.info(`Failed to send tones; could not find track ${trackId}.`)\n      return false\n    }\n    insertDTMF(sender, tone, duration, intertoneGap, callback, log)\n    return true\n  } else {\n    let result\n    for (let i = 0; i < senders.length; i++) {\n      result = insertDTMF(senders[i], tone, duration, intertoneGap, callback, log)\n      if (result) {\n        return true\n      }\n    }\n\n    log.info('Failed to send tones; could not find an appropriate track.')\n    return false\n  }\n}\n\n/**\n * Helper function to sendDTMF tones .\n * @private\n * @method insertDTMF\n * @param {sender} object\n * @param {string} tone\n * @param {number} duration\n * @param {number} intertoneGap\n * @param {Function} callback\n */\nfunction insertDTMF (sender, tone, duration, intertoneGap, callback, log) {\n  /**\n   * Event handler when tone is played.\n   * @private\n   * @method handleToneChangeEvent\n   * @param  {event} event\n   */\n  function handleToneChangeEvent (event) {\n    if (event.tone !== '') {\n      log.debug('Tone played: ' + event.tone)\n    } else {\n      log.debug('All tones have played.')\n    }\n  }\n\n  if (sender.dtmf) {\n    const dtmfSender = sender.dtmf\n    if (callback) {\n      dtmfSender.ontonechange = callback\n    } else {\n      dtmfSender.ontonechange = handleToneChangeEvent\n    }\n    try {\n      dtmfSender.insertDTMF(tone, duration, intertoneGap)\n      return true\n    } catch (err) {\n      log.debug(err.message)\n      return false\n    }\n  } else {\n    log.debug('The sender requires DTMF which is not support by this browser.')\n    return false\n  }\n}\n","import { PEER } from '../../constants'\n\n// Utils.\nimport iceCollectionScheduledCheck from '../utils/iceCollectionScheduledCheck'\n\n/**\n * Sets an SDP as the local description of the connection.\n * The returned Promise will resolve when the Peer is ready for negotiation,\n *    taking into account the Peer's `trickleIceMode` configuration.\n * @method setLocalDescription\n * @param  {RTCSessionDescription} sessionDesc\n * @return {Promise}\n */\nexport default function setLocalDescription (desc) {\n  const { nativePeer, proxyPeer, config, id, emitter, iceTimer, log } = this\n\n  // TODO: SDP pipeline here.\n  log.info(`Setting local description ${desc.type} in ${proxyPeer.signalingState} state.`)\n  log.debug(`Setting local description ${desc.type}:`, desc.sdp)\n\n  /**\n   * Scenario: A local answer SDP is being applied to the Peer, but it does\n   *    not have a selected DTLS role yet. This should occur during initial\n   *    negotiation, before responding with this Peer's answer.\n   * Set the local Peer's DTLS role depending on what role was generated. This\n   *    role will be kept throughout all renegotiations.\n   */\n  if (!this.dtlsRole && desc.type === 'answer') {\n    const dtlsMatch = desc.sdp.match(/a=setup:(\\w*?)[\\r\\n]/)\n    if (dtlsMatch) {\n      log.debug(`Selecting DTLS role ${dtlsMatch[1]}.`)\n      this.dtlsRole = dtlsMatch[1]\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    // We always want to wait for the PeerConnection to be ready for\n    //    negotiation before resolving setLocalDescription.\n    // Each trickle ICE option (FULL/HALF/NONE) emits \"negotiation ready\" event once.\n    emitter.once('onnegotiationready', () => {\n      if (iceTimer.isStarted()) {\n        // In a HALF trickle scenario, the Peer will be ready for negotiation\n        //    before ICE collection has completed. Log that timing.\n        log.debug(`Took ${iceTimer.timeFromStart()}ms to collect ICE candidates before negotiation.`)\n      }\n      resolve()\n    })\n\n    nativePeer\n      .setLocalDescription(desc)\n      .then(() => {\n        log.info('Finished setting local description.')\n        log.debug(`State is now ${proxyPeer.signalingState}.`)\n\n        if (config.trickleIceMode === PEER.TRICKLE_ICE.FULL) {\n          // Trickling ICE candidates means that we can begin negotiation immediately.\n          log.debug('Ready for negotiation (full trickleICE).')\n          emitter.emit('onnegotiationready')\n        } else {\n          // ICE candidates aren't always gathered (only initially and when something\n          //    changes), but we rely on \"gathering complete\" to know when the Peer is\n          //    ready for negotiation. Give the Peer some time to start gathering\n          //    before deciding if we need to wait for gathering to complete or not.\n          // The timeout is needed because of a bug in Chrome:\n          //    https://bugs.chromium.org/p/webrtc/issues/detail?id=1873\n          // Known issue: If candidate collection takes less time than this timeout,\n          //    the logged message will be incorrect, but will functionally still work.\n          setTimeout(() => {\n            if (proxyPeer.iceGatheringState === 'complete') {\n              // Gathering is \"complete\", so we are ready for negotiation.\n              log.debug('Ready for negotiation; ICE candidate collection not needed.')\n              emitter.emit('onnegotiationready')\n            } else {\n              log.debug(`Waiting for ICE collection process (${config.trickleIceMode}).`)\n              // Register the ice collection check function callback to start the candidate collection\n              //  looping process\n              proxyPeer.isIceCollectionCheckOngoing = true\n              iceCollectionScheduledCheck(this)\n            }\n          }, 25)\n        }\n      })\n      .catch(err => {\n        log.info('Failed to set local description.')\n        log.debug(`Peer ${id}: ${err}`)\n        // Parse native error. Make it more understand and/or\n        //    provide a better log about what went wrong.\n        reject(err)\n      })\n  })\n}\n","/**\n * Sets an SDP as the remote description of the connection.\n * @method setRemoteDescription\n * @param  {RTCSessionDescription} sessionDesc\n */\nexport default function setRemoteDescription (desc) {\n  const { nativePeer, proxyPeer, id, log } = this\n\n  // TODO: SDP pipeline here.\n  log.info(`Setting remote description ${desc.type} in ${proxyPeer.signalingState} state.`)\n  log.debug(`Setting remote description ${desc.type}:`, desc.sdp)\n\n  /**\n   * Scenario: A remote answer SDP is being applied to the Peer, but it does\n   *    not have a selected DTLS role yet. This should occur only when the\n   *    initial negotiation is being completed.\n   * Set the local Peer's DTLS role depending on what the remote Peer\n   *    selected. This role will be kept throughout all renegotiations.\n   */\n  if (!this.dtlsRole && desc.type === 'answer') {\n    const dtlsMatch = desc.sdp.match(/a=setup:(\\w*?)[\\r\\n]/)\n    if (dtlsMatch) {\n      const localRole = dtlsMatch[1] === 'active' ? 'passive' : 'active'\n      log.debug(`Selecting DTLS role ${localRole}. Remote Peer selected ${dtlsMatch[1]} DTLS role.`)\n      this.dtlsRole = localRole\n    }\n  }\n\n  // TODO: Update `config.trickleIceMode` to either NONE or FULL (from HALF)\n  //    depending on remote support, since HALF is only needed for initial.\n  return new Promise((resolve, reject) => {\n    nativePeer\n      .setRemoteDescription(desc)\n      .then(() => {\n        log.info('Finished setting remote description.')\n        log.debug(`State is now ${proxyPeer.signalingState}.`)\n        resolve()\n      })\n      .catch(err => {\n        log.info('Failed to set remote description.')\n        log.debug(`Peer ${id}: ${err}`)\n        // Parse native error. Make it more understand and/or\n        //    provide a better log about what went wrong.\n        reject(err)\n      })\n  })\n}\n","import localDescription from './localDescription'\nimport localTracks from './localTracks'\nimport remoteDescription from './remoteDescription'\nimport remoteTracks from './remoteTracksActive'\nimport remoteTracksAll from './remoteTracks'\nimport senderTracks from './senderTracks'\n\nexport default { localDescription, localTracks, remoteDescription, remoteTracks, remoteTracksAll, senderTracks }\n","/**\n * The SDP for the local end of the connection.\n * @method getLocalDescription\n */\nexport default function getLocalDescription () {\n  const { nativePeer, log } = this\n  log.info('Getting local description.')\n\n  const localDesc = nativePeer.localDescription\n  /*\n   * Ensure it is a RTCSessionDescription object.\n   * In some scenarios (based on browser?), it may return an empty object\n   *    instead of undefined when there is no local description.\n   * TODO: Determine if this is still needed, or if we can use the native\n   *    property directly.\n   */\n  if (localDesc && localDesc.sdp && localDesc.type) {\n    return localDesc\n  } else {\n    return undefined\n  }\n}\n","/**\n * @method getLocalTracks\n * @return {Array} List of active Track objects added to the Peer locally.\n */\nexport default function localTracks () {\n  const { proxyPeer, trackManager, log } = this\n  log.info('Getting local tracks.')\n\n  // Return the list of Tracks from active senders.\n  return (\n    proxyPeer\n      .getSenders()\n      /**\n       * Remove any Senders that do not have an associated track.\n       * We only want to retrieve Senders that do have tracks, because those are\n       *    the local tracks that have been added to the Peer.\n       * Senders without tracks are part of a Transceiver where the Receiver has\n       *    a remote track, but no local track has been added to it. We don't\n       *    care about this for the \"get local tracks\" operation.\n       */\n      .filter(sender => Boolean(sender.track))\n      .map(sender => trackManager.get(sender.track.id))\n      .filter(track => {\n        // Make sure the trackManager has the track and that its active.\n        // It's possible that Peer has the sender but not the actual track yet.\n        return track && track.getState().state === 'live' && track.getStream().active\n      })\n  )\n}\n","/**\n * The SDP for the remote end of the connection.\n * @method getRemoteDescription\n */\nexport default function getRemoteDescription () {\n  const { nativePeer, log } = this\n  log.info('Getting remote description.')\n\n  const remoteDesc = nativePeer.remoteDescription\n  /*\n   * Ensure it is a RTCSessionDescription object.\n   * In some scenarios (based on browser?), it may return an empty object\n   *    instead of undefined when there is no local description.\n   * TODO: Determine if this is still needed, or if we can use the native\n   *    property directly.\n   */\n  if (remoteDesc && remoteDesc.sdp && remoteDesc.type) {\n    return remoteDesc\n  } else {\n    return undefined\n  }\n}\n","/**\n * @method getRemoteTracks\n * @return {Array} List of active Track objects the Peer has received remotely.\n */\nexport default function getRemoteTracks () {\n  const { proxyPeer, trackManager, log } = this\n  log.info('Getting remote tracks.')\n\n  // Return the list of Tracks from active receivers.\n  return (\n    proxyPeer\n      .getReceivers()\n      /**\n       * Remove any Receivers that do not have an associated track.\n       * We only want to retrieve Receivers that do have tracks, because those are\n       *    the remote tracks that have been added to the Peer.\n       * Receivers without tracks are part of a Transceiver where the Sender has\n       *    a local track, but no remote track has been added to it. We don't\n       *    care about this for the \"get remote tracks\" operation.\n       */\n      .filter(receiver => Boolean(receiver.track))\n      .map(receiver => trackManager.get(receiver.track.id))\n      .filter(track => {\n        // Make sure the trackManager has the track and that its active.\n        // It's possible that Peer has the receiver but not the actual track yet.\n        return track && track.getState().state === 'live' && track.getStream().active\n      })\n  )\n}\n","/**\n * @method getRemoteTracks\n * @return {Array} List of active Track objects the Peer has received remotely.\n */\nexport default function getRemoteTracks () {\n  const { proxyPeer, trackManager, log } = this\n  log.info('Getting remote tracks.')\n\n  // Return the list of Tracks from active receivers.\n  return (\n    proxyPeer\n      .getReceivers()\n      /**\n       * Remove any Receivers that do not have an associated track.\n       * We only want to retrieve Receivers that do have tracks, because those are\n       *    the remote tracks that have been added to the Peer.\n       * Receivers without tracks are part of a Transceiver where the Sender has\n       *    a local track, but no remote track has been added to it. We don't\n       *    care about this for the \"get remote tracks\" operation.\n       */\n      .filter(receiver => Boolean(receiver.track))\n      .map(receiver => trackManager.get(receiver.track.id))\n      .filter(track => {\n        // Make sure the trackManager has the track\n        return track && track.getState().state === 'live'\n      })\n  )\n}\n","/**\n * This method is similar to the `localTracks` method, however this method returns\n *  all of the sender's tracks (ended or not) rather than just the active/live ones.\n *\n * @method senderTracks\n * @return {Array} List of Track objects added to the Peer locally.\n */\nexport default function senderTracks () {\n  const { proxyPeer, log } = this\n  log.info('Getting sender tracks.')\n\n  // Return the list of Tracks from senders.\n  return (\n    proxyPeer\n      .getSenders()\n      /**\n       * Remove any Senders that do not have an associated track.\n       * We only want to retrieve Senders that do have tracks, because those are\n       *    the local tracks that have been added to the Peer.\n       * Senders without tracks are part of a Transceiver where the Receiver has\n       *    a remote track, but no local track has been added to it. We don't\n       *    care about this for the \"get local tracks\" operation.\n       */\n      .filter(sender => Boolean(sender.track))\n      .map(sender => sender.track)\n  )\n}\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.adapter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nvar _adapter_factory = require('./adapter_factory.js');\n\nvar adapter = (0, _adapter_factory.adapterFactory)({ window: typeof window === 'undefined' ? undefined : window });\nmodule.exports = adapter; // this is the difference from adapter_core.\n\n},{\"./adapter_factory.js\":2}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adapterFactory = adapterFactory;\n\nvar _utils = require('./utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _chrome_shim = require('./chrome/chrome_shim');\n\nvar chromeShim = _interopRequireWildcard(_chrome_shim);\n\nvar _firefox_shim = require('./firefox/firefox_shim');\n\nvar firefoxShim = _interopRequireWildcard(_firefox_shim);\n\nvar _safari_shim = require('./safari/safari_shim');\n\nvar safariShim = _interopRequireWildcard(_safari_shim);\n\nvar _common_shim = require('./common_shim');\n\nvar commonShim = _interopRequireWildcard(_common_shim);\n\nvar _sdp = require('sdp');\n\nvar sdp = _interopRequireWildcard(_sdp);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// Shimming starts here.\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nfunction adapterFactory() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      window = _ref.window;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    shimChrome: true,\n    shimFirefox: true,\n    shimSafari: true\n  };\n\n  // Utils.\n  var logging = utils.log;\n  var browserDetails = utils.detectBrowser(window);\n\n  var adapter = {\n    browserDetails: browserDetails,\n    commonShim: commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp: sdp\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection || !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection || !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n\n// Browser shims.\n\n},{\"./chrome/chrome_shim\":3,\"./common_shim\":6,\"./firefox/firefox_shim\":7,\"./safari/safari_shim\":10,\"./utils\":11,\"sdp\":12}],3:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shimGetDisplayMedia = exports.shimGetUserMedia = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _getusermedia = require('./getusermedia');\n\nObject.defineProperty(exports, 'shimGetUserMedia', {\n  enumerable: true,\n  get: function get() {\n    return _getusermedia.shimGetUserMedia;\n  }\n});\n\nvar _getdisplaymedia = require('./getdisplaymedia');\n\nObject.defineProperty(exports, 'shimGetDisplayMedia', {\n  enumerable: true,\n  get: function get() {\n    return _getdisplaymedia.shimGetDisplayMedia;\n  }\n});\nexports.shimMediaStream = shimMediaStream;\nexports.shimOnTrack = shimOnTrack;\nexports.shimGetSendersWithDtmf = shimGetSendersWithDtmf;\nexports.shimGetStats = shimGetStats;\nexports.shimSenderReceiverGetStats = shimSenderReceiverGetStats;\nexports.shimAddTrackRemoveTrackWithNative = shimAddTrackRemoveTrackWithNative;\nexports.shimAddTrackRemoveTrack = shimAddTrackRemoveTrack;\nexports.shimPeerConnection = shimPeerConnection;\nexports.fixNegotiationNeeded = fixNegotiationNeeded;\n\nvar _utils = require('../utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nfunction shimOnTrack(window) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection && !('ontrack' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get: function get() {\n        return this._ontrack;\n      },\n      set: function set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n    var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n      var _this = this;\n\n      if (!this._ontrackpoly) {\n        this._ontrackpoly = function (e) {\n          // onaddstream does not fire when a track is added to an existing\n          // stream. But stream.onaddtrack is implemented so we use that.\n          e.stream.addEventListener('addtrack', function (te) {\n            var receiver = void 0;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = _this.getReceivers().find(function (r) {\n                return r.track && r.track.id === te.track.id;\n              });\n            } else {\n              receiver = { track: te.track };\n            }\n\n            var event = new Event('track');\n            event.track = te.track;\n            event.receiver = receiver;\n            event.transceiver = { receiver: receiver };\n            event.streams = [e.stream];\n            _this.dispatchEvent(event);\n          });\n          e.stream.getTracks().forEach(function (track) {\n            var receiver = void 0;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = _this.getReceivers().find(function (r) {\n                return r.track && r.track.id === track.id;\n              });\n            } else {\n              receiver = { track: track };\n            }\n            var event = new Event('track');\n            event.track = track;\n            event.receiver = receiver;\n            event.transceiver = { receiver: receiver };\n            event.streams = [e.stream];\n            _this.dispatchEvent(event);\n          });\n        };\n        this.addEventListener('addstream', this._ontrackpoly);\n      }\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver', { value: { receiver: e.receiver } });\n      }\n      return e;\n    });\n  }\n}\n\nfunction shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection && !('getSenders' in window.RTCPeerConnection.prototype) && 'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    var shimSenderWithDtmf = function shimSenderWithDtmf(pc, track) {\n      return {\n        track: track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n        var sender = origAddTrack.apply(this, arguments);\n        if (!sender) {\n          sender = shimSenderWithDtmf(this, track);\n          this._senders.push(sender);\n        }\n        return sender;\n      };\n\n      var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n        origRemoveTrack.apply(this, arguments);\n        var idx = this._senders.indexOf(sender);\n        if (idx !== -1) {\n          this._senders.splice(idx, 1);\n        }\n      };\n    }\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      var _this2 = this;\n\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(function (track) {\n        _this2._senders.push(shimSenderWithDtmf(_this2, track));\n      });\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n      var _this3 = this;\n\n      this._senders = this._senders || [];\n      origRemoveStream.apply(this, [stream]);\n\n      stream.getTracks().forEach(function (track) {\n        var sender = _this3._senders.find(function (s) {\n          return s.track === track;\n        });\n        if (sender) {\n          // remove sender\n          _this3._senders.splice(_this3._senders.indexOf(sender), 1);\n        }\n      });\n    };\n  } else if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection && 'getSenders' in window.RTCPeerConnection.prototype && 'createDTMFSender' in window.RTCPeerConnection.prototype && window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      var _this4 = this;\n\n      var senders = origGetSenders.apply(this, []);\n      senders.forEach(function (sender) {\n        return sender._pc = _this4;\n      });\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get: function get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nfunction shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  var origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    var _this5 = this;\n\n    var _arguments = Array.prototype.slice.call(arguments),\n        selector = _arguments[0],\n        onSucc = _arguments[1],\n        onErr = _arguments[2];\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n\n\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 || typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    var fixChromeStats_ = function fixChromeStats_(response) {\n      var standardReport = {};\n      var reports = response.result();\n      reports.forEach(function (report) {\n        var standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(function (name) {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    var makeMapStats = function makeMapStats(stats) {\n      return new Map(Object.keys(stats).map(function (key) {\n        return [key, stats[key]];\n      }));\n    };\n\n    if (arguments.length >= 2) {\n      var successCallbackWrapper_ = function successCallbackWrapper_(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_, selector]);\n    }\n\n    // promise-support\n    return new Promise(function (resolve, reject) {\n      origGetStats.apply(_this5, [function (response) {\n        resolve(makeMapStats(fixChromeStats_(response)));\n      }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nfunction shimSenderReceiverGetStats(window) {\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection && window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        var _this6 = this;\n\n        var senders = origGetSenders.apply(this, []);\n        senders.forEach(function (sender) {\n          return sender._pc = _this6;\n        });\n        return senders;\n      };\n    }\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        var sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      var sender = this;\n      return this._pc.getStats().then(function (result) {\n        return (\n          /* Note: this will include stats of all senders that\n           *   send a track with the same id as sender.track as\n           *   it is not possible to identify the RTCRtpSender.\n           */\n          utils.filterStats(result, sender.track, true)\n        );\n      });\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n        var _this7 = this;\n\n        var receivers = origGetReceivers.apply(this, []);\n        receivers.forEach(function (receiver) {\n          return receiver._pc = _this7;\n        });\n        return receivers;\n      };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      var receiver = this;\n      return this._pc.getStats().then(function (result) {\n        return utils.filterStats(result, receiver.track, false);\n      });\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype && 'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  var origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 && arguments[0] instanceof window.MediaStreamTrack) {\n      var track = arguments[0];\n      var sender = void 0;\n      var receiver = void 0;\n      var err = void 0;\n      this.getSenders().forEach(function (s) {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(function (r) {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || sender && receiver) {\n        return Promise.reject(new DOMException('There are more than one sender or receiver for the track.', 'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException('There is no sender or receiver for the track.', 'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nfunction shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n    var _this8 = this;\n\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    return Object.keys(this._shimmedLocalStreams).map(function (streamId) {\n      return _this8._shimmedLocalStreams[streamId][0];\n    });\n  };\n\n  var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n    if (!stream) {\n      return origAddTrack.apply(this, arguments);\n    }\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    var sender = origAddTrack.apply(this, arguments);\n    if (!this._shimmedLocalStreams[stream.id]) {\n      this._shimmedLocalStreams[stream.id] = [stream, sender];\n    } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n      this._shimmedLocalStreams[stream.id].push(sender);\n    }\n    return sender;\n  };\n\n  var origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    var _this9 = this;\n\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(function (track) {\n      var alreadyExists = _this9.getSenders().find(function (s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n    });\n    var existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    var newSenders = this.getSenders().filter(function (newSender) {\n      return existingSenders.indexOf(newSender) === -1;\n    });\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    delete this._shimmedLocalStreams[stream.id];\n    return origRemoveStream.apply(this, arguments);\n  };\n\n  var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    var _this10 = this;\n\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    if (sender) {\n      Object.keys(this._shimmedLocalStreams).forEach(function (streamId) {\n        var idx = _this10._shimmedLocalStreams[streamId].indexOf(sender);\n        if (idx !== -1) {\n          _this10._shimmedLocalStreams[streamId].splice(idx, 1);\n        }\n        if (_this10._shimmedLocalStreams[streamId].length === 1) {\n          delete _this10._shimmedLocalStreams[streamId];\n        }\n      });\n    }\n    return origRemoveTrack.apply(this, arguments);\n  };\n}\n\nfunction shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack && browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  var origGetLocalStreams = window.RTCPeerConnection.prototype.getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n    var _this11 = this;\n\n    var nativeStreams = origGetLocalStreams.apply(this);\n    this._reverseStreams = this._reverseStreams || {};\n    return nativeStreams.map(function (stream) {\n      return _this11._reverseStreams[stream.id];\n    });\n  };\n\n  var origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    var _this12 = this;\n\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(function (track) {\n      var alreadyExists = _this12.getSenders().find(function (s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      var newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    origRemoveStream.apply(this, [this._streams[stream.id] || stream]);\n    delete this._reverseStreams[this._streams[stream.id] ? this._streams[stream.id].id : stream.id];\n    delete this._streams[stream.id];\n  };\n\n  window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n    var _this13 = this;\n\n    if (this.signalingState === 'closed') {\n      throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n    }\n    var streams = [].slice.call(arguments, 1);\n    if (streams.length !== 1 || !streams[0].getTracks().find(function (t) {\n      return t === track;\n    })) {\n      // this is not fully correct but all we can manage without\n      // [[associated MediaStreams]] internal slot.\n      throw new DOMException('The adapter.js addTrack polyfill only supports a single ' + ' stream which is associated with the specified track.', 'NotSupportedError');\n    }\n\n    var alreadyExists = this.getSenders().find(function (s) {\n      return s.track === track;\n    });\n    if (alreadyExists) {\n      throw new DOMException('Track already exists.', 'InvalidAccessError');\n    }\n\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    var oldStream = this._streams[stream.id];\n    if (oldStream) {\n      // this is using odd Chrome behaviour, use with caution:\n      // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n      // Note: we rely on the high-level addTrack/dtmf shim to\n      // create the sender with a dtmf sender.\n      oldStream.addTrack(track);\n\n      // Trigger ONN async.\n      Promise.resolve().then(function () {\n        _this13.dispatchEvent(new Event('negotiationneeded'));\n      });\n    } else {\n      var newStream = new window.MediaStream([track]);\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      this.addStream(newStream);\n    }\n    return this.getSenders().find(function (s) {\n      return s.track === track;\n    });\n  };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    var sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n      var externalStream = pc._reverseStreams[internalId];\n      var internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'), externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp: sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    var sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n      var externalStream = pc._reverseStreams[internalId];\n      var internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'), internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp: sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function (method) {\n    var nativeMethod = window.RTCPeerConnection.prototype[method];\n    var methodObj = _defineProperty({}, method, function () {\n      var _this14 = this;\n\n      var args = arguments;\n      var isLegacyCall = arguments.length && typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [function (description) {\n          var desc = replaceInternalStreamId(_this14, description);\n          args[0].apply(null, [desc]);\n        }, function (err) {\n          if (args[1]) {\n            args[1].apply(null, err);\n          }\n        }, arguments[2]]);\n      }\n      return nativeMethod.apply(this, arguments).then(function (description) {\n        return replaceInternalStreamId(_this14, description);\n      });\n    });\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  var origSetLocalDescription = window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n    if (!arguments.length || !arguments[0].type) {\n      return origSetLocalDescription.apply(this, arguments);\n    }\n    arguments[0] = replaceExternalStreamId(this, arguments[0]);\n    return origSetLocalDescription.apply(this, arguments);\n  };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  var origLocalDescription = Object.getOwnPropertyDescriptor(window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype, 'localDescription', {\n    get: function get() {\n      var description = origLocalDescription.get.apply(this);\n      if (description.type === '') {\n        return description;\n      }\n      return replaceInternalStreamId(this, description);\n    }\n  });\n\n  window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    var _this15 = this;\n\n    if (this.signalingState === 'closed') {\n      throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n    }\n    // We can not yet check for sender instanceof RTCRtpSender\n    // since we shim RTPSender. So we check if sender._pc is set.\n    if (!sender._pc) {\n      throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' + 'does not implement interface RTCRtpSender.', 'TypeError');\n    }\n    var isLocal = sender._pc === this;\n    if (!isLocal) {\n      throw new DOMException('Sender was not created by this connection.', 'InvalidAccessError');\n    }\n\n    // Search for the native stream the senders track belongs to.\n    this._streams = this._streams || {};\n    var stream = void 0;\n    Object.keys(this._streams).forEach(function (streamid) {\n      var hasTrack = _this15._streams[streamid].getTracks().find(function (track) {\n        return sender.track === track;\n      });\n      if (hasTrack) {\n        stream = _this15._streams[streamid];\n      }\n    });\n\n    if (stream) {\n      if (stream.getTracks().length === 1) {\n        // if this is the last track of the stream, remove the stream. This\n        // takes care of any shimmed _senders.\n        this.removeStream(this._reverseStreams[stream.id]);\n      } else {\n        // relying on the same odd chrome behaviour as above.\n        stream.removeTrack(sender.track);\n      }\n      this.dispatchEvent(new Event('negotiationneeded'));\n    }\n  };\n}\n\nfunction shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      var methodObj = _defineProperty({}, method, function () {\n        arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n        return nativeMethod.apply(this, arguments);\n      });\n      window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nfunction fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', function (e) {\n    var pc = e.target;\n    if (browserDetails.version < 72 || pc.getConfiguration && pc.getConfiguration().sdpSemantics === 'plan-b') {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n\n},{\"../utils.js\":11,\"./getdisplaymedia\":4,\"./getusermedia\":5}],4:[function(require,module,exports){\n/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shimGetDisplayMedia = shimGetDisplayMedia;\nfunction shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices && 'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!window.navigator.mediaDevices) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' + 'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function getDisplayMedia(constraints) {\n    return getSourceId(constraints).then(function (sourceId) {\n      var widthSpecified = constraints.video && constraints.video.width;\n      var heightSpecified = constraints.video && constraints.video.height;\n      var frameRateSpecified = constraints.video && constraints.video.frameRate;\n      constraints.video = {\n        mandatory: {\n          chromeMediaSource: 'desktop',\n          chromeMediaSourceId: sourceId,\n          maxFrameRate: frameRateSpecified || 3\n        }\n      };\n      if (widthSpecified) {\n        constraints.video.mandatory.maxWidth = widthSpecified;\n      }\n      if (heightSpecified) {\n        constraints.video.mandatory.maxHeight = heightSpecified;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    });\n  };\n}\n\n},{}],5:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.shimGetUserMedia = shimGetUserMedia;\n\nvar _utils = require('../utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar logging = utils.log;\n\nfunction shimGetUserMedia(window, browserDetails) {\n  var navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  var constraintsToChrome_ = function constraintsToChrome_(c) {\n    if ((typeof c === 'undefined' ? 'undefined' : _typeof(c)) !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function (key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = _typeof(c[key]) === 'object' ? c[key] : { ideal: c[key] };\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname_ = function oldname_(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return name === 'deviceId' ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function (mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  var shimConstraints_ = function shimConstraints_(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && _typeof(constraints.audio) === 'object') {\n      var remap = function remap(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && _typeof(constraints.video) === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      var face = constraints.video.facingMode;\n      face = face && ((typeof face === 'undefined' ? 'undefined' : _typeof(face)) === 'object' ? face : { ideal: face });\n      var getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if (face && (face.exact === 'user' || face.exact === 'environment' || face.ideal === 'user' || face.ideal === 'environment') && !(navigator.mediaDevices.getSupportedConstraints && navigator.mediaDevices.getSupportedConstraints().facingMode && !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        var matches = void 0;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices().then(function (devices) {\n            devices = devices.filter(function (d) {\n              return d.kind === 'videoinput';\n            });\n            var dev = devices.find(function (d) {\n              return matches.some(function (match) {\n                return d.label.toLowerCase().includes(match);\n              });\n            });\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? { exact: dev.deviceId } : { ideal: dev.deviceId };\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function shimError_(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString: function toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function getUserMedia_(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function (c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function (e) {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function (cs) {\n      return shimConstraints_(cs, function (c) {\n        return origGetUserMedia(c).then(function (stream) {\n          if (c.audio && !stream.getAudioTracks().length || c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function (track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n          return stream;\n        }, function (e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  }\n}\n\n},{\"../utils.js\":11}],6:[function(require,module,exports){\n/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.shimRTCIceCandidate = shimRTCIceCandidate;\nexports.shimRTCIceCandidateRelayProtocol = shimRTCIceCandidateRelayProtocol;\nexports.shimMaxMessageSize = shimMaxMessageSize;\nexports.shimSendThrowTypeError = shimSendThrowTypeError;\nexports.shimConnectionState = shimConnectionState;\nexports.removeExtmapAllowMixed = removeExtmapAllowMixed;\nexports.shimAddIceCandidateNullOrEmpty = shimAddIceCandidateNullOrEmpty;\nexports.shimParameterlessSetLocalDescription = shimParameterlessSetLocalDescription;\n\nvar _sdp = require('sdp');\n\nvar _sdp2 = _interopRequireDefault(_sdp);\n\nvar _utils = require('./utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || window.RTCIceCandidate && 'foundation' in window.RTCIceCandidate.prototype) {\n    return;\n  }\n\n  var NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if ((typeof args === 'undefined' ? 'undefined' : _typeof(args)) === 'object' && args.candidate && args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substring(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      var nativeCandidate = new NativeRTCIceCandidate(args);\n      var parsedCandidate = _sdp2.default.parseCandidate(args.candidate);\n      var augmentedCandidate = Object.assign(nativeCandidate, parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', function (e) {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nfunction shimRTCIceCandidateRelayProtocol(window) {\n  if (!window.RTCIceCandidate || window.RTCIceCandidate && 'relayProtocol' in window.RTCIceCandidate.prototype) {\n    return;\n  }\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', function (e) {\n    if (e.candidate) {\n      var parsedCandidate = _sdp2.default.parseCandidate(e.candidate.candidate);\n      if (parsedCandidate.type === 'relay') {\n        // This is a libwebrtc-specific mapping of local type preference\n        // to relayProtocol.\n        e.candidate.relayProtocol = {\n          0: 'tls',\n          1: 'tcp',\n          2: 'udp'\n        }[parsedCandidate.priority >> 24];\n      }\n    }\n    return e;\n  });\n}\n\nfunction shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get: function get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  var sctpInDescription = function sctpInDescription(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    var sections = _sdp2.default.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(function (mediaSection) {\n      var mLine = _sdp2.default.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application' && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  var getRemoteFirefoxVersion = function getRemoteFirefoxVersion(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    var match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    var version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  var getCanSendMaxMessageSize = function getCanSendMaxMessageSize(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    var canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize = browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  var getMaxMessageSize = function getMaxMessageSize(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    var maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox' && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    var match = _sdp2.default.matchPrefix(description.sdp, 'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substring(19), 10);\n    } else if (browserDetails.browser === 'firefox' && remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n    this._sctp = null;\n    // Chrome decided to not expose .sctp in plan-b mode.\n    // As usual, adapter.js has to do an 'ugly worakaround'\n    // to cover up the mess.\n    if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n      var _getConfiguration = this.getConfiguration(),\n          sdpSemantics = _getConfiguration.sdpSemantics;\n\n      if (sdpSemantics === 'plan-b') {\n        Object.defineProperty(this, 'sctp', {\n          get: function get() {\n            return typeof this._sctp === 'undefined' ? null : this._sctp;\n          },\n\n          enumerable: true,\n          configurable: true\n        });\n      }\n    }\n\n    if (sctpInDescription(arguments[0])) {\n      // Check if the remote is FF.\n      var isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n      // Get the maximum message size the local peer is capable of sending\n      var canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n      // Get the maximum message size of the remote peer.\n      var remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n      // Determine final maximum message size\n      var maxMessageSize = void 0;\n      if (canSendMMS === 0 && remoteMMS === 0) {\n        maxMessageSize = Number.POSITIVE_INFINITY;\n      } else if (canSendMMS === 0 || remoteMMS === 0) {\n        maxMessageSize = Math.max(canSendMMS, remoteMMS);\n      } else {\n        maxMessageSize = Math.min(canSendMMS, remoteMMS);\n      }\n\n      // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n      // attribute.\n      var sctp = {};\n      Object.defineProperty(sctp, 'maxMessageSize', {\n        get: function get() {\n          return maxMessageSize;\n        }\n      });\n      this._sctp = sctp;\n    }\n\n    return origSetRemoteDescription.apply(this, arguments);\n  };\n}\n\nfunction shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection && 'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    var origDataChannelSend = dc.send;\n    dc.send = function send() {\n      var data = arguments[0];\n      var length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' && pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' + pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  var origCreateDataChannel = window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel = function createDataChannel() {\n    var dataChannel = origCreateDataChannel.apply(this, arguments);\n    wrapDcSend(dataChannel, this);\n    return dataChannel;\n  };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', function (e) {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nfunction shimConnectionState(window) {\n  if (!window.RTCPeerConnection || 'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get: function get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get: function get() {\n      return this._onconnectionstatechange || null;\n    },\n    set: function set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange', this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange', this._onconnectionstatechange = cb);\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach(function (method) {\n    var origMethod = proto[method];\n    proto[method] = function () {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = function (e) {\n          var pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            var newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange', this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nfunction removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  var nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      var sdp = desc.sdp.split('\\n').filter(function (line) {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription && desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp: sdp\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nfunction shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  var nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate = function addIceCandidate() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n    // in older versions.\n    // Native support for ignoring exists for Chrome M77+.\n    // Safari ignores as well, exact version unknown but works in the same\n    // version that also ignores addIceCandidate(null).\n    if ((browserDetails.browser === 'chrome' && browserDetails.version < 78 || browserDetails.browser === 'firefox' && browserDetails.version < 68 || browserDetails.browser === 'safari') && arguments[0] && arguments[0].candidate === '') {\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n}\n\n// Note: Make sure to call this ahead of APIs that modify\n// setLocalDescription.length\nfunction shimParameterlessSetLocalDescription(window, browserDetails) {\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  var nativeSetLocalDescription = window.RTCPeerConnection.prototype.setLocalDescription;\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n    var _this = this;\n\n    var desc = arguments[0] || {};\n    if ((typeof desc === 'undefined' ? 'undefined' : _typeof(desc)) !== 'object' || desc.type && desc.sdp) {\n      return nativeSetLocalDescription.apply(this, arguments);\n    }\n    // The remaining steps should technically happen when SLD comes off the\n    // RTCPeerConnection's operations chain (not ahead of going on it), but\n    // this is too difficult to shim. Instead, this shim only covers the\n    // common case where the operations chain is empty. This is imperfect, but\n    // should cover many cases. Rationale: Even if we can't reduce the glare\n    // window to zero on imperfect implementations, there's value in tapping\n    // into the perfect negotiation pattern that several browsers support.\n    desc = { type: desc.type, sdp: desc.sdp };\n    if (!desc.type) {\n      switch (this.signalingState) {\n        case 'stable':\n        case 'have-local-offer':\n        case 'have-remote-pranswer':\n          desc.type = 'offer';\n          break;\n        default:\n          desc.type = 'answer';\n          break;\n      }\n    }\n    if (desc.sdp || desc.type !== 'offer' && desc.type !== 'answer') {\n      return nativeSetLocalDescription.apply(this, [desc]);\n    }\n    var func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n    return func.apply(this).then(function (d) {\n      return nativeSetLocalDescription.apply(_this, [d]);\n    });\n  };\n}\n\n},{\"./utils\":11,\"sdp\":12}],7:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shimGetDisplayMedia = exports.shimGetUserMedia = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _getusermedia = require('./getusermedia');\n\nObject.defineProperty(exports, 'shimGetUserMedia', {\n  enumerable: true,\n  get: function get() {\n    return _getusermedia.shimGetUserMedia;\n  }\n});\n\nvar _getdisplaymedia = require('./getdisplaymedia');\n\nObject.defineProperty(exports, 'shimGetDisplayMedia', {\n  enumerable: true,\n  get: function get() {\n    return _getdisplaymedia.shimGetDisplayMedia;\n  }\n});\nexports.shimOnTrack = shimOnTrack;\nexports.shimPeerConnection = shimPeerConnection;\nexports.shimSenderGetStats = shimSenderGetStats;\nexports.shimReceiverGetStats = shimReceiverGetStats;\nexports.shimRemoveStream = shimRemoveStream;\nexports.shimRTCDataChannel = shimRTCDataChannel;\nexports.shimAddTransceiver = shimAddTransceiver;\nexports.shimGetParameters = shimGetParameters;\nexports.shimCreateOffer = shimCreateOffer;\nexports.shimCreateAnswer = shimCreateAnswer;\n\nvar _utils = require('../utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction shimOnTrack(window) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get: function get() {\n        return { receiver: this.receiver };\n      }\n    });\n  }\n}\n\nfunction shimPeerConnection(window, browserDetails) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object' || !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      var methodObj = _defineProperty({}, method, function () {\n        arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n        return nativeMethod.apply(this, arguments);\n      });\n      window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n  }\n\n  var modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    var _arguments = Array.prototype.slice.call(arguments),\n        selector = _arguments[0],\n        onSucc = _arguments[1],\n        onErr = _arguments[2];\n\n    return nativeGetStats.apply(this, [selector || null]).then(function (stats) {\n      if (browserDetails.version < 53 && !onSucc) {\n        // Shim only promise getStats with spec-hyphens in type names\n        // Leave callback version alone; misc old uses of forEach before Map\n        try {\n          stats.forEach(function (stat) {\n            stat.type = modernStatsTypes[stat.type] || stat.type;\n          });\n        } catch (e) {\n          if (e.name !== 'TypeError') {\n            throw e;\n          }\n          // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n          stats.forEach(function (stat, i) {\n            stats.set(i, Object.assign({}, stat, {\n              type: modernStatsTypes[stat.type] || stat.type\n            }));\n          });\n        }\n      }\n      return stats;\n    }).then(onSucc, onErr);\n  };\n}\n\nfunction shimSenderGetStats(window) {\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      var _this = this;\n\n      var senders = origGetSenders.apply(this, []);\n      senders.forEach(function (sender) {\n        return sender._pc = _this;\n      });\n      return senders;\n    };\n  }\n\n  var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      var sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map());\n  };\n}\n\nfunction shimReceiverGetStats(window) {\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      var _this2 = this;\n\n      var receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(function (receiver) {\n        return receiver._pc = _this2;\n      });\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nfunction shimRemoveStream(window) {\n  if (!window.RTCPeerConnection || 'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    var _this3 = this;\n\n    utils.deprecated('removeStream', 'removeTrack');\n    this.getSenders().forEach(function (sender) {\n      if (sender.track && stream.getTracks().includes(sender.track)) {\n        _this3.removeTrack(sender);\n      }\n    });\n  };\n}\n\nfunction shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nfunction shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  var origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver = function addTransceiver() {\n      this.setParametersPromises = [];\n      // WebIDL input coercion and validation\n      var sendEncodings = arguments[1] && arguments[1].sendEncodings;\n      if (sendEncodings === undefined) {\n        sendEncodings = [];\n      }\n      sendEncodings = [].concat(_toConsumableArray(sendEncodings));\n      var shouldPerformCheck = sendEncodings.length > 0;\n      if (shouldPerformCheck) {\n        // If sendEncodings params are provided, validate grammar\n        sendEncodings.forEach(function (encodingParam) {\n          if ('rid' in encodingParam) {\n            var ridRegex = /^[a-z0-9]{0,16}$/i;\n            if (!ridRegex.test(encodingParam.rid)) {\n              throw new TypeError('Invalid RID value provided.');\n            }\n          }\n          if ('scaleResolutionDownBy' in encodingParam) {\n            if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n              throw new RangeError('scale_resolution_down_by must be >= 1.0');\n            }\n          }\n          if ('maxFramerate' in encodingParam) {\n            if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n              throw new RangeError('max_framerate must be >= 0.0');\n            }\n          }\n        });\n      }\n      var transceiver = origAddTransceiver.apply(this, arguments);\n      if (shouldPerformCheck) {\n        // Check if the init options were applied. If not we do this in an\n        // asynchronous way and save the promise reference in a global object.\n        // This is an ugly hack, but at the same time is way more robust than\n        // checking the sender parameters before and after the createOffer\n        // Also note that after the createoffer we are not 100% sure that\n        // the params were asynchronously applied so we might miss the\n        // opportunity to recreate offer.\n        var sender = transceiver.sender;\n\n        var params = sender.getParameters();\n        if (!('encodings' in params) ||\n        // Avoid being fooled by patched getParameters() below.\n        params.encodings.length === 1 && Object.keys(params.encodings[0]).length === 0) {\n          params.encodings = sendEncodings;\n          sender.sendEncodings = sendEncodings;\n          this.setParametersPromises.push(sender.setParameters(params).then(function () {\n            delete sender.sendEncodings;\n          }).catch(function () {\n            delete sender.sendEncodings;\n          }));\n        }\n      }\n      return transceiver;\n    };\n  }\n}\n\nfunction shimGetParameters(window) {\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  var origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters = function getParameters() {\n      var params = origGetParameters.apply(this, arguments);\n      if (!('encodings' in params)) {\n        params.encodings = [].concat(this.sendEncodings || [{}]);\n      }\n      return params;\n    };\n  }\n}\n\nfunction shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    var _this4 = this,\n        _arguments2 = arguments;\n\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises).then(function () {\n        return origCreateOffer.apply(_this4, _arguments2);\n      }).finally(function () {\n        _this4.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nfunction shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  var origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    var _this5 = this,\n        _arguments3 = arguments;\n\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises).then(function () {\n        return origCreateAnswer.apply(_this5, _arguments3);\n      }).finally(function () {\n        _this5.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n\n},{\"../utils\":11,\"./getdisplaymedia\":8,\"./getusermedia\":9}],8:[function(require,module,exports){\n/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shimGetDisplayMedia = shimGetDisplayMedia;\nfunction shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices && 'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function getDisplayMedia(constraints) {\n    if (!(constraints && constraints.video)) {\n      var err = new DOMException('getDisplayMedia without video ' + 'constraints is undefined');\n      err.name = 'NotFoundError';\n      // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n      err.code = 8;\n      return Promise.reject(err);\n    }\n    if (constraints.video === true) {\n      constraints.video = { mediaSource: preferredMediaSource };\n    } else {\n      constraints.video.mediaSource = preferredMediaSource;\n    }\n    return window.navigator.mediaDevices.getUserMedia(constraints);\n  };\n}\n\n},{}],9:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.shimGetUserMedia = shimGetUserMedia;\n\nvar _utils = require('../utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction shimGetUserMedia(window, browserDetails) {\n  var navigator = window && window.navigator;\n  var MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function (constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia', 'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 && 'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    var remap = function remap(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function (c) {\n      if ((typeof c === 'undefined' ? 'undefined' : _typeof(c)) === 'object' && _typeof(c.audio) === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function () {\n        var obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function (c) {\n        if (this.kind === 'audio' && (typeof c === 'undefined' ? 'undefined' : _typeof(c)) === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n\n},{\"../utils\":11}],10:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.shimLocalStreamsAPI = shimLocalStreamsAPI;\nexports.shimRemoteStreamsAPI = shimRemoteStreamsAPI;\nexports.shimCallbacksAPI = shimCallbacksAPI;\nexports.shimGetUserMedia = shimGetUserMedia;\nexports.shimConstraints = shimConstraints;\nexports.shimRTCIceServerUrls = shimRTCIceServerUrls;\nexports.shimTrackEventTransceiver = shimTrackEventTransceiver;\nexports.shimCreateOfferLegacy = shimCreateOfferLegacy;\nexports.shimAudioContext = shimAudioContext;\n\nvar _utils = require('../utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction shimLocalStreamsAPI(window) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      return this._localStreams;\n    };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    var _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      var _this = this;\n\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(function (track) {\n        return _addTrack.call(_this, track, stream);\n      });\n      stream.getVideoTracks().forEach(function (track) {\n        return _addTrack.call(_this, track, stream);\n      });\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      for (var _len = arguments.length, streams = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        streams[_key - 1] = arguments[_key];\n      }\n\n      if (streams) {\n        streams.forEach(function (stream) {\n          if (!_this2._localStreams) {\n            _this2._localStreams = [stream];\n          } else if (!_this2._localStreams.includes(stream)) {\n            _this2._localStreams.push(stream);\n          }\n        });\n      }\n      return _addTrack.apply(this, arguments);\n    };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n      var _this3 = this;\n\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      var index = this._localStreams.indexOf(stream);\n      if (index === -1) {\n        return;\n      }\n      this._localStreams.splice(index, 1);\n      var tracks = stream.getTracks();\n      this.getSenders().forEach(function (sender) {\n        if (tracks.includes(sender.track)) {\n          _this3.removeTrack(sender);\n        }\n      });\n    };\n  }\n}\n\nfunction shimRemoteStreamsAPI(window) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams = function getRemoteStreams() {\n      return this._remoteStreams ? this._remoteStreams : [];\n    };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get: function get() {\n        return this._onaddstream;\n      },\n      set: function set(f) {\n        var _this4 = this;\n\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = function (e) {\n          e.streams.forEach(function (stream) {\n            if (!_this4._remoteStreams) {\n              _this4._remoteStreams = [];\n            }\n            if (_this4._remoteStreams.includes(stream)) {\n              return;\n            }\n            _this4._remoteStreams.push(stream);\n            var event = new Event('addstream');\n            event.stream = stream;\n            _this4.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n      var pc = this;\n      if (!this._onaddstreampoly) {\n        this.addEventListener('track', this._onaddstreampoly = function (e) {\n          e.streams.forEach(function (stream) {\n            if (!pc._remoteStreams) {\n              pc._remoteStreams = [];\n            }\n            if (pc._remoteStreams.indexOf(stream) >= 0) {\n              return;\n            }\n            pc._remoteStreams.push(stream);\n            var event = new Event('addstream');\n            event.stream = stream;\n            pc.dispatchEvent(event);\n          });\n        });\n      }\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  }\n}\n\nfunction shimCallbacksAPI(window) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  var prototype = window.RTCPeerConnection.prototype;\n  var origCreateOffer = prototype.createOffer;\n  var origCreateAnswer = prototype.createAnswer;\n  var setLocalDescription = prototype.setLocalDescription;\n  var setRemoteDescription = prototype.setRemoteDescription;\n  var addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer = function createOffer(successCallback, failureCallback) {\n    var options = arguments.length >= 2 ? arguments[2] : arguments[0];\n    var promise = origCreateOffer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  prototype.createAnswer = function createAnswer(successCallback, failureCallback) {\n    var options = arguments.length >= 2 ? arguments[2] : arguments[0];\n    var promise = origCreateAnswer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  var withCallback = function withCallback(description, successCallback, failureCallback) {\n    var promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function withCallback(description, successCallback, failureCallback) {\n    var promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function withCallback(candidate, successCallback, failureCallback) {\n    var promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nfunction shimGetUserMedia(window) {\n  var navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    var mediaDevices = navigator.mediaDevices;\n    var _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = function (constraints) {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints).then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nfunction shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({}, constraints, { video: utils.compactObject(constraints.video) });\n  }\n\n  return constraints;\n}\n\nfunction shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  var OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection = function RTCPeerConnection(pcConfig, pcConstraints) {\n    if (pcConfig && pcConfig.iceServers) {\n      var newIceServers = [];\n      for (var i = 0; i < pcConfig.iceServers.length; i++) {\n        var server = pcConfig.iceServers[i];\n        if (server.urls === undefined && server.url) {\n          utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n          server = JSON.parse(JSON.stringify(server));\n          server.urls = server.url;\n          delete server.url;\n          newIceServers.push(server);\n        } else {\n          newIceServers.push(pcConfig.iceServers[i]);\n        }\n      }\n      pcConfig.iceServers = newIceServers;\n    }\n    return new OrigPeerConnection(pcConfig, pcConstraints);\n  };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get: function get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nfunction shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get: function get() {\n        return { receiver: this.receiver };\n      }\n    });\n  }\n}\n\nfunction shimCreateOfferLegacy(window) {\n  var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer(offerOptions) {\n    if (offerOptions) {\n      if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n      }\n      var audioTransceiver = this.getTransceivers().find(function (transceiver) {\n        return transceiver.receiver.track.kind === 'audio';\n      });\n      if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n        if (audioTransceiver.direction === 'sendrecv') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('sendonly');\n          } else {\n            audioTransceiver.direction = 'sendonly';\n          }\n        } else if (audioTransceiver.direction === 'recvonly') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('inactive');\n          } else {\n            audioTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveAudio === true && !audioTransceiver) {\n        this.addTransceiver('audio', { direction: 'recvonly' });\n      }\n\n      if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n      }\n      var videoTransceiver = this.getTransceivers().find(function (transceiver) {\n        return transceiver.receiver.track.kind === 'video';\n      });\n      if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n        if (videoTransceiver.direction === 'sendrecv') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('sendonly');\n          } else {\n            videoTransceiver.direction = 'sendonly';\n          }\n        } else if (videoTransceiver.direction === 'recvonly') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('inactive');\n          } else {\n            videoTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveVideo === true && !videoTransceiver) {\n        this.addTransceiver('video', { direction: 'recvonly' });\n      }\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nfunction shimAudioContext(window) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n\n},{\"../utils\":11}],11:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.extractVersion = extractVersion;\nexports.wrapPeerConnectionEvent = wrapPeerConnectionEvent;\nexports.disableLog = disableLog;\nexports.disableWarnings = disableWarnings;\nexports.log = log;\nexports.deprecated = deprecated;\nexports.detectBrowser = detectBrowser;\nexports.compactObject = compactObject;\nexports.walkStats = walkStats;\nexports.filterStats = filterStats;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nfunction extractVersion(uastring, expr, pos) {\n  var match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  var nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function (nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    var wrappedCallback = function wrappedCallback(e) {\n      var modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName, wrappedCallback]);\n  };\n\n  var nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function (nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    var unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName, unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get: function get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set: function set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap, this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap, this['_on' + eventNameToWrap] = cb);\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n}\n\nfunction disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + (typeof bool === 'undefined' ? 'undefined' : _typeof(bool)) + '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return bool ? 'adapter.js logging disabled' : 'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nfunction disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + (typeof bool === 'undefined' ? 'undefined' : _typeof(bool)) + '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nfunction log() {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nfunction deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod + ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nfunction detectBrowser(window) {\n  // Returned result object.\n  var result = { browser: null, version: null };\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  var navigator = window.navigator;\n\n\n  if (navigator.mozGetUserMedia) {\n    // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent, /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia || window.isSecureContext === false && window.webkitRTCPeerConnection) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent, /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (window.RTCPeerConnection && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n    // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent, /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver && 'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else {\n    // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nfunction compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function (accumulator, key) {\n    var isObj = isObject(data[key]);\n    var value = isObj ? compactObject(data[key]) : data[key];\n    var isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, _defineProperty({}, key, value));\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nfunction walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(function (name) {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(function (id) {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nfunction filterStats(result, track, outbound) {\n  var streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  var filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  var trackStats = [];\n  result.forEach(function (value) {\n    if (value.type === 'track' && value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(function (trackStat) {\n    result.forEach(function (stats) {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n},{}],12:[function(require,module,exports){\n/* eslint-env node */\n'use strict';\n\n// SDP helpers.\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function () {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function (blob) {\n  return blob.trim().split('\\n').map(function (line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function (blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function (part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function (blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function (blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function (blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function (line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function (line) {\n  var parts = void 0;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: { 1: 'rtp', 2: 'rtcp' }[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default:\n        // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function (candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n\n  var component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress && candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function (line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function (line) {\n  var parts = line.substring(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function (codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate + (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function (line) {\n  var parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' ')\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function (headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) + (headerExtension.direction && headerExtension.direction !== 'sendrecv' ? '/' + headerExtension.direction : '') + ' ' + headerExtension.uri + (headerExtension.attributes ? ' ' + headerExtension.attributes : '') + '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function (line) {\n  var parsed = {};\n  var kv = void 0;\n  var parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function (codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function (param) {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function (line) {\n  var parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function (codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function (fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type + (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') + '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function (line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substring(7, sp), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function (line) {\n  var parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function (ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function (mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function (line) {\n  var parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase() // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function (mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function (params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function (fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function (line) {\n  var parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3)\n  };\n};\n\nSDPUtils.writeCryptoLine = function (parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' + parameters.cryptoSuite + ' ' + (_typeof(parameters.keyParams) === 'object' ? SDPUtils.writeCryptoKeyParams(parameters.keyParams) : parameters.keyParams) + (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') + '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function (keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function (keyParams) {\n  return keyParams.keyMethod + ':' + keyParams.keySalt + (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') + (keyParams.mkiValue && keyParams.mkiLength ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function (mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function (mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10)\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function (params) {\n  var sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' + 'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function (mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (var i = 3; i < mline.length; i++) {\n    // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:' + pt + ' ').map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default:\n          // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function (line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  var wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ').map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(function (codec) {\n    wildcardRtcpFb.forEach(function (fb) {\n      var duplicate = codec.rtcpFeedback.find(function (existingFeedback) {\n        return existingFeedback.type === fb.type && existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function (kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(function (codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function (codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function (codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function (extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function (mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map(function (line) {\n    return SDPUtils.parseSsrcMedia(line);\n  }).filter(function (parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc = void 0;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID').map(function (line) {\n    var parts = line.substring(17).split(' ');\n    return parts.map(function (part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function (codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = { ssrc: secondarySsrc };\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95 - 50 * 40 * 8;\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function (params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function (mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map(function (line) {\n    return SDPUtils.parseSsrcMedia(line);\n  }).filter(function (obj) {\n    return obj.attribute === 'cname';\n  })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function (rtcpParameters) {\n  var sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc + ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function (mediaSection) {\n  var parts = void 0;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return { stream: parts[0], track: parts[1] };\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map(function (line) {\n    return SDPUtils.parseSsrcMedia(line);\n  }).filter(function (msidParts) {\n    return msidParts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return { stream: parts[0], track: parts[1] };\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function (mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize = void 0;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = sctpMapLines[0].substring(10).split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function (media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = ['m=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n', 'c=IN IP4 0.0.0.0\\r\\n', 'a=sctp-port:' + sctp.port + '\\r\\n'];\n  } else {\n    output = ['m=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n', 'c=IN IP4 0.0.0.0\\r\\n', 'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function () {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function (sessId, sessVer, sessUser) {\n  var sessionId = void 0;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' + 'o=' + user + ' ' + sessionId + ' ' + version + ' IN IP4 127.0.0.1\\r\\n' + 's=-\\r\\n' + 't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function (mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n      // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function (mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function (mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function (mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function (mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function (blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object') {\n  module.exports = SDPUtils;\n}\n},{}]},{},[1])(1)\n});\n","import { PEER } from '../constants'\n\n/**\n * Configuration object for a Peer.\n * @typedef {Object} PeerConfig\n * @property {Object} [rtcConfig] Configuration for the native RTCPeerConnection.\n * @property {String} [trickleIceMode=FULL] The initial mode the Peer will use when receiving ICE candidates.\n * @property {Boolean} [removeBundling=false] Remove the a=group attribute to stop media bundling\n * @property {Function} [halfTrickleThreshold] Function that determines whether the threshold has been met when in HALF trickle mode.\n */\nexport default {\n  trickleIceMode: PEER.TRICKLE_ICE.FULL,\n  removeBundling: false,\n  halfTrickleThreshold: isPassedHalfTrickleThreshold\n}\n\n/**\n * Default function for determining whether the HALF trickle ICE threshold has\n *    been met, to start trickling ICE candidates.\n * Defines the threshold as one relay candidate being gathered.\n * @method isPassedHalfTrickleThreshold\n * @param  {String}             sdp          The local SDP of the Peer.\n * @param  {RTCIceCandidate}    iceCandidate The native candidate object that triggered this check.\n * @param  {Number}             time         The amount of time (ms) since ICE collection began.\n * @return {Boolean} Whether the \"half trickle\" threshold has been passed.\n */\nfunction isPassedHalfTrickleThreshold ({ sdp, iceCandidate, time }) {\n  const passedHalf = iceCandidate.candidate.indexOf('relay') !== -1\n  return passedHalf\n}\n","/**\n * Prototype for a timer object that can keep time and be stopped and started.\n */\nconst timerPrototype = {\n  /**\n   * Start the timer\n   * @returns {boolean} True if the timer was successfully started, false if it was already started.\n   */\n  start () {\n    if (!this.isStarted()) {\n      this._startTime = now()\n      return true\n    }\n    return false\n  },\n\n  /**\n   * Stops the timer\n   * @returns {boolean} True if the timer was successfully stopped, false if it was already stopped.\n   */\n  stop () {\n    if (this.isStarted()) {\n      this._startTime = undefined\n      return true\n    }\n\n    return false\n  },\n\n  /**\n   * @returns {boolean} True if the timer is started, false otherwise.\n   */\n  isStarted () {\n    return Boolean(this._startTime)\n  },\n\n  /**\n   * @returns {number} The time in milliseconds since the timer was started, or 0 if it wasn't started.\n   */\n  timeFromStart () {\n    return this.isStarted() ? now() - this._startTime : 0\n  }\n}\n\n/**\n * @returns A timestamp in milliseconds since the unix-epoch\n */\nfunction now () {\n  return new Date().getTime()\n}\n\n/**\n * Create a new timer object. Timers are not started when created and need to be started manually.\n *\n * @returns {Object} The timer object that supports the timer interface.\n */\nexport function createTimer () {\n  return Object.create(timerPrototype)\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n","import { logManager } from '../logs'\n\n// Models that this manager directly manages.\nimport Media from '../models/media'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Manager for Media objects.\n * Allows the creation and retrieval of media objects.\n * @class MediaManager\n */\nexport default function MediaManager (managers) {\n  const log = logManager.getLogger('Manager', 'Media')\n\n  // Internal variables.\n  const trackManager = managers.trackManager\n  const medias = new Map()\n  const emitter = new EventEmitter()\n\n  /**\n   * Retrieve a snapshot of all Media objects' current state.\n   * @method getState\n   * @return {Array}\n   */\n  function getState () {\n    return getAll().map(id => get(id).getState())\n  }\n\n  /**\n   * Workaround to get Firefox to behave similarly to Chrome regarding device permission prompts.\n   * @method browserConstraintsWorkaround\n   * @param  {MediaStreamConstraints}  constraints\n   * @return {Object}  media constraints\n   */\n  function browserConstraintsWorkaround (constraints) {\n    /**\n     * Firefox workaround.\n     *\n     * Issue Summary: Browser behaviour for prompting the user for device\n     *    permissions is not consistent for consecutive gUM calls. The following\n     *    workaround makes it consistent if the less-specific constraint is\n     *    provided.\n     *\n     * Context: The `deviceId` constraint format can be either a string or an\n     *    object. The object format allows precise control over how the browser\n     *    should try to get the track. It can be specified to fail if it can't\n     *    fulfill the constraint (exact), or whether the constraint is \"best\n     *    effort\" (ideal). When the string format is given, it follows the\n     *    \"ideal\" behaviour.\n     * See: https://developer.mozilla.org/en-US/docs/Web/API/ConstrainDOMString\n     *\n     *  - When the \"ideal\" behaviour is followed and the user has not given\n     *      permission (and not disallowed), the browser will prompt the user\n     *      for permission.\n     *  - [Issue] When the \"ideal\" behaviour is followed and the user has given\n     *      permission previously, the browser will not prompt the user for\n     *      permission.\n     *\n     * Problem: When gUM is called for a different device (ideal behaviour) than\n     *    permission was granted for previously, the browser will not prompt the\n     *    user to give permission for the (new) device. This results in gUM\n     *    using the original device for the new track.\n     *\n     * This happens on Firefox because the prompt for media permissions is\n     *    specific to a single device. For Chrome, the prompt is generic to any\n     *    device.\n     * If permissions are always allowed (\"remember my decision\" on Firefox or\n     *    default on Chrome), this issue wouldn't be seen.\n     *\n     * Workaround: When the behaviour (idea / exact) isn't specified, default\n     *    to exact (instead of letting the browser default to ideal; as per the\n     *    specification).\n     *\n     * This ensures that the browser always prompts the user to give permissions\n     *    for the device (if not already granted). It is also more in-line with\n     *    what might be expected when you ask for a certain device (ie. don't\n     *    return a different device unless it was specified that it's okay).\n     */\n    for (const kind in constraints) {\n      if (\n        constraints[kind] &&\n        typeof constraints[kind] === 'object' &&\n        typeof constraints[kind].deviceId === 'string'\n      ) {\n        // Don't allow a \"bare\" value be provided for deviceId. Change it to use\n        //    \"exact\".\n        const id = constraints[kind].deviceId\n        constraints[kind].deviceId = { exact: id }\n      }\n    }\n    return constraints\n  }\n\n  /**\n   * Wraps native mediaStream, adds tracks to trackManager and Media, and sets up event handlers on a given media.\n   * @method setupMedia\n   * @param {MediaStream} mediaStream Creating a Media object with it.\n   * @return {Media}\n   */\n  function setupMedia (mediaStream) {\n    const media = new Media(mediaStream, true)\n    log.debug(`Creating Media with ID: ${media.id}.`)\n\n    // Only add tracks to a Media objects using the `addTrack` method.\n    // Specify that this is a local track we're adding\n    mediaStream.getTracks().forEach(nativeTrack => {\n      const wrappedTrack = trackManager.add(nativeTrack, mediaStream, true)\n\n      media.addTrack(wrappedTrack)\n    })\n\n    media.once('media:stopped', mediaId => {\n      remove(mediaId)\n    })\n\n    media.on('track:ended', ({ mediaId, trackId }) => {\n      if (media.getTracks().length === 0) {\n        remove(mediaId)\n      }\n    })\n\n    media.on('track:muted', ({ mediaId, trackId }) => {\n      // TBD: Add any extra behaviour (if needed) here\n    })\n\n    return media\n  }\n\n  /**\n   * Create a new local Media object.\n   * Use the provided constraints to get user media as the base MediaStream.\n   * @method createLocal\n   * @param  {MediaStreamConstraints}  constraints\n   * @return {Promise}\n   */\n  function createLocal (constraints) {\n    const constraintsWorkaround = browserConstraintsWorkaround(constraints)\n\n    // Get user media, ...\n    return new Promise((resolve, reject) => {\n      // TODO: Proper error checking.\n      // TODO: Use the WebAPI directly here? Probably not.\n      navigator.mediaDevices\n        .getUserMedia(constraintsWorkaround)\n        .then(mediaStream => {\n          const media = setupMedia(mediaStream)\n\n          medias.set(media.id, media)\n          // TODO: Better event. Include metadata?\n          emitter.emit('media:new', media.id)\n\n          resolve(media)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Creates a new local Screen Media object.\n   * Use the provided constraints to get user media as the base MediaStream.\n   * @method createLocalScreen\n   * @param {MediaStreamConstraints} constraints\n   * @return {promise}\n   */\n  function createLocalScreen (constraints) {\n    const constraintsWorkaround = browserConstraintsWorkaround(constraints)\n\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices\n        .getDisplayMedia(constraintsWorkaround)\n        .then(mediaStream => {\n          const media = setupMedia(mediaStream)\n\n          medias.set(media.id, media)\n          // TODO: Better event. Include metadata?\n          emitter.emit('media:new', media.id)\n\n          resolve(media)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Create a new remote Media object.\n   * Use provided stream/tracks as the base media objects.\n   * @method createRemote\n   * @param  {MediaStream} mediaStream Native MediaStream object.\n   * @param  {Tracks[]} tracks Array of Track objects.\n   * @return {Media}\n   */\n  function createRemote (stream, tracks = []) {\n    const media = new Media(stream, false)\n\n    tracks.forEach(track => {\n      media.addTrack(track)\n    })\n\n    media.once('media:stopped', mediaId => {\n      remove(mediaId)\n    })\n\n    media.on('track:ended', ({ mediaId, trackId }) => {\n      if (media.getTracks().length === 0) {\n        remove(mediaId)\n      }\n    })\n\n    medias.set(media.id, media)\n    // TODO: Better event. Include metadata?\n    emitter.emit('media:new', media.id)\n    return media\n  }\n\n  /**\n   * Removes a Media object from the medias array.\n   * @private\n   * @method remove\n   * @param {String} mediaId\n   */\n  function remove (mediaId) {\n    const media = get(mediaId)\n    if (media) {\n      medias.delete(mediaId)\n      emitter.emit('media:removed', mediaId)\n    }\n  }\n\n  /**\n   * Retrieve an existing Media object.\n   * @method get\n   * @param  {String} mediaId ID of the desired Media object.\n   * @return {Media}\n   */\n  function get (mediaId) {\n    const media = medias.get(mediaId)\n    if (!media) {\n      log.debug(`No media found with ID: ${mediaId}.`)\n    }\n    return media\n  }\n\n  /**\n   * Retrieve a list of all existing Media object's IDs.\n   * @method getAll\n   * @return {Array} List of Media IDs.\n   */\n  function getAll () {\n    return Array.from(medias.keys())\n  }\n\n  /**\n   * Finds the Media object that contains the specified Track.\n   * @method findTrack\n   * @param  {string}  trackId The ID of the Track to find.\n   * @return {string} The ID of the Media object that contains the Track.\n   */\n  function findTrack (trackId) {\n    // Search through all Media objects for the one that has the desired track.\n    const allMedia = Array.from(medias.values())\n    const media = allMedia.find(media => media.getTrack(trackId))\n    if (media) {\n      log.debug(`Found Media (${media.id}) with Track ${trackId}.`)\n      return media.id\n    } else {\n      log.debug(`Found no Media with Track ${trackId}.`)\n    }\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    // Getter APIs.\n    get,\n    getAll,\n    getState,\n    findTrack,\n    // Create APIs.\n    createLocal,\n    createLocalScreen,\n    createRemote,\n    // Event APIs.\n    on,\n    once,\n    off\n  }\n}\n","import { logManager } from '../logs'\n\nimport Peer from '../Peer'\n\n// Libraries.\nimport { v4 as uuidV4 } from 'uuid'\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Manager for Peer objects.\n * Allows the creation and retrieval of peer objects.\n * @method PeerManager\n */\nexport default function PeerManager (managers) {\n  const log = logManager.getLogger('Manager', 'Peer')\n\n  // Internal variables.\n  const trackManager = managers.trackManager\n  const peers = new Map()\n  const emitter = new EventEmitter()\n\n  /**\n   * Retrieve a snapshot of all Peer objects' current state.\n   * @method getState\n   * @return {Array}\n   */\n  function getState () {\n    return getAll().map(id => get(id).getState())\n  }\n\n  /**\n   * Create a new Peer using the provided configs.\n   * @method create\n   * @param  {Object} [config={}]\n   * @return {Peer}\n   */\n  function create (config = {}) {\n    const peer = new Peer(uuidV4(), config, trackManager)\n    peer.once('peer:closed', id => peers.delete(id))\n    peers.set(peer.id, peer)\n    emitter.emit('peer:new', peer.id)\n    return peer\n  }\n\n  /**\n   * Retrieves an existing Peer object.\n   * @method get\n   * @param  {String} id ID of the desired Peer object.\n   * @return {Peer}\n   */\n  function get (id) {\n    const peer = peers.get(id)\n    if (!peer) {\n      log.debug(`No Peer found with ID: ${id}.`)\n    }\n    return peer\n  }\n\n  /**\n   * Retrieve a list of all existing Peer object's IDs.\n   * @method getAll\n   * @return {Array} List of Peer IDs.\n   */\n  function getAll () {\n    return Array.from(peers.keys())\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    getState,\n    get,\n    getAll,\n    create,\n    // Event APIs.\n    on,\n    once,\n    off\n  }\n}\n","import { logManager } from '../logs'\nimport Session from '../models/session'\n\n// Libraries.\nimport { v4 as uuidV4 } from 'uuid'\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Manager for Session objects.\n * Allows for creation and retrieval of session objects.\n * @method SessionManager\n */\nexport default function SessionManager (managers) {\n  const log = logManager.getLogger('Manager', 'Session')\n  // Internal variables.\n  const sessions = new Map()\n  const emitter = new EventEmitter()\n\n  /**\n   * Create a new Session object.\n   * @method create\n   * @param {Object} [config]\n   * @param {Object} [config.peer] Configs for the Session's Peer object.\n   * @return {Session}\n   */\n  function create (config = {}) {\n    const session = new Session(uuidV4(), managers, config)\n    session.once('session:ended', id => {\n      sessions.delete(id)\n      emitter.emit('session:removed', id)\n    })\n    sessions.set(session.id, session)\n    emitter.emit('session:new', session.id)\n    return session\n  }\n\n  /**\n   * Retrieve an existing Session object.\n   * @method get\n   * @param  {String} sessionId ID of the desired Session object.\n   * @return {Session}\n   */\n  function get (sessionId) {\n    const session = sessions.get(sessionId)\n    if (!session) {\n      log.debug(`No session found with ID: ${sessionId}.`)\n    }\n    return session\n  }\n\n  /**\n   * Retrieve a list of all existing Sessions.\n   * @method getAll\n   * @return {Array} List of Media IDs.\n   */\n  function getAll () {\n    return Array.from(sessions.values())\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    create,\n    get,\n    getAll,\n    on,\n    once,\n    off\n  }\n}\n","import { logManager } from '../logs'\nimport { setTransceiverDirection } from '../sdpUtils/transceiverUtils'\n\n// Helpers.\nimport { PEER, ICE_COLLECTION_CHECK_REASONS, ICE_COLLECTION_RESULT_TYPES } from '../constants'\n\n// SDP Helpers.\nimport sdpPipeline from '../sdpUtils/pipeline'\nimport { getSdpSessionId } from '../sdpUtils/extractors'\n\n// General Utils.\nimport { getBrowserDetails, mergeValues } from '../utils'\nimport iceCollectionScheduledCheck from '../Peer/utils/iceCollectionScheduledCheck'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\nimport { debounce } from 'lodash/fp'\nconst unfixedDebounce = debounce.convert({ fixed: false })\n\n/**\n * Object to represent a webRTC Session for a single peer.\n * \"Session\" being an abstraction of a webRTC connection between another peer.\n * Performs logic for initializing and connecting a peer connection.\n * Manages media added to / received from the peer connection.\n * @method Session\n */\nexport default function Session (id, managers, config = {}) {\n  const log = logManager.getLogger('Session', id)\n  log.info('Creating new Session.')\n\n  // Internal variables.\n  const sessionId = id\n  let peerId\n  const peerManager = managers.peerManager\n  const mediaManager = managers.mediaManager\n  const trackManager = managers.trackManager\n  const emitter = new EventEmitter()\n\n  // Session settings\n  const settings = {\n    dscpControls: {}\n  }\n\n  // This structure is used to remember the dtls role of a peer relative to some remote sdp.\n  // key: the remote sdp's session id (o= line).\n  // value: the dtls role that the current peer's local sdp has.\n  // This is needed because a remote SDP with the same sessionId as a previous one may reappear later on\n  //  (music-unhold scenario) and the roles will be expected to be the same.\n  const dtlsRoleRecord = new Map()\n\n  // The latest remote description successfully set, even if the Peer has\n  //    been recreated since it was set.\n  let latestRemoteDescription\n\n  // Create and initialize the peer\n  let peer = peerManager.create(config.peer)\n  if (peer) {\n    // The id of the created peer\n    peerId = peer.id\n    setupPeerEventHandlers(peer)\n  } else {\n    throw new Error(`Peer creation error in Session ${sessionId}.`)\n  }\n\n  /**\n   * Records the peer's dtlsRole if it hasn't been recorded yet and associates it with a remote sdp's sessionId.\n   * @method recordNewDtlsRole\n   */\n  function recordNewDtlsRole () {\n    const remoteSdpSessionId = getSdpSessionId(peer.remoteDescription.sdp)\n    if (!dtlsRoleRecord.get(remoteSdpSessionId)) {\n      dtlsRoleRecord.set(remoteSdpSessionId, peer.dtlsRole)\n    }\n  }\n\n  /**\n   * @property {Array} getLocalTracks List of active Track objects the Session has added locally.\n   */\n  function getLocalTracks () {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      return peer.localTracks\n    } else {\n      return []\n    }\n  }\n\n  /**\n   * @property {Array} getAllLocalTracks List of all Track objects the Session has added locally.\n   */\n  function getAllLocalTracks () {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      // Get all local Track objects, not just the active ones.\n      return peer.senderTracks.map(nativeTrack => trackManager.get(nativeTrack.id))\n    } else {\n      return []\n    }\n  }\n\n  /**\n   * @property {Array} getRemoteTracks List of active Track objects the Session has received remotely.\n   */\n  function getRemoteTracks () {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      return peer.remoteTracks\n    } else {\n      return []\n    }\n  }\n\n  /**\n   * Retrieve a snapshot of the Session object's current state.\n   * @method getState\n   * @return {Object}\n   */\n  function getState () {\n    return {\n      id: sessionId,\n      localTracks: getLocalTracks(),\n      remoteTracks: getRemoteTracks(),\n      allLocalTracks: getAllLocalTracks()\n    }\n  }\n\n  /**\n   * Setup a warm PeerConnection.\n   * @method warmup\n   */\n  function warmup () {}\n\n  /**\n   * Add Track objects to the Session.\n   * @method addTracks\n   * @param  {Array} tracks List of Track objects.\n   * @param  {Object} dscpTrackMapping Track - DSCPSettings map\n   */\n  function addTracks (tracks, dscpTrackMapping) {\n    const peer = peerManager.get(peerId)\n    // TODO: Better error handling?\n    if (peer) {\n      const addTrackOrReuseTransceiverPromises = tracks.map(track => {\n        return new Promise((resolve, reject) => {\n          // We try to find a reusable transceiver that we can attach the track to achieve the following:\n          // - Avoid transceiver pollution and needing to create a brand new transceiver to attach the track to.\n          // - Allow re-adding of the same track type that has been previously removed.\n          //   (This is so that we can still have re-adding of tracks when using the \"basic\" media API which imposes a 1-audio & 1-video limit)\n          const reusableTransceiver = peer.findReusableTransceiver(track.track.kind)\n\n          // If we can find a reusable transceiver, reuse it.\n          if (reusableTransceiver) {\n            reusableTransceiver.sender\n              // Replace the dummy track on the Sender with the actual track we want to send.\n              .replaceTrack(track.track)\n              .then(() => {\n                /*\n                 * Set the correct direction on the Transceiver to include that we now want to send:\n                 *   - sendrecv --> sendrecv\n                 *   - sendonly --> sendonly\n                 *   - recvonly --> sendrecv\n                 *   - inactive --> sendonly\n                 */\n                reusableTransceiver.direction = ['sendrecv', 'recvonly'].includes(reusableTransceiver.direction)\n                  ? 'sendrecv'\n                  : 'sendonly'\n\n                resolve(\n                  `Track (${track.track.kind} : ${track.id}) reused transceiver (mid: ${reusableTransceiver.mid}).`\n                )\n              })\n              .catch(err => {\n                log.error(err)\n                reject(err)\n              })\n          } else {\n            // To get around the current limitation described above, we use peerConnection's `addTrack` when we can't find a reusable transceiver.\n            // `addTrack` does one of the following when called:\n            // - Create a new transceiver and attaches the track and stream to the sender\n            // - Find and use an existing transceiver that has never been used to send data before and attach the track and stream to the sender.\n            peer.addTrack(track)\n            resolve(`Added track (${track.track.kind} : ${track.id}).`)\n          }\n        }).then(message => {\n          // Set event emitters and handlers\n          log.info(message)\n\n          // Indicate that the Session has a new Track.\n          emitter.emit('new:track', {\n            local: true,\n            trackId: track.id\n          })\n\n          settings.dscpControls = mergeValues(settings.dscpControls, dscpTrackMapping)\n\n          track.once('ended', ({ isUnsolicited }) => {\n            const peer = peerManager.get(peerId)\n            if (peer) {\n              // If the PeerConnection is closed, we don't need to worry about\n              //    removing the track (and it would throw an error anyway).\n              if (peer.signalingState !== 'closed') {\n                // If this track ending was expected, remove it from the Peer\n                //    immediately. Otherwise another operation will remove it.\n                if (!isUnsolicited) {\n                  peer.removeTrack(track.id)\n                }\n\n                emitter.emit('track:ended', {\n                  local: true,\n                  trackId: track.id,\n                  isUnsolicited\n                })\n                // Remove track from session dscp settings\n                if (settings.dscpControls.hasOwnProperty(track.id)) {\n                  log.debug(`Removing track ${track.id} from session dscp settings`)\n                  delete settings.dscpControls[track.id]\n                }\n              } else {\n                log.debug(\n                  `Received ended event for track ${track.id}, but its associated Peer ${peer.id} is closed. Ignoring this event...`\n                )\n              }\n            }\n          })\n        })\n      })\n\n      return Promise.all(addTrackOrReuseTransceiverPromises)\n    }\n  }\n\n  /**\n   * Creates a local SDP offer.\n   * @method createOffer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Object} [options.mediaDirections] Directions to use for media.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the local offer.\n   * @return {Promise} Resolves with the offer.\n   */\n  function createOffer (options = {}) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      // Remove options.mediaDirections.\n      // This is because directions are now set in transceivers.\n      if (options.mediaDirections) {\n        setTransceiversDirection(options.mediaDirections)\n        delete options.mediaDirections\n      }\n\n      peer\n        .createOffer(options)\n        .then(offer => {\n          if (options.sdpHandlers || sdpPipeline.getHandlers().length) {\n            log.debug('Modifying local offer with SDP pipeline.')\n            offer.sdp = sdpPipeline.run(options.sdpHandlers, offer.sdp, {\n              type: offer.type,\n              endpoint: PEER.ENDPOINT.LOCAL\n            })\n          }\n\n          resolve(offer)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Sets a local SDP.\n   * @method setLocalDescription\n   * @param  {Object} description The description containing the SDP to set as the local description.\n   * @return {Promise} Resolves with the description.\n   */\n  function setLocalDescription (description) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      peer\n        .setLocalDescription(description)\n        .then(() => {\n          // Record the peer's dtls role if setting a local answer.\n          if (description.type === 'answer') {\n            recordNewDtlsRole()\n          }\n\n          // Set any parameters on the peer's senders if applicable\n          setParameters()\n\n          // Resolve with the _current_ local description, which may be\n          //    different than the provided description due trickle ICE config.\n          resolve(peer.localDescription)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Rollback the local description.\n   * @method rollbackLocalDescription\n   * @return {Promise} Resolves with the rollbacked description or error.\n   */\n  function rollbackLocalDescription () {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      peer\n        .setLocalDescription({ type: 'rollback' })\n        .then(() => {\n          resolve(peer.localDescription)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Parse the result of a call to the ice collection check function and act accordingly:\n   *  'StartCall' type - emit the negotiation ready event\n   *  'Error' type - end the session\n   *  'Wait' type - Schedule a callback to the ice collection check function\n   * @method iceCollectionCheckResult\n   * @param {Object} result The result of ice collection check function.\n   * @param {string} result.type The action to take.\n   * @param {number} result.wait How many ms to wait for the next scheduled check.\n   * @return {Promise} Resolves with the rollbacked description or error.\n   */\n  function iceCollectionCheckResult (result) {\n    const peer = peerManager.get(peerId)\n    if (!peer) {\n      return new Error(`Peer not found in Session ${sessionId}.`)\n    }\n\n    if (result.type === ICE_COLLECTION_RESULT_TYPES.START_CALL) {\n      log.info('Proceeding with the negotiation as instructed by the ice collection check.')\n      peer.isIceCollectionCheckOngoing = false\n      peer.emitter.emit('onnegotiationready')\n    } else if (result.type === ICE_COLLECTION_RESULT_TYPES.ERROR) {\n      log.info('Cleaning up session as instructed by the ice collection check.')\n      peer.isIceCollectionCheckOngoing = false\n      const localTracks = getLocalTracks()\n      localTracks.forEach(track => track.stop())\n      end()\n    } else if (result.type === ICE_COLLECTION_RESULT_TYPES.WAIT) {\n      // If `result.wait` is not set, then the ice collection check function is only waiting for either\n      //  ice candidate events or ice gathering state change events\n      if (result.wait) {\n        log.debug(`Setting a scheduled check for the ice collection check after ${result.wait} ms`)\n        peer.iceLoop = setTimeout(() => iceCollectionScheduledCheck(peer), result.wait)\n      }\n    } else {\n      log.info('Unexpected result type from ICE collection check function, ending call.')\n      peer.isIceCollectionCheckOngoing = false\n      const localTracks = getLocalTracks()\n      localTracks.forEach(track => track.stop())\n      end()\n    }\n  }\n\n  /**\n   * Sets parameters on the RTCRtpSenders\n   * @param {Object} mediaConstraints\n   */\n  function setParameters (mediaConstraints) {\n    // RTCRtpSender.setParameters is currently unsupported on Firefox (or at least not supported as it should be)\n    if (getBrowserDetails().browser === 'firefox') {\n      log.debug('Setting sender parameters not supported on Firefox; skipping.')\n      return\n    }\n\n    const promises = []\n\n    // Set the DSCPControls (i.e., network priorities) if set in the session's settings\n    for (const trackId in settings.dscpControls) {\n      promises.push(\n        new Promise((resolve, reject) => {\n          log.debug(`Setting networkPriority ${settings.dscpControls[trackId]} for sender with track ${trackId}`)\n          setNetworkPriority(trackId, settings.dscpControls[trackId])\n            .then(resolve)\n            .catch(reject)\n        })\n      )\n    }\n\n    return Promise.all(promises)\n  }\n\n  /**\n   * Sets the networkPriority in the peer connection's sender's encodings.\n   * @method setNetworkPriority\n   * @param {string} trackId The track ID\n   * @param {string} networkPriority The network priority value to set\n   * @return {Promise} Resolves with the setParameters()\n   */\n  function setNetworkPriority (trackId, networkPriority) {\n    const peer = peerManager.get(peerId)\n    const senders = peer.getSenders()\n\n    // search for a sender associated with the provided track id\n    const sender = senders.find(sender => sender.track.id === trackId)\n    if (sender) {\n      // Need to perform a getParameters() prior to a setParameters()\n      const parameters = sender.getParameters()\n      parameters.encodings.forEach(encoding => {\n        encoding.networkPriority = networkPriority\n      })\n      return sender.setParameters(parameters)\n    } else {\n      const errMsg = `Cannot find sender associated with trackId: ${trackId}`\n      log.info(errMsg)\n      return Promise.reject(errMsg)\n    }\n  }\n\n  /**\n   * Generates (and sets) a local SDP offer.\n   * @method generateOffer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Object} [options.mediaDirections] Directions to use for media.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the local offer.\n   * @return {Promise} Resolves with the offer.\n   */\n  function generateOffer (options = {}) {\n    // Backwards compatibility: Create the offer and set it as one operation.\n    return new Promise((resolve, reject) => {\n      createOffer(options)\n        .then(setLocalDescription)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Replaces a specified transceiver's sender.track.\n   * @method replaceTrack\n   * @param {Object} newTrack The MediaStreamTrack we want to place into the sender.\n   * @param {Object} options Options for specifying which transceiver's sender should be replaced. They are ordered by priority.\n   * @param {String} [options.trackId] The transceiver with the specific sender.track.id.\n   * @param {String} [options.mid] The transceiver with the specific media id.\n   * @return {Object} A Promise object which is fulfilled once the track has been replaced\n   */\n  function replaceTrack (newTrack, options) {\n    const peer = peerManager.get(peerId)\n    const track = trackManager.get(newTrack.id)\n    return peer\n      .replaceTrack(track.track, options)\n      .then(() => {\n        track.once('ended', ({ isUnsolicited }) => {\n          const peer = peerManager.get(peerId)\n          if (peer) {\n            // If the PeerConnection is closed, we don't need to worry about\n            //    removing the track (and it would throw an error anyway).\n            if (peer.signalingState !== 'closed') {\n              // If this track ending was expected, remove it from the Peer\n              //    immediately. Otherwise another operation will remove it.\n              if (!isUnsolicited) {\n                peer.removeTrack(track.id)\n              }\n\n              emitter.emit('track:ended', {\n                local: true,\n                trackId: track.id,\n                isUnsolicited\n              })\n              // Remove track from session dscp settings\n              if (settings.dscpControls.hasOwnProperty(track.id)) {\n                log.debug(`Removing track ${track.id} from session dscp settings`)\n                delete settings.dscpControls[track.id]\n              }\n            } else {\n              log.debug(\n                `Received ended event for track ${track.id}, but its associated Peer ${peer.id} is closed. Ignoring this event...`\n              )\n            }\n          }\n        })\n\n        emitter.emit('track:replaced', {\n          oldTrackId: options.trackId,\n          trackId: newTrack.id\n        })\n      })\n      .catch(err => err)\n  }\n\n  /**\n   * Sets the direction of transceivers.\n   * @method setTransceiversDirection\n   * @param {Object} mediaDirections Options for specifying the directions we want to set for certain medias (i.e., audio and video)\n   * @param {Array} [mediaDirections.audio] The direction we want to set of the transceivers with audio tracks\n   * @param {Array} [mediaDirections.video] The direction we want to set of the transceivers with video tracks\n   * @return {undefined}\n   */\n  function setTransceiversDirection (mediaDirections) {\n    const peer = peerManager.get(peerId)\n\n    // Set EVERY Transceiver's direction. This includes those with active tracks\n    //    and those without.\n    peer.getTransceivers().forEach(transceiver => {\n      const kind = transceiver.receiver.track.kind\n      setTransceiverDirection(transceiver, mediaDirections[kind])\n    })\n  }\n\n  /**\n   * Processes (and sets) a remote SDP offer.\n   * @method processOffer\n   * @param  {RTCSessionDescription} offer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the remote offer.\n   * @return {Promise}\n   */\n  function processOffer (offer, options = {}) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      if (options.sdpHandlers || sdpPipeline.getHandlers().length) {\n        log.debug('Modifying remote offer with SDP pipeline.')\n        offer.sdp = sdpPipeline.run(options.sdpHandlers, offer.sdp, {\n          type: offer.type,\n          endpoint: PEER.ENDPOINT.REMOTE\n        })\n      }\n\n      peer\n        .setRemoteDescription(offer)\n        .then(() => {\n          // Set the offer as the latest remote description.\n          latestRemoteDescription = offer\n          resolve()\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Creates a local SDP answer.\n   * @method createAnswer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Object} [options.mediaDirections] Directions to use for media.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the local answer.\n   * @return {Promise} Resolves with the answer.\n   */\n  function createAnswer (options = {}) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      // Remove options.mediaDirections.\n      // This is because directions are now set in transceivers.\n      if (options.mediaDirections) {\n        setTransceiversDirection(options.mediaDirections)\n        delete options.mediaDirections\n      }\n\n      // Set the dtlsRole here if the following are true:\n      // - It previously existed for this specific remote sdp.\n      // - It hasn't been set on a recreated peer yet.\n      const remoteSdpSessionId = getSdpSessionId(peer.remoteDescription.sdp)\n      const previousDtlsRole = dtlsRoleRecord.get(remoteSdpSessionId)\n      if (!peer.dtlsRole && previousDtlsRole) {\n        peer.dtlsRole = previousDtlsRole\n      }\n\n      peer\n        .createAnswer(options)\n        .then(answer => {\n          if (options.sdpHandlers || sdpPipeline.getHandlers().length) {\n            log.debug('Modifying local answer with SDP pipeline.')\n            answer.sdp = sdpPipeline.run(options.sdpHandlers, answer.sdp, {\n              type: answer.type,\n              endpoint: PEER.ENDPOINT.LOCAL\n            })\n          }\n          resolve(answer)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Generates (and sets) a local SDP answer.\n   * @method generateAnswer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Object} [options.mediaDirections] Directions to use for media.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the local answer.\n   * @return {Promise} Resolves with the answer.\n   */\n  function generateAnswer (options = {}) {\n    // For backwards compatibility: Should use other APIs directly.\n    return new Promise((resolve, reject) => {\n      createAnswer(options)\n        .then(setLocalDescription)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Processes (and sets) a remote SDP answer.\n   * @method processAnswer\n   * @param  {RTCSessionDescription} answer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the remote answer.\n   * @return {Promise}\n   */\n  function processAnswer (answer, options = {}) {\n    if (options.sdpHandlers || sdpPipeline.getHandlers().length) {\n      log.debug('Modifying remote answer with SDP pipeline.')\n      answer.sdp = sdpPipeline.run(options.sdpHandlers, answer.sdp, {\n        type: answer.type,\n        endpoint: PEER.ENDPOINT.REMOTE\n      })\n    }\n\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      peer\n        .setRemoteDescription(answer)\n        .then(() => {\n          // Record the peer's dtls role.\n          recordNewDtlsRole()\n\n          // Set the answer as the latest remote description.\n          latestRemoteDescription = answer\n\n          resolve()\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Add an ICE candidate from the remote endpoint.\n   * @method addIceCandidate\n   * @param  {RTCIceCandidate} candidate\n   * @param  {Object} [options]\n   * @param  {string} [options.label] The Peer to perform the operation on.\n   * @return {Promise}\n   */\n  function addIceCandidate (candidate, options = {}) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      peer\n        .addIceCandidate(candidate)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  /**\n   * End the Session.\n   * @method end\n   */\n  function end () {\n    log.info('Ending Session.')\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      peer.close()\n    }\n    emitter.emit('session:ended', sessionId)\n  }\n\n  /**\n   * Removes specified Track objects from the Session.\n   * @method removeTrack\n   * @param  {Array} trackIds List of IDs of Track objects to remove.\n   */\n  function removeTracks (trackIds) {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      // Get the list of all tracks on the Peer (event ended ones).\n      const allLocalTracks = peer.senderTracks\n      trackIds.forEach(trackId => {\n        if (allLocalTracks.findIndex(track => track.id === trackId) > -1) {\n          peer.removeTrack(trackId)\n          // Remove the track from the session dscp settings\n          if (settings.dscpControls.hasOwnProperty(trackId)) {\n            log.debug(`Removing track ${trackId} from session dscp settings`)\n            delete settings.dscpControls[trackId]\n          }\n        }\n      })\n    }\n  }\n\n  /*\n   * Restarts ICE connection\n   * @method restartIce\n   */\n  function restartIce () {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      peer.restartIce()\n    }\n  }\n\n  /*\n   * Get the DTLS role of the Peer\n   * @method getDtlsRole\n   * @return {string} The DTLS role of the Peer\n   */\n  function getDtlsRole () {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      return peer.dtlsRole\n    }\n  }\n\n  /**\n   * Send DTMF tones on specified Track object from the Session.\n   * @method sendDTMF\n   * @param {Object} options The DTMF options.\n   * @param {string} options.tone DTMF tone to send. Valid values are [0,1,2,3,4,5,6,7,8,9,#].\n   * @param {number} [options.duration=100] The amount of time, in milliseconds, that each DTMF tone should last.\n   * @param {number} [options.intertoneGap=70] The length of time, in milliseconds, to wait between tones.\n   * @param {Object} [sendOptions] The send options.\n   * @param {func} [sendOptions.callback] Optional callback for tone event .\n   * @param {string} [sendOptions.trackId] The trackId of the sender to use.\n   * @return {boolean} The success or fail indicator\n   */\n  function sendDTMF (DTMFOptions, sendOptions = {}) {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      return peer.sendDTMF(DTMFOptions, sendOptions)\n    } else {\n      return false\n    }\n  }\n\n  /**\n   * Retrieve RTCStatsReport from a sender.\n   * @method getStats\n   * @param  {string} trackId The track id associated with a sender.\n   * @return {Promise}\n   */\n  function getStats (trackId) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n        return\n      }\n      peer\n        .getStats(trackId)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * Sets up event handlers on a given peer.\n   * @method setupPeerEventHandlers\n   * @param {PeerConnection} targetPeer The peer to set event handlers on.\n   */\n  function setupPeerEventHandlers (targetPeer) {\n    targetPeer.oniceconnectionstatechange = event => {\n      emitter.emit('peer:iceConnectionStateChange', {\n        iceConnectionState: targetPeer.iceConnectionState\n      })\n    }\n\n    // TODO: Use `uniqueLabel` when setting event listeners (and bubbling events).\n    // When the peer gets an ICE candidate, emit it as\n    //  a message to be sent to the other end.\n    targetPeer.onicecandidate = event => {\n      emitter.emit('onicecandidate', {\n        candidate: event.candidate\n      })\n    }\n\n    /*\n     * Ice Collection Check Events:\n     *\n     * Emit an event for the session channel everytime:\n     *  - the ICE gathering state changes\n     *  - an ICE candidate is collected\n     *  - it is time for a scheduled call to the collection check function\n     *\n     */\n    targetPeer.onicegatheringstatechange = event => {\n      // Only emit the event if we are in an ongoing ice collection check loop\n      if (targetPeer.isIceCollectionCheckOngoing) {\n        // Clear any previous timeout/loop\n        if (targetPeer.iceLoop) {\n          clearTimeout(targetPeer.iceLoop)\n          targetPeer.iceLoop = undefined\n        }\n        emitter.emit('peer:iceGatheringStateChange', {\n          reason: ICE_COLLECTION_CHECK_REASONS.ICE_GATHERING_STATE_CHANGE,\n          iceCollectionDuration: targetPeer.iceTimer.timeFromStart(),\n          iceCandidates: targetPeer.iceCandidates,\n          iceGatheringState: targetPeer.iceGatheringState,\n          rtcPeerConnectionConfig: targetPeer.config,\n          rtcLocalSessionDescription: targetPeer.localDescription\n        })\n      }\n    }\n\n    // Debounce the listener for the ice candidate event since they can be emitted quite quickly\n    //  one after another. Options: leading:true will ensure the first invocation always occur, and\n    //  trailing:false (default) ensures the last invocation will occur after the delay as appropriate.\n    targetPeer.on(\n      'iceCandidateCollected',\n      unfixedDebounce(50)(\n        iceCollectionInfo => {\n          // Only emit the event if we are in an ongoing ice collection check process\n          if (targetPeer.isIceCollectionCheckOngoing) {\n            // Clear any previous timeout/loop\n            if (targetPeer.iceLoop) {\n              clearTimeout(targetPeer.iceLoop)\n              targetPeer.iceLoop = undefined\n            }\n            emitter.emit('peer:iceCandidateCollected', {\n              reason: ICE_COLLECTION_CHECK_REASONS.NEW_CANDIDATE,\n              ...iceCollectionInfo\n            })\n          }\n        },\n        { leading: true }\n      )\n    )\n\n    targetPeer.on('scheduledCheck', iceCollectionInfo => {\n      // Only emit the event if we are in an ongoing ice collection check loop\n      if (targetPeer.isIceCollectionCheckOngoing) {\n        // Clear any previous timeout/loop\n        if (targetPeer.iceLoop) {\n          clearTimeout(targetPeer.iceLoop)\n          targetPeer.iceLoop = undefined\n        }\n        emitter.emit('peer:iceCollectionScheduledCheck', {\n          reason: ICE_COLLECTION_CHECK_REASONS.SCHEDULED,\n          ...iceCollectionInfo\n        })\n      }\n    })\n\n    // Handle when the Peer receives a new remote track.\n    targetPeer.ontrack = track => {\n      let media = mediaManager.get(track.getStream().id)\n      if (media) {\n        // Add the new Track to its Media object.\n        media.addTrack(track)\n      } else {\n        // Create a new Media object using the Track.\n        media = mediaManager.createRemote(track.getStream(), [track])\n      }\n\n      track.once('ended', () => {\n        emitter.emit('track:ended', {\n          local: false,\n          trackId: track.id,\n          // If a remote track is ended, then a remote action triggered it. Consider\n          //    this solicited since we don't want to take an action here.\n          isUnsolicited: false\n        })\n      })\n\n      const { kind } = track.getState()\n      log.info(`Received new track (${kind} : ${track.id})`)\n\n      // Indicate that the Session has a new Track.\n      emitter.emit('new:track', {\n        local: false,\n        trackId: track.id\n      })\n    }\n  }\n\n  /**\n   * Creates a new peer and replaces the current peer being used by this session.\n   *     This will close the previous Peer, stopping any media being sent/received on it.\n   * @method recreatePeer\n   */\n  function recreatePeer () {\n    const oldPeer = peer\n    const newPeer = peerManager.create(config.peer)\n    if (newPeer) {\n      // The id of the created peer\n      peerId = newPeer.id\n      log.debug(`Recreated Peer with ID: ${peerId}`)\n      peer = newPeer\n\n      // Copy tracks\n      oldPeer.localTracks.forEach(oldLocalTrack => {\n        newPeer.addTrack(oldLocalTrack)\n      })\n\n      // Set event handlers\n      setupPeerEventHandlers(newPeer)\n\n      // Close the old peer\n      oldPeer.close()\n    } else {\n      throw new Error(`Peer creation error in Session ${sessionId}.`)\n    }\n  }\n\n  function getPeer () {\n    return peer\n  }\n\n  function getRemoteDescription () {\n    return peer.remoteDescription\n  }\n\n  function getLatestRemoteDesc () {\n    return latestRemoteDescription\n  }\n\n  /**\n   * Given a list of media section IDs, return the list of remote track IDs from\n   *     the Transceivers that the media sections represent.\n   * @param {Array<string>} mids List of media section IDs.\n   * @return {Array<string>} List of remote track IDs.\n   */\n  function getRemoteTrackIdsFromTransceivers (mids) {\n    const transceivers = peer.getTransceivers()\n\n    const remoteTrackIds = []\n    // Iterate over every transceiver\n    transceivers.forEach(transceiver => {\n      // If the transceiver's mid value is in our list of mids, add it to the\n      //    remoteTrackIds array to be returned.\n      // The `if` condition looks sketchy because we are comparing a string to\n      //    a number.\n      if (mids.some(mid => mid + '' === transceiver.mid)) {\n        const id = transceiver.receiver.track.id\n        remoteTrackIds.push(id)\n      }\n    })\n\n    return remoteTrackIds\n  }\n\n  /**\n   * Get all active, incoming remote tracks that are part of the Session.\n   * @return {Array<string>} List of remote track IDs.\n   */\n  function getIncomingRemoteTrackIds () {\n    const transceivers = peer.getTransceivers()\n\n    const remoteTrackIds = []\n    transceivers.forEach(transceiver => {\n      // Check the `direction` of the transceiver.\n      // For incoming calls, the `currentDirection` property will not be set since that transceiver\n      // is not yet fully negotiated.\n      const isReceiving =\n        transceiver.mid !== null &&\n        transceiver.direction.includes('recv') &&\n        transceiver.receiver.track.readyState === 'live'\n      if (isReceiving) {\n        remoteTrackIds.push(transceiver.receiver.track.id)\n      }\n    })\n\n    return remoteTrackIds\n  }\n\n  /**\n   * Get all active, remote tracks that are part of the Session.\n   * @return {Array<string>} List of remote track IDs.\n   */\n  function getActiveRemoteTrackIds () {\n    const transceivers = peer.getTransceivers()\n\n    const remoteTrackIds = []\n    transceivers.forEach(transceiver => {\n      // transceiver.mid !== null --> The Transceiver is in the SDP.\n      // currentDirection --> The Transceiver has been negotiated.\n      // currentDirection.includes(recv) --> It has a remote track.\n      // track.readyState === live ---> It is active (...not thorough).\n      const isReceiving =\n        transceiver.mid !== null &&\n        transceiver.currentDirection &&\n        transceiver.currentDirection.includes('recv') &&\n        transceiver.receiver.track.readyState === 'live'\n      if (isReceiving) {\n        remoteTrackIds.push(transceiver.receiver.track.id)\n      }\n    })\n\n    return remoteTrackIds\n  }\n\n  /**\n   * Session method to load an audio file and insert it into the Session by\n   *    replacing an existing audio track temporarily.\n   *\n   * Provides feedback at two points in time:\n   *    1) When the audio file starts playing, or fails to start playing.\n   *        Done by fulfilling the method's Promise.\n   *    2) When the audio file ends playing, or encounters an error while playing.\n   *        Done by emitting an event.\n   *\n   * If the original audio track is replaced, but cannot be put back on the Session afterwards,\n   *    it is considered an error scenario. To \"fix\" this, the method will stop that track.\n   *    this is meant to avoid it being a \"ghost\" track. It will:\n   *        1) Clean-up resources and release the microphone,\n   *        2) Allow an application to handle it the same as any other track ending unsolicated.\n   *\n   * @method insertAudio\n   * @param {string} filePath\n   * @return {Promise} Resolves when audio file starts playing. Rejects if fails to start.\n   */\n  function insertAudio (filePath) {\n    return new Promise((resolve, reject) => {\n      let isReady = false\n      /*\n       * `playIfReady` needs to be called twice to start playing the audio file.\n       *    Once to ensure it \"can play through\".\n       *    Once to ensure the media will be streamed through the Peer.\n       */\n      function playIfReady () {\n        if (isReady) {\n          audio.play()\n        } else {\n          isReady = true\n        }\n      }\n\n      /*\n       * End the original track from the Call, but pretend that it was \"unsolicited\". This\n       *    makes it appear the same as if something other than the SDK stopped the track\n       *    so that it falls into the same error-handling scenario as them.\n       */\n      function endOriginalTrack () {\n        log.info(`Stopping track ${oldTrack.id} to release the microphone after error.`)\n        oldTrack.track.stop()\n        oldTrack.track.onended(new Event('track-error'))\n      }\n\n      // Get the audio track we will be replacing temporarily.\n      const peer = peerManager.get(peerId)\n      const oldTrack = peer.localTracks.find(track => {\n        return track.track.kind === 'audio' && track.track.readyState === 'live'\n      })\n      if (!oldTrack) {\n        reject(new Error('No valid local audio track found to insert audio file on.'))\n      }\n      // The ID of the track currently on the Call.\n      let currentTrackId = oldTrack.id\n\n      const audio = new Audio(filePath)\n      // Set the volume to 20%.\n      audio.volume = 0.2\n\n      // Create a source node from that MediaElement.\n      const context = new AudioContext()\n      const source = context.createMediaElementSource(audio)\n\n      // Connect the source node to the destination (which has a MediaStream).\n      const dest = context.createMediaStreamDestination()\n      source.connect(dest)\n      const audioTrack = dest.stream.getAudioTracks()[0]\n\n      /*\n       * Replace the existing audio track on the Peer with the file's track.\n       * When it has been replaced, that is 1 of 2 conditions to be met before playing it.\n       */\n      peer\n        .replaceTrack(audioTrack, { trackId: oldTrack.id })\n        .then(() => {\n          // The original track has successfully been replaced; take note of that.\n          currentTrackId = audioTrack.id\n          log.debug('Replaced audio from file media.')\n          playIfReady()\n        })\n        .catch(err => {\n          log.info(`Failed to replace audio with file media: ${err.message}.`)\n          reject(new Error('Failed to replace audio track with file media.'))\n        })\n\n      /*\n       * Audio event listeners:\n       *    - canplaythrough: Enough of the file has been loaded that buffering isn't needed.\n       *    - play: The file has started playing.\n       *    - error: An error was encountered.\n       *    - ended: The file has stopped playing.\n       *\n       * From our usage of `audio`:\n       *    - canplaythrough: Happens once, before we start playing the file.\n       *    - play: Indicates we have started playing the file.\n       *    - error: Most likely that the file could not start playing because `new Audio(filePath)`\n       *        failed. Could also happen mid-play, but unknown.\n       *    - ended: Indicates the file reached the end (successfully).\n       *\n       * Ref: https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement\n       */\n\n      // When the track \"can play through\", that is 1 of 2 conditions to be met before playing it.\n      audio.oncanplaythrough = () => {\n        log.debug('File media ready to be played.')\n        playIfReady()\n      }\n\n      // When the file start's playing, resolve the `insertAudio` promise to provide feedback.\n      audio.onplay = () => {\n        log.debug(`Audio file started playing. Duration of ${audio.duration} seconds.`)\n        resolve(audio.duration)\n      }\n\n      // On an error, reject the `insertAudio` promise to provide feedback.\n      audio.onerror = () => {\n        log.info('Encountered error trying to play audio file.')\n\n        // If the original track is not on the Peer when this error happened,\n        //    try to put it back before rejecting the `insertAudio` method.\n        if (currentTrackId !== oldTrack.id) {\n          peer.replaceTrack(oldTrack.track, { trackId: audioTrack.id }).catch(() => {\n            // If we can't \"rollback\" the operation, end the original track\n            //    to prevent it from becoming a \"ghost\" track.\n            endOriginalTrack()\n          })\n        }\n        // Reject the promise if it hasn't been fulfilled.\n        reject(new Error('Failed to play audio file.'))\n        // Emit a failure event in case the promise has already been fulfilled.\n        emitter.emit('audioFileEnded', false)\n      }\n\n      // When the file ends, replace the original audio track back on the Peer.\n      audio.onended = event => {\n        log.debug('Audio file ended playing.')\n\n        peer\n          .replaceTrack(oldTrack.track, { trackId: audioTrack.id })\n          .then(() => {\n            log.debug('Replaced original audio track.')\n            emitter.emit('audioFileEnded', true)\n          })\n          .catch(err => {\n            log.info('Failed to replace original audio track.', err)\n            endOriginalTrack()\n            // Failed to replace the original audio track.\n            emitter.emit('audioFileEnded', false)\n          })\n      }\n    })\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    id: sessionId,\n    config,\n    // Getter APIs.\n    get peer () {\n      return getPeer()\n    },\n    getState,\n    get localTracks () {\n      return getLocalTracks()\n    },\n    get remoteTracks () {\n      return getRemoteTracks()\n    },\n    get allLocalTracks () {\n      return getAllLocalTracks()\n    },\n    warmup,\n    addTracks,\n    removeTracks,\n    replaceTrack,\n    setTransceiversDirection,\n    // Negotiation APIs.\n    createOffer,\n    createAnswer,\n    setLocalDescription,\n    getRemoteDescription,\n    getLatestRemoteDesc,\n    generateOffer,\n    processOffer,\n    generateAnswer,\n    processAnswer,\n    iceCollectionCheckResult,\n    // Other APIs.\n    recreatePeer,\n    rollbackLocalDescription,\n    addIceCandidate,\n    restartIce,\n    getDtlsRole,\n    end,\n    sendDTMF,\n    getStats,\n    setParameters,\n    getRemoteTrackIdsFromTransceivers,\n    getIncomingRemoteTrackIds,\n    getActiveRemoteTrackIds,\n    insertAudio,\n    // Event APIs.\n    on,\n    once,\n    off\n  }\n}\n","import { MEDIA_DIR } from '../constants'\nimport { values, includes } from 'lodash/fp'\n\nimport { logManager } from '../logs'\nconst log = logManager.getLogger('SdpPipeline')\n\n/**\n * Sets a transceiver's direction.\n * Checks that the desired direction is a valid one.\n * @method setTransceiverDirection\n * @param {Object} transceiver The transceiver that we want to modify.\n * @param {String} targetDirection The desired direction we want to change to.\n * @return {Boolean} Indicator on whether the transceiver direction was successfully changed.\n */\nexport function setTransceiverDirection (transceiver, targetDirection) {\n  if (!includes(targetDirection, values(MEDIA_DIR))) {\n    log.info(`Invalid direction \"${targetDirection}\"`)\n    return false\n  }\n\n  // Only in Safari:\n  //  - has transceiver.setDirection\n  //  - transceiver.direction is readOnly\n  if (transceiver.setDirection) {\n    transceiver.setDirection(targetDirection)\n  } else {\n    transceiver.direction = targetDirection\n  }\n  return true\n}\n","/**\n * Extracts the session ID from the SDP.\n * Session ID is located in the o= line.\n * Ref: https://tools.ietf.org/html/rfc4566#section-5.2\n * @method getSdpSessionId\n * @param  {string} sdp A valid SDP string.\n * @return {string} The SDP's session ID.\n */\nexport function getSdpSessionId (sdp) {\n  const oLine = sdp.match(/o=.*/gm)\n\n  if (oLine && oLine[0]) {\n    return oLine[0].split(' ')[1]\n  }\n}\n","import { logManager } from '../logs'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/*\n * A conversion from MediaDeviceInfo.kind values to their more common terms.\n * See: https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/kind\n * @enum {String}\n */\nexport const WEBRTC_DEVICE_KINDS = {\n  audioinput: 'microphone',\n  videoinput: 'camera',\n  audiooutput: 'speaker'\n}\n\n/**\n * Manager for connected devices.\n * Keeps an up-to-date list of all devices.\n * @class DeviceManager\n */\nexport default function DeviceManager () {\n  const log = logManager.getLogger('Manager', 'Device')\n\n  // Internal variables.\n  const emitter = new EventEmitter()\n  // Store each device type separately, so that `deviceId` is unique\n  //    per kind (there is a `default` deviceId per kind).\n  let microphone = []\n  let camera = []\n  let speaker = []\n\n  // Check devices on initialization.\n  checkDevices().then(() => {\n    // Emit an initial event to notify that devices are available.\n    emitter.emit('change')\n  })\n\n  // Check devices whenever they change.\n  let recentDeviceChange = false\n  navigator.mediaDevices.addEventListener('devicechange', () => {\n    log.info('Media device change detected.')\n    // A physical device change results in one event per\n    // device \"kind\". Group the events together.\n    if (!recentDeviceChange) {\n      recentDeviceChange = true\n      setTimeout(() => {\n        recentDeviceChange = false\n        checkDevices().then(() => {\n          // Emit an event to notify of the change.\n          emitter.emit('change')\n        })\n      }, 50)\n    }\n  })\n\n  /**\n   * Updates the stored device lists with the latest devices.\n   * @method checkDevices\n   * @return {Promise}\n   */\n  function checkDevices () {\n    log.info('Checking media devices.')\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices\n        .enumerateDevices()\n        .then(devices => {\n          // Clear the stored devices, to prevent duplicates.\n          microphone = []\n          camera = []\n          speaker = []\n          devices.forEach(device => {\n            const kind = WEBRTC_DEVICE_KINDS[device.kind]\n            switch (kind) {\n              case 'microphone':\n                microphone.push(device)\n                break\n              case 'camera':\n                camera.push(device)\n                break\n              case 'speaker':\n                speaker.push(device)\n                break\n            }\n          })\n          resolve(get())\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Ask for permission and gets the list of available device(s) available from the end-user's devices.\n   * @method setupDeviceInitialization\n   * @param browserConstraints\n   * @return {Object}\n   */\n\n  function setupDeviceInitialization (browserConstraints) {\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices\n        .getUserMedia(browserConstraints)\n        .then(mediaStream => {\n          mediaStream.getTracks().forEach(track => {\n            track.stop()\n          })\n          const devices = checkDevices()\n          resolve(devices)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Retrieves the stored device lists.\n   * @method get\n   * @return {Object}\n   */\n  function get () {\n    return {\n      microphone,\n      camera,\n      speaker\n    }\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    checkDevices,\n    setupDeviceInitialization,\n    get,\n    on,\n    once,\n    off\n  }\n}\n","import Track from '../models/track'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Manager / store for Track objects.\n * @method TrackManager\n */\nexport default function TrackManager () {\n  /**\n   * The Track objects being managed.\n   * @type {Map}\n   */\n  const tracks = new Map()\n  const emitter = new EventEmitter()\n\n  /**\n   * Retrieve a Track object.\n   * @method get\n   * @param  {string} trackId\n   * @return {Track}\n   */\n  function get (trackId) {\n    return tracks.get(trackId)\n  }\n\n  /**\n   * Retrieve a list of Track objects.\n   * If no tracks are specified, will return all tracks.\n   * @method getTracks\n   * @param  {Array} [trackIds] List of tracks to retrieve.\n   * @return {Array}\n   */\n  function getTracks (trackIds) {\n    if (trackIds) {\n      return trackIds.map(trackId => tracks.get(trackId))\n    } else {\n      return Array.from(tracks.values())\n    }\n  }\n\n  /**\n   * Wraps a MediaStreamTrack into a Track object and adds\n   *    it to the manager.\n   * @method add\n   * @param  {MediaStreamTrack} track A native track object.\n   * @param  {MediaStream} stream\n   * @param  {boolean} isLocalTrack Specifies if the track parameter is a local one or a remote one.\n   * @return {Track} The added/wrapped Track object.\n   */\n  function add (track, stream, isLocalTrack) {\n    const targetTrack = tracks.get(track.id)\n\n    // Chrome issue: track.stream is outdated and needs to be updated to newStream.\n    // targetTrack.stream.active is false & targetTrack.stream.getTracks() gives us an empty array.\n    // stream.active is true & stream.getTracks() gives us the correct array of tracks.\n    // Set/update the new stream as the track's stream\n    if (targetTrack && !targetTrack.getStream().active && stream.active) {\n      // The track was previously registered and is being re-added with new stream\n      targetTrack.setStream(stream)\n      return targetTrack\n    } else if (targetTrack) {\n      // This track is already registered.\n      return targetTrack\n    } else {\n      // Wrap the track as a Track object.\n      const wrappedTrack = new Track(track, stream)\n\n      // Mark it as local (or remote) before we save it in the state\n      wrappedTrack.setIsLocal(isLocalTrack)\n\n      tracks.set(track.id, wrappedTrack)\n\n      // Remove the track from the manager when it ends.\n      wrappedTrack.once('ended', event => {\n        if (!event.isUnsolicited) {\n          remove({ trackId: track.id })\n        }\n      })\n\n      emitter.emit('add', wrappedTrack.id)\n      return wrappedTrack\n    }\n  }\n\n  /**\n   * Remove a Track from the manager.\n   * @method remove\n   * @param  {string} trackId\n   * @return {Boolean} Whether the Track existed (and hence removed).\n   */\n  function remove ({ trackId }) {\n    const track = get(trackId)\n    if (track) {\n      tracks.delete(trackId)\n      // Clean up any listeners.\n      track.off('ended', remove)\n      emitter.emit('remove', trackId)\n    }\n\n    return Boolean(track)\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    get,\n    getTracks,\n    add,\n    remove,\n    on,\n    once,\n    off\n  }\n}\n","/**\n * \"Manager\" for general WebRTC functions.\n * @class WebRTCManager\n */\nexport default function WebRTCManager (managers) {\n  /**\n   * Retrieve the list of available and supported codecs based on the browser's capabilities for sending media.\n   * @method getAvailableCodecs\n   * @param {string} kind The kind of media of which to get the supported codecs of.\n   * @return {Array}\n   */\n  function getAvailableCodecs (kind) {\n    return RTCRtpSender.getCapabilities(kind).codecs\n  }\n  /**\n   * The exposed API.\n   */\n  return {\n    getAvailableCodecs\n  }\n}\n","import { logManager } from '../logs'\nimport { makeSafeForCSS } from '../utils'\n\n/**\n * Renderer for managing where Tracks are rendered.\n */\nexport default function Renderer () {\n  /*\n   * Object holding reference to all tracks currently rendered and to where.\n   *    Entry format: { containers, rendererId }\n   *    `containers` is the array of HTMLElements where the track is rendered.\n   *    `rendererId` is the ID used when creating DOM elements for this track.\n   */\n  const entries = {}\n\n  /**\n   * Renders this Track as a subelement of the specified element.\n   * @method renderTrack\n   * @param  {HTMLElement|String} container The DOM element to be rendered in,\n   *    or a unique CSS selector for the DOM element.\n   * @param  {String} [speakerId] The device ID to be used for audio output.\n   * @return {boolean} true if rendering of track suceeded, false otherwise.\n   */\n  function renderTrack (track, container, speakerId) {\n    const log = logManager.getLogger('Track', track.id)\n\n    let element\n    // If a string was provided, use it as a CSS selector to find the element.\n    if (typeof container === 'string') {\n      log.info(`Rendering track in element using selector: ${container}`)\n\n      element = document.querySelector(container)\n      if (!element) {\n        log.error(`Unable to get container with selector: ${container}.`)\n        return false\n      }\n    } else {\n      log.info('Rendering track in provided HTMLElement.')\n      element = container\n    }\n\n    const type = track.getState().kind\n    // Create a unique rendering ID for this track.\n    const rendererId = `${type}-${makeSafeForCSS(track.id)}`\n\n    // Get the existing entry for this track.\n    let entry = entries[track.id]\n    if (entry) {\n      if (entry.containers.indexOf(element) > -1) {\n        // Already rendered in element.\n        log.warn('Failed to render track; already rendered in element.')\n        return false\n      } else {\n        // Rendering the track in a second element; no issue with that.\n      }\n    } else {\n      // Create an empty entry; track is not rendered anywhere else.\n      entry = { containers: [], rendererId }\n    }\n\n    // Element is a valid place to render track, so add it to the entry then render it.\n    entry.containers.push(element)\n\n    const renderer = document.createElement(type)\n    renderer.id = rendererId\n    renderer.style.height = '100%'\n    renderer.style.width = '100%'\n\n    const stream = track.getStream()\n    try {\n      renderer.srcObject = stream\n    } catch (error) {\n      log.debug('srcObject property not supported; reverting to createObjectURL.')\n      // TODO: AdapterJS handles this, we should remove this.\n      renderer.src = window.URL.createObjectURL(stream)\n    }\n\n    renderer.autoplay = 'true'\n\n    if (type === 'video') {\n      renderer.muted = 'true'\n      // Needed for IOS autoplay.\n      renderer.playsInline = 'true'\n      // Needed for Android.\n      renderer.play().catch(err => {\n        log.debug(`Could not autoplay renderer #${renderer.id}: ${err.message}`)\n      })\n    }\n\n    // Set speaker if it was provided and it's supported.\n    if (speakerId && typeof renderer.setSinkId !== 'undefined') {\n      // TODO: Better then/catch handling.\n      renderer\n        .setSinkId(speakerId)\n        .then(() => {\n          log.debug(`Set to use speaker: ${speakerId}.`)\n        })\n        .catch(error => {\n          log.debug(`Could not set speaker to use ${speakerId}: ${error.message}`)\n        })\n    } else if (speakerId && typeof renderer.setSinkId === 'undefined') {\n      log.info('Failed to set speaker; setSinkId not supported in this browser.')\n    }\n\n    element.appendChild(renderer)\n\n    // Save the new/updated entry to the Renderer scope.\n    entries[track.id] = entry\n    return true\n  }\n\n  /**\n   * Stop rendering this Track from the specified element.\n   * @method unrenderTrack\n   * @param  {string}      trackId   ID of the track to be unrendered.\n   * @param  {HTMLElement} container The DOM element to be removed from, or\n   *     a unique CSS selector for the DOM element.\n   * @return {boolean} true if unrendering of track suceeded, false otherwise.\n   */\n  function unrenderTrack (trackId, container) {\n    const log = logManager.getLogger('Track', trackId)\n\n    // Get the existing entry for this track.\n    const entry = entries[trackId]\n    if (!entry) {\n      log.info('Failed to unrender track; not rendered anywhere.')\n      return false\n    }\n\n    let element\n    // If a string was provided, use it as a CSS selector to find the element.\n    if (typeof container === 'string') {\n      log.info(`Unrendering track from element using selector: ${container}`)\n\n      element = document.querySelector(container)\n      if (!element) {\n        log.error(`Unable to get container with selector: ${container}.`)\n        return false\n      }\n    } else {\n      log.info('Unrendering track from provided HTMLElement.')\n      element = container\n    }\n\n    const index = entry.containers.findIndex(item => item === element)\n    if (index === -1) {\n      // Not rendered in element.\n      log.info('Failed to unrender track; not rendered in element.')\n      return false\n    }\n\n    const renderer = element.querySelector(`#${entry.rendererId}`)\n\n    if (renderer.srcObject) {\n      renderer.srcObject = null\n    } else if (renderer.src) {\n      renderer.src = null\n    }\n    element.removeChild(renderer)\n\n    entry.containers.splice(index, 1)\n    // If this track isn't rendered anywhere anymore, remove the reference to it.\n    if (entry.containers.length === 0) {\n      delete entries[trackId]\n    }\n    return true\n  }\n\n  return {\n    renderTrack,\n    unrenderTrack\n  }\n}\n","// Re-use the no-op auth plugin.\nimport noopAuth from '../noop'\n\nimport { anonymousConnect, anonymousDisconnect } from './sagas'\nimport { extendSubscription } from '../oldLink/sagas'\nimport { mergeValues } from '../../common/utils'\n\n// Parse and/or Validate\nimport { enums, validation as v8n, parse } from '../../../src/common/validation'\n\n/**\n * Configuration options for the CallMe Authentication feature.\n * @public\n * @name config.authentication\n * @memberof config\n * @instance\n * @param {Object}  authentication Authentication configs.\n * @param {Object}  authentication.subscription\n * @param {number} [authentication.subscription.serviceUnavailableMaxRetries=3] The maximum number of times this client will retry in order to subscribe for a\n * given service, while getting 'Service Unavailable' from backend.\n * @param {string} [authentication.subscription.protocol='https'] Protocol to be used for subscription requests.\n * @param {string}  authentication.subscription.server Server to be used for subscription requests.\n * @param {Number} [authentication.subscription.port=443] Port to be used for subscription requests.\n * @param {Array}  [authentication.subscription.service] Services to subscribe to for notifications.\n * @param {Object}  authentication.websocket\n * @param {string} [authentication.websocket.protocol='wss'] Protocol to be used for websocket notifications.\n * @param {string}  authentication.websocket.server Server to be used for websocket notifications.\n * @param {Number} [authentication.websocket.port=443] Port to be used for websocket notifications.\n */\n\nexport const defaultOptions = {\n  subscription: {\n    serviceUnavailableMaxRetries: 3,\n    protocol: 'https',\n    server: null,\n    port: 443,\n    version: '1', // not documented, but important\n    service: []\n  },\n  websocket: {\n    protocol: 'wss',\n    server: null,\n    port: 443\n  }\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  subscription: v8n.schema({\n    serviceUnavailableMaxRetries: v8n.positive(),\n    protocol: enums(['http', 'https']),\n    server: v8n.string(),\n    port: v8n.positive(),\n    version: enums(['1']), // not documented, but important\n    service: v8n.array().every.string()\n  }),\n  websocket: v8n.schema({\n    protocol: v8n.string(),\n    server: v8n.string(),\n    port: v8n.positive()\n  })\n})\nconst parseOptions = parse('authentication', v8nValidation)\n\n/**\n * Auth plugin factory for callMe scenarios.\n * @method callMeAuth\n * @param  {Object} options Configuration options for authentication. See above.\n * @return {Object} A callMe authentication plugin.\n */\nexport default function callMeAuth (options = {}) {\n  options = mergeValues(defaultOptions, options)\n  parseOptions(options)\n\n  // Use the no-op auth plugin as a basis.\n  const authComponents = noopAuth(options)\n\n  // Add in the sagas.\n  authComponents.sagas = [anonymousConnect, anonymousDisconnect, extendSubscription]\n\n  return authComponents\n}\n","// Auth plugin.\nimport { reducer, name, api } from '../interface'\n\n// Other plugins.\nimport { update as updateConfig } from '../../config/interface/actions'\n\n// Libraries.\nimport { mergeValues } from '../../common/utils'\nimport { pick } from 'lodash/fp'\nimport { put } from 'redux-saga/effects'\n\n/**\n * Basic auth plugin that has exposes no implementation.\n * For use with special case builds which don't use an auth plugin,\n *      but need to store authentication state.\n * @method baseAuth\n * @return {Object} A base authentication plugin.\n */\nexport default function baseAuth (options = {}) {\n  const defaultOptions = {\n    subscription: {\n      expires: 3600,\n      // Note: No default `service`.\n      protocol: 'https',\n      version: '1',\n      port: '443'\n    },\n    websocket: {\n      protocol: 'wss',\n      port: '443'\n    }\n  }\n  options = mergeValues(defaultOptions, options)\n\n  function * init () {\n    yield put(updateConfig(options, name))\n  }\n\n  // Modified auth API. Only exposes state getters.\n  function noopAPI ({ dispatch, getState }) {\n    const normalAPI = api({ dispatch, getState })\n\n    // Auth APIs that only return state.\n    const apiGetters = ['getUserInfo', 'getConnection', 'getServices']\n    return pick(apiGetters, normalAPI)\n  }\n\n  return {\n    name,\n    reducer,\n    init,\n    api: noopAPI\n  }\n}\n","import reducer from './reducers'\nimport name from './name'\nimport api from './api'\n\nexport { reducer, name, api }\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\n\nimport { merge } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.CONNECT] = {\n  next (state) {\n    return {\n      ...state,\n      isPending: true,\n      error: undefined\n    }\n  }\n}\n\nreducers[actionTypes.SET_CONNECTION_INFO] = {\n  next (state, action) {\n    return {\n      ...state,\n      platform: action.meta.platform,\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: action.payload.connection\n      },\n      userInfo: action.payload.userInfo\n    }\n  }\n}\n\nreducers[actionTypes.CONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      isConnected: true,\n      isPending: false,\n      error: undefined,\n      isSSO: action.meta.isSSO,\n      platform: action.meta.platform,\n      // Separate subscription, connection info based on the platform used.\n      // Store platform subscription information.\n      subscription: {\n        ...state.subscription,\n        [action.meta.platform]: action.payload.subscription\n      },\n      // Store platform connection information to be provided to other plugins.\n      connection: action.payload.connection\n        ? { ...state.connection, [action.meta.platform]: action.payload.connection }\n        : { ...state.connection },\n      // Store user information to be provided to developers.\n      userInfo: action.payload.userInfo ? action.payload.userInfo : state.userInfo\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isConnected: false,\n      isPending: false,\n      error: action.payload\n    }\n  }\n}\n\n// On connection occurred, store the connection information into state, but do\n// not update any status state. The connection has not yet finished.\nreducers[actionTypes.CONNECTION_OCCURRED] = {\n  next (state, action) {\n    return {\n      ...state,\n      // Separate subscription, connection info based on the platform used.\n      // Store platform subscription information.\n      subscription: {\n        ...state.subscription,\n        [action.meta.platform]: action.payload.subscription\n      },\n      // Store platform connection information to be provided to other plugins.\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: action.payload.connection\n      }\n    }\n  }\n}\n\nreducers[actionTypes.DISCONNECT] = {\n  next (state) {\n    return {\n      ...state,\n      isPending: true,\n      error: undefined\n    }\n  }\n}\n\n/*\n * Clear the authentication state when we disconnect.\n * Note: This should only be for 3.X (and 4.X backwards-compatible connect API)\n *    authentication.\n */\nreducers[actionTypes.DISCONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      isConnected: false,\n      isPending: false,\n      error: undefined\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      // Treat an error as if we are still disconnected.\n      isConnected: false,\n      isPending: false,\n      error: action.payload\n    }\n  }\n}\n\nreducers[actionTypes.REFRESH_TOKENS_FINISHED] = {\n  next (state, action) {\n    // Merge the updated requestOptions into the current state.\n    const requestOptions = merge(\n      state.connection[action.meta.platform].requestOptions,\n      action.payload.connection.requestOptions\n    )\n\n    return {\n      ...state,\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: {\n          ...state.connection[action.meta.platform],\n          ...action.payload.connection,\n          requestOptions\n        }\n      },\n      userInfo: {\n        ...state.userInfo,\n        accessToken: action.payload.connection.accessToken,\n        refreshToken: action.payload.connection.refreshToken\n      }\n    }\n  }\n}\n\n/*\n * Updates the subscription information for a specified platform.\n */\nreducers[actionTypes.UPDATE_SUBSCRIPTION_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      subscription: {\n        ...state.subscription,\n        [action.meta.platform]: {\n          ...state.subscription[action.meta.platform],\n          ...action.payload\n        }\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SET_TOKEN] = {\n  next (state, action) {\n    // We received an idToken which is a JWT token that represents the identity of\n    // the user. This token contains information about the user. For now we only need\n    // the username. In the future we might use more from this token.\n    const idTokenPayload = action.payload.idToken\n    return {\n      ...state,\n      userInfo: {\n        ...state.userInfo,\n        accessToken: action.payload.accessToken,\n        username: idTokenPayload.preferred_username,\n        identity: idTokenPayload['services-identity']\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SET_CREDENTIALS_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      error: undefined,\n      platform: action.meta.platform,\n      // Store platform connection information to be provided to other plugins.\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: action.payload.connection\n      },\n      // Store user information to be provided to developers.\n      userInfo: action.payload.userInfo\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      error: action.payload\n    }\n  }\n}\n\n/*\n * Remove the x-token from the request header after subscription is successful.\n */\nreducers[actionTypes.UPDATE_HMAC_TOKEN] = {\n  next (state, action) {\n    const { 'x-token': _removed, ...removeXtoken } = state.connection[action.meta.platform].requestOptions.headers\n\n    const headers = {\n      ...removeXtoken,\n      'x-session': action.payload\n    }\n\n    return {\n      ...state,\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: {\n          ...state.connection[action.meta.platform],\n          requestOptions: {\n            ...state.connection[action.meta.platform].requestOptions,\n            headers\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Auth Interface reducer\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n * @example\n * Auth state structure example; connected.\n * authState = {\n *     isConnected: true,\n *     isPending: false,\n *     error: undefined,\n *     subscription: { ... },\n *     connection: { ... },\n *     userInfo: { ... }\n * }\n */\nconst reducer = handleActions(reducers, {\n  isConnected: false,\n  isPending: false\n})\nexport default reducer\n","/**\n * This interface is for an authentication plugin.\n * @type {string}\n */\nconst name = 'authentication'\nexport default name\n","import * as actions from './actions'\nimport { getUserInfo as selectUserInfo, getServices } from './selectors'\nimport { SUBSCRIPTION_STATE, DISCONNECT_REASONS } from '../constants'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\nimport jwtDecode from 'jwt-decode'\nconst log = logManager.getLogger('AUTH')\n\n/**\n * Authentication API.\n * @method api\n * @param  {Function} $0\n * @param  {Function} $0.dispatch - The redux store's dispatch function.\n * @param  {Function} $0.getState - The redux store's getState function.\n * @return {Object} api - The authentication API object.\n */\nexport default function api ({ dispatch, getState }) {\n  return {\n    /**\n     * If you're authenticating with tokens that expire and have not provided a refresh token to the `connect` function, you can update your access token with `updateToken` before it expires to stay connected.\n     *\n     * @public\n     * @memberof api\n     * @requires accessTokenAuth\n     * @requires accessTokenAuthCIM\n     * @method updateToken\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.accessToken An access token for the user with the provided user Id.\n     */\n    /**\n     * If you're authenticating with tokens that expire and have not provided a refresh token to the `connect` function, you can update your access token with `updateToken` before it expires to stay connected.\n     *\n     * @public\n     * @memberof api\n     * @requires oauthToken\n     * @method updateToken\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.oauthToken An OAuth token provided by an outside service.\n     * @example\n     * client.updateToken({\n     *   username: 'alfred@example.com',\n     *   oauthToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT'\n     * });\n     */\n    /**\n     * If you're authenticating with tokens that expire, you can update your access token with `updateToken` before it expires to stay connected.\n     *\n     * @public\n     * @memberof api\n     * @requires bearerAccessTokenAuth\n     * @method updateToken\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.bearerAccessToken A bearerAccessToken provided by an outside service.\n     * @example\n     * client.updateToken({\n     *   username: 'alfred@example.com',\n     *   bearerAccessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * });\n     */\n    updateToken (credentials) {\n      // We won't expose oauthToken because it essentially acts as a password being used in conjunction with username\n      // ..and passwords should NOT be logged.\n      log.debug(API_LOG_TAG + 'updateToken: ', credentials.username)\n      dispatch(actions.refreshTokens(credentials))\n    },\n\n    /**\n     * Updates the current connection.\n     *\n     * @public\n     * @memberof api\n     * @requires updateConnection\n     * @method updateConnection\n     * @param {Object} connection\n     * @param {Array} connection.services Services to subscribe to for notifications.\n     * @example\n     * client.updateConnection({\n     *   services: ['IM', 'Presence', 'call']\n     * })\n     */\n    updateConnection (connection) {\n      log.debug(API_LOG_TAG + 'updateConnection: ', connection)\n      dispatch(actions.updateSubscription(connection))\n    },\n\n    /**\n     * Retrieves information about the current user.\n     *\n     * @public\n     * @memberof api\n     * @method getUserInfo\n     * @returns {Object} user The user data.\n     * @returns {string} user.username The username of the current user. Note that this username can take different encoded forms.\n     *                                 It's not meant to be displayed to a user.\n     * @returns {string} user.token The current access token.\n     */\n    getUserInfo () {\n      log.debug(API_LOG_TAG + 'getUserInfo')\n      return selectUserInfo(getState())\n    },\n\n    /**\n     * Get the connection state.\n     *\n     * @public\n     * @memberof api\n     * @requires connect\n     * @method getConnection\n     * @returns {Object} connection The connection state.\n     * @returns {boolean} connection.isConnected Whether the authenticated user is currently connected.\n     * @returns {boolean} connection.isPending Whether the authenticated user's connection is currently pending.\n     * @returns {Object} connection.error The error object if an error occurred.\n     * @returns {string} connection.error.message The error message.\n     * @returns {string} connection.error.stack The stack trace of the error.\n     */\n    getConnection () {\n      log.debug(API_LOG_TAG + 'getConnection')\n      const { isConnected, isPending, error } = getState().authentication\n      return {\n        isConnected,\n        isPending,\n        error,\n        subscription: getServices(getState())\n      }\n    },\n\n    /**\n     * Retrieves the services that the user is subscribed for.\n     *\n     * @public\n     * @memberof api\n     * @requires services\n     * @method getServices\n     * @return {Array} A list of subscribed-to services.\n     */\n    getServices () {\n      log.debug(API_LOG_TAG + 'getServices')\n      return getServices(getState())\n    },\n\n    /**\n     * Possible subscription states of the user.\n     *\n     * @public\n     * @memberof api\n     * @requires connect\n     * @property {string} FULL All requested feature subscriptions exist.\n     * @property {string} PARTIAL Some feature subscriptions exist.\n     * @property {string} NONE No feature subscriptions exist.\n     */\n    subscriptionStates: SUBSCRIPTION_STATE,\n\n    /**\n     * Possible reasons for disconnecting.\n     *\n     * @public\n     * @memberof api\n     * @requires connect\n     * @property {string} GONE Connection was terminated by the server\n     * @property {string} LOST_CONNECTION Internet connection was lost\n     * @property {string} WS_OVERRIDDEN WebSocket was overridden by the server\n     */\n    disconnectReasons: DISCONNECT_REASONS,\n\n    /**\n     * Sets the authentication tokens necessary to make requests to the platform. The access token\n     * provided establishes what can be accessed by the SDK. The identity token represents who is authenticated.\n     *\n     * @public\n     * @memberof api\n     * @requires cpaasAuth\n     * @method setTokens\n     * @param {Object} params Dictionary object of parameters.\n     * @param {string} params.accessToken An access token retrieved using the authentication APIs of the platform.\n     * @param {string} params.idToken An identity token retrieved using the authentication APIs of the platform.\n     * @example\n     * client.setTokens({\n     *   accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n     *   idToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * })\n     */\n    setTokens ({ accessToken, idToken }) {\n      // We won't log both tokens, just the id one, so that we can still be able to debug.\n      log.debug(API_LOG_TAG + 'setTokens: ', idToken)\n\n      // validate token\n      try {\n        const jwt = jwtDecode(idToken)\n        dispatch(actions.setTokens({ accessToken, idToken: jwt }))\n      } catch (error) {\n        log.error(`${idToken} is not a valid JWT`)\n      }\n    },\n\n    /**\n     * Sets the user credentials necessary to make requests to the platform.\n     *\n     * @public\n     * @memberof api\n     * @requires userCredentialsAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username including the application's domain.\n     * @param {string} credentials.password The user's password.\n     * @param {string} [credentials.authname] The user's authorization name.\n     * @example\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   password: '********'\n     *   authname: '********'\n     * });\n     */\n    /**\n     * Sets the username and HMAC token necessary to make requests to the platform.\n     * An HMAC token is used to verify a user via the user's authorization within an of organization.\n     * HMAC tokens are generated by using the HmacSHA1 algorithm and a key on a data object\n     * containing an `authenticationTokenRequest` object with the following properties:\n     * - subscriberId - The user's subscriber ID in the organization.\n     * - organizationId - The ID of the organization the user is a part of.\n     *\n     * @public\n     * @memberof api\n     * @requires hmacTokenAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username.\n     * @param {string} credentials.hmacToken An HMAC token for the user with the provided user ID.\n     * @example\n     * const hmacToken = HmacSHA1Algorithm({\n     *   authenticationTokenRequest: {\n     *     subscriberId: 'alfred',\n     *     organizationId: 'example.com'\n     *   }\n     * }, key)\n     *\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   hmacToken\n     * });\n     */\n    /**\n     * Provides a bearerAccessToken to any backend services that the SDK instance deals with.\n     * The bearerAccessToken provided establishes what can be accessed by the SDK.\n     *\n     * @public\n     * @memberof api\n     * @requires bearerAccessTokenAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.bearerAccessToken A bearerAccessToken retrieved using the authentication APIs of the platform.\n     * @example\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   bearerAccessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * });\n     */\n    /**\n     * Sets the authentication tokens necessary to make requests to the platform. The bearerAccessToken\n     * provided establishes what can be accessed by the SDK. The identity token represents who is authenticated.\n     *\n     * @public\n     * @memberof api\n     * @requires cpaasAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.bearerAccessToken A bearerAccessToken retrieved using the authentication APIs of the platform.\n     *                                               The bearerAccessToken is same as the access token for the cpaas platform.\n     * @param {string} credentials.idToken An identity token retrieved using the authentication APIs of the platform.\n     * @example\n     * client.setCredentials({\n     *   bearerAccessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n     *   idToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * });\n     */\n    /**\n     * Provides an access token to any backend services that the SDK instance deals with.\n     * The access token provided establishes what can be accessed by the SDK.\n     *\n     * @public\n     * @memberof api\n     * @requires accessTokenAuthCIM\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.accessToken An accessToken retrieved using the authentication APIs of the platform. Used for CIM authentication.\n     * @example\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   accessToken: 'ATgtBl8QAoJaeeJU!zhARKBYaN2BUxFQsc8F...'\n     * });\n     */\n    setCredentials ({ username, password, authname, hmacToken, bearerAccessToken, idToken, accessToken }) {\n      log.debug(API_LOG_TAG + 'setCredentials: ', username)\n      // TODO: Refactor into multiple actions for each credential mode\n      // TODO: Validation of two authentication possibility scenario\n      dispatch(\n        actions.setCredentials({\n          username,\n          password,\n          authname,\n          hmacToken,\n          bearerAccessToken,\n          idToken,\n          accessToken\n        })\n      )\n    }\n  }\n}\n","function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","// Auth plugin.\nimport * as actionTypes from '../interface/actionTypes'\nimport * as actions from '../interface/actions'\nimport { getAuthConfig, getServiceUnavailableMaxRetries } from '../interface/selectors'\nimport { subscribe } from '../subscription/requests'\n\nimport { disconnect } from '../oldLink/sagas'\n\n// Other plugins.\nimport { connectWebsocket } from '../../connectivity/interface/effects'\nimport BasicError, { authCodes } from '../../errors'\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { call, put, select, take, delay } from 'redux-saga/effects'\n\n// Constants\nimport { platforms } from '../../constants'\n\nconst log = logManager.getLogger('AUTH')\n\n/**\n * Handles anonymous subscription and establishing the websocket.\n * Mocks the connection process using the auth actions to trigger required\n *      side-effects elsewhere.\n * @method anonymousConnect\n * @param  {Object} action A CONNECT action.\n * @return {Object} Response or error object.\n */\nexport function * anonymousConnect () {\n  while (true) {\n    const action = yield take(actionTypes.CONNECT)\n\n    // Retrieve the connection info.\n    const config = yield select(getAuthConfig)\n\n    const requestOptions = {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    }\n    const { credentials } = action.payload\n    if (credentials.realm) {\n      requestOptions.queryParams = {\n        tokenrealm: credentials.realm\n      }\n    }\n\n    const subscriptionInfo = {\n      ...config.subscription,\n      isAnonymous: true,\n      // TODO: Hardcode / override this here?\n      service: ['callMe']\n    }\n\n    let response\n    let attemptNum = 1 // keeps count of how many subscription requests we sent so far\n    const maxReAttempts = yield select(getServiceUnavailableMaxRetries)\n\n    // 1 + : there will be one initial attempt followed by up to a maximum number of re-attempts.\n    while (attemptNum <= 1 + maxReAttempts) {\n      log.info('Subscribing to callMe service.')\n      response = yield call(subscribe, subscriptionInfo, credentials, requestOptions)\n\n      if (response.error) {\n        log.info('Subscription failed. Error: ', response.error)\n        if (response.error.code === authCodes.LINK_SUBSCRIBE_UNAVAILABLE && response.retryAfter) {\n          if (attemptNum === 1 + maxReAttempts) {\n            // Trigger the usual action in case of failure & abort right away.\n            // NOTE: This action won't mention the fact that we tried so many times,\n            // as it should be transparent to the application level.\n            yield put(actions.connectFinished(response, platforms.LINK))\n            // Just the log would include this info, to help in debugging.\n            log.debug(`Subscription failed: ${response.error} after ${attemptNum - 1} re-attempts.`)\n            return\n          }\n\n          // Wait for the subscribe delay\n          yield delay(response.retryAfter)\n          log.debug(`Retrying after a ${response.retryAfter} ms delay...`)\n\n          // Attempt another `subscribe` request by\n          // incrementing our attempts count.\n          // We got a 503 error, but we're still allowed to retry our `subscribe` request.\n          // We also won't log any of these intermediary 503 errors, since we'll make yet another attempt.\n          attemptNum++\n        } else {\n          // We got an error other than 503 (or the 503 did not have a retryAfter value).\n          // Either way, we treat it as a final error as it should mark the end of our attempts.\n          yield put(actions.connectFinished(response, platforms.LINK))\n\n          if (attemptNum > 1) {\n            log.debug(`Subscription subsequently failed: ${response.error} (after getting an initial 503 response).`)\n          } else {\n            // We got an error the first time we tried to subscribe.\n            log.debug(`Subscription failed: ${response.error.message}`)\n          }\n          return\n        }\n      } else if (!response.subscriptionParams.service.includes('callMe')) {\n        // Subscription was successful, but didn't include the callMe service.\n        log.info('Subscription failed. Call Me service not provided with subscription.')\n        yield put(\n          actions.connectFinished({\n            error: new BasicError({\n              message: 'Subscription failed to receive required service: callMe',\n              code: authCodes.MISSING_SERVICE\n            })\n          })\n        )\n        return\n      } else {\n        // We got a succesul response to our latest `subscribe` request,\n        // so cancel any further `subscribe` attempts.\n        break\n      }\n    }\n\n    log.info('Successfully subscribed to callMe service. Connecting to websocket.')\n\n    // Connect the websocket.\n    const websocketInfo = {\n      ...config.websocket,\n      url: response.subscriptionParams.notificationChannel\n    }\n\n    // Request the websocket connection.\n    const wsResponse = yield connectWebsocket(websocketInfo, platforms.LINK)\n\n    if (wsResponse.error) {\n      log.info('Failed to connect to websocket. Error: ', wsResponse.error)\n      // Websocket failed to connect.\n      yield put(\n        actions.connectFinished(\n          {\n            error: wsResponse.payload\n          },\n          platforms.LINK\n        )\n      )\n      continue\n    }\n    log.info('Successfully connected to websocket.')\n\n    yield put(\n      actions.connectFinished(\n        {\n          userInfo: {\n            username: action.payload.credentials.anonUsername\n          },\n          subscription: {\n            ...response.subscriptionParams,\n            url: response.subscription\n          },\n          connection: {\n            server: {\n              ...config.subscription\n            },\n            username: action.payload.credentials.username,\n            requestOptions,\n            // Store the fact that this is an anonymous subscription as part of\n            //      connection state.\n            isAnonymous: true,\n            realm: action.payload.credentials.realm\n          }\n        },\n        platforms.LINK\n      )\n    )\n  }\n}\n\n/**\n * Entry saga for disconnection.\n * Anonymous disconnect is no different than regular disconnect,\n *      so re-use the regular logic from link.\n * @method anonymousDisconnect\n */\nexport function * anonymousDisconnect () {\n  while (true) {\n    yield take(actionTypes.DISCONNECT)\n\n    log.info('Unsubscribing from callMe services.')\n    // Call the link disconnect saga.\n    yield call(disconnect)\n  }\n}\n","import { SUBSCRIPTION_STATE } from '../constants'\n\n/**\n * Uses the requested and received SPiDR [subscription] services to determine\n *      the SDK subscription status for each service.\n * @method parseSpidrServices\n * @param  {Array}  requested The list of requested SPiDR services.\n * @param  {Array}  received The list of received SPiDR services.\n * @return {Object} Information about the SDK's subscriptions.\n */\nexport function parseSpidrServices (requested, received) {\n  // UC platform is not case-sensitive (Link is), so filter without caring about case.\n  const upperReceived = received.map(service => service.toUpperCase())\n\n  // Find the missing services.\n  const missing = requested.filter(function (reqService) {\n    // If the requested service was received (not caring about case),\n    //      it is not missing.\n    return upperReceived.indexOf(reqService.toUpperCase()) === -1\n  })\n\n  const subscriptions = {\n    requested,\n    received,\n    missing,\n    status: 'UNKNOWN',\n    services: {}\n  }\n\n  // Determine the overall subscription status.\n  if (received.length === 0) {\n    subscriptions.status = SUBSCRIPTION_STATE.NONE\n  } else if (received.length > 0 && missing.length > 0) {\n    subscriptions.status = SUBSCRIPTION_STATE.PARTIAL\n  } else if (received.length > 0 && requested.length === received.length) {\n    subscriptions.status = SUBSCRIPTION_STATE.FULL\n  } else {\n    // Should never reach this case.\n  }\n\n  // List the individual service statuses.\n  received.forEach(function (service) {\n    subscriptions.services[service] = true\n  })\n  missing.forEach(function (service) {\n    subscriptions.services[service] = false\n  })\n\n  return subscriptions\n}\n","/**\n * Retrieves the flag which specifies wether or not this SDK should use a custom header as part of any requests being sent to server.\n * This custom header refers to the current agent version,\n * but it may also contain additional custom information (see customAgentVersionHeaderSuffix).\n * @param {Object} state  The current Redux state object.\n * @return {boolean} True if custom header should be used, false otherwise.\n */\nexport function injectAgentVersionHeader (state) {\n  return state.config.requests.injectAgentVersionHeader\n}\n\n/**\n * Retrieves a custom suffix value which specifies any extra information that can be appended to the custom header.\n * This custom header is sent by the SDK, as part of any requests being sent to server.\n * @param {Object} state  The current Redux state object.\n * @return {string} The suffix value.\n */\nexport function customAgentVersionHeaderSuffix (state) {\n  return state.config.requests.customAgentVersionHeaderSuffix\n}\n","/*! https://mths.be/base64 v1.0.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '1.0.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","// Call plugin.\nimport pluginInterface from '../interface'\nimport createAnonApi from '../interface/api/anonymous'\n\nimport createMiddleware from '../link/middleware'\nimport createRequests from '../link/requests'\n\nimport * as linkOperations from '../link/operations'\nimport * as anonOperations from './operations'\n\nimport parseConfigs, { mergeDefaults } from '../configs'\n\nimport setupCallstack from '../callstack'\n\n// Other plugins.\nimport { update as updateConfig, setSdpHandlers } from '../../config/interface/actions'\n\n// Libraries.\nimport { getWebRTCSupportCapabilities } from 'kandy-webrtc'\n\n/**\n * Anonymous Call plugin factory.\n */\nexport default function anonCallFactory (options = {}, bottle) {\n  /*\n   * Init function to setup the Call plugin after the all plugins have been\n   *    created and redux set-up.\n   * Handles configuration provided by the application and puts it into state.\n   */\n  function initPlugin (container) {\n    const { context, logManager } = container\n    const log = logManager.getLogger('CALL')\n\n    const { mediaDevices, peerConnection } = getWebRTCSupportCapabilities()\n    if (!mediaDevices || !peerConnection) {\n      log.warn(\n        'Calls are not supported on this platform due to lack of WebRTC support. Call APIs will not be available.'\n      )\n    }\n\n    // Parse the options provided by the application and make any adjustments needed\n    //    (for backwards-compatibility reasons).\n    options = parseConfigs(options)\n    // Then merge the defaults into them and validate the values.\n    options = mergeDefaults(options)\n\n    // Change sdpSemantics to always be for Unified-Plan\n    if (options.defaultPeerConfig.sdpSemantics !== 'unified-plan') {\n      log.warn('Only `unified-plan` is supported as sdpSemantics. Switching to `unified-plan`.')\n      options.defaultPeerConfig.sdpSemantics = 'unified-plan'\n    }\n\n    context.dispatch(updateConfig(options, pluginInterface.name))\n\n    // `call.removeH264Codecs` was removed in v6.0, in faviour of createCodecRemover.\n    if (typeof options.removeH264Codecs !== 'undefined') {\n      log.warn(\n        'The `call.removeH264Codecs` configuration has been removed. Please see the documentation for the `sdpHandlers` configuration for how to implement similar behaviour.'\n      )\n    }\n\n    // Update the SDP handlers in the config (user provided + some of our own)\n    context.dispatch(setSdpHandlers(options.sdpHandlers))\n  }\n\n  // Initialize the Callstack in the bottle's scope.\n  setupCallstack(bottle)\n  // Initialize the Link+Anon-specific operations in the bottle's scope.\n  for (const name in linkOperations) {\n    linkOperations[name](bottle)\n  }\n  for (const name in anonOperations) {\n    anonOperations[name](bottle)\n  }\n\n  // Register the component factory functions to the bottle.\n  bottle.factory('CallAPI', createAnonApi)\n  bottle.factory('CallRequests', createRequests)\n\n  bottle.defer(initPlugin)\n\n  return {\n    name: pluginInterface.name,\n    reducer: pluginInterface.reducer,\n    middleware: createMiddleware,\n    capabilities: ['callMe']\n  }\n}\n","// Import the components of the interface.\nimport createAPI from './api/index'\nimport reducer from './reducers'\n\n/**\n * This interface is for a call plugin.\n * @type {string}\n */\nconst name = 'call'\n\n// Export the interface as a single object.\nexport default {\n  name,\n  createAPI,\n  reducer\n}\n","// Call plugin.\nimport { callActions as actions } from '../actions'\nimport { getCallById, getOptions } from '../selectors'\nimport * as eventTypes from '../eventTypes'\nimport { CALL_STATES } from '../../constants'\n\n// Other plugins.\nimport { getUserInfo, getDomain } from '../../../auth/interface/selectors'\n\n// Helpers.\nimport { formatMediaConstraints } from '../utils'\nimport { normalizeSipUri } from '../../utils/normalization'\n\n// Libraries.\nimport { v4 as uuidV4 } from 'uuid'\n\n/**\n * Call Establish APIs factory function.\n * @method createAPI\n * @param  {Object} container The bottle container.\n * @param  {Object} container.context The factory context.\n * @return {Object} Establish API.\n */\nexport default function createAPI (container) {\n  const { CallManager, context, logManager, API_LOG_TAG, emitEvent } = container\n  const log = logManager.getLogger('CALL')\n\n  /**\n   * Starts an outgoing call to a {@link call.UserID UserID} or a\n   *    {@link call.PhoneNumber PhoneNumber}.\n   *\n   * The call will be tracked by a unique ID that is returned by the API. The\n   *    application will use this ID to identify and control the call after it\n   *    has been initiated.\n   *\n   * The {@link call.getById} API can be used to retrieve the\n   *    current information about the call.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:start call:start} event\n   *    locally when the operation completes. When the remote participant\n   *    receives the call, a {@link call.event:call:receive call:receive}\n   *    event will be emitted remotely for them.\n   *\n   * The SDK requires access to the machine's media devices (e.g. microphone)\n   *    in order to make a call. If it does not already have permissions to\n   *    use the devices, the user may be prompted by the browser to give\n   *    permissions.\n   * @public\n   * @static\n   * @memberof call\n   * @requires cpaas_call\n   * @method make\n   * @param {call.UserID|call.PhoneNumber} destination The desired destination.\n   * @param {Object} media The media options the call should be initialized with.\n   * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n   * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n   * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n   * @param {boolean} [media.video=false] Whether the call should have video on start.\n   * @param {Object} [media.videoOptions] Options for configuring the call's video.\n   * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n   * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n   * @param {boolean} [media.screen=false] Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)\n   * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n   * @param {Object} [options]\n   * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n   * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n   * @returns {string} The generated ID of the newly created call.\n   * @example\n   * // Listen for the event emitted after making a call.\n   * client.on('call:start', function (params) {\n   *   const { callId, error } = params\n   *   if (error) {\n   *     // Call failed to initialize.\n   *   } else {\n   *     // Call was initialized, and the recipient user will be notified.\n   *   }\n   * })\n   * // Make an audio-only call.\n   * const newCallId = client.call.make(destination, { audio: true })\n   */\n\n  /**\n   * Starts an outgoing call to a {@link call.SIP_URI SIP_URI} or a\n   *    {@link call.TEL_URI TEL_URI}.\n   *\n   * The call will be tracked by a unique ID that is returned by the API. The\n   *    application will use this ID to identify and control the call after it\n   *    has been initiated.\n   *\n   * The {@link call.getById} API can be used to retrieve\n   *    the current information about the call.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:start call:start} event\n   *    locally when the operation completes. When the remote participant\n   *    receives the call, a {@link call.event:call:receive call:receive}\n   *    event will be emitted remotely for them.\n   *\n   * The SDK requires access to the machine's media devices (eg. microphone)\n   *    in order to make a call. If it does not already have permissions to\n   *    use the devices, the user may be prompted by the browser to give\n   *    permissions.\n   * @public\n   * @static\n   * @memberof call\n   * @requires link_call\n   * @method make\n   * @param {call.SIP_URI|call.TEL_URI} destination The desired destination.\n   * @param {Object} media The media options the call should be initialized with.\n   * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n   * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n   * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n   * @param {boolean} [media.video=false] Whether the call should have video on start.\n   * @param {Object} [media.videoOptions] Options for configuring the call's video.\n   * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n   * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n   * @param {boolean} [media.screen=false] Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)\n   * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n   * @param {Object} [options]\n   * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n   * @param {string} [options.displayName] Custom display name to be provided to the destination. Not supported in all environments and may use default display name.\n   * @param {Array<call.CustomParameter>} [options.customParameters] Custom SIP header parameters for the SIP backend.\n   * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n   * @returns {string} The generated ID of the newly created call.\n   * @example\n   * // Listen for the event emitted after making a call.\n   * client.on('call:start', function (params) {\n   *   const { callId, error } = params\n   *   if (error) {\n   *     // Call failed to initialize.\n   *   } else {\n   *     // Call was initialized, and the recipient user will be notified.\n   *   }\n   * })\n   * // Make an audio-only call.\n   * const newCallId = client.call.make(destination, { audio: true })\n   */\n\n  /**\n   * @private\n   * @static\n   * @memberof call\n   * @requires link_call\n   * @requires callMe\n   * @method make\n   * @param {Object} [options]\n   * @param {Array<call.CustomBody>} [options.customBodies] Custom SIP bodies for the SIP backend.\n   */\n  function make (destination, media, options = {}) {\n    log.debug(API_LOG_TAG + 'call.make: ', destination, media, options)\n\n    const callId = uuidV4()\n    const participants = {\n      to: destination,\n      from: getUserInfo(context.getState()).username\n    }\n    const mediaConstraints = formatMediaConstraints(media)\n\n    const config = getOptions(context.getState())\n    if (config.normalizeDestination) {\n      // Normalize callee addresses\n      participants.to = normalizeSipUri(participants.to, getDomain(context.getState()))\n      log.info(`Address normalized to: ${participants.to}`)\n    }\n\n    // Dispatch the \"make call\" action so the call is in state before the operation\n    //    and/or the application goes to look for it there.\n    context.dispatch(\n      actions.makeCall(callId, {\n        participantAddress: participants.to,\n        from: participants.from,\n        mediaConstraints,\n        ...options\n      })\n    )\n\n    /*\n     * Timeout is needed to be backwards-compatible with saga-style API. The API\n     *    needs to return the callId before the operation occurs and any events\n     *    are emitted by the SDK.\n     */\n    setTimeout(async () => {\n      /*\n       * Events emitted pre-operation are:\n       *    - \"call start\": To indicate the call is in state and is Initiating.\n       */\n      emitEvent(eventTypes.CALL_STARTED, { callId })\n\n      try {\n        await CallManager.make(callId, participants, mediaConstraints, options)\n\n        // Tell the application that the call has finished \"initiating\".\n        emitEvent(eventTypes.CALL_STATE_CHANGE, {\n          callId,\n          previous: {\n            state: CALL_STATES.INITIATING,\n            localHold: false,\n            remoteHold: false\n          }\n        })\n      } catch (err) {\n        // Update call state.\n        context.dispatch(\n          actions.makeCallFinish(callId, {\n            state: CALL_STATES.ENDED,\n            error: err\n          })\n        )\n\n        // Inform the application with an error event.\n        emitEvent(eventTypes.CALL_STATE_CHANGE, {\n          callId,\n          previous: {\n            state: CALL_STATES.INITIATING,\n            localHold: false,\n            remoteHold: false\n          },\n          error: err\n        })\n      }\n      // Use a minimal timeout value to help make sure the operation does happen\n      //     \"immediately\" after the return.\n    }, 0)\n\n    return callId\n  }\n\n  /**\n   * Answers an incoming call.\n   *\n   * The specified call to answer must be in Initiated or Ringing state with an incoming\n   *    direction. The call will become connected as a result of the operation.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n   *    event locally when the operation completes. This indicates that the\n   *    call has connected with the remote participant. The\n   *    {@link call.getById} API can be used to retrieve the latest call state\n   *    after the change. Further events will be emitted to indicate that the\n   *    call has received media from the remote participant. See the\n   *    {@link call.event:call:newTrack call:newTrack} event for more\n   *    information about this.\n   *\n   * The SDK requires access to the system's media devices (eg. microphone)\n   *    in order to answer a call. If it does not already have permissions to\n   *    use the devices, the user may be prompted by the browser to give\n   *    permissions.\n   * @public\n   * @static\n   * @memberof call\n   * @requires cpaas_call\n   * @method answer\n   * @param {string} callId The ID of the call to answer.\n   * @param {Object} media The media options the call should be initialized with.\n   * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n   * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n   * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n   * @param {boolean} [media.video=false] Whether the call should have video on start.\n   * @param {Object} [media.videoOptions] Options for configuring the call's video.\n   * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n   * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n   * @param {boolean} [media.screen=false] Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)\n   * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n   * @param {Object} [options]\n   * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n   * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n   */\n\n  /**\n   * Answers an incoming call.\n   *\n   * The specified call to answer must be in a ringing state with an incoming\n   *    direction. The call will become connected as a result of the operation.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n   *    event locally when the operation completes. This indicates that the\n   *    call has connected with the remote participant. The\n   *    {@link call.getById} API can be used to retrieve the latest call state\n   *    after the change. Further events will be emitted to indicate that the\n   *    call has received media from the remote participant. See the\n   *    {@link call.event:call:newTrack call:newTrack} event for more\n   *    information about this.\n   *\n   * The SDK requires access to the system's media devices (eg. microphone)\n   *    in order to answer a call. If it does not already have permissions to\n   *    use the devices, the user may be prompted by the browser to give\n   *    permissions.\n   * @public\n   * @static\n   * @memberof call\n   * @requires link_call\n   * @method answer\n   * @param {string} callId The ID of the call to answer.\n   * @param {Object} media The media options the call should be initialized with.\n   * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n   * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n   * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n   * @param {boolean} [media.video=false] Whether the call should have video on start.\n   * @param {Object} [media.videoOptions] Options for configuring the call's video.\n   * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n   * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n   * @param {boolean} [media.screen=false] Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)\n   * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n   * @param {Object} [options]\n   * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n   * @param {Array<call.CustomParameter>} [options.customParameters] Custom SIP header parameters for the SIP backend.\n   * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n   */\n\n  /**\n   * @private\n   * @static\n   * @memberof call\n   * @requires link_call\n   * @requires callMe\n   * @method answer\n   * @param {Object} [options]\n   * @param {Array<call.CustomBody>} [options.customBodies] Custom SIP bodies for the SIP backend.\n   */\n\n  async function answer (callId, media, options = {}) {\n    log.debug(API_LOG_TAG + 'call.answer: ', callId, media, options)\n\n    const mediaConstraints = formatMediaConstraints(media)\n\n    // Dispatch the \"answer call\" action so the call is updated in state\n    // before the operation and/or the application goes to look for it there.\n    context.dispatch(\n      actions.answerCall(callId, {\n        mediaConstraints,\n        ...options\n      })\n    )\n\n    try {\n      const call = getCallById(context.getState(), callId)\n      if (call && call.isSlowStart) {\n        await CallManager.answerSlow(callId, mediaConstraints, options)\n      } else {\n        await CallManager.answer(callId, mediaConstraints, options)\n      }\n    } catch (error) {\n      context.dispatch(actions.answerCallFinish(callId, { error }))\n\n      const call = getCallById(context.getState(), callId)\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId,\n        previous: {\n          state: call ? call.state : undefined,\n          localHold: call ? call.localHold : undefined,\n          remoteHold: call ? call.remoteHold : undefined\n        },\n        error\n      })\n    }\n  }\n\n  /**\n   * Rejects an incoming call.\n   *\n   * The specified call to reject must be in a ringing or initiated state with an incoming\n   *    direction. The call will be ended as a result of the operation.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n   *    event locally when the operation completes. The remote participant\n   *    will be notified, through their own {@link call.event:call:stateChange call:stateChange}\n   *    event, that the call was rejected.\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @method reject\n   * @param {string} callId The ID of the call to reject.\n   */\n  async function reject (callId) {\n    log.debug(API_LOG_TAG + 'call.reject: ', callId)\n\n    // Dispatch the \"reject call\" action so the operation is updated in state before\n    //   emitting the call operation event\n    context.dispatch(actions.rejectCall(callId))\n\n    let error\n    try {\n      await CallManager.reject(callId)\n    } catch (err) {\n      error = err\n    }\n\n    // Update call state.\n    context.dispatch(actions.rejectCallFinish(callId, { error }))\n\n    const call = getCallById(context.getState(), callId)\n    // Inform application of operation complete.\n    emitEvent(eventTypes.CALL_STATE_CHANGE, {\n      callId,\n      previous: {\n        state: call ? call.state : undefined,\n        localHold: call ? call.localHold : undefined,\n        remoteHold: call ? call.remoteHold : undefined\n      },\n      error\n    })\n  }\n\n  /**\n   * Ignores an incoming call.\n   *\n   * The specified call to ignore must be in a ringing state with an incoming\n   *    direction. The call will be ended as a result of the operation.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n   *    event locally when the operation completes. The remote participant\n   *    will not be notified that the call was ignored.\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @method ignore\n   * @param {string} callId The ID of the call to ignore.\n   */\n  async function ignore (callId) {\n    log.debug(API_LOG_TAG + 'call.ignore: ', callId)\n\n    // Dispatch the \"ignore call\" action so the call is updated in state\n    // before the operation and/or the application goes to look for it there.\n    context.dispatch(actions.ignoreCall(callId))\n\n    let error\n    try {\n      await CallManager.ignore(callId)\n    } catch (err) {\n      error = err\n    }\n    // Update call state.\n    context.dispatch(actions.ignoreCallFinish(callId, { error }))\n\n    const call = getCallById(context.getState(), callId)\n    // Inform application of operation complete.\n    emitEvent(eventTypes.CALL_STATE_CHANGE, {\n      callId,\n      previous: {\n        state: call ? call.state : undefined,\n        localHold: call ? call.localHold : undefined,\n        remoteHold: call ? call.remoteHold : undefined\n      },\n      error\n    })\n  }\n\n  /**\n   * Forwards an incoming call to another user.\n   *\n   * The specified destination will receive the Call instead of the current\n   *    user.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n   *    event after the operation completes.\n   *\n   * @public\n   * @static\n   * @memberof call\n   * @requires link_call\n   * @method forward\n   * @param {string} callId ID of the call being acted on.\n   * @param {call.SIP_URI|call.TEL_URI} destination The destination to forward the call to.\n   */\n\n  /**\n   * Forwards an incoming call to another user.\n   *\n   * The specified destination will receive the Call instead of the current\n   *    user.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n   *    event after the operation completes.\n   * @private\n   * @static\n   * @memberof call\n   * @requires cpaas_call\n   * @method forward\n   * @param {string} callId ID of the call being acted on.\n   * @param {call.UserID|call.PhoneNumber} destination The destination to forward the call to.\n   */\n  async function forward (callId, destination) {\n    log.debug(API_LOG_TAG + 'call.forward: ', destination)\n\n    const config = getOptions(context.getState())\n    if (config.normalizeDestination) {\n      // Normalize callee addresses\n      destination = normalizeSipUri(destination, getDomain(context.getState()))\n      log.info('Address normalized to: ', destination)\n    }\n\n    // Dispatch the action so the operation is updated in state before\n    //   emitting the call operation event\n    context.dispatch(actions.forwardCall(callId, { destination }))\n\n    let error\n    try {\n      await CallManager.forward(callId, destination)\n    } catch (err) {\n      error = err\n    }\n\n    context.dispatch(actions.forwardCallFinish(callId, { error }))\n\n    const call = getCallById(context.getState(), callId)\n    emitEvent(eventTypes.CALL_STATE_CHANGE, {\n      callId,\n      previous: {\n        state: call ? call.state : undefined,\n        localHold: call ? call.localHold : undefined,\n        remoteHold: call ? call.remoteHold : undefined\n      },\n      error\n    })\n  }\n\n  /**\n   * Ends an ongoing call.\n   *\n   * The SDK will stop any/all local media associated with the call. Events\n   *    will be emitted to indicate which media tracks were stopped. See the\n   *    {@link call.event:call:trackEnded call:trackEnded} event for more\n   *    information.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n   *    event locally when the operation completes. The remote participant\n   *    will be notified, through their own\n   *    {@link call.event:call:stateChange call:stateChange} event, that the\n   *    call was ended.\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @method end\n   * @param {string} callId The ID of the call to end.\n   */\n  async function end (callId) {\n    log.debug(API_LOG_TAG + 'call.end: ', callId)\n\n    // trigger an action for backwards compatibility\n    context.dispatch(actions.endCall(callId))\n\n    let error\n    try {\n      await CallManager.end(callId)\n    } catch (err) {\n      error = err\n      log.info(`call.end error: ${error.message}`)\n    } finally {\n      context.dispatch(\n        actions.endCallFinish(callId, {\n          isLocal: true,\n          error\n        })\n      )\n\n      const call = getCallById(context.getState(), callId)\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId,\n        previous: {\n          state: call ? call.state : undefined,\n          localHold: call ? call.localHold : undefined,\n          remoteHold: call ? call.remoteHold : undefined\n        },\n        error\n      })\n    }\n  }\n\n  return {\n    make,\n    answer,\n    reject,\n    ignore,\n    forward,\n    end\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n/**\n * Represents that TURN information has changed.\n * @method turnChanged\n * @return {Object}\n */\nexport function turnChanged ({ servers, credentials }) {\n  return {\n    type: actionTypes.TURN_CHANGED,\n    payload: {\n      servers,\n      credentials\n    }\n  }\n}\n","// Call plugin.\nimport { callActions as actions } from '../actions'\nimport * as eventTypes from '../eventTypes'\nimport { getCallById } from '../selectors'\n\n// Helpers.\nimport { formatMediaConstraints } from '../utils'\n\n// Libraries.\nimport { isEmpty } from 'lodash/fp'\n\n/**\n * Call Midcall APIs factory function.\n * @method createAPI\n * @param  {Object} container The bottle container.\n * @param  {Object} container.context The factory context.\n * @return {Object} Midcall API.\n */\nexport default function createAPI (container) {\n  const { CallManager, context, logManager, API_LOG_TAG, emitEvent } = container\n  const log = logManager.getLogger('CALL')\n\n  /**\n   * Puts a call on hold.\n   *\n   * The specified call to hold must not already be locally held. Any/all\n   *    media received from the remote participant will stop being received,\n   *    and any/all media being sent to the remote participant will stop\n   *    being sent.\n   *\n   * Some call operations cannot be performed while the call is on hold. The\n   *    call can be taken off hold with the {@link call.unhold} API.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n   *    event locally when the operation completes. The remote participant\n   *    will be notified of the operation through a\n   *    {@link call.event:call:stateChange call:stateChange} event as well.\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @method hold\n   * @param {string} callId The ID of the call to hold.\n   */\n  async function hold (callId) {\n    log.debug(API_LOG_TAG + 'call.hold: ', callId)\n    context.dispatch(actions.holdCall(callId))\n\n    // Call state before the operation (but after holdCall action).\n    const call = getCallById(context.getState(), callId)\n\n    // Start the operation\n    let error\n    try {\n      await CallManager.hold(callId)\n    } catch (err) {\n      error = err\n\n      context.dispatch(\n        actions.holdCallFinish(callId, {\n          local: true,\n          error\n        })\n      )\n\n      // call:stateChange error event.\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId,\n        previous: {\n          state: call ? call.state : undefined,\n          localHold: call ? call.localHold : undefined,\n          remoteHold: call ? call.remoteHold : undefined\n        },\n        error\n      })\n    }\n  }\n\n  /**\n   * Takes a call off hold.\n   *\n   * The specified call to unhold must be locally held. If the call is not\n   *    also remotely held, call media will be reconnected as it was before\n   *    the call was held.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n   *    event locally when the operation completes. The remote participant\n   *    will be notified of the operation through a\n   *    {@link call.event:call:stateChange call:stateChange} event as well.\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @method unhold\n   * @param {string} callId The ID of the call to unhold.\n   */\n  async function unhold (callId) {\n    log.debug(API_LOG_TAG + 'call.unhold: ', callId)\n    context.dispatch(actions.unholdCall(callId))\n\n    // Call state before the operation (but after unholdCall action).\n    const call = getCallById(context.getState(), callId)\n\n    // Start the operation\n    let error\n    try {\n      await CallManager.unhold(callId)\n    } catch (err) {\n      error = err\n\n      context.dispatch(\n        actions.unholdCallFinish(callId, {\n          local: true,\n          error\n        })\n      )\n\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId,\n        previous: {\n          state: call ? call.state : undefined,\n          localHold: call ? call.localHold : undefined,\n          remoteHold: call ? call.remoteHold : undefined\n        },\n        error\n      })\n    }\n  }\n\n  /**\n   * Add new media tracks to an ongoing call.\n   * Will get new media tracks from the specific sources to add to the call.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:newTrack call:newTrack} event\n   *    both for the local and remote users to indicate a track has been\n   *    added to the Call.\n   *\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @param {string}  callId The ID of the call to add media to.\n   * @param {Object}  [media={}] The media options to add to the call.\n   * @param {boolean} [media.audio=false] Whether to add audio to the call.\n   * @param {boolean} [media.video=false] Whether to add video to the call.\n   * @param {boolean} [media.screen=false] Whether to add the screenshare to the call. (Note: Screensharing is not supported on iOS Safari.)\n   * @param {Object}  [media.audioOptions] Options for configuring the call's audio.\n   * @param {Object}  [media.videoOptions] Options for configuring the call's video.\n   * @param {Object}  [media.screenOptions] Options for configuring the call's screenShare.\n   * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n   * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n   * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n   * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n   * @param {Object} [options]\n   * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n   * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n   */\n  async function addMedia (callId, media = {}, options = {}) {\n    log.debug(API_LOG_TAG + 'call.addMedia: ', callId, media, options)\n\n    const mediaConstraints = formatMediaConstraints(media)\n\n    context.dispatch(actions.addMedia(callId, { mediaConstraints, ...options }))\n\n    // Start the operation\n    let error\n    try {\n      await CallManager.addMedia(callId, mediaConstraints, options)\n    } catch (err) {\n      error = err\n\n      context.dispatch(\n        actions.addMediaFinish(callId, {\n          local: true,\n          error\n        })\n      )\n\n      // call:newMedia error event.\n      emitEvent(eventTypes.CALL_ADDED_MEDIA, {\n        callId,\n        local: true,\n        error\n      })\n    }\n  }\n\n  /**\n   * Remove tracks from an ongoing call.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:trackEnded call:trackEnded}\n   *    event for both the local and remote users to indicate that a track\n   *    has been removed.\n   *\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @param {string} callId The ID of the call to remove media from.\n   * @param {Array} tracks A list of track IDs to remove.\n   * @param {Object} [options]\n   * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n   */\n  async function removeMedia (callId, tracks, options = {}) {\n    log.debug(API_LOG_TAG + 'call.removeMedia: ', callId, tracks)\n\n    context.dispatch(actions.removeMedia(callId, { tracks, ...options }))\n\n    // Start the operation\n    let error\n    try {\n      await CallManager.removeMedia(callId, tracks, options)\n    } catch (err) {\n      error = err\n\n      context.dispatch(\n        actions.removeMediaFinish(callId, {\n          local: true,\n          error\n        })\n      )\n\n      // call:removedMedia error event\n      emitEvent(eventTypes.CALL_REMOVED_MEDIA, {\n        callId,\n        local: true,\n        error\n      })\n    }\n  }\n\n  /**\n   * Adds local video to an ongoing Call, to start sending to the remote\n   *    participant.\n   *\n   * Can only be used in a basic media scenario, where the Call does not\n   *    already have video. For more advanced scenarios, the\n   *    {@link call.addMedia} API can be used.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:tracksAdded call:tracksAdded}\n   *    event both for the local and remote users to indicate a track has been\n   *    added to the Call.\n   *\n   * @public\n   * @static\n   * @method startVideo\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @param {string}                 callId              ID of the call being acted on.\n   * @param {Object}                 [videoOptions]           Options for configuring the call's video.\n   * @param {call.MediaConstraint}   [videoOptions.deviceId]  ID of the camera to receive video from.\n   * @param {call.MediaConstraint}   [videoOptions.height]    The height of the video.\n   * @param {call.MediaConstraint}   [videoOptions.width]     The width of the video.\n   * @param {call.MediaConstraint}   [videoOptions.frameRate] The frame rate of the video.\n   * @param {Object}                 [options]\n   * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n   * @param {call.DSCPControls}      [options.dscpControls] Options for configuring DSCP markings on the media traffic.\n   */\n  async function startVideo (callId, videoOptions = {}, options = {}) {\n    log.debug(API_LOG_TAG + 'call.startVideo: ', callId, options)\n\n    const mediaConstraints = {\n      audio: false,\n      video: !isEmpty(videoOptions) ? videoOptions : true,\n      screenShare: false\n    }\n\n    const action = actions.addBasicMedia(callId, { mediaConstraints, kind: 'video', ...options })\n    context.dispatch(action)\n\n    // Start the operation\n    let error\n    try {\n      await CallManager.addBasicMedia(callId, 'video', mediaConstraints, options)\n    } catch (err) {\n      error = err\n\n      context.dispatch(\n        actions.addMediaFinish(callId, {\n          local: true,\n          error\n        })\n      )\n\n      // call:newMedia error event.\n      emitEvent(eventTypes.CALL_ADDED_MEDIA, {\n        callId,\n        local: true,\n        error\n      })\n    }\n  }\n\n  /**\n   * Removes local video from an ongoing Call, stopping it from being sent\n   *    to the remote participant.\n   *\n   * Can only be used in a basic media scenario, where the Call has only one\n   *    video track. For more advanced scenarios, the\n   *    {@link call.removeMedia} API can be used.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a {@link call.event:call:tracksRemoved call:tracksRemoved}\n   *    event for both the local and remote users to indicate that a track\n   *    has been removed.\n   *\n   * @public\n   * @static\n   * @method stopVideo\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @param {string} callId ID of the call being acted on.\n   */\n  async function stopVideo (callId) {\n    log.debug(API_LOG_TAG + 'call.stopVideo: ', callId)\n\n    context.dispatch(actions.removeBasicMedia(callId, { kind: 'video' }))\n\n    // Start the operation\n    let error\n    try {\n      await CallManager.removeBasicMedia(callId, 'video')\n    } catch (err) {\n      error = err\n\n      context.dispatch(\n        actions.removeMediaFinish(callId, {\n          local: true,\n          error\n        })\n      )\n\n      // call:removedMedia error event\n      emitEvent(eventTypes.CALL_REMOVED_MEDIA, {\n        callId,\n        local: true,\n        error\n      })\n    }\n  }\n\n  /**\n   * Adds local screenshare to an ongoing Call, to start sending to the remote\n   *    participant.\n   *\n   * The latest SDK release (v4.X+) has not yet implemented this API in the\n   *    same way that it was available in previous releases (v3.X). In place\n   *    of this API, the SDK has a more general API that can be used for this\n   *    same behaviour.\n   *\n   * The {@link call.addMedia} API can be used to perform the same behaviour\n   *    as `startScreenshare`. {@link call.addMedia} is a general-purpose API\n   *    for adding media to a call, which covers the same functionality as\n   *    `startScreenshare`. Selecting only screen options when using\n   *    {@link call.addMedia} will perform the same behaviour as using\n   *    `startScreenshare`.\n   *\n   * @public\n   * @static\n   * @method startScreenshare\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @example\n   * // Select media options for adding only screenshare.\n   * const media = {\n   *    audio: false,\n   *    video: false,\n   *    screen: true,\n   *    screenOptions: { ... }\n   * }\n   *\n   * // Add the selected media to the call.\n   * client.call.addMedia(callId, media)\n   */\n\n  /**\n   * Removes local screenshare from an ongoing Call, stopping it from being\n   *    sent to the remote participant.\n   *\n   * The latest SDK release (v4.X+) has not yet implemented this API in the\n   *    same way that it was available in previous releases (v3.X). In place\n   *    of this API, the SDK has a more general API that can be used for this\n   *    same behaviour.\n   *\n   * The {@link call.removeMedia} API can be used to perform the same\n   *    behaviour as `stopScreenshare`. {@link call.removeMedia} is a\n   *    general-purpose API for removing media from a call, which covers the\n   *    same functionality as `stopScreenshare`. Specifying only the screen\n   *    track when using {@link call.removeMedia} will perform the same\n   *    behaviour as using `stopScreenshare`.\n   *\n   * There is a caveat that if a Call has multiple video tracks (for example,\n   *    both a video and a screen track), the SDK itself cannot yet\n   *    differentiate one from the other. The application will need to know\n   *    which track was the screen track in this scenario.\n   * @public\n   * @static\n   * @method stopScreenshare\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @example\n   * const call = client.call.getById(callId)\n   * // Get the ID of any/all video tracks on the call.\n   * const videoTracks = call.localTracks.filter(trackId => {\n   *    const track = call.media.getTrackById(trackId)\n   *    // Both video and screen tracks have kind of 'video'.\n   *    return track.kind === 'video'\n   * })\n   *\n   * // Pick out the screen track.\n   * const screenTrack = videoTracks[0]\n   *\n   * // Remove screen from the call.\n   * client.call.removeMedia(callId, [ screenTrack ])\n   */\n\n  /**\n   * Replace a call's track with a new track of the same media type.\n   *\n   * The operation will remove the old track from the call and add a\n   *    new track to the call. This effectively allows for changing the\n   *    track constraints (eg. device used) for an ongoing call.\n   *\n   * Because it completely replaces an old track with a new one,\n   * the old track's state characteristics are not carried over in the new track's state.\n   * (e.g. if an old track's state was 'muted' and replacement of this track has occured,\n   * the new track's state will be 'unmuted', as this is its default state)\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a\n   *    {@link call.event:call:trackReplaced call:trackReplaced} event\n   *    locally when the operation completes. The newly added track will need\n   *    to be handled by the local application. The track will be replaced\n   *    seamlessly for the remote application, which will not receive an event.\n   *\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @param {string} callId The ID of the call to replace the track of.\n   * @param {string} trackId The ID of the track to replace.\n   * @param {Object} [media={}] The media options.\n   * @param {boolean} [media.audio=false] Whether to create an audio track.\n   * @param {Object} [media.audioOptions] Options for configuring the audio track.\n   * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n   * @param {boolean} [media.video=false] Whether to create a video track.\n   * @param {Object} [media.videoOptions] Options for configuring the video track.\n   * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n   * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n   * @example\n   * const callId = ...\n   * // Get the video track used by the call.\n   * const videoTrack = ...\n   *\n   * // Replace the specified video track of the call with a new\n   * //    video track.\n   * client.call.replaceTrack(callId, videoTrack.id, {\n   *   // The track should be replaced with a video track using\n   *   //    a specific device. This effectively changes the input\n   *   //    device for an ongoing call.\n   *   video: true,\n   *   videoOptions: {\n   *     deviceId: cameraId\n   *   }\n   * })\n   *\n   * @example\n   * const callId = ...\n   * // Get the video track used by the call.\n   * const videoTrack = ...\n   *\n   * // Can also replace the specified video track of the call with a new\n   * // screen sharing track because screen sharing is delivered as a video stream to remote peer.\n   * // User will then be prompted to pick a specific screen to share and thus the device id will be selected.\n   * client.call.replaceTrack(callId, videoTrack.id, {\n   *   // The track should be replaced with a screen sharing track.\n   *   // Note that 'screenOptions' property is not mandatory, as API will use default values\n   *   // for properties like: width, height, frameRate.\n   *   screen: true\n   * })\n   */\n  async function replaceTrack (callId, trackId, media) {\n    log.debug(API_LOG_TAG + 'call.replaceTrack: ', callId, trackId, media)\n\n    const mediaConstraints = formatMediaConstraints(media)\n    context.dispatch(actions.replaceTrack(callId, { trackId, mediaConstraints }))\n\n    // Start the operation\n    let error\n    let result = {}\n    try {\n      result = await CallManager.replaceTrack(callId, trackId, mediaConstraints)\n    } catch (err) {\n      error = err\n    }\n\n    context.dispatch(\n      actions.replaceTrackFinish(callId, {\n        ...result,\n        error\n      })\n    )\n\n    // Both events are issued for either success of failure path\n    emitEvent(eventTypes.CALL_TRACK_REPLACED, {\n      callId,\n      newTrackId: error ? undefined : result.newTrackId,\n      oldTrack: error ? undefined : result.oldTrackState,\n      error\n    })\n  }\n\n  /**\n   * Attempt to re-establish a media connection for a call.\n   *\n   * This API will perform a \"refresh\" operation on the call with the intention\n   *    of resolving media issues that may have been encountered. This API is only\n   *    necessary after the Call's {@link call.mediaConnectionStates mediaConnectionState}\n   *    has entered the `failed` state, but may be used in other scenarios.\n   *\n   * After the operation completes successfully, the Call will be re-establishing\n   *    its media connection. By this time, or shortly after, the Call's\n   *    {@link call.mediaConnectionStates mediaConnectionState} should have\n   *    transitioned to `checking` (via a\n   *    {@link call.event:call:mediaConnectionChange call:mediaConnectionChange}\n   *    event) to signify the re-establishment. It will then transition to either\n   *    `connected` or `failed` state, similar to during the initial Call establishment.\n   *\n   * If this operation fails, then the Call will not attempt the re-establishment\n   *    and will remain in the `failed` {@link call.mediaConnectionStates mediaConnectionState}.\n   *\n   * Behaviour during the operation may differ slightly based on the browser.\n   *    Notably, Firefox will always transition to the `checking`\n   *    {@link call.mediaConnectionStates mediaConnectionState} no matter what\n   *    the previous state was. Whereas Chrome will skip the `checking` state,\n   *    transitioning directly to either `connected` or `failed`. This has the\n   *    implication for Chrome that if the state does not change (for example,\n   *    the Call is in the `failed` state before the media restart operation,\n   *    and media re-establishment fails), then there will be no\n   *    {@link call.event:call:mediaConnectionChange call:mediaConnectionChange}\n   *    event emitted. For this reason, Chrome-based applications may need a\n   *    short delay after receiving the {@link call.event:call:mediaRestart call:mediaRestart}\n   *    event before checking the Call's updated\n   *    {@link call.mediaConnectionStates mediaConnectionState} to ensure the\n   *    application is acting on the \"latest\" state.\n   *\n   * The SDK will emit a {@link call.event:call:mediaRestart call:mediaRestart}\n   *    event when the operation completes.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   * @public\n   * @static\n   * @memberof call\n   * @method restartMedia\n   * @param {string} callId The ID of the call to act on.\n   */\n  async function restartMedia (callId) {\n    log.debug(`${API_LOG_TAG}call.restartMedia, callId: ${callId}`)\n\n    context.dispatch(actions.restartMedia(callId))\n\n    try {\n      await CallManager.iceRestart(callId)\n    } catch (error) {\n      context.dispatch(\n        actions.restartMediaFinish(callId, {\n          local: true,\n          error: error\n        })\n      )\n\n      emitEvent(eventTypes.MEDIA_RESTART, {\n        callId,\n        error\n      })\n    }\n  }\n\n  /**\n   * Re-sync a Call with the server by fetching the status of the Call on the server.\n   *\n   * This may be useful to get and update a call's state after processing incoming notifications\n   *    some time after they were received (e.g., waiting to process incoming call push notifications\n   *    till a connection is established).\n   *\n   * The progress of the `RESYNC` operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} events.\n   *\n   * The SDK may emit a {@link call.event:call:operation call:operation} event after the `RESYNC` operation is\n   *    complete if the call was ended do to the resync.\n   * @private\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires link_call\n   * @method resync\n   * @param {string} callId The ID of the call to re-sync.\n   */\n  async function resync (callId) {\n    log.debug(`${API_LOG_TAG}call.resync, callId: ${callId}`)\n    context.dispatch(actions.resync(callId))\n\n    let error\n    try {\n      await CallManager.resyncCallState(callId)\n    } catch (err) {\n      error = err\n    }\n\n    context.dispatch(actions.resyncFinish(callId, { error }))\n  }\n\n  /**\n   * Plays an audio file to the remote side of the Call. This API will temporarily\n   *    replace the Call's local audio track with an audio file for the duration\n   *    of the audio file.\n   *\n   * The Call must be in `Connected` state and have a local audio track for this operation.\n   *\n   * This API will not affect media other than the local audio track. Other media on\n   *    the Call, such as local video or remote audio, can be {@link media.muteTracks muted}\n   *    or {@link media.removeTracks unrendered} during this operation if desired.\n   *\n   * This operation will use the browser's\n   *    [Audio constructor](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement/Audio)\n   *    to read in the audio file. The `filePath` parameter will be used directly with `Audio`, so\n   *    can be either a relative file path to your audio file or a URL pointing to a file.\n   *\n   * This API returns a promise that can be used to track the progress of the operation.\n   *    The promise will resolve after the operation completes or reject if an error is\n   *    encountered. Additionally, an extra `onPlaying` callback is provided on the Promise\n   *    to indicate when the audio file actually begins to play. See the code example below\n   *    for a sample.\n   *\n   * The SDK will emit {@link call.event:call:operation call:operation} events locally\n   *    as the operation progresses. The remote endpoint will not receive an event for\n   *    this operation.\n   *\n   * If an error is encountered during the operation and the SDK is unable to replace\n   *    the original local audio track, then that track will be forcibly ended and an\n   *    {@link media.event:media:trackEnded media:trackEnded} event will be emitted\n   *    for it. This will release the microphone and avoid losing access to the track\n   *    while it is active, allowing the application to resolve the scenario by using\n   *    the {@link call.replaceTrack} API to revert the local audio track.\n   *\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @method playAudioFile\n   * @param {string} callId The ID of the Call to act on.\n   * @param {string} filePath The path to the audio file.\n   * @return {Promise} Promise that resolves when the operation is complete.\n   * @example\n   * // The API returns a promise which will provide feedback about the operation.\n   * client.call.playAudioFile(callId, filePath)\n   *    .then(() => {\n   *      // Audio file has finished playing; call has reverted to previous audio.\n   *    })\n   *    .catch(err => {\n   *      // An error has occurred during the operation.\n   *    })\n   *\n   * // The returned promise can optionally provide feedback midway through the\n   * //   operation. A chainable `onPlaying` method denotes when the audio file has\n   * //   started to play and the Call's audio has been replaced.\n   * client.call.playAudioFile(callId, filePath)\n   *    .onPlaying(({ duration }) => {\n   *      // Audio file has started playing; call audio is now the file.\n   *      // Note: Calling `onPlaying` must be done before `then` and `catch` for it\n   *      //    to be chainable.\n   *    })\n   *    .then(() => { ... })\n   *    .catch(err => { ... })\n   */\n  function playAudioFile (callId, filePath) {\n    log.debug(`${API_LOG_TAG}call.playAudioFile`, filePath)\n\n    let onPlayingCallback\n    const operation = new Promise((resolve, reject) => {\n      // Internal callback for when audio starts playing. Calls the app-callback\n      //    if one was provided.\n      function onPlaying (val) {\n        if (onPlayingCallback && typeof onPlayingCallback === 'function') {\n          onPlayingCallback(val)\n        }\n      }\n\n      // Dispatch action to update call operation state.\n      context.dispatch(actions.playAudio(callId, filePath))\n\n      CallManager.playAudioFile(callId, filePath, onPlaying)\n        .then(() => {\n          // Dispatch action to update call operation state.\n          context.dispatch(actions.playAudioFinish(callId))\n          resolve()\n        })\n        .catch(error => {\n          // Dispatch action to update call operation state.\n          context.dispatch(actions.playAudioFinish(callId, error))\n          reject(error)\n        })\n    })\n\n    /*\n     * Add a function to the Promise so the application can provide a callback\n     *    function for when the audio starts playing.\n     */\n    operation.onPlaying = callback => {\n      onPlayingCallback = callback\n      // Return the `operation` so this can be chained.\n      return operation\n    }\n\n    return operation\n  }\n\n  return {\n    hold,\n    unhold,\n    addMedia,\n    removeMedia,\n    startVideo,\n    stopVideo,\n    replaceTrack,\n    restartMedia,\n    resync,\n    playAudioFile\n  }\n}\n","// Call Plugin\nimport { callActions as actions } from '../actions'\nimport { getCallById, getOptions } from '../selectors'\nimport * as eventTypes from '../eventTypes'\n\n// Other plugins.\nimport { getDomain, getUserInfo } from '../../../auth/interface/selectors'\n\n// Helpers\nimport { normalizeSipUri } from '../../utils/normalization'\nimport { v4 as uuidV4 } from 'uuid'\n\n/**\n * Call Complex APIs factory function.\n * @method createAPI\n * @param  {Object} container The bottle container.\n * @param  {Object} container.context The factory context.\n * @return {Object} Complex API.\n */\nexport default function createAPI (container) {\n  const { CallManager, context, logManager, API_LOG_TAG, emitEvent } = container\n  const log = logManager.getLogger('CALL')\n\n  /**\n   * Performs a \"direct\" transfer on a call (also known as an unannounced or\n   *    blind transfer). This allows the current user to transfer the remote\n   *    participant of a call to another user, similar to a \"forward\"\n   *    operation.\n   *\n   * The specified call must be locally held. After the operation, this call\n   *    will be ended, as indicated by a\n   *    {@link call.event:call:stateChange call:stateChange} event.\n   *\n   * The \"destination\" user will receive an incoming call, and when answered,\n   *    they will be connected with the remote participant of the specified\n   *    call.\n   *\n   * The progression of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event. The remote\n   *    participant being transferred will receive it as if it were a \"remote\n   *    unhold\" operation.\n   * @public\n   * @static\n   * @memberof call\n   * @requires link_call\n   * @method directTransfer\n   * @param {string} callId ID of the call being acted on.\n   * @param {call.SIP_URI|call.TEL_URI} destination The destination to transfer the call to.\n   */\n\n  /**\n   * Performs a \"direct\" transfer on a call (also known as an unannounced or\n   *    blind transfer). This allows the current user to transfer the remote\n   *    participant of a call to another user, similar to a \"forward\"\n   *    operation.\n   *\n   * The specified call must be locally held. After the operation, this call\n   *    will be ended, as indicated by a\n   *    {@link call.event:call:stateChange call:stateChange} event.\n   *\n   * The \"destination\" user will receive an incoming call, and when answered,\n   *    they will be connected with the remote participant of the specified\n   *    call.\n   *\n   * The progression of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event. The remote\n   *    participant being transferred will receive it as if it were a \"remote\n   *    unhold\" operation.\n   * @private\n   * @static\n   * @memberof call\n   * @requires cpaas_call\n   * @method directTransfer\n   * @param {string} callId ID of the call being acted on.\n   * @param {call.UserID|call.PhoneNumber} destination The destination to transfer the call to.\n   * @return {undefined}\n   */\n  async function directTransfer (callId, destination) {\n    log.debug(API_LOG_TAG + 'call.directTransfer: ', callId, destination)\n    const config = getOptions(context.getState())\n    if (config.normalizeDestination) {\n      // Normalize callee addresses\n      destination = normalizeSipUri(destination, getDomain(context.getState()))\n      log.info('Address normalized to: ', destination)\n    }\n\n    context.dispatch(actions.directTransfer(callId, { destination }))\n\n    try {\n      await CallManager.directTransfer(callId, destination)\n    } catch (error) {\n      context.dispatch(actions.directTransferFinish(callId, { error }))\n\n      const call = getCallById(context.getState(), callId)\n      // Emit error event for operation.\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId,\n        previous: {\n          state: call ? call.state : undefined,\n          localHold: call ? call.localHold : undefined,\n          remoteHold: call ? call.remoteHold : undefined\n        },\n        error\n      })\n    }\n  }\n\n  /**\n   * Performs a \"consultative\" transfer between two ongoing calls (also known\n   *    as an announced or warm transfer). This allows the current user to\n   *    transfer the remote participant of a call to another user, after\n   *    having spoken to both users.\n   *\n   * Both calls used for the transfer must be locally held. After the\n   *    operation, these calls will be ended, as indicated by a\n   *    {@link call.event:call:stateChange call:stateChange} event.\n   *\n   * Both remote participants will see their call be unheld by the operation,\n   *    as indicated by a\n   *    {@link call.event:call:stateChange call:stateChange} event, and will\n   *    be connected to one another afterwards.\n   *\n   * The progression of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event. Both local\n   *    calls will receive this event, since it is an operation on both calls,\n   *    and the remote calls will receive it as if it were a \"remote unhold\"\n   *    operation.\n   * @public\n   * @static\n   * @memberof call\n   * @requires link_call\n   * @method consultativeTransfer\n   * @param {string} callId ID of the call being acted on.\n   * @param {string} otherCallId ID of the other call being acted on.\n   */\n\n  /**\n   * Performs a \"consultative\" transfer between two ongoing calls (also known\n   *    as an announced or warm transfer). This allows the current user to\n   *    transfer the remote participant of a call to another user, after\n   *    having spoken to both users.\n   *\n   * Both calls used for the transfer must be locally held. After the\n   *    operation, these calls will be ended, as indicated by a\n   *    {@link call.event:call:stateChange call:stateChange} event.\n   *\n   * Both remote participants will see their call be unheld by the operation,\n   *    as indicated by a\n   *    {@link call.event:call:stateChange call:stateChange} event, and will\n   *    be connected to one another afterwards.\n   *\n   * The progression of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event. Both local\n   *    calls will receive this event, since it is an operation on both calls,\n   *    and the remote calls will receive it as if it were a \"remote unhold\"\n   *    operation.\n   * @private\n   * @static\n   * @memberof call\n   * @requires cpaas_call\n   * @method consultativeTransfer\n   * @param {string} callId ID of the call being acted on.\n   * @param {string} otherCallId ID of the other call being acted on.\n   */\n  async function consultativeTransfer (callId, otherCallId) {\n    log.debug(API_LOG_TAG + 'call.consultativeTransfer: ', callId, otherCallId)\n\n    context.dispatch(actions.consultativeTransfer(callId, { otherCallId }))\n\n    let error\n    try {\n      await CallManager.consultativeTransfer(callId, otherCallId)\n    } catch (err) {\n      error = err\n      context.dispatch(actions.consultativeTransferFinish(callId, { otherCallId, error }))\n\n      const call = getCallById(context.getState(), callId)\n      // Emit error event for operation.\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId,\n        previous: {\n          state: call ? call.state : undefined,\n          localHold: call ? call.localHold : undefined,\n          remoteHold: call ? call.remoteHold : undefined\n        },\n        error: {\n          error\n        }\n      })\n    }\n  }\n\n  /**\n   * Performs a \"join\" on two ongoing calls.\n   * This allows the current user to establish a call with audio with two\n   *    remote users.\n   *\n   * Both specified calls must be locally held. The new, \"joined\" call will be\n   *    audio-only, even if either previous call had video. Video cannot be\n   *    added to the \"joined\" call. Both remote participants will see their\n   *    call taken off hold, and will receive additional audio from other\n   *    participants after the operation. Both previous calls for the current\n   *    user will be ended after the operation, as indicated by a\n   *    {@link call.event:call:stateChange call:stateChange} event.\n   *\n   * If the first call specified has custom parameters set, these parameters will be carried over to the new call.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event. Both remote\n   *    participants will also receive this event as if it were a \"remote\n   *    unhold\" operation.\n   * @public\n   * @static\n   * @memberof call\n   * @requires link_call\n   * @method join\n   * @param {string} callId ID of the call being acted on.\n   * @param {string} otherCallId ID of the other call being acted on.\n   */\n\n  /**\n   * Performs a \"join\" on two ongoing calls.\n   * This allows the current user to establish a call with audio with two\n   *    remote users.\n   *\n   * Both specified calls must be locally held. The new, \"joined\" call will be\n   *    audio-only, even if either previous call had video. Video cannot be\n   *    added to the \"joined\" call. Both remote participants will see their\n   *    call taken off hold, and will receive additional audio from other\n   *    participants after the operation. Both previous calls for the current\n   *    user will be ended after the operation, as indicated by a\n   *    {@link call.event:call:stateChange call:stateChange} event.\n   *\n   * If the first call specified has custom parameters set, these parameters will be carried over to the new call.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event. Both remote\n   *    participants will also receive this event as if it were a \"remote\n   *    unhold\" operation.\n   * @private\n   * @static\n   * @memberof call\n   * @requires cpaas_call\n   * @method join\n   * @param {string} callId ID of the call being acted on.\n   * @param {string} otherCallId ID of the other call being acted on.\n   */\n  async function join (callId, otherCallId) {\n    log.debug(API_LOG_TAG + 'call.join: ', callId, otherCallId)\n\n    const newCallId = uuidV4()\n    const from = getUserInfo(context.getState()).username\n    context.dispatch(actions.join(callId, { otherCallId, newCallId, from }))\n\n    // Start the operation\n    let error\n    try {\n      await CallManager.join(callId, otherCallId, newCallId, from)\n    } catch (err) {\n      error = err\n\n      context.dispatch(\n        actions.joinFinish(callId, {\n          usedCallIds: [callId, otherCallId],\n          error\n        })\n      )\n\n      const primaryCall = getCallById(context.getState(), callId)\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId,\n        previous: {\n          state: primaryCall ? primaryCall.state : undefined,\n          localHold: primaryCall ? primaryCall.localHold : undefined,\n          remoteHold: primaryCall ? primaryCall.remoteHold : undefined\n        },\n        error\n      })\n    }\n  }\n\n  return {\n    directTransfer,\n    consultativeTransfer,\n    join\n  }\n}\n","// Call plugin.\nimport { getCalls, getCallById } from '../selectors'\nimport { callActions as actions } from '../actions'\nimport * as eventTypes from '../eventTypes'\n\n/**\n * Call Misc APIs factory function.\n * @method createAPI\n * @param  {Object} container The bottle container.\n * @param  {Object} container.context The factory context.\n * @return {Object} Misc API.\n */\nexport default function createAPI (container) {\n  const { context, CallManager, CallReporter, emitEvent, logManager, API_LOG_TAG } = container\n  const log = logManager.getLogger('CALL')\n\n  /**\n   * Retrieves the information of all calls made during the current session.\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @method getAll\n   * @return {Array<call.CallObject>} Call objects.\n   * @example\n   * let calls = client.call.getAll()\n   * let currentCalls = calls.filter(call => {\n   *     return call.state === client.call.states.CONNECTED\n   * })\n   */\n  function getAll () {\n    log.debug(API_LOG_TAG + 'call.getAll')\n    return getCalls(context.getState())\n  }\n\n  /**\n   * Retrieves the information of a single call with a specific call ID.\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @static\n   * @method getById\n   * @param {string} callId The ID of the call to retrieve.\n   * @return {call.CallObject} A call object.\n   */\n  function getById (callId) {\n    log.debug(API_LOG_TAG + 'call.getById: ', callId)\n    return getCallById(context.getState(), callId)\n  }\n\n  /**\n   * Sends the \"ringing feedback\" notification to the remote participant of a call.\n   *\n   * When using the 'manual' `ringingFeedbackMode` configuration, the application\n   *    is responsible for transitioning the call into the `Ringing` state. This\n   *    API will notify both ends of the call to enter `Ringing` state at the same\n   *    time. The application may decide not to send the \"ringing feedback\"\n   *    notification by not using this API. The `ringingFeedbackMode` configuration\n   *    must be set to 'manual' to use this API.\n   *\n   * The specified call must be an incoming call in `Initiated` state. The call\n   *    will enter `Ringing` state as a result of the operation.\n   *\n   * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n   *    event locally when the operation completes. The remote participant will\n   *    be notified of the operation through a\n   *    {@link call.event:call:stateChange call:stateChange} event as well.\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @method sendRingingFeedback\n   * @param {string} callId The ID of the call.\n   */\n  async function sendRingingFeedback (callId) {\n    log.debug(API_LOG_TAG + 'call.sendRingingFeedback: ', callId)\n\n    // Dispatch this action for backwards compatibility\n    context.dispatch(actions.sendRingingFeedback(callId))\n\n    let error\n    try {\n      await CallManager.sendRingingFeedback(callId)\n    } catch (err) {\n      error = err\n    }\n\n    context.dispatch(actions.sendRingingFeedbackFinish(callId, { error }))\n\n    const call = getCallById(context.getState(), callId)\n    emitEvent(eventTypes.CALL_STATE_CHANGE, {\n      callId,\n      previous: {\n        state: call ? call.state : undefined,\n        localHold: call ? call.localHold : undefined,\n        remoteHold: call ? call.remoteHold : undefined\n      },\n      error\n    })\n  }\n\n  /**\n   * Set the {@link call.CustomParameter Custom Parameters} of a Call, to be provided to the remote endpoint.\n   *\n   * The specified parameters will be saved as part of the call's information throughout the duration of the call.\n   * All subsequent call operations will include these custom parameters.\n   * Therefore, invalid parameters, or parameters not previously configured on the server, will cause subsequent call operations to fail.\n   *\n   * A Call's custom parameters are a property of the Call's {@link call.CallObject CallObject},\n   *    which can be retrieved using the {@link call.getById} or\n   *    {@link call.getAll} APIs.\n   *\n   * The custom parameters set on a call can be sent directly with the {@link call.sendCustomParameters} API.\n   *\n   * Custom parameters can be removed from a call's information by setting them as undefined (e.g., `call.setCustomParameters(callId)`).\n   * Subsequent call operations will no longer send custom parameters.\n   * @public\n   * @static\n   * @memberof call\n   * @requires link_call\n   * @requires callMe\n   * @method setCustomParameters\n   * @param {string} callId The ID of the call.\n   * @param {Array<call.CustomParameter>} customParameters The custom parameters to set.\n   */\n\n  /**\n   * Set custom SIP headers and bodies for a call, to be provided to the remote endpoint.\n   *\n   * This API takes either an array of {@link call.CustomParameter Custom Parameters}, or if custom bodies\n   *  also need to be set, an object consisting of either {@link call.CustomParameter Custom Parameters} or\n   *  {@link call.CustomBody Custom Bodies} or both.\n   *\n   * Note that usage of the `setCustomParameters` API will completely overwrite any previously set headers and bodies.\n   *  Therefore, if either parameters or headers are omitted during subsequent API calls, they will\n   *  be overwritten to undefined.\n   * @private\n   * @static\n   * @memberof call\n   * @requires link_call\n   * @method setCustomParameters\n   * @param {Array<call.CustomParameter> | Object} customParameters The custom parameters to set.\n   * @param {Array<call.CustomParameter>} [customParameters.customParameters] Custom SIP headers for the SIP backend.\n   * @param {Array<call.CustomBody>} [customParameters.customBodies] Custom SIP bodies for the SIP backend.\n   */\n  async function setCustomParameters (callId, customParameters) {\n    log.debug(API_LOG_TAG + 'call.setCustomParameters: ', callId, customParameters)\n    context.dispatch(actions.setCustomParameters(callId, customParameters))\n  }\n\n  /**\n   * Send the custom parameters on an ongoing call to the server. The server may either consume the headers or relay them\n   * to another endpoint, depending on how the server is configured.\n   *\n   * A Call's custom parameters are a property of the Call's {@link call.CallObject CallObject},\n   *    which can be retrieved using the {@link call.getById} or\n   *    {@link call.getAll} APIs.\n   *\n   * To change or remove the custom parameters on a call, use the {@link call.setCustomParameters} API.\n   * @public\n   * @static\n   * @memberof call\n   * @requires link_call\n   * @requires callMe\n   * @method sendCustomParameters\n   * @param {string} callId The ID of the call being acted on.\n   */\n  async function sendCustomParameters (callId) {\n    log.debug(API_LOG_TAG + 'call.sendCustomParameters: ', callId)\n    context.dispatch(actions.sendCustomParameters(callId))\n\n    let error\n    try {\n      await CallManager.sendCustomParameters(callId)\n    } catch (err) {\n      error = err\n    }\n\n    context.dispatch(actions.sendCustomParametersFinish(callId, { error }))\n  }\n\n  /**\n   * Send DTMF tones to a call's audio.\n   *\n   * The provided tone can either be a single DTMF tone (eg. '1') or a\n   *    sequence of DTMF tones (eg. '123') which will be played one after the\n   *    other.\n   *\n   * The specified call must be either in Connected, Ringing, or Early Media\n   *    state, otherwise invoking this API will have no effect.\n   *\n   * The tones will be sent as out-of-band tones if supported by the call,\n   *    otherwise they will be added in-band to the call's audio.\n   *\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @method sendDTMF\n   * @param {string} callId ID of the call being acted on.\n   * @param {string} tone DTMF tone(s) to send. Valid characters are ['0','1','2','3','4','5','6','7','8','9','#','*' and ','].\n   * @param {number} [duration=100] The amount of time, in milliseconds, that each DTMF tone should last.\n   * @param {number} [intertoneGap=70] The length of time, in milliseconds, to wait between tones.\n   *\n   */\n  async function sendDTMF (callId, tone, duration = 100, intertoneGap = 70) {\n    log.debug(API_LOG_TAG + 'call.sendDTMF: ', callId, tone, duration, intertoneGap)\n\n    if (typeof tone === 'number') {\n      // Convert the tone into a string if it is a number.\n      tone = tone + ''\n    }\n\n    // Dispatch this action for backwards compatibility.\n    context.dispatch(actions.sendDTMF(callId, { tone, duration, intertoneGap }))\n\n    let error\n    try {\n      await CallManager.sendDtmf(callId, tone, { duration, intertoneGap })\n    } catch (err) {\n      error = err\n    }\n\n    // Dispatch this action for backwards compatibility.\n    context.dispatch(actions.sendDTMFFinish(callId, { error }))\n  }\n\n  /**\n   * Retrieve a snapshot of the low-level information of the Call through statistical\n   *    report.\n   *\n   * The data retrieved is a [RTCStatsReport](https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport)\n   *    object, which contains many individual\n   *    [RTCStats](https://developer.mozilla.org/en-US/docs/Web/API/RTCStats).\n   *    These are advanced statistics gathered by the browser providing insights\n   *    into the Call at a certain point in time. Aggregating reports over a\n   *    period of time would allow a low-level analysis of the Call for that\n   *    period. As an example, this could be done to determine the media quality\n   *    during the Call.\n   *\n   * A Track ID can optionally be provided to get a report for a specific\n   *    Track of the Call.\n   *\n   * This API will return a promise which, when resolved, will contain the report of the particular call.\n   * The progress of the operation will be tracked via the\n   *    {@link call.event:call:operation call:operation} event.\n   *\n   * The SDK will emit a\n   *    {@link call.event:call:statsReceived call:statsReceived} event, after\n   *    the operation completes, that has the report.\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @param {string} callId The ID of the Call to retrieve the report.\n   * @param {string} [trackId] ID of a Track being used by the Call. If not\n   *    provided, RTCStatsReport is generated for the Call itself.\n   * @return {Promise} A promise that will resolve with the stats report or an error if it fails.\n   * @example\n   * client.on('call:statsReceived', function (params) {\n   *    // Iterate over each individual statistic inside the RTCPStatsReport.\n   *    params.result.forEach(stats => {\n   *        // Handle the data on its own or collate with previously gathered stats\n   *        //    for analysis.\n   *        ...\n   *    })\n   * })\n   *\n   * // Get a snapshot of the Call's stats.\n   * //   This may be done on a regular interval to collect data over time.\n   * client.call.getStats(callId)\n   */\n  async function getStats (callId, trackId) {\n    log.debug(API_LOG_TAG + 'call.getStats: ', callId, trackId)\n\n    context.dispatch(actions.getStats(callId, { trackId }))\n\n    let result, error\n    try {\n      result = await CallManager.getStats(callId, trackId)\n    } catch (err) {\n      error = err\n      throw error\n    } finally {\n      // Handle the success and failure paths together; with either one of\n      //    result/error being defined and the other not.\n      context.dispatch(\n        actions.getStatsFinish(callId, {\n          error,\n          result,\n          trackId\n        })\n      )\n\n      emitEvent(eventTypes.STATS_RECEIVED, {\n        callId,\n        result,\n        trackId,\n        error\n      })\n    }\n\n    // Resolve the API's promise with the results.\n    return result\n  }\n\n  /**\n   * Retrieve the list of available and supported codecs based on the browser's capabilities for sending media.\n   *\n   * This API will return a promise which, when resolved, it will contain the list of available and supported codecs.\n   * In addition, the SDK emits a {@link call.event:call:availableCodecs call:availableCodecs} event\n   *  upon retrieving that list of codecs.\n   *\n   * This API is a wrapper for the static method {@link https://w3c.github.io/webrtc-pc/#dom-rtcrtpsender-getcapabilities RTCRtpSender.getCapabilities()}.\n   *  Firefox browser does not currently support this method. Therefore, this API will not work on Firefox.\n   *\n   * @public\n   * @static\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @param {string} kind The kind of media, i.e., 'audio' or 'video', to get the list of available codecs of.\n   * @return {Object} An object containing the available codecs, along with the `kind` parameter, that was supplied in the first place.\n   *         If there was an error, it will return undefined.\n   */\n  async function getAvailableCodecs (kind) {\n    log.debug(`${API_LOG_TAG}call.getAvailableCodecs, kind: ${kind}`)\n\n    // Dispatch this action for backwards compatibility\n    context.dispatch(actions.getAvailableCodecs({ kind }, { promise: {} }))\n    let codecs\n    try {\n      codecs = await CallManager.getAvailableCodecs(kind)\n\n      // Final action dispatched, for backwards compatibility\n      context.dispatch(\n        actions.availableCodecsRetrieved({\n          kind,\n          codecs\n        })\n      )\n\n      emitEvent(eventTypes.AVAILABLE_CODECS, {\n        kind,\n        codecs\n      })\n    } catch (err) {\n      log.debug('Failed to retrieve codecs: ', err.message)\n      // Return a rejected Promise instance, in order to keep backwards compatibility\n      // Operation may throw a BasicError but for backwards compatibility, we use Error instance\n      return await Promise.reject(new Error(err.message))\n      // If there is an error, no further actions (or events) dispatched\n    }\n\n    // Return a resolved Promise instance, in order to keep backwards compatibility\n    return await Promise.resolve(codecs)\n  }\n\n  /**\n   * Retrieve the call metrics report for a call.\n   *\n   * The object returned from this API will be in JSON format. The top level object is the report and will include\n   * a timeline of events that were recorded during a call as well as a map object containing computed metrics.\n   *\n   * Any event in a timeline will have it's own timeline that may have recorded events. Events in a timeline are scoped\n   * to that timelines event or report.\n   *\n   * The report and some events may have additional data included in a data property.\n   *\n   * See event documentation {@link REPORTER_OPERATION_EVENTS_MAP here}.\n   * See metrics documentation {@link REPORTER_METRICS here}.\n   *\n   * @method getReport\n   * @public\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @param {string} callId The id of the call to retrieve the report on.\n   * @return {Object} An object containing all metrics and data tracked against this call.\n   */\n  function getReport (callId) {\n    log.debug(API_LOG_TAG + 'call.getReport: ', callId)\n\n    return CallReporter.getReport(callId)\n  }\n\n  async function setSdpHandlers () {}\n\n  /**\n   * Changes the camera and/or microphone used for a Call's media input.\n   *\n   * The latest SDK release (v4.X+) has not yet implemented this API in the\n   *    same way that it was available in previous releases (v3.X). In place\n   *    of this API, the SDK has a more general API that can be used for this\n   *    same behaviour.\n   *\n   * The same behaviour as the `changeInputDevices` API can be implemented\n   *    using the general-purpose {@link call.replaceTrack} API. This API can\n   *    be used to replace an existing media track with a new track of the\n   *    same type, allowing an application to change certain aspects of the\n   *    media, such as input device.\n   * @public\n   * @static\n   * @method changeInputDevices\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @example\n   * const call = client.call.getById(callId)\n   * // Get the ID of the Call's video track.\n   * const videoTrack = call.localTracks.find(trackId => {\n   *    const track = client.media.getTrackById(trackId)\n   *    return track.kind === 'video'\n   * })\n   *\n   * // Select the new video options.\n   * const media = {\n   *    video: true,\n   *    videoOptions: {\n   *        deviceId: 'cameraId'\n   *    }\n   * }\n   *\n   * // Change the call's camera by replacing the video track.\n   * client.call.replaceTrack(callId, videoTrack, media)\n   */\n\n  /**\n   * Changes the speaker used for a Call's audio output. Supported on\n   *    browser's that support HTMLMediaElement.setSinkId().\n   *\n   * The latest SDK release (v4.X+) has not yet implemented this API in the\n   *    same way that it was available in previous releases (v3.X). In place\n   *    of this API, the SDK has a more general API that can be used for this\n   *    same behaviour.\n   *\n   * The same behaviour as the `changeSpeaker` API can be implemented by\n   *    re-rendering the Call's audio track.  A speaker can be selected when\n   *    rendering an audio track, so changing a speaker can be simulated\n   *    by unrendering the track with {@link media.removeTracks}, then\n   *    re-rendering it with a new speaker with {@link media.renderTracks}.\n   * @public\n   * @static\n   * @method changeSpeaker\n   * @memberof call\n   * @requires call\n   * @requires callMe\n   * @example\n   * const call = client.call.getById(callId)\n   * // Get the ID of the Call's audio track.\n   * const audioTrack = call.localTracks.find(trackId => {\n   *    const track = client.media.getTrackById(trackId)\n   *    return track.kind === 'audio'\n   * })\n   *\n   * // Where the audio track was previously rendered.\n   * const audioContainer = ...\n   *\n   * // Unrender the audio track we want to change speaker for.\n   * client.media.removeTrack([ audioTrack ], audioContainer)\n   * // Re-render the audio track with a new speaker.\n   * client.media.renderTrack([ audioTrack ], audioContainer, {\n   *    speakerId: 'speakerId'\n   * })\n   */\n\n  return {\n    getAll,\n    getById,\n    sendRingingFeedback,\n    setCustomParameters,\n    sendCustomParameters,\n    sendDTMF,\n    getStats,\n    getReport,\n    getAvailableCodecs,\n    setSdpHandlers\n  }\n}\n","// Call plugin.\nimport { CALL_STATES, CALL_MEDIA_CONNECTION_STATES } from '../../constants'\n\n/**\n * Call Constant APIs factory function.\n * @method createAPI\n * @param  {Object} container The bottle container.\n * @return {Object} Constants API.\n */\nexport default function createAPI () {\n  /**\n   * Possible states that a Call can be in.\n   *\n   * A Call's state describes the current status of the Call. An application\n   *    should use the state to understand how the Call, and any media\n   *    associated with the Call, should be handled. Which state the Call is\n   *    in defines how it can be interacted with, as certain operations can\n   *    only be performed while in specific states, and tells an application\n   *    whether the Call currently has media flowing between users.\n   * Unless stated otherwise, the Call's state pertains to both caller & callee.\n   *\n   * The Call's state is a property of the {@link call.CallObject CallObject},\n   *    which can be retrieved using the {@link call.getById} or\n   *    {@link call.getAll} APIs.\n   *\n   * The SDK emits a {@link call.event:call:stateChange call:stateChange}\n   *    event when a Call's state changes from one state to another.\n   *\n   * @public\n   * @static\n   * @memberof call\n   * @requires callMe\n   * @requires call\n   * @type {Object}\n   * @property {string} INITIATING The (outgoing) call is being started. While in this state, no Call operations can be performed until Call gets into Initiated state.\n   * @property {string} INITIATED A call has been started and both the callee and caller may now perform further operations on the call object.\n   * @property {string} RINGING The call has been received by both parties, and is waiting to be answered.\n   * @property {string} EARLY_MEDIA The call has not been answered, but media\n   *    is already being received. This may be network-ringing media, IVR\n   *    system media, or other pre-answer medias. When early media is\n   *    supported, this state may replace the Ringing state. This is a state valid only for caller's side.\n   * @property {string} CANCELLED The call was disconnected before it could be answered. This is a state valid only for callee's side.\n   * @property {string} CONNECTED Both parties are connected and media is flowing.\n   * @property {string} ON_HOLD Both parties are connected but no media is flowing.\n   * @property {string} ENDED The call has ended.\n   * @example\n   * // Use the call states to know how to handle a change in the call.\n   * client.on('call:stateChange', function (params) {\n   *    const call = client.call.getById(params.callId)\n   *    // Check if the call now has media flowing.\n   *    if (call.state === client.call.states.CONNECTED) {\n   *      // The call is now active, and can perform midcall operations.\n   *    }\n   * })\n   */\n  const states = CALL_STATES\n\n  /**\n   * Possible states that a Call's media connection can be in.\n   *\n   * A Call's media connection state describes the current status of media within the call.\n   *  An application should use this state to understand whether the Call participants are\n   *  able to see/hear each other or may be experiencing connection issues. The media connection\n   *  state can be used alongside the {@link call.states Call state} to determine if media issues\n   *  are occurring while the participants are expecting to be connected.\n   *\n   * An important state to check for is the `FAILED` state. This state signifies that there is no\n   *    media connection between the call participants and an action must be taken to resolve the\n   *    problem. Using the {@link call.restartMedia} API will attempt to reconnect the media. See\n   *    the {@link call.restartMedia} API description for more information.\n   *\n   * These states are direct reflections of the possible\n   *  [RTCPeerConnection.iceConnectionState](https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState) values.\n   *\n   * The Call's media connection state is a property of the {@link call.CallObject CallObject},\n   *    which can be retrieved using the {@link call.getById} or\n   *    {@link call.getAll} APIs.\n   *\n   * The SDK emits a {@link call.event:call:mediaConnectionChange call:mediaConnectionChange}\n   *    event when a Call's media connection state changes from one state to another.\n   *\n   * @public\n   * @static\n   * @memberof call\n   * @requires callMe\n   * @requires call\n   * @type {Object}\n   * @property {string} NEW The Call is initializing the local side of the connection and waiting on information from the remote side.\n   *  When the information is received, the state will transition into `checking` as the Call automatically begins the connection process.\n   * @property {string} CHECKING The Call has received information from the remote endpoint and is working to establish the media connection.\n   *  When finished, the state will transition to either `connected` or `failed`.\n   * @property {string} CONNECTED A usable connection has been made and the Call will now have media.\n   *  The connection may not be optimal, though, so the Call will continue establishment to improve the connection before going into the `completed` state.\n   * @property {string} COMPLETED The media connection process has fully completed and the optimal connection has been established. While in this state,\n   *  the Call endpoints will receive each other's media.\n   * @property {string} DISCONNECTED Media has become disconnected and the Call endpoints have stopped receiving each other's media.\n   *  The Call will automatically attempt to reconnect, transitioning back to `completed` if successful or to `failed` if not.\n   * @property {string} FAILED The connection has failed and cannot be recovered automatically. A full media connection refresh is required to reestablish a connection. See the {@link call.restartMedia} API.\n   * @property {string} CLOSED The connection has been shut down and is no longer in use.\n   * @example\n   * // Use the media connection states to check the status of the media connection of the Call.\n   * client.on('call:mediaConnectionChange', function (params) {\n   *   // Retrieve the state of the Call this event is for.\n   *   const call = client.call.getById(params.callId)\n   *   const mediaConnectionStates = client.call.mediaConnectionStates\n   *\n   *   // Check the mediaConnectionState to determine which scenario the call is in.\n   *   switch (call.mediaConnectionState) {\n   *     case mediaConnectionStates.CONNECTED:\n   *     case mediaConnectionStates.COMPLETED:\n   *       // Media established: The Call's media is connected. The Call's participants\n   *       //    are able to see/hear each other.\n   *       // These states will occur after Call establishment.\n   *       ...\n   *       break\n   *     case mediaConnectionStates.NEW:\n   *     case mediaConnectionStates.CHECKING:\n   *     case mediaConnectionStates.DISCONNECTED:\n   *       // Media pending: The Call's media is not connected. The Call is working\n   *       //    to connect media automatically.\n   *       // These states will occur during Call establishment and may occur midcall if there are\n   *       //    connection issues (eg. poor network quality) or a Call participant has changed (eg. transfer).\n   *       ...\n   *       break\n   *     case mediaConnectionStates.FAILED:\n   *      // Media has failed. The call requires a media refresh to reestablish.\n   *      // This state will occur after the `DISCONNECTED` state is encountered.\n   *      ...\n   *       break\n   *     case mediaConnectionStates.CLOSED:\n   *       // Media ended due to the Call being ended.\n   *       // This state will occur after Call establishment.\n   *       ...\n   *       break\n   *   }\n   * }\n   */\n  const mediaConnectionStates = CALL_MEDIA_CONNECTION_STATES\n\n  return {\n    states,\n    mediaConnectionStates\n  }\n}\n","import calls from './call'\nimport turn from './turn'\n\n/**\n * Combine subreducers into a single call reducer.\n */\nexport default function (state = {}, action) {\n  return {\n    calls: calls(state.calls, action),\n    turn: turn(state.turn, action)\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\nimport * as webrtcActionTypes from '../../../webrtc/interface/actionTypes'\nimport { CALL_STATES, CALL_DIRECTION } from '../../constants'\nimport { OPERATIONS, OP_STATUS } from '../constants'\n\nimport operationReducer from './operations'\n\n// Libraries.\nimport { combineActions, handleActions } from 'redux-actions'\nimport { concat, union } from 'lodash/fp'\n\n/**\n * A no-op reducer.\n * Some reducers don't need to change state, but need to exist so their actions\n *    can be handled the same way as other actions (eg. wrapped to update local\n *    operation).\n * @method noop\n */\nconst noop = (state, action) => state\n\n/**\n * The reducer logic used for finish operations that end a call.\n * @method callEnder\n */\nconst callEnder = (state, action) => {\n  const now = Date.now()\n  return {\n    ...state,\n    state: CALL_STATES.ENDED,\n    // If there isn't a start time, then the call was never completed.\n    //    Meaning it's duration was 0, so set the start time appropriately.\n    startTime: state.startTime || now,\n    endTime: now,\n    remoteParticipant: {\n      ...state.remoteParticipant,\n      ...action.payload.remoteParticipant\n    },\n    // Closing the peer doesn't trigger an oniceconnectionstatechange event\n    // although it does change the iceConnectionState property to closed\n    mediaConnectionState: 'closed',\n    // TODO: Remove this later.\n    isPending: undefined,\n    localTracks: [],\n    remoteTracks: []\n  }\n}\n\n// Top-tier reducers: Handles the whole call state.\nconst reducers = {}\n// Call-tier reducers: Handles only a specific call's state.\nconst callReducers = {}\n\n/*\n * Top-tier reducers.\n * Receives the entire call substate as state.\n */\n\n// Add the new call to state.\nreducers[actionTypes.MAKE_CALL] = {\n  next (state, action) {\n    // TODO: Call model? (with defaults for call state)\n    const newCall = {\n      id: action.payload.id,\n      remoteParticipant: {\n        displayNumber: action.payload.participantAddress,\n        displayName: action.payload.participantName\n      },\n      // Number of the remote participant when the call was established.\n      to: action.payload.participantAddress,\n      from: action.payload.from,\n      mediaConstraints: action.payload.mediaConstraints,\n      dscpControls: action.payload.dscpControls,\n      // TODO: Proper constants.\n      state: CALL_STATES.INITIATING,\n      direction: CALL_DIRECTION.OUTGOING,\n      // Hold status.\n      localHold: false,\n      remoteHold: false,\n      isCaller: true,\n      // Flag indicating whether the call is anonymous or not\n      isAnonymous: action.payload.isAnonymous,\n      // The account token used to make the anonymous call\n      account: action.payload.account,\n\n      localTracks: [],\n      remoteTracks: []\n    }\n\n    return concat(state, newCall)\n  }\n}\n\n// Add the new call to state.\nreducers[actionTypes.CALL_INCOMING] = {\n  next (state, action) {\n    return concat(state, {\n      // Dynamic state from the action.\n      ...action.payload,\n\n      // Constants for a new incoming call.\n      direction: 'incoming',\n      isCaller: false,\n      // Initial call state.\n      state: CALL_STATES.INITIATING,\n      localHold: false,\n      remoteHold: false,\n      // No tracks available to render at first.\n      localTracks: [],\n      remoteTracks: []\n    })\n  }\n}\n\n/*\n * Call-tier reducers.\n * Receive a single call's state as state.\n */\n\ncallReducers[actionTypes.SEND_RINGING_FEEDBACK_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      state: CALL_STATES.RINGING\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_RINGING] = {\n  next (state, action) {\n    if (action.payload.remoteParticipant) {\n      return {\n        ...state,\n        state: CALL_STATES.RINGING,\n        remoteParticipant: action.payload.remoteParticipant\n      }\n    } else {\n      return {\n        ...state,\n        state: CALL_STATES.RINGING\n      }\n    }\n  }\n}\n\n// Handle Early Media the same as Ringing, just with a different state.\ncallReducers[actionTypes.SESSION_PROGRESS] = {\n  next (state, action) {\n    return {\n      ...state,\n      state: CALL_STATES.EARLY_MEDIA,\n      remoteParticipant: action.payload.remoteParticipant,\n      remoteTracks: action.payload.remoteTracks\n    }\n  }\n}\n\n/*\n * Call-tier reducers.\n * Receive a single call's state as state.\n */\n\n/*\n * Some reducers don't need to change state directly, but need to exist.\n * Call-specific reducers are wrapped to keep information about on-going\n *    operations up-to-date.\n */\ncallReducers[actionTypes.PENDING_OPERATION] = noop\ncallReducers[actionTypes.REMOTE_SLOW_START] = noop\n\n/*\n * When answering, rejecting, or forwarding a call, update state to say that we\n *    are handling it.\n * This is needed for the WebRTC JS SDK because WebRTC Gateway will send a \"call cancel\" notification\n *    to _ALL_ of the user's subscriptions. The intention is to stop the call from\n *    ringing on other subscribed devices, and for the handling device to ignore\n *    the notification. This flag is used to know when to ignore the call cancel.\n */\nconst setHandling = (state, action) => {\n  return {\n    ...state,\n    isHandling: true\n  }\n}\ncallReducers[actionTypes.ANSWER_CALL] = setHandling\ncallReducers[actionTypes.REJECT_CALL] = setHandling\ncallReducers[actionTypes.FORWARD_CALL] = setHandling\n\ncallReducers[actionTypes.CALL_CANCELLED] = {\n  next (state, action) {\n    return {\n      ...state,\n      state: CALL_STATES.CANCELLED\n    }\n  }\n}\n\n// Handle success and error scenarios the same for ignore finish. The call is\n//    always ended.\ncallReducers[actionTypes.IGNORE_CALL_FINISH] = (state, action) => {\n  // The call being ignored means it was not completed. Ensure there are times\n  //    in state, and they reflect that the call was not completed.\n  // TODO: Better call times.\n  const now = Date.now()\n\n  return {\n    ...state,\n    startTime: now,\n    endTime: now,\n    state: CALL_STATES.ENDED\n  }\n}\n\n// Handle success and error scenarios the same for reject finish. The call is\n//    always ended.\ncallReducers[actionTypes.REJECT_CALL_FINISH] = (state, action) => {\n  // The call being rejected means it was not completed. Ensure there are\n  //    times in state, and they reflect that the call was not completed.\n  // TODO: Better call times.\n  const now = Date.now()\n\n  const newState = {\n    ...state,\n    startTime: now,\n    endTime: now,\n    state: CALL_STATES.ENDED\n  }\n\n  // After the reject operation finishes, remove the flag that indicates we\n  //    were handling the call.\n  delete newState.isHandling\n\n  return newState\n}\n\ncallReducers[actionTypes.SESSION_CREATED] = {\n  next (state, action) {\n    // When we get SESSION_CREATED action, the call object already exists as part of reducers state\n    // so we only add the webrtc session id. This way we can find the call object\n    // by searching for this associated webrtcSessionId.\n    return {\n      ...state,\n      webrtcSessionId: action.payload.webrtcSessionId\n    }\n  }\n}\n\ncallReducers[actionTypes.PENDING_MAKE_CALL] = {\n  next (state, action) {\n    return {\n      ...state,\n      state: CALL_STATES.INITIATED,\n      wrtcsSessionId: action.payload.wrtcsSessionId,\n      webrtcSessionId: action.payload.webrtcSessionId,\n      bandwidth: action.payload.bandwidth,\n      displayName: action.payload.displayName,\n      customParameters: action.payload.customParameters,\n      customBodies: action.payload.customBodies,\n      localTracks: action.payload.localTracks\n    }\n  }\n}\n\n// Update the new call state based on the outcome.\ncallReducers[actionTypes.MAKE_CALL_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      ...action.payload\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      ...action.payload\n    }\n  }\n}\n\n// Update the new call state based on the outcome.\ncallReducers[actionTypes.MAKE_ANONYMOUS_CALL_FINISH] = {\n  next (state, action) {\n    // Change nothing.\n    return state\n  },\n  // End the call.\n  throw: callEnder\n}\n\n// Update the call state based on the outcome.\ncallReducers[actionTypes.ANSWER_CALL_FINISH] = {\n  next (state, action) {\n    // If the action has a Session ID, store it as the ID.\n    // In some scenarios (slow start), the we only get an ID\n    //    at the answer step.\n    const webrtcId = action.payload.webrtcSessionId || state.webrtcSessionId\n\n    const newState = {\n      ...state,\n      state: action.payload.state,\n      mediaConstraints: action.payload.mediaConstraints,\n      dscpControls: action.payload.dscpControls,\n      webrtcSessionId: webrtcId,\n      localHold: false,\n      remoteHold: false,\n      bandwidth: action.payload.bandwidth,\n      customParameters: action.payload.customParameters,\n      customBodies: action.payload.customBodies,\n      localTracks: action.payload.localTracks,\n      remoteTracks: action.payload.remoteTracks\n    }\n\n    // Add start time to the call's state here if the call is not a slowstart call\n    if (action.meta && !action.meta.isSlowStart) {\n      newState.startTime = action.payload.startTime\n    }\n\n    // If answering the Call puts us in Connected state (ie. not slow-start),\n    //    then we can remove this flag since we know not to cancel a connected call.\n    if (newState.state === CALL_STATES.CONNECTED) {\n      delete newState.isHandling\n    }\n\n    return newState\n  },\n  throw (state, action) {\n    const newState = {\n      ...state,\n      ...action.payload\n    }\n\n    // If we failed to answer the call, then we're not actually handling the\n    //    call, so remove the flag.\n    delete newState.isHandling\n\n    return newState\n  }\n}\n\ncallReducers[actionTypes.CALL_ACCEPTED] = {\n  next (state, action) {\n    const newState = {\n      ...state,\n      ...action.payload\n    }\n\n    // If we were answering, but it's the remote accept that puts us in the\n    //    Connected state (ie. slow-start), then we can remove this flag since\n    //    we know not to cancel a connected call.\n    if (newState.isHandling && newState.state === CALL_STATES.CONNECTED) {\n      delete newState.isHandling\n    }\n\n    return newState\n  },\n  throw (state, action) {\n    const newState = action.payload.state || state.state\n    return {\n      ...state,\n      state: newState\n    }\n  }\n}\n\n// Handles both success and failure actions the same way.\n// Instead of an object with `next` & `throw` properties, pass in a function.\n// https://redux-actions.js.org/api/handleaction#handleactiontype-reducer-defaultstate\ncallReducers[actionTypes.END_CALL_FINISH] = callEnder\n\ncallReducers[actionTypes.UPDATE_CALL] = {\n  next (state, action) {\n    /*\n     * Separate the action properties that should not be directly added to state.\n     *  - transition: Data for an event; not call state.\n     *  - localTracks: UPDATE_CALL should not affect local tracks.\n     */\n    const { transition, localTracks, remoteTracks, ...stateProperties } = action.payload\n\n    const newState = {\n      ...state,\n      ...stateProperties\n    }\n\n    if (remoteTracks && remoteTracks.length > 0) {\n      newState.remoteTracks = remoteTracks\n    }\n\n    /*\n     * Edge-case workaround.\n     * If the current operation is an on-going remote slow-start, then this remote\n     *   update call action is intended to be the \"finish\" for it. The \"update call\"\n     *   action being used here is an edge-case when the remote operation wasn't\n     *   something we can identify.\n     * This is being done manually because the \"update call\" action does not work\n     *   with the SDK's \"operation tracking\" logic in the reducers.\n     * See function `handleSlowUpdateResponse` in `/call/negotiation.js` for more info.\n     * Reference: KJS-542, KJS-571\n     */\n    if (\n      action.meta &&\n      action.meta.isRemote === true &&\n      newState.remoteOp &&\n      newState.remoteOp.operation === OPERATIONS.SLOW_START &&\n      newState.remoteOp.status === OP_STATUS.ONGOING\n    ) {\n      newState.remoteOp = undefined\n    }\n\n    return newState\n  }\n}\n\ncallReducers[actionTypes.CALL_HOLD_FINISH] = {\n  next (state, action) {\n    // Filter out the affected tracks from the list of remote tracks.\n    //    `trackLeft` _should_ be an empty array at this point...\n    const removedTracks = action.payload.remoteTracks\n    const tracksLeft = state.remoteTracks.filter(trackId => !removedTracks.includes(trackId))\n\n    // Filter out local tracks. It _should_ be an emptyy array at this point.\n    // But only remove the tracks in the action since those are the tracks that\n    //    will be in the \"tracks removed\" event.\n    const { localTracks } = action.payload\n    const localTracksLeft = state.localTracks.filter(trackId => !localTracks.includes(trackId))\n\n    return {\n      ...state,\n      localHold: true,\n      state: CALL_STATES.ON_HOLD,\n      localTracks: localTracksLeft,\n      remoteTracks: tracksLeft\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_UNHOLD_FINISH] = {\n  next (state, action) {\n    // Add the affected tracks to the list of remote tracks.\n    //    `state.remoteTracks` _should_ have been empty before this...\n    const addedTracks = action.payload.remoteTracks\n    const tracks = union(state.remoteTracks, addedTracks)\n\n    const { localTracks } = action.payload\n    const localAdded = union(state.localTracks, localTracks)\n\n    const callState = state.remoteHold ? CALL_STATES.ON_HOLD : CALL_STATES.CONNECTED\n    return {\n      ...state,\n      localHold: false,\n      state: callState,\n      localTracks: localAdded,\n      remoteTracks: tracks\n    }\n  }\n}\n\ncallReducers[actionTypes.SET_CUSTOM_PARAMETERS] = {\n  next (state, action) {\n    return {\n      ...state,\n      customParameters: action.payload.customParameters,\n      customBodies: action.payload.customBodies\n    }\n  }\n}\n\ncallReducers[actionTypes.SEND_CUSTOM_PARAMETERS_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      ...action.payload\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_REMOTE_HOLD_FINISH] = {\n  next (state, action) {\n    // Filter out the affected tracks from the list of remote tracks.\n    //    `trackLeft` _should_ be an empty array at this point...\n    const removedRemote = action.payload.remoteTracks\n    const tracksLeft = state.remoteTracks.filter(trackId => !removedRemote.includes(trackId))\n\n    const removedLocal = action.payload.localTracks\n    const localLeft = state.localTracks.filter(trackId => !removedLocal.includes(trackId))\n\n    return {\n      ...state,\n      remoteHold: true,\n      state: CALL_STATES.ON_HOLD,\n      remoteParticipant: {\n        ...state.remoteParticipant,\n        ...action.payload.remoteParticipant\n      },\n      localTracks: localLeft,\n      remoteTracks: tracksLeft\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_REMOTE_UNHOLD_FINISH] = {\n  next (state, action) {\n    // Replace the remoteTracks with the remoteTracks affected by the unhold.\n    const tracks = action.payload.remoteTracks\n\n    const addedLocal = action.payload.localTracks\n    const localTracks = union(state.localTracks, addedLocal)\n\n    const callState = state.localHold ? CALL_STATES.ON_HOLD : CALL_STATES.CONNECTED\n    const newCall = {\n      ...state,\n      remoteHold: false,\n      state: callState,\n      remoteParticipant: {\n        ...state.remoteParticipant,\n        ...action.payload.remoteParticipant\n      },\n      localTracks,\n      remoteTracks: tracks\n    }\n\n    // If `hasMOH` was explicitly set to true, set it to false as part of unhold.\n    // This will happen when there is an explicit \"start MOH\" negotiation but\n    //    \"stop MOH\" is done as part of unhold.\n    if (newCall.hasMOH === true) {\n      newCall.hasMOH = false\n    }\n\n    return newCall\n  }\n}\n\ncallReducers[actionTypes.REMOTE_ADD_MEDIA_FINISH] = {\n  next (state, action) {\n    // Added the affected tracks to the list of remote tracks.\n    const addedTracks = action.payload.remoteTracks\n    const tracks = union(state.remoteTracks, addedTracks)\n\n    return {\n      ...state,\n      remoteTracks: tracks\n    }\n  }\n}\ncallReducers[actionTypes.REMOTE_REMOVE_MEDIA_FINISH] = {\n  next (state, action) {\n    // Filter out the affected tracks from the list of remote tracks.\n    const removedTracks = action.payload.remoteTracks\n    const tracksLeft = state.remoteTracks.filter(trackId => !removedTracks.includes(trackId))\n\n    return {\n      ...state,\n      remoteTracks: tracksLeft\n    }\n  }\n}\n\ncallReducers[actionTypes.REMOTE_START_MOH_FINISH] = {\n  next (state, action) {\n    // Added the affected tracks to the list of remote tracks.\n    const addedTracks = action.payload.remoteTracks\n    const tracks = union(state.remoteTracks, addedTracks)\n\n    return {\n      ...state,\n      hasMOH: true,\n      remoteTracks: tracks\n    }\n  }\n}\n\ncallReducers[actionTypes.REMOTE_STOP_MOH_FINISH] = {\n  next (state, action) {\n    // Filter out the affected tracks from the list of remote tracks.\n    const removedTracks = action.payload.remoteTracks\n    const tracksLeft = state.remoteTracks.filter(trackId => !removedTracks.includes(trackId))\n\n    return {\n      ...state,\n      hasMOH: false,\n      remoteTracks: tracksLeft\n    }\n  }\n}\n\ncallReducers[actionTypes.FORWARD_CALL_FINISH] = {\n  next (state, action) {\n    const newState = {\n      ...state,\n      state: CALL_STATES.ENDED\n    }\n\n    // After the forward operation finishes, remove the flag that indicates we\n    //    were handling the call.\n    delete newState.isHandling\n\n    return newState\n  }\n}\n\ncallReducers[actionTypes.DIRECT_TRANSFER_FINISH] = {\n  next: callEnder\n}\n\nreducers[actionTypes.CONSULTATIVE_TRANSFER_FINISH] = {\n  next: (state, action) => {\n    // On success, end both calls used in the consultative transfer.\n    return state.map(call => {\n      if (call.id === action.payload.id || call.id === action.payload.otherCallId) {\n        return callEnder(call, action)\n      } else {\n        return call\n      }\n    })\n  },\n  throw: (state, action) => {\n    // On failure, don't update state.\n    return state\n  }\n}\n\nreducers[actionTypes.JOIN_START] = {\n  next (state, action) {\n    // Create the new joined\n    const newCall = {\n      id: action.payload.id,\n      remoteParticipant: {\n        displayNumber: action.payload.participantAddress,\n        displayName: action.payload.participantName\n      },\n      // TODO: Have better names for `to` & `from`\n      to: action.payload.participantAddress,\n      from: action.payload.from,\n      mediaConstraints: action.payload.mediaConstraints,\n      state: CALL_STATES.INITIATING,\n      direction: CALL_DIRECTION.OUTGOING,\n      // Hold status.\n      localHold: false,\n      remoteHold: false,\n      isCaller: true,\n      isJoinedCall: true,\n      customParameters: action.payload.customParameters,\n      bandwidth: action.payload.bandwidth,\n      dscpControls: action.payload.dscpControls,\n\n      localTracks: [],\n      remoteTracks: [],\n\n      localOp: {\n        operation: OPERATIONS.JOIN,\n        status: OP_STATUS.ONGOING,\n        eventId: action.payload.eventId\n      }\n    }\n\n    return concat(state, newCall)\n  }\n}\n\nreducers[actionTypes.PENDING_JOIN] = {\n  next (state, action) {\n    return state.map(call => {\n      if (call.id === action.payload.id) {\n        // Update the joined call with the new payload\n        return {\n          ...call,\n          wrtcsSessionId: action.payload.wrtcsSessionId,\n          webrtcSessionId: action.payload.webrtcSessionId,\n          state: action.payload.state\n        }\n      } else {\n        return call\n      }\n    })\n  }\n}\n\nreducers[actionTypes.JOIN_FINISH] = {\n  /*\n   * JOIN_FINISH for a success scenario is triggered by receiving \"sessionComplete\" notifications\n   * for the two initial calls that are joining (the action is dispatched with the initial calls' ids).\n   * For this scenario, end these calls since the new joined call is made.\n   */\n  next: (state, action) => {\n    return state.map(call => {\n      if (\n        call.id === action.payload.id ||\n        (action.payload.usedCallIds && action.payload.usedCallIds.includes(call.id))\n      ) {\n        return callEnder(call, action)\n      } else {\n        return call\n      }\n    })\n  },\n  throw: (state, action) => {\n    return state.map(call => {\n      // If this action was dispatched with the new call id, end the call\n      // How to determine if it was dispatched with new call id:\n      //  - The ID in the action is not in the `usedCallIds` of the action's payload\n      // If there is no `usedCallIds`, then likely this action is dispatched with the unjoined call ID's\n      // due to receiving a \"sessionFailed\" notification from the backend\n      if (\n        call.id === action.payload.id &&\n        action.payload.usedCallIds &&\n        !action.payload.usedCallIds.includes(call.id)\n      ) {\n        return callEnder(call, action)\n      } else {\n        return call\n      }\n    })\n  }\n}\n\ncallReducers[actionTypes.ADD_MEDIA_FINISH] = {\n  next (state, action) {\n    const localAdded = action.payload.localTracks\n\n    return {\n      ...state,\n      bandwidth: action.payload.bandwidth,\n      localTracks: state.localTracks.concat(localAdded)\n    }\n  }\n}\n\ncallReducers[actionTypes.REMOVE_MEDIA_FINISH] = {\n  next (state, action) {\n    const localRemoved = action.payload.localTracks\n    const tracksLeft = state.localTracks.filter(trackId => !localRemoved.includes(trackId))\n\n    return {\n      ...state,\n      bandwidth: action.payload.bandwidth,\n      localTracks: tracksLeft\n    }\n  }\n}\n\ncallReducers[actionTypes.REPLACE_TRACK_FINISH] = {\n  next (state, action) {\n    const oldTrackId = action.payload.oldTrackState.id\n    const newTrackId = action.payload.newTrackId\n\n    // Remove the old ID and add the new ID to localTracks state.\n    const tracks = state.localTracks.filter(trackId => trackId !== oldTrackId).concat(newTrackId)\n\n    return {\n      ...state,\n      localTracks: tracks\n    }\n  }\n}\n\ncallReducers[webrtcActionTypes.SESSION_ICE_CONNECTION_STATE_CHANGE] = {\n  next (state, action) {\n    return {\n      ...state,\n      mediaConnectionState: action.payload.iceConnectionState\n    }\n  }\n}\n/*\n * Combine all of the call-tier reducers into a single reducer,\n *      each with a default state of empty object.\n */\nconst callReducer = handleActions(callReducers, {})\n\n// Actions routed to call-tier reducers.\nconst specificCallActions = combineActions(\n  actionTypes.PENDING_OPERATION,\n  actionTypes.PENDING_MAKE_CALL,\n  actionTypes.MAKE_CALL_FINISH,\n  actionTypes.MAKE_ANONYMOUS_CALL_FINISH,\n  actionTypes.ANSWER_CALL,\n  actionTypes.ANSWER_CALL_FINISH,\n  actionTypes.REJECT_CALL,\n  actionTypes.REJECT_CALL_FINISH,\n  actionTypes.CALL_ACCEPTED,\n  actionTypes.SEND_RINGING_FEEDBACK_FINISH,\n  actionTypes.CALL_RINGING,\n  actionTypes.SESSION_PROGRESS,\n  actionTypes.CALL_CANCELLED,\n  actionTypes.IGNORE_CALL_FINISH,\n  actionTypes.END_CALL_FINISH,\n  actionTypes.CALL_HOLD_FINISH,\n  actionTypes.CALL_UNHOLD_FINISH,\n  actionTypes.SET_CUSTOM_PARAMETERS,\n  actionTypes.SEND_CUSTOM_PARAMETERS_FINISH,\n  actionTypes.CALL_REMOTE_HOLD_FINISH,\n  actionTypes.CALL_REMOTE_UNHOLD_FINISH,\n  actionTypes.REMOTE_ADD_MEDIA_FINISH,\n  actionTypes.REMOTE_REMOVE_MEDIA_FINISH,\n  actionTypes.ADD_MEDIA_FINISH,\n  actionTypes.REMOVE_MEDIA_FINISH,\n  actionTypes.UPDATE_CALL,\n  actionTypes.FORWARD_CALL,\n  actionTypes.FORWARD_CALL_FINISH,\n  actionTypes.DIRECT_TRANSFER_FINISH,\n  actionTypes.REPLACE_TRACK_FINISH,\n  actionTypes.MEDIA_RESTART,\n  actionTypes.MEDIA_RESTART_FINISH,\n  actionTypes.REMOTE_SLOW_START,\n  actionTypes.REMOTE_START_MOH_FINISH,\n  actionTypes.REMOTE_STOP_MOH_FINISH,\n  actionTypes.SESSION_CREATED,\n  actionTypes.OPERATION_UPDATE\n)\n\nconst specificWebrtcSessionActions = combineActions(webrtcActionTypes.SESSION_ICE_CONNECTION_STATE_CHANGE)\n\n/*\n * Reducer to handle specific call actions.\n * Routes the actions to the call-tier reducers.\n */\nreducers[specificCallActions] = (state, action) => {\n  return state.map(function (call) {\n    // Only update the call related to the action.\n    if (call.id === action.payload.id) {\n      // Update call state as per the reducer.\n      let updatedCall = callReducer(call, action)\n\n      // Update the operation portion of the call state.\n      updatedCall = operationReducer(updatedCall, action)\n      return updatedCall\n    } else {\n      return call\n    }\n  })\n}\n\n/**\n * Reducer to handle specific webrtc actions.\n * Routes the actions to the call-tier reducers.\n */\nreducers[specificWebrtcSessionActions] = (state, action) => {\n  return state.map(function (call) {\n    if (call.webrtcSessionId === action.payload.id) {\n      return callReducer(call, action)\n    } else {\n      return call\n    }\n  })\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\nimport { OPERATIONS, NO_FINISH_OPS, OP_TRANSITIONS, OP_STATUS } from '../constants'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\nimport { contains, isNil } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.OPERATION_UPDATE] = {\n  next (state, action) {\n    const stateProp = action.payload.isLocal ? 'localOp' : 'remoteOp'\n\n    if (action.payload.transition === OP_TRANSITIONS.START) {\n      // A new operation is starting...\n      if (state[stateProp]) {\n        // ...but there is still an on-going op.\n        // The new operation should be rejected, so state should not change.\n        return state\n      } else {\n        // ...and there is no current operation on-going.\n        // Set the new operation in state.\n        return {\n          ...state,\n          [stateProp]: {\n            operation: action.payload.operation,\n            status: OP_STATUS.ONGOING,\n            eventId: action.payload.eventId\n          }\n        }\n      }\n    } else if (action.payload.transition === OP_TRANSITIONS.UPDATE) {\n      // Existing operation is now waiting on remote side.\n      return {\n        ...state,\n        [stateProp]: {\n          ...state[stateProp],\n          status: OP_STATUS.PENDING,\n          operationData: action.payload.operationData\n        }\n      }\n    } else if (action.payload.transition === OP_TRANSITIONS.FINISH) {\n      // Existing operation is finishing.\n      const isRemote = !action.payload.isLocal\n      const unsetOperation = {\n        ...state,\n        [stateProp]: undefined\n      }\n\n      const currentOp = state[stateProp].operation\n      if (isNil(currentOp)) {\n        // Should be considered an error scenario.\n        return state\n      }\n\n      // An on-going operation is finishing...\n      if (currentOp === action.payload.operation) {\n        // The operation matches the current on-going operation.\n        //    Unset it in state.\n        return unsetOperation\n      } else if (isRemote && currentOp === OPERATIONS.SLOW_START) {\n        // Special case: If the current operation was a remote slow start,\n        //    then the 'finish' won't match. Allow any 'finish' to unset it.\n        return unsetOperation\n      } else if (contains(currentOp)(NO_FINISH_OPS)) {\n        // Special case: If the current operation is one that doesn't have a finish\n        //    operation, allow any 'finish' to unset it.\n        return unsetOperation\n      } else if (action.payload.operation === OPERATIONS.END) {\n        // Special-case: If the operation is an \"end call\" (but the on-going operation\n        //    doesn't match), then unset the current operation.\n        return unsetOperation\n      } else {\n        // ...but it wasn't tracked in state?\n        // Should be considered an error scenario.\n        return state\n      }\n    }\n\n    return state\n  }\n}\n\nreducers[actionTypes.UPDATE_CALL] = {\n  next (state, action) {\n    // Special-case for slow-start...\n    // See https://github.com/RibbonCommunications/webrtc.js/pull/3454/files#diff-0aef3ee33c1007fada1c90a5da252ae4046de14d63fbea8d87faa6a69fbd1cd6R380\n    return state\n  }\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of undefined on-going operations.\n */\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\n\nconst reducers = {}\n\n// Replace any previous information with the new information.\nreducers[actionTypes.TURN_CHANGED] = {\n  next (state, action) {\n    return {\n      ...state,\n      servers: action.payload.servers || state.servers,\n      credentials: {\n        ...state.credentials,\n        ...action.payload.credentials\n      }\n    }\n  }\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer.\n */\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","// Regular Call API.\nimport createAPI from './index'\n\n// Call plugin.\nimport { callActions as actions } from '../actions'\n\n// Libraries.\nimport { pick } from 'lodash/fp'\nimport { v4 as uuidV4 } from 'uuid'\n\n// Helpers.\nimport { formatMediaConstraints } from '../utils'\n\nexport default function createAnonApi (container) {\n  const { CallManager, context, logManager, API_LOG_TAG } = container\n  const log = logManager.getLogger('CALL')\n\n  // List of APIs that this plugin will take from the interface.\n  //      APIs not included here will not be exposed.\n  // The difference between regular calls and callMe anonymous calls is that:\n  //      1. anon is outgoing only,\n  //      2. anon is basic mid-call operations only (eg. no transfer),\n  //      3. anon's makeCall is not called directly (after login).\n  const anonAPIs = [\n    // Getters.\n    'getAll',\n    'getById',\n    'getAvailableCodecs',\n    // Setters.\n    'setCustomParameters',\n    'setSdpHandlers',\n    // Call functionality.\n    'hold',\n    'unhold',\n    'sendCustomParameters',\n    'end',\n    'addMedia',\n    'removeMedia',\n    'startVideo',\n    'stopVideo',\n    'sendDTMF',\n    'getStats',\n    'replaceTrack',\n    'restartMedia',\n    'getReport',\n    // States,\n    'states',\n    'mediaConnectionStates'\n  ]\n\n  const linkAPI = pick(anonAPIs, createAPI(container).call)\n\n  /**\n   * Starts an outgoing call as an anonymous user.\n   * @public\n   * @requires callMe\n   * @memberof call\n   * @method makeAnonymous\n   * @param {string} callee       Full user ID of the call recipient.\n   * @param {Object} credentials  Information needed to validate a token anonymous call.\n   * @param {Object} credentials.realm The realm used to encrypt the tokens.\n   * @param {Object} [credentials.accountToken] The encrypted account token of the account making the call.\n   * @param {Object} [credentials.fromToken] The encrypted SIP address of the account/caller.\n   * @param {Object} [credentials.toToken] The encrypted SIP address of the callee.\n   * @param {Object} callOptions Call options.\n   * @param {string} callOptions.from The URI of the user making the call.\n   * @param {Boolean} [callOptions.audio=true] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n   * @param {Object} [callOptions.audioOptions] Options for configuring the call's audio.\n   * @param {call.BandwidthControls} [callOptions.bandwidth] Options for configuring media's bandwidth.\n   * @param {call.MediaConstraint} [callOptions.audioOptions.deviceId] ID of the microphone to receive audio from.\n   * @param {Boolean} [callOptions.video=false] Whether the call should have video on start.\n   * @param {Object} [callOptions.videoOptions] Options for configuring the call's video.\n   * @param {call.MediaConstraint} [callOptions.videoOptions.deviceId] ID of the camera to receive video from.\n   * @param {call.MediaConstraint} [callOptions.videoOptions.height] The height of the video.\n   * @param {call.MediaConstraint} [callOptions.videoOptions.width] The width of the video.\n   * @param {call.MediaConstraint} [callOptions.videoOptions.frameRate] The frame rate of the video.\n   * @param {Boolean} [callOptions.screen=false] Whether the call should have screenshare on start.\n   * @param {Object} [callOptions.screenOptions] Options for configuring the call's screenShare.\n   * @param {call.MediaConstraint} [callOptions.screenOptions.height] The height of the screenShare.\n   * @param {call.MediaConstraint} [callOptions.screenOptions.width] The width of the screenShare.\n   * @param {call.MediaConstraint} [callOptions.screenOptions.frameRate] The frame rate of the screenShare.\n   * @param {string} [callOptions.displayName] Custom display name to be provided to the destination. Only used with token-less anonymous calls. Not supported in all environments and may use default display name.\n   * @param {Array<call.CustomParameter>} [callOptions.customParameters] Custom SIP header parameters for the SIP backend.\n   * @return {string} Id of the outgoing call.\n   * @example\n   * // Make a basic anonymous call.\n   * let callee = 'user1@example.com';\n   * let callOptions = { ... };\n   *\n   * let callId = client.call.makeAnonymous(callee, {}, callOptions);\n   * @example\n   * // Make a time-limited token anonymous call.\n   * let callee = 'user1@example.com';\n   * let account = 'user2@example.com';\n   * let callOptions = { ...\n   *     customParameters: [\n   *       {\n   *         \"name\": \"X-GPS\",\n   *         \"value\": \"42.686032,23.344565\"\n   *       }\n   *     ],\n   *     ...\n   *   };\n   *\n   * // Generate / Retrieve the encrypted tokens.\n   * const key = 'abc123...';\n   * const credentials = {\n   *      accountToken: createToken(account, key),\n   *      fromToken: createToken('sip:' + account, key),\n   *      toToken: createToken('sip:' + callee, key),\n   *      realm: 'realmAbc123...'\n   * };\n   *\n   * let callId = client.call.makeAnonymous(callee, credentials, callOptions);\n   */\n\n  /**\n   * @private\n   * @memberof call\n   * @requires callMe\n   * @method makeAnonymous\n   * @param {Object} callOptions Call options.\n   * @param {Array<call.CustomBody>} [callOptions.customBodies] Custom SIP bodies for the SIP backend.\n   */\n  function makeAnonymous (callee, credentials = {}, callOptions = {}) {\n    log.debug(API_LOG_TAG + 'call.makeAnonymous: ', callee, callOptions)\n\n    // Separate the media constraints from the callOptions.\n    const { audio, audioOptions, video, videoOptions, screen, screenOptions, ...options } = callOptions\n\n    const mediaConstraints = formatMediaConstraints({ audio, audioOptions, video, videoOptions, screen, screenOptions })\n\n    // Create our own call ID for storing in state.\n    const callId = uuidV4()\n\n    // Dispatch action for backwards-compat; does not affect state.\n    context.dispatch(\n      actions.makeAnonymousCall(callId, {\n        callee,\n        credentials,\n        mediaConstraints,\n        callOptions: options\n      })\n    )\n\n    const { realm, accountToken, toToken, fromToken } = credentials\n\n    let account\n    let isTokenBased\n    if (realm && accountToken && toToken && fromToken) {\n      // If credentials were provided for a token-limited call.\n      log.debug('Performing time-limited token anonymous call.')\n      account = accountToken\n      isTokenBased = true\n    } else {\n      log.debug('Performing anonymous call.')\n      account = callee\n      isTokenBased = false\n    }\n\n    const anonOptions = {\n      ...options,\n      isAnonymous: true,\n      account,\n      displayName: isTokenBased ? '' : options.displayName\n    }\n\n    // Dispatch an action to add the call to state.\n    context.dispatch(\n      actions.makeCall(callId, {\n        participantAddress: callee,\n        from: options.from,\n        mediaConstraints,\n        ...anonOptions\n      })\n    )\n\n    /*\n     * Timeout is needed to be backwards-compatible with saga-style API. The API\n     *    needs to return the callId before the operation occurs and any events\n     *    are emitted by the SDK.\n     */\n    setTimeout(async () => {\n      try {\n        const participants = { to: callee, from: options.from }\n        await CallManager.makeAnonymousCall(callId, participants, credentials, mediaConstraints, options)\n      } catch (err) {\n        // Errors are handled by the operation.\n      }\n      // Use a minimal timeout value to help make sure the operation does happen\n      //     \"immediately\" after the return.\n    }, 0)\n\n    return callId\n  }\n\n  // Return the API object: The Link APIs plus the anonymous `make` API.\n  return {\n    call: {\n      ...linkAPI,\n      makeAnonymous\n    }\n  }\n}\n","// Link-specific middlewares.\nimport callCancelledNotification from './callCancelledNotification'\nimport callStatusUpdateEndedNotification from './callStatusUpdateEndedNotification'\nimport callStatusUpdateFailedNotification from './callStatusUpdateFailedNotification'\nimport callStatusUpdateRingingNotification from './callStatusUpdateRingingNotification'\nimport sessionStatusUpdateEndedNotification from './sessionStatusUpdateEndedNotification'\nimport incomingCallNotification from './incomingCallNotification'\nimport remoteAnswerNotification from './remoteAnswerNotification'\nimport remoteOfferNotification from './remoteOfferNotification'\nimport resyncSessionStatuses from './resyncSessionStatuses'\nimport sessionProgressNotification from './sessionProgressNotification'\nimport setTurnCredentials from './setTurnCredentials'\n\n// Callstack middlewares.\nimport callStackMiddlewares from '../../callstack/middleware'\n\nconst factories = [\n  callCancelledNotification,\n  callStatusUpdateEndedNotification,\n  callStatusUpdateFailedNotification,\n  callStatusUpdateRingingNotification,\n  sessionStatusUpdateEndedNotification,\n  incomingCallNotification,\n  remoteAnswerNotification,\n  remoteOfferNotification,\n  resyncSessionStatuses,\n  sessionProgressNotification,\n  setTurnCredentials,\n  ...callStackMiddlewares\n]\n\n/**\n * Link Call middleware factory function.\n * @method createMiddleware\n * @param  {Object} context The factory context.\n * @return {Function} A redux middleware.\n */\nexport default function createMiddleware (context) {\n  // Create the middlewares scoped with the `context` object.\n  const middlewares = factories.map(factory => factory(context))\n\n  /*\n   * Redux middleware: Watch for specific actions and trigger operations\n   *    when we see them.\n   */\n  return next => action => {\n    // TODO: Do we care about return values? ...no?\n    middlewares.forEach(middleware => middleware(action))\n    return next(action)\n  }\n}\n","import { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\nimport { CALL_STATES } from '../../constants'\nimport { getCallByWrtcsSessionId } from '../../interface/selectors'\n\nexport default function createMiddleware (context) {\n  const { CallManager, logManager } = context.container\n\n  async function callCancelledNotification (action) {\n    if (!shouldHandlePattern(action)) {\n      return\n    }\n\n    const message = action.payload.notificationMessage\n    const { sessionData: wrtcsSessionId } = message.sessionParams\n\n    const targetCall = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', targetCall ? targetCall.id : undefined)\n    if (!targetCall) {\n      log.info('A remote operation is being requested on a call that no longer exists.')\n    }\n\n    /*\n     * The backend sends a \"callCancel\" notification immediately after answering\n     *    (and rejecting, forwarding) a call. The backend's intention for this\n     *    is to notify other user subscriptions (eg. same user on another\n     *    device) that the call has been handled, so the call is \"cancelled\" for\n     *    this subscription. But they send it as a broadcast notification to all\n     *    subscriptions, even the one that handled the call.\n     *\n     * We need to ignore this notification for the subscription that handled the\n     *    call, but process it for any other subscriptions. We do this in two\n     *    ways:\n     *      1) If the Call state indicates we are obviously the device that\n     *        answered it (eg. the Call is connected), ignore it.\n     *      2) If a flag is set on the Call that indicates we are in-progress\n     *        to handle it, ignore it.\n     *    This handles receiving the callCancel before and after the in-progress\n     *        operation has finished for both regular and slow-start calls.\n     */\n    if (\n      targetCall &&\n      targetCall.state !== CALL_STATES.RINGING &&\n      targetCall.state !== CALL_STATES.EARLY_MEDIA &&\n      targetCall.state !== CALL_STATES.INITIATED\n    ) {\n      // Don't process the notification if the call isn't \"ringing\".\n      log.info(`Received call cancel notification when state is ${targetCall.state}. Ignoring.`)\n      return\n    }\n\n    if (targetCall && targetCall.isHandling) {\n      // Don't process the notification if we are currently handling the call.\n      log.info('Received call cancel notification while handling is in-progress. Ignoring.')\n      return\n    }\n\n    // Handle it.\n    await CallManager.callCancelled(wrtcsSessionId)\n  }\n\n  return callCancelledNotification\n}\n\n// The `incomingCallPattern` function.\nexport function shouldHandlePattern (action) {\n  return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'callCancel'\n}\n","// Call plugin\nimport { getCallByWrtcsSessionId } from '../../interface/selectors'\nimport { getRemoteParticipant } from '../utils'\n\n// Other plugins\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\nimport { getDomain } from '../../../auth/interface/selectors'\n\nexport default function createMiddleware (context) {\n  const { CallManager, logManager } = context.container\n\n  async function callStatusUpdateEndedNotification (action) {\n    if (!shouldHandlePattern(action)) {\n      // Don't handle it.\n      return\n    }\n\n    const message = action.payload.notificationMessage\n    const { sessionData: wrtcsSessionId, reasonText, statusCode } = message.sessionParams\n\n    const targetCall = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', targetCall ? targetCall.id : undefined)\n    if (!targetCall) {\n      log.info('A remote operation is being requested on a call that no longer exists.')\n      return\n    }\n\n    const domain = getDomain(context.getState())\n    const remoteInfo = getRemoteParticipant(targetCall, message, domain)\n\n    const params = {\n      reasonText,\n      statusCode,\n      // Remote participant's information.\n      ...remoteInfo\n    }\n\n    await CallManager.callStatusUpdateEnded(wrtcsSessionId, params)\n  }\n\n  return callStatusUpdateEndedNotification\n}\n\nexport function shouldHandlePattern (action) {\n  return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'callEnd'\n}\n","// Call plugin\nimport { getCallByWrtcsSessionId } from '../../interface/selectors'\nimport { getRemoteParticipant } from '../utils'\n\n// Other plugins\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\nimport { getDomain } from '../../../auth/interface/selectors'\n\nexport default function createMiddleware (context) {\n  const { CallManager, logManager } = context.container\n\n  async function callStatusUpdateFailedNotification (action) {\n    if (!shouldHandlePattern(action)) {\n      // Don't handle it.\n      return\n    }\n\n    const message = action.payload.notificationMessage\n    const { sessionData: wrtcsSessionId, reasonText, statusCode } = message.sessionParams\n\n    const targetCall = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', targetCall ? targetCall.id : undefined)\n    if (!targetCall) {\n      log.info('A remote operation is being requested on a call that no longer exists.')\n    }\n\n    const domain = getDomain(context.getState())\n    const remoteInfo = getRemoteParticipant(targetCall, message, domain)\n\n    const params = {\n      reasonText,\n      statusCode,\n      // Remote participant's information.\n      ...remoteInfo\n    }\n\n    await CallManager.callStatusUpdateFailed(wrtcsSessionId, params)\n  }\n\n  return callStatusUpdateFailedNotification\n}\n\nexport function shouldHandlePattern (action) {\n  return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'sessionFail'\n}\n","// Call plugin\nimport { getCallByWrtcsSessionId } from '../../interface/selectors'\nimport { getRemoteParticipant } from '../utils'\n\n// Other plugins\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\nimport { getDomain } from '../../../auth/interface/selectors'\n\nexport default function createMiddleware (context) {\n  const { CallManager, logManager } = context.container\n\n  async function callStatusUpdateRingingNotification (action) {\n    if (!shouldHandlePattern(action)) {\n      // Don't handle it.\n      return\n    }\n\n    const message = action.payload.notificationMessage\n    const { sessionData: wrtcsSessionId } = message.sessionParams\n\n    const targetCall = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', targetCall ? targetCall.id : undefined)\n    if (!targetCall) {\n      log.info('A remote operation is being requested on a call that no longer exists.')\n    }\n\n    const domain = getDomain(context.getState())\n    const remoteInfo = getRemoteParticipant(targetCall, message, domain)\n\n    const params = {\n      // Remote participant's information.\n      ...remoteInfo,\n      customParameters: message.customParameters\n    }\n\n    CallManager.callStatusUpdateRinging(wrtcsSessionId, params)\n  }\n\n  return callStatusUpdateRingingNotification\n}\n\nexport function shouldHandlePattern (action) {\n  return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'ringing'\n}\n","// Call plugin\nimport { getCallByWrtcsSessionId } from '../../interface/selectors'\nimport { getRemoteParticipant } from '../utils'\n\n// Other plugins\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\nimport { getDomain } from '../../../auth/interface/selectors'\n\nexport default function createMiddleware (context) {\n  const { CallManager, logManager } = context.container\n\n  async function sessionStatusUpdateEndedNotification (action) {\n    if (!shouldHandlePattern(action)) {\n      // Don't handle it.\n      return\n    }\n\n    const message = action.payload.notificationMessage\n    const { sessionData: wrtcsSessionId, reasonText, statusCode } = message.sessionParams\n\n    const targetCall = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', targetCall ? targetCall.id : undefined)\n    if (!targetCall) {\n      log.info('A remote operation is being requested on a call that no longer exists.')\n    }\n\n    const domain = getDomain(context.getState())\n    const remoteInfo = getRemoteParticipant(targetCall, message, domain)\n\n    const params = {\n      reasonText,\n      statusCode,\n      // Remote participant's information.\n      ...remoteInfo\n    }\n\n    await CallManager.sessionStatusUpdateEnded(wrtcsSessionId, params)\n  }\n\n  return sessionStatusUpdateEndedNotification\n}\n\nexport function shouldHandlePattern (action) {\n  return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'sessionComplete'\n}\n","// Other plugins\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\n\nexport default function createMiddleware (context) {\n  const CallManager = context.container.CallManager\n\n  async function incomingCallNotification (action) {\n    if (!shouldHandlePattern(action)) {\n      // Don't handle it.\n      return\n    }\n\n    const message = action.payload.notificationMessage\n\n    const notificationParams = message.callNotificationParams || {}\n    // ID that the server uses to identify the session.\n    const wrtcsSessionId = message.sessionParams.sessionData\n\n    // Massage data into a generic format, instead of Link-specific.\n    const params = {\n      // The remote SDP offer included with the notification (if any).\n      sdp: message.sessionParams.sdp,\n      // Remote participant information.\n      remoteName: notificationParams.callerName,\n      remoteNumber: notificationParams.callerDisplayNumber,\n      // Where the call was sent\n      calleeNumber: notificationParams.calleeDisplayNumber,\n      // Custom Parameters\n      customParameters: message.customParameters\n    }\n\n    // Pass the incoming call parameters to the Callstack for handling.\n    await CallManager.establishOffer(wrtcsSessionId, params, action.meta.channel)\n  }\n\n  return incomingCallNotification\n}\n\n// The `incomingCallPattern` function.\nexport function shouldHandlePattern (action) {\n  return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'call'\n}\n","// Other plugins\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\nimport { getCallByWrtcsSessionId } from '../../interface/selectors'\nimport { getRemoteParticipant } from '../utils'\nimport { getDomain } from '../../../auth/interface/selectors'\n\nexport default function createMiddleware (context) {\n  const CallManager = context.container.CallManager\n  const logManager = context.container.logManager\n  const log = logManager.getLogger('CALL')\n\n  /**\n   * Handle receiving remote answer notifications in a Link format.\n   * Uses properties in the notification to create a standardized data object to\n   *    be used by the Callstack.\n   * @method remoteAnswerNotification\n   * @param {Object} action  An incoming action which must follow a certain pattern to be accepted by this middleware.\n   */\n  async function remoteAnswerNotification (action) {\n    if (!shouldHandlePattern(action)) {\n      // Don't handle it.\n      return\n    }\n\n    // Handle it.\n    const message = action.payload.notificationMessage\n    const { sessionData: wrtcsSessionId } = message.sessionParams\n\n    const targetCall = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n    if (!targetCall) {\n      log.info('A remote operation is being requested on a call that no longer exists.')\n      return\n    }\n\n    const domain = getDomain(context.getState())\n    const remoteInfo = getRemoteParticipant(targetCall, message, domain)\n\n    // Pull-out the parameters into a standard format for the Callstack.\n    const params = {\n      wrtcsSessionId: message.sessionParams.sessionData,\n      sdp: message.sessionParams.sdp,\n\n      retryAfter: message.sessionParams.retryAfter,\n      message: message.sessionParams.reasonText,\n      code: message.statusCode,\n\n      // Remote participant information.\n      ...remoteInfo,\n\n      customParameters: message.customParameters\n    }\n    // Pass the call parameters to the Callstack for handling.\n    await CallManager.negotiationAnswer(wrtcsSessionId, params)\n  }\n\n  return remoteAnswerNotification\n}\n\n// The `receiveAnswerPattern` function.\nexport function shouldHandlePattern (action) {\n  return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'respondCallUpdate'\n}\n","import { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\nimport { getCallByWrtcsSessionId } from '../../interface/selectors'\nimport { getRemoteParticipant } from '../utils'\n\nexport default function createMiddleware (context) {\n  const { CallManager, logManager } = context.container\n  const log = logManager.getLogger('CALL')\n\n  /**\n   * Handle receiving remote offer notifications in a Link format.\n   * Uses properties in the notification to create a standardized data object to\n   *    be used by the Callstack.\n   * @method receiveRemoteOffer\n   * @param {Object} action A flux standard action\n   */\n  async function remoteOfferNotification (action) {\n    if (!shouldHandlePattern(action)) {\n      return\n    }\n\n    const message = action.payload.notificationMessage\n    const { sessionData: wrtcsSessionId } = message.sessionParams\n\n    const targetCall = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n    if (!targetCall) {\n      log.info('A remote operation is being requested on a call that no longer exists.')\n      return\n    }\n\n    const remoteInfo = getRemoteParticipant(targetCall, message)\n\n    // Pull-out the parameters into a standard format for the Callstack.\n    const params = {\n      wrtcsSessionId: message.sessionParams.sessionData,\n      sdp: message.sessionParams.sdp,\n      ...remoteInfo,\n      customParameters: message.customParameters\n    }\n\n    // Pass the call parameters to the Callstack for handling.\n    await CallManager.negotiationOffer(wrtcsSessionId, params)\n  }\n\n  return remoteOfferNotification\n}\n\n// The `incomingCallPattern` function.\nexport function shouldHandlePattern (action) {\n  return (\n    action.type === NOTIFICATION_RECEIVED && Boolean(action.payload.notificationMessage.eventType === 'startCallUpdate')\n  )\n}\n","// Call plugin\nimport { RESYNC } from '../../interface/actionTypes'\n\nexport default function createMiddleware (context) {\n  const { CallManager } = context.container\n\n  async function resyncSessionStatuses (action) {\n    if (!shouldHandlePattern(action)) {\n      // Don't handle it.\n      return\n    }\n\n    // Handle it.\n    const callId = action.payload.id\n    await CallManager.resyncCallState(callId)\n  }\n\n  return resyncSessionStatuses\n}\n\n// The `incomingCallPattern` function.\nexport function shouldHandlePattern (action) {\n  return action.type === RESYNC\n}\n","// Other plugins\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\n\nexport default function createMiddleware (context) {\n  const { CallManager } = context.container\n\n  /**\n   * Handle a Link \"session progress\" notification.\n   * @method sessionProgressNotification\n   */\n  async function sessionProgressNotification (action) {\n    if (!shouldHandlePattern(action)) {\n      // Don't handle it.\n      return\n    }\n\n    const message = action.payload.notificationMessage\n\n    const notificationParams = message.callNotificationParams || {}\n\n    const wrtcsSessionId = message.sessionParams.sessionData\n    // Massage data into a generic format, instead of Link-specific.\n    const params = {\n      sdp: message.sessionParams.sdp,\n      remoteName: notificationParams.remoteName,\n      remoteNumber: notificationParams.remoteDisplayNumber,\n      customParameters: message.customParameters\n    }\n\n    await CallManager.receiveEarlyMedia(wrtcsSessionId, params)\n  }\n\n  return sessionProgressNotification\n}\n\n// The `incomingCallPattern` function.\nexport function shouldHandlePattern (action) {\n  return action.type === NOTIFICATION_RECEIVED && action.payload.notificationMessage.eventType === 'sessionProgress'\n}\n","// Other plugins\nimport { SUBSCRIBE_FINISHED } from '../../../subscription/interface/actionTypes'\nimport { CONNECT_FINISHED } from '../../../auth/interface/actionTypes'\n\n// src/call/sagaLink/sagas/index.js\nexport default function createMiddleware (context) {\n  const operations = context.container.CallOperations\n\n  function setTurnCredentials (action) {\n    if (!shouldHandlePattern(action)) {\n      // Don't handle it.\n      return\n    }\n\n    // Call the set turn credentials operation and forward the action to the operation\n    operations.setTurnCredentials(action)\n  }\n\n  return setTurnCredentials\n}\n\n// The `incomingCallPattern` function.\nexport function shouldHandlePattern (action) {\n  return !!(\n    !action.error &&\n    ((action.type === CONNECT_FINISHED && action.payload.subscription && action.payload.subscription.turnCredentials) ||\n      (action.type === SUBSCRIBE_FINISHED &&\n        action.payload.subscriptions &&\n        action.payload.subscriptions.length &&\n        action.payload.subscriptions[0].turnCredentials))\n  )\n}\n","import getSessionsMiddleware from './getSessions'\nimport iceCollectionCheck from './iceCollectionCheck'\nimport normalizeIceFailure from './normalizeIceFailure'\nimport callAudit from './callAudit'\n\nconst callStackMiddlewares = [getSessionsMiddleware, iceCollectionCheck, normalizeIceFailure, callAudit]\n\nexport default callStackMiddlewares\n","// Call plugin\nimport { getCalls, getOptions } from '../../interface/selectors'\nimport { CALL_STATES } from '../../constants'\n\n// Other plugins\nimport { WS_CONNECT_FINISHED } from '../../../connectivity/interface/actionTypes'\n\n/**\n * Factory function for the `getSessions` middleware handler. Creates an instance\n *    of the function in the scope / context of the built SDK.\n * @return {Function} The function which is responsible for triggering a call audit.\n */\nexport default function getSessionsMiddleware (context) {\n  const operations = context.container.Callstack.operations\n\n  /*\n   * TODO: Rename this middleware (and file).\n   * Should be something like `resyncOnConnect`, after it's updated to use the\n   *    `resyncCallState` operation instead of the `updateCallState` operation.\n   */\n\n  /**\n   * This function is part of the overall middleware.\n   * Check (and update) the session status of all active calls upon websocket connection to ensure all call states are up to date.\n   *\n   * Responsibilities:\n   *   1. Ensure resyncOnConnect config is set\n   *   2. Filter out inactive calls (calls already in an ended state)\n   *   3. Call updateCallState operation for each active call.\n   * @method getSessions\n   * @param {Object} action Any action.\n   * @return {undefined}\n   */\n  async function getSessions (action) {\n    if (!shouldHandlePattern(action)) {\n      // Don't handle it.\n      return\n    }\n\n    // Don't handle if resyncOnConnect is false\n    const config = getOptions(context.getState())\n    if (!config.resyncOnConnect) {\n      return\n    }\n\n    // Grab all active calls\n    const calls = getCalls(context.getState())\n    const activeCalls = calls.filter(call => call.state !== CALL_STATES.CANCELLED && call.state !== CALL_STATES.ENDED)\n\n    // Check and update the call state of each call if necessary\n    activeCalls.map(async activeCall => await operations.updateCallState(activeCall))\n  }\n\n  return getSessions\n}\n\nexport function shouldHandlePattern (action) {\n  return action.type === WS_CONNECT_FINISHED\n}\n","import {\n  SESSION_ICE_GATHERING_STATE_CHANGE,\n  SESSION_ICE_CANDIDATE_COLLECTED,\n  SESSION_ICE_COLLECTION_SCHEDULED_CHECK\n} from '../../../webrtc/interface/actionTypes'\n\n/**\n * Bottle wrapper for \"ICE collection check\" triggers.\n * @return {Function}\n */\nexport default function callCollectionCheckMiddleware (context) {\n  const operations = context.container.Callstack.operations\n\n  async function callCollectionCheck (action) {\n    if (!shouldHandlePattern(action)) {\n      // Don't handle it.\n      return\n    }\n\n    // Handle it.\n    const { id, ...iceCollectionInfo } = action.payload\n    await operations.callIceCollectionCheck(id, iceCollectionInfo)\n  }\n\n  return callCollectionCheck\n}\n\nexport function shouldHandlePattern (action) {\n  return (\n    action.type === SESSION_ICE_GATHERING_STATE_CHANGE ||\n    action.type === SESSION_ICE_CANDIDATE_COLLECTED ||\n    action.type === SESSION_ICE_COLLECTION_SCHEDULED_CHECK\n  )\n}\n","import { SESSION_ICE_CONNECTION_STATE_CHANGE } from '../../../webrtc/interface/actionTypes'\nimport { CALL_MEDIA_CONNECTION_STATES } from '../../constants'\n\n/**\n * Bottle wrapper for \"normalize ICE failure\" middleware.\n * @return {Function}\n */\nexport default function normalizeIceFailureMiddleware (context) {\n  const Callstack = context.container.Callstack\n\n  /**\n   * Handle actions that trigger ice failure normalization.\n   * @param {Object} action A flux-standard action.\n   */\n  async function normalizeIceFailure (action) {\n    if (!shouldHandlePattern(action)) {\n      return\n    }\n\n    Callstack.operations.normalizeIceFailure(action.payload.id, action.payload.iceConnectionState)\n  }\n\n  return normalizeIceFailure\n}\n\n/**\n * Pattern check function for the normalize ice failure action pattern.\n * @param {Object} action A flux-standard action.\n */\nexport function shouldHandlePattern (action) {\n  return (\n    action.type === SESSION_ICE_CONNECTION_STATE_CHANGE &&\n    action.payload.iceConnectionState === CALL_MEDIA_CONNECTION_STATES.DISCONNECTED\n  )\n}\n","import { UPDATE_CALL, PENDING_JOIN, PENDING_MAKE_CALL } from '../../interface/actionTypes'\nimport { CALL_STATES } from '../../constants'\n\n/**\n * Factory function for the `callAudit` middleware handler. Creates an instance\n *    of the function in the scope / context of the built SDK.\n * @return {Function} The function which is responsible for triggering a call audit.\n */\nexport default function createActionHandler (context) {\n  const operations = context.container.Callstack.operations\n\n  /**\n   * Handle requests that are meant to trigger a call audit.\n   *\n   * @method callAudit\n   * @param {Object} action Any action.\n   * @return {undefined}\n   */\n  async function callAudit (action) {\n    if (!shouldHandlePattern(action)) {\n      // Don't handle it.\n      return false\n    }\n\n    // Handle it by calling the `sendCallAudit` operation.\n    // For both CPaaS & Link, a \"call audit\" means to update the call's status to: 'Connected'\n    // This will be accomplished by the operation by calling a specific request such as: updateSessionStatus\n    operations.sendCallAudit(action.payload.id, {\n      wrtcsSessionId: action.payload.wrtcsSessionId\n    })\n  }\n\n  return callAudit\n}\n\n/**\n * Test function for whether an action should be handled by this handler.\n * @param {Object} action\n * @return {boolean} True if action should be handled, false otherwise.\n */\nexport function shouldHandlePattern (action) {\n  const actionTypesToDoAuditOn = [UPDATE_CALL, PENDING_JOIN, PENDING_MAKE_CALL]\n\n  if (!action.error) {\n    if (actionTypesToDoAuditOn.indexOf(action.type) !== -1) {\n      const preConnectedState =\n        action.payload.state === CALL_STATES.INITIATED || action.payload.state === CALL_STATES.RINGING\n      return preConnectedState\n    }\n  }\n  return false\n}\n","import complexRequests from './complex'\nimport establishRequests from './establish'\nimport miscRequests from './misc'\nimport negotiationRequests from './negotiation'\n\n/**\n * Link-specific Call Requests factory function.\n * Creates a closure where dependencies can be set and used\n *    by requests.\n */\nexport default function createRequests (container) {\n  return {\n    ...complexRequests(container),\n    ...establishRequests(container),\n    ...miscRequests(container),\n    ...negotiationRequests(container)\n  }\n}\n","// Other plugins.\nimport { getRequestInfo } from '../../../auth/interface/selectors'\n\n// Helpers.\nimport { platforms } from '../../../constants'\nimport * as requestUtils from './utils'\n\n/**\n * Bottle wrapper for Link \"complex\" call requests.\n * @return {Object}\n */\nexport default function complexRequests (container) {\n  const { context, sendRequest } = container\n\n  /**\n   * Direct Transfers an incoming session to another destination address.\n   * Link-specific signaling function.\n   *\n   * This function \"direct transfers\" the server session to a specified destination address.\n   * Assumptions:\n   *    1. The current user is authenticated.\n   * Responsibilities:\n   *    1. Format parameters as needed for signalling.\n   *    2. Perform the REST request.\n   *    3. Return the response, formatted.\n   * @method directTransferSession\n   * @param  {Object} callInfo\n   * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n   * @param  {string} callInfo.address The address to forward the session to.\n   * @return {undefined}\n   * @throws {BasicError} Throws an error if the REST request fails.\n   */\n  async function directTransferSession (callInfo) {\n    // Collect the information needed to make the request.\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n\n    const options = {\n      method: 'PUT'\n    }\n\n    options.body = JSON.stringify({\n      callControlRequest: {\n        type: 'transfer',\n        address: callInfo.address\n      }\n    })\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, { ...options, ...callInfo })\n    if (response.error) {\n      throw response.error\n    }\n  }\n\n  /**\n   * Transfers ongoing sessions into one another.\n   * Link-specific signaling function.\n   *\n   * This function \"transfers\" the server sessions.\n   * Assumptions:\n   *    1. The current user is authenticated.\n   * Responsibilities:\n   *    1. Format parameters as needed for signalling.\n   *    2. Perform the REST request.\n   *    3. Return the response, formatted.\n   * @method consultativeTransferSessions\n   * @param  {Object} callInfo\n   * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n   * @param  {string} callInfo.otherWrtcsSessionId The ID the backend uses to track the other session.\n   * @param  {string} callInfo.destination The address of the other session to transfer to.\n   * @return {undefined} response object from the server.\n   * @throws {BasicError} Throws an error if the REST request fails.\n   */\n  async function consultativeTransferSessions (callInfo) {\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n\n    const options = {\n      method: 'PUT'\n    }\n\n    options.body = JSON.stringify({\n      callControlRequest: {\n        type: 'transfer',\n        sessionData: callInfo.otherWrtcsSessionId,\n        address: callInfo.destination\n      }\n    })\n\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, { ...options, ...callInfo })\n    if (response.error) {\n      throw response.error\n    }\n  }\n\n  /**\n   * Joins ongoing sessions into a new session.\n   * Link-specific signaling function.\n   *\n   * This request \"joins\" the server sessions.\n   * Assumptions:\n   *    1. The current user is authenticated.\n   * Responsibilities:\n   *    1. Format parameters as needed for signalling.\n   *    2. Perform the REST request.\n   *    3. Return the response, formatted.\n   * @method joinSessions\n   * @param  {Object} callInfo\n   * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n   * @param  {string} callInfo.otherWrtcsSessionId\n   * @param  {string} callInfo.sdp The new sdp to use.\n   * @param  {Array<CustomParameter>} callInfo.customParameters The custom parameters of the current call.\n   * @param  {Array<CustomBody>} callInfo.customBodies The custom bodies of the call.\n   * @return {string} newWrtcsSessionId The back-end session id, if signalling succeeded.\n   * @throws {BasicError} Throws an error if the REST request fails.\n   */\n  async function joinSessions (callInfo) {\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n\n    const options = {\n      method: 'POST'\n    }\n\n    options.body = JSON.stringify({\n      callControlRequest: {\n        type: 'join',\n        firstSessionData: callInfo.wrtcsSessionId,\n        secondSessionData: callInfo.otherWrtcsSessionId,\n        sdp: callInfo.sdp,\n        customParameters: callInfo.customParameters\n        // TODO: Pass the Custom Bodies as well if supported\n      }\n    })\n\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, options)\n\n    if (response.error) {\n      throw response.error\n    }\n\n    return response.callControlResponse.sessionData\n  }\n\n  return {\n    directTransferSession,\n    consultativeTransferSessions,\n    joinSessions\n  }\n}\n","// Call plugin.\nimport { getOptions, getCallByWrtcsSessionId, getCallById } from '../../interface/selectors'\n\nimport { REPORTER_EVENTS, REPORTER_REQUESTS } from '../../callstack/reporter/constants'\n\n// Other plugins.\nimport { getDomain, getRequestInfo } from '../../../auth/interface/selectors'\nimport { getWebsocketId } from '../../../subscription/interface/selectors'\n\n// Helpers.\nimport { normalizeSipUri } from '../../utils/normalization'\nimport { platforms } from '../../../constants'\nimport * as requestUtils from './utils'\nimport BasicError, { callCodes } from '../../../errors'\n\n/**\n * Bottle wrapper for Link \"establish\" call requests.\n * @return {Object}\n */\nexport default function establishRequests (container) {\n  const { context, logManager, sendRequest, CallReporter } = container\n\n  /**\n   * Creates a Call session on the KandyLink server.\n   *\n   * @method createSession\n   * @param {Object} info Information the backend needs to create the call.\n   * @param {string} info.id The ID the SDK uses to identify this call.\n   * @param {string} info.to The user to receive the call.\n   * @param {string} info.offer The local SDP offer to begin negotiation.\n   * @param {boolean} info.isAnonymous Whether the local user is anonymous or not.\n   * @param {string} info.account If anonymous, the user account used to authenticate the request.\n   * @param {string} info.from If anonymous, the username for the call to be \"from\".\n   * @param {Object} [options={}] Additional details for the call / request.\n   * @param {string} [options.displayName] A custom display name to use. Not supported in\n   *    all environments and may use default display name.\n   * @param {Array} [options.customParameters] Custom SIP header parameters for the SIP backend.\n   * @param {Array} [options.customBodies] Custom SIP bodies for the SIP backend.\n   * @return {string} The ID that the server uses to identify this call.\n   * @throws {BasicError} Throws a GENERIC_ERROR if an anonymous user has no call subscription.\n   * @throws {BasicError} Throws an if the REST request fails.\n   */\n  async function createSession (info, options) {\n    const log = logManager.getLogger('CALL', info.id)\n    log.info('Creating call session on server-side.')\n\n    // Collect the information needed to make the request.\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n    const callOptions = getOptions(context.getState())\n\n    // Get the report for this call id\n    const report = CallReporter.getReport(info.id)\n\n    // Get the main operational event that is ongoing\n    const call = getCallById(context.getState(), info.id)\n    const operationEvent = report.getEvent(call.localOp.eventId) // eventId should always point to a single ongoing op event\n\n    /*\n     * For an anonymous call, the \"from\" user is provided by the application.\n     * For a regular call, the \"from\" user is always the local user.\n     */\n    let originator\n    if (info.isAnonymous) {\n      originator = info.from\n    } else {\n      originator = normalizeSipUri(requestInfo.username, getDomain(context.getState()))\n      log.debug('Caller address normalized to: ' + originator)\n    }\n\n    // If a custom display name was provided, update the \"from\" address to include it.\n    if (options.displayName) {\n      originator = `${options.displayName}<${originator}>`\n    }\n\n    const requestBody = {\n      type: 'callStart',\n      to: info.to,\n      from: originator,\n      sdp: info.offer\n    }\n\n    /*\n     * For optional parameters, only add them to the request body if they are defined.\n     */\n    if (callOptions.earlyMedia) {\n      /*\n       * Also, if there are no supported items, `supported` should not be left as\n       *    an empty array because SPiDR will reject the body when it is left empty\n       *    (for anonymous calls).\n       */\n      requestBody.supported = ['earlymedia']\n    }\n    if (options.customParameters) {\n      requestBody.customParameters = options.customParameters\n    }\n    if (options.customBodies) {\n      requestBody.customBodies = options.customBodies\n    }\n\n    // The information to be passed to `fetch`.\n    const fetchInfo = {\n      ...info,\n      method: 'POST'\n    }\n    let responseType\n    if (info.isAnonymous) {\n      responseType = 'callMeResponse'\n\n      // Get the ID of the notification channel (ie. websocket) being used for\n      //    the call subscription.\n      const websocketId = getWebsocketId(context.getState(), 'callMe')\n      if (!websocketId) {\n        throw new BasicError({\n          code: callCodes.GENERIC_ERROR,\n          message: 'Cannot start call without call service subscription.'\n        })\n      }\n\n      fetchInfo.body = JSON.stringify({\n        callMeRequest: {\n          ...requestBody,\n          notifyChannelId: websocketId\n        }\n      })\n    } else {\n      responseType = 'callControlResponse'\n\n      fetchInfo.body = JSON.stringify({\n        callControlRequest: requestBody\n      })\n    }\n\n    // Before sending the REST request, mark it's start by creating a sub-event\n    // within the timeline of its parent operational event\n    const requestEvent = operationEvent.addEvent(REPORTER_EVENTS.REST_REQUEST)\n    // Add some metadata to it\n    requestEvent.addData('requestType', REPORTER_REQUESTS.CREATE_SESSION)\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, fetchInfo)\n\n    if (response.error) {\n      log.debug('Failed to create Call session server-side.', response.error)\n      requestEvent.setError(response.error)\n      requestEvent.endEvent()\n      throw response.error\n    } else {\n      const wrtcsSessionId = response[responseType].sessionData\n      log.debug('Call session created server-side.', { wrtcsSessionId })\n\n      requestEvent.addData('wrtcsSessionId', wrtcsSessionId)\n      requestEvent.endEvent()\n      return wrtcsSessionId\n    }\n  }\n\n  async function answerSession (info) {\n    const log = logManager.getLogger('CALL', info.id)\n    log.info('Answering call session on server-side.')\n\n    // Get the report for this call id\n    const report = CallReporter.getReport(info.id)\n\n    // Get the main operational event that is ongoing\n    const call = getCallById(context.getState(), info.id)\n    const operationEvent = report.getEvent(call.localOp.eventId)\n\n    // Collect the information needed to make the request.\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n\n    const options = {\n      method: 'PUT'\n    }\n\n    options.body = JSON.stringify({\n      callControlRequest: {\n        type: 'callAnswer',\n        sdp: info.answer,\n        customParameters: info.customParameters,\n        customBodies: info.customBodies\n      }\n    })\n\n    const requestEvent = operationEvent.addEvent(REPORTER_EVENTS.REST_REQUEST)\n    // Add some metadata to it\n    requestEvent.addData('requestType', REPORTER_REQUESTS.ANSWER_SESSION)\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, { ...options, ...info })\n\n    if (response.error) {\n      log.debug('Failed to answer Call session server-side.', response.error)\n      requestEvent.setError(response.error)\n      requestEvent.endEvent()\n      throw response.error\n    } else {\n      log.debug('Call session answered server-side.', { wrtcsSessionId: info.wrtcsSessionId })\n      requestEvent.endEvent()\n    }\n  }\n\n  /**\n   * Rejects an incoming session.\n   * Link-specific signaling function.\n   *\n   * This request \"rejects\" the server session.\n   * Assumptions:\n   *    1. The current user is authenticated.\n   *    2. There is an incoming session.\n   * Responsibilities:\n   *    1. Format parameters as needed for signalling.\n   *    2. Perform the REST request.\n   *    3. Return the response, formatted.\n   * REST request to reject a webRTC session.\n   * @method rejectSession\n   * @param  {Object} callInfo\n   * @param  {Object} callInfo.id The ID of the Call.\n   * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n   * @return {Object} response object from the server.\n   * @return {Object} [response.error] An error object, if signalling failed.\n   */\n  async function rejectSession (info) {\n    const log = logManager.getLogger('CALL', info.id)\n    log.info('Rejecting call session on server-side.')\n\n    // Get the report for this call id\n    const report = CallReporter.getReport(info.id)\n\n    // Get the main operational event that is ongoing\n    const call = getCallById(context.getState(), info.id)\n    const operationEvent = report.getEvent(call.localOp.eventId)\n\n    // Collect the information needed to make the request.\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n\n    const options = {\n      method: 'POST'\n    }\n\n    options.endUrl = 'calldisposition'\n\n    options.body = JSON.stringify({\n      callDispositionRequest: {\n        action: 'reject',\n        sessionData: info.wrtcsSessionId\n      }\n    })\n\n    const requestEvent = operationEvent.addEvent(REPORTER_EVENTS.REST_REQUEST)\n    // Add some metadata to it\n    requestEvent.addData('requestType', REPORTER_REQUESTS.REJECT_SESSION)\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, options)\n\n    if (response.error) {\n      log.debug('Failed to reject Call session server-side.', { wrtcsSessionId: info.wrtcsSessionId }, response.error)\n      requestEvent.setError(response.error)\n      requestEvent.endEvent()\n      throw response.error\n    } else {\n      log.debug('Call session rejected server-side.', { wrtcsSessionId: info.wrtcsSessionId })\n      requestEvent.endEvent()\n    }\n  }\n\n  /**\n   * Forwards an incoming session to another destination address.\n   * Link-specific signaling function.\n   *\n   * This function \"forwards\" the server session to a specified destination address.\n   * Assumptions:\n   *    1. The current user is authenticated.\n   *    2. There is an incoming session.\n   * Responsibilities:\n   *    1. Format parameters as needed for signalling.\n   *    2. Perform the REST request.\n   *    3. Return the response, formatted.\n   * @method forwardSession\n   * @param  {Object} callInfo\n   * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n   * @param  {string} callInfo.address The address to forward the session to.\n   * @return {undefined}\n   * @throws {BasicError} Throws an error if the REST request fails.\n   */\n  async function forwardSession (callInfo) {\n    const call = getCallByWrtcsSessionId(context.getState(), callInfo.wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', call.id)\n    log.info('Forwarding call session on server-side.')\n\n    // Get the report for this call id\n    const report = CallReporter.getReport(call.id)\n\n    // Get the main operational event that is ongoing\n    const operationEvent = report.getEvent(call.localOp.eventId)\n\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n\n    const options = {\n      method: 'POST'\n    }\n\n    options.endUrl = 'calldisposition'\n\n    options.body = JSON.stringify({\n      callDispositionRequest: {\n        action: 'forward',\n        sessionData: callInfo.wrtcsSessionId,\n        address: callInfo.address\n      }\n    })\n\n    const requestEvent = operationEvent.addEvent(REPORTER_EVENTS.REST_REQUEST)\n    // Add some metadata to it\n    requestEvent.addData('requestType', REPORTER_REQUESTS.FORWARD_SESSION)\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, options)\n\n    if (response.error) {\n      requestEvent.setError(response.error)\n      requestEvent.endEvent()\n      throw response.error\n    }\n    requestEvent.endEvent()\n  }\n\n  /**\n   * A REST DELETE request to send webRTC session call end requests.\n   * @method endSession\n   * @param  {Object} callInfo\n   * @param  {string} callInfo.callId The ID that the SDK uses to identify this call.\n   * @param  {string} callInfo.wrtcsSessionId ID that the server uses to identify the session.\n   * @param  {boolean} callInfo.isAnonymous Whether the call is anonymous or not.\n   * @param  {string} [callInfo.account] An account token used by the request if it is an anonymous call.\n   * @throws {BasicError} Throws an error if the REST request fails.\n   */\n  async function endSession (callInfo) {\n    const log = logManager.getLogger('CALL', callInfo.callId)\n    log.info('Ending call session on server-side.')\n\n    // Get the report for this call id\n    const report = CallReporter.getReport(callInfo.callId)\n\n    // Get the main operational event that is ongoing\n    const call = getCallById(context.getState(), callInfo.callId)\n    const operationEvent = report.getEvent(call.localOp.eventId)\n\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n\n    const options = {\n      method: 'DELETE',\n      responseType: 'none'\n    }\n\n    const requestEvent = operationEvent.addEvent(REPORTER_EVENTS.REST_REQUEST)\n    // Add some metadata to it\n    requestEvent.addData('requestType', REPORTER_REQUESTS.END_SESSION)\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, { ...options, ...callInfo })\n    if (response.error) {\n      log.info('Failed to end Call session server-side.', response.error)\n      requestEvent.setError(response.error)\n      requestEvent.endEvent()\n      throw response.error\n    }\n    log.info('Call session ended server-side.', { wrtcsSessionId: callInfo.wrtcsSessionId })\n    requestEvent.endEvent()\n  }\n\n  return {\n    createSession,\n    answerSession,\n    rejectSession,\n    forwardSession,\n    endSession\n  }\n}\n","// Other plugins\nimport { getRequestInfo } from '../../../auth/interface/selectors'\n\n// Helpers\nimport * as requestUtils from './utils'\nimport { platforms } from '../../../constants'\nimport BasicError from '../../../errors'\n\n/**\n * Bottle wrapper for Link \"misc\" call requests.\n * @return {Object}\n */\nexport default function miscRequests (container) {\n  const { context, sendRequest, logManager } = container\n\n  // eslint-disable-next-line no-warning-comments\n  /**\n   * Gets the status of a session from the server.\n   * Link-specific signaling function.\n   *\n   * Assumptions:\n   *    1. The current user is authenticated.\n   *    2. Signalling server has Kandy Link 4.7.1+\n   * Responsibilities:\n   *    1. Format parameters as needed for signalling.\n   *    2. Perform the REST request.\n   *    3. Return the response, formatted.\n   * @method getSession\n   * @param  {Object} callInfo\n   * @param  {Object} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n   * @param  {boolean} [callInfo.isAnonymous] Flag indicating whether the call is anonymous or not.\n   * @param  {string} [callInfo.account] An account token used by the request if it is an anonymous call.\n   * @return {Object} response Signalling response.\n   * @throws {Object} response.error An error object, if signalling failed.\n   */\n  async function getSession (callInfo) {\n    // Collect the information needed to make the request.\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n\n    const options = { method: 'GET' }\n\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, { ...options, ...callInfo })\n\n    if (response.error) {\n      throw response.error\n    } else {\n      return {\n        error: false,\n        state: response.callControlResponse.state\n      }\n    }\n  }\n\n  /**\n   * Updates a webRTC session on the server with a new state.\n   * Link-specific signaling function.\n   *\n   * The request updates the server's session to be in \"ringing\" state.\n   * Assumptions:\n   *    1. The current user is authenticated.\n   * Responsibilities:\n   *    1. Format parameters as needed for signalling.\n   *    2. Perform the REST request.\n   *    3. Return the response, formatted.\n   * @method updateCallRinging\n   * @param  {Object} callInfo\n   * @param  {Object} callInfo.id The SDK's ID for the Call.\n   * @param  {string} callInfo.wrtcsSessionId ID that the server uses to identify the session.\n   * @param  {string} callInfo.isAnonymous    Whether the call is an anonymous call.\n   * @return {Object} response Signalling response.\n   * @throws {Object} [response.error] An error object, if signalling failed.\n   */\n  async function updateCallRinging (callInfo) {\n    const log = logManager.getLogger('CALL', callInfo.id)\n    log.info('Updating call session as ringing on server-side.')\n\n    // Collect the information needed to make the request.\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n\n    const options = {\n      method: 'PUT'\n    }\n\n    options.body = JSON.stringify({\n      callControlRequest: {\n        type: 'ringing'\n      }\n    })\n\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, { ...options, ...callInfo })\n\n    if (response.error) {\n      log.debug('Failed to update call session as ringing server-side.', response.error)\n      // Need a linter exception here because we need to throw more data than what we can include in an instance of BasicError\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        error: response.error\n      }\n    } else {\n      log.debug('Call session updated as ringing server-side.', {\n        wrtcsSessionId: callInfo.wrtcsSessionId\n      })\n      return {\n        error: false\n      }\n    }\n  }\n  /**\n   * Sends the (new?) custom parameters of the call to the webRTC session on the server.\n   * @method updateCustomParameters\n   * @param {Object} callInfo\n   * @param {string} callInfo.wrtcsSessionId    ID that the server uses to identify the session.\n   * @param {string} callInfo.isAnonymous       Whether the call is an anonymous call\n   * @param {Array<CustomParameter>} callInfo.customParameters  The custom parameters\n   * @return {Object} response Signaling response.\n   */\n  async function updateCustomParameters (callInfo) {\n    // Collect the information needed to make the request.\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n\n    const options = {\n      method: 'PUT'\n    }\n\n    const bodyType = callInfo.isAnonymous ? 'callMeRequest' : 'callControlRequest'\n\n    options.body = JSON.stringify({\n      [bodyType]: {\n        type: 'sendCustomHeaders',\n        customParameters: callInfo.customParameters\n      }\n    })\n\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, { ...options, ...callInfo })\n\n    if (response.error) {\n      // Need a linter exception here because we need to throw more data than what we can include in an instance of BasicError\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        error: response.error\n      }\n    } else {\n      return {\n        error: false\n      }\n    }\n  }\n\n  /**\n   * Updates a webRTC session on the server to ensure it's state.\n   * Link-specific signaling function.\n   *\n   * This saga \"audits\" the server session to:\n   *    1. notify the server that the call is still on-going locally, and\n   *    2. ensure that the server is still handling the server session.\n   * Assumptions:\n   *    1. The current user is authenticated.\n   * Responsibilities:\n   *    1. Format parameters as needed for signalling.\n   *    2. Perform the REST request.\n   *    3. Return the response, formatted.\n   * @method auditCall\n   * @param  {Object} callInfo\n   * @param  {string} callInfo.wrtcsSessionId ID that the server uses to identify the session.\n   * @param  {boolean} [callInfo.isAnonymous] Flag indicating whether the call is anonymous or not.\n   * @param  {string} [callInfo.account] An account token used by the request if it is an anonymous call.\n   * @return {Object} response Signalling response.\n   * @throws {BasicError} Throws an error if the REST request fails.\n   */\n  async function auditCall (callInfo) {\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n    const options = { method: 'PUT' }\n    const bodyType = callInfo.isAnonymous ? 'callMeRequest' : 'callControlRequest'\n\n    options.body = JSON.stringify({\n      [bodyType]: {\n        type: 'audit'\n      }\n    })\n\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, { ...options, ...callInfo })\n\n    if (response.error) {\n      // Wrap the info in a BasicError because that is what sendCallAudit operation expects to receive.\n      throw new BasicError({ code: response.error.code, message: response.error.message })\n    } else {\n      return { status: 'Connected', error: false }\n    }\n  }\n\n  return {\n    getSession,\n    updateCallRinging,\n    updateCustomParameters,\n    auditCall\n  }\n}\n","import { getRequestInfo } from '../../../auth/interface/selectors'\nimport { getCallByWrtcsSessionId } from '../../interface/selectors'\n\nimport { REPORTER_EVENTS, REPORTER_REQUESTS } from '../../callstack/reporter/constants'\n\n// Helpers\nimport { platforms } from '../../../constants'\nimport * as requestUtils from './utils'\n\n/**\n * Bottle wrapper for Link \"negotiation\" call requests.\n * @return {Object}\n */\nexport default function negotiationRequests (container) {\n  const { context, sendRequest, CallReporter } = container\n  /**\n   * Updates an existing webRTC session on the server.\n   * Link-specific signalling function.\n   *\n   * This saga \"updates a session\" between the current user and another, specified\n   *    user.\n   * Assumptions:\n   *    1. The current user is authenticated.\n   * Responsibilities:\n   *    1. Format parameters as needed for signalling.\n   *    2. Perform the REST request.\n   *    3. Return the response, formatted.\n   * @method updateSession\n   * @param  {Object} info\n   * @param  {string} info.wrtcsSessionId The ID the backend uses to track the session.\n   * @param  {string} info.offer The local SDP offer to begin negotiation.\n   * @param  {boolean} [info.isAnonymous] Flag indicating whether the call is anonymous or not.\n   * @param  {string}  [info.account] An account token used by the request if it is an anonymous call.\n   * @param  {Array}   [info.customParameters] The custom parameters of the call.\n   * @param  {Array}   [info.customBodies] The custom bodies of the call.\n   * @return {Object} response Signalling response.\n   * @return {Object} response.error An error object, if signalling failed.\n   */\n  async function updateSession (info) {\n    // Collect the information needed to make the request.\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n\n    const options = { method: 'PUT' }\n    const bodyType = info.isAnonymous ? 'callMeRequest' : 'callControlRequest'\n\n    options.body = JSON.stringify({\n      [bodyType]: {\n        type: 'startCallUpdate',\n        sdp: info.offer,\n        customParameters: info.customParameters,\n        customBodies: info.customBodies\n      }\n    })\n\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, { ...options, ...info })\n\n    if (response.error) {\n      throw response.error\n    }\n  }\n\n  /**\n   * Responds to a received remote offer to update the webRTC session.\n   * Link-specific signaling function.\n   *\n   * This request responds to a \"call update\" request as part of renegotiation. This\n   *    updates the server session with an answer SDP, which in turn should notify\n   *    the remote end of the session with the response.\n   * Assumptions:\n   *    1. The current user is authenticated.\n   * Responsibilities:\n   *    1. Perform the REST request.\n   *    2. Return the response, formatted.\n   * @method updateSessionResponse\n   * @param  {Object} callInfo\n   * @param  {Object} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n   * @param  {string} callInfo.answer The local SDP to complete renegotiation. This may be an offer if performing slow start.\n   * @param  {boolean} [callInfo.isAnonymous] Flag indicating whether the call is anonymous or not.\n   * @param  {string} [callInfo.account] An account token used by the request if it is an anonymous call.\n   * @throws {BasicError} An error object, if signalling failed.\n   */\n\n  async function updateSessionResponse (callInfo) {\n    // Collect the information needed to make the request.\n    const requestInfo = getRequestInfo(context.getState(), platforms.LINK)\n\n    const options = {\n      method: 'PUT'\n    }\n    const bodyType = callInfo.isAnonymous && callInfo.account ? 'callMeRequest' : 'callControlRequest'\n\n    options.body = JSON.stringify({\n      [bodyType]: {\n        type: 'respondCallUpdate',\n        sdp: callInfo.answer,\n        customParameters: callInfo.customParameters,\n        customBodies: callInfo.customBodies\n      }\n    })\n    const targetCall = getCallByWrtcsSessionId(context.getState(), callInfo.wrtcsSessionId)\n    // Get the report for this call id\n    const report = CallReporter.getReport(targetCall.id)\n\n    // Get the main operational event that is ongoing\n    const operationEvent = report.getEvent(targetCall.remoteOp.eventId)\n\n    // Before sending the REST request, mark it's start by creating a sub-event\n    // within the timeline of its parent operational event\n    const requestEvent = operationEvent.addEvent(REPORTER_EVENTS.REST_REQUEST)\n    // Add some metadata to it\n    requestEvent.addData('requestType', REPORTER_REQUESTS.UPDATE_SESSION)\n\n    const response = await requestUtils.linkCallRequest(sendRequest, requestInfo, { ...options, ...callInfo })\n\n    if (response.error) {\n      requestEvent.endEvent(response.error)\n      throw response.error\n    }\n\n    // No data returned from this server response, so we're not adding any data to this sub-event either\n    requestEvent.endEvent()\n  }\n\n  return {\n    updateSession,\n    updateSessionResponse\n  }\n}\n","// Re-export all of the operations.\nexport { default as setTurnCredentials } from './setTurnCredentials'\n","import setTurnCredentials from './setTurnCredentials'\n\n/*\n * Register the operation with the bottle. This will make it available on the\n *    top-level container under its namespace.\n */\nexport default function registerOperation (bottle) {\n  bottle.factory('CallOperations.setTurnCredentials', () => {\n    // Provide the top-level bottle container to the factory function.\n    //    This ensures everything is accessible, instead of only items in the\n    //    nested `CallOperations` container.\n    return setTurnCredentials(bottle.container)\n  })\n}\n","// Call plugin.\nimport { turnActions } from '../../../interface/actions'\nimport { getOptions } from '../../../interface/selectors'\n\n// Other plugins.\nimport { CONNECT_FINISHED } from '../../../../auth/interface/actionTypes'\n\n/**\n * Link-specific \"set turn credentials\" operation factory.\n * @method createOperation\n * @param  {Object} container The bottle container.\n */\nexport default function createOperation (container) {\n  const { context, logManager } = container\n  const log = logManager.getLogger('CALL')\n  /**\n   * Handles setting turn/stun information that has been\n   *    received from the server.\n   * @method setTurnCredentials\n   * @param {Object} action A \"connect finished\" action.\n   */\n  function setTurnCredentials (action) {\n    const { serverTurnCredentials, defaultPeerConfig } = getOptions(context.getState())\n\n    // Must have ICE servers configured. Check the new way of configuring them...\n    if (defaultPeerConfig.iceServers.length === 0) {\n      log.debug('No ICE servers provided during setup; not using TURN/STUN for calls.')\n      return\n    }\n\n    if (!serverTurnCredentials) {\n      log.debug('Using application provided TURN credentials.')\n      return\n    }\n\n    // TURN credentials received from the server.\n    const turnCredentials =\n      action.type === CONNECT_FINISHED\n        ? action.payload.subscription.turnCredentials\n        : action.payload.subscriptions[0].turnCredentials\n\n    const turnInfo = {\n      credentials: turnCredentials,\n      // Map the server-provided credentials to the ICE server list.\n      servers: defaultPeerConfig.iceServers.map(iceInfo => {\n        return {\n          ...iceInfo,\n          username: turnCredentials.username,\n          credential: turnCredentials.password\n        }\n      })\n    }\n\n    context.dispatch(turnActions.turnChanged(turnInfo))\n  }\n\n  return setTurnCredentials\n}\n","// Re-export all of the operations.\nexport { default as makeAnonymousCall } from './makeAnonymous'\nexport { default as anonymousCallEnd } from './anonymousCallEnd'\n","import makeAnonymous from './makeAnonymous'\nimport { OPERATIONS } from '../../../interface/constants'\n\nimport remoteAnswer from '../../../callstack/operations/make/remoteAnswer'\n\n/*\n * Register the operation with the bottle. This will make it available on the\n *    top-level container under its namespace.\n */\nexport default function registerOperation (bottle) {\n  bottle.factory('Callstack.operations.makeAnonymousCall', () => {\n    const operation = makeAnonymous(bottle.container)\n    operation.remoteAnswer = remoteAnswer(bottle.container)\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.MAKE_ANONYMOUS\n    return operation\n  })\n}\n","// Call plugin.\nimport { callActions } from '../../../interface/actions'\nimport * as actionTypes from '../../../interface/actionTypes'\nimport * as eventTypes from '../../../interface/eventTypes'\nimport { normalizeSipUri } from '../../../utils/normalization'\nimport { OPERATIONS, OP_STATUS, OP_TRANSITIONS } from '../../../interface/constants'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../../errors'\nimport * as authActions from '../../../../auth/interface/actions'\nimport * as authActionTypes from '../../../../auth/interface/actionTypes'\n\nexport default function createAnonOperations (container) {\n  const { Callstack, CallOperations, context, emitEvent, logManager, Notifications } = container\n  const log = logManager.getLogger('CALL')\n\n  async function makeAnonymousCall (callId, participants, credentials, mediaConstraints, options = {}) {\n    // An identity for the anonymous user must be provided.\n    if (!participants.from) {\n      const error = new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message: 'callOptions has no `from` property'\n      })\n      context.dispatch(callActions.makeAnonymousCallFinish(callId, { error }))\n      emitEvent(eventTypes.CALL_STARTED, {\n        callId,\n        error\n      })\n\n      throw error\n    }\n\n    /*\n     * If none of these properties exist, then it is a tokenless anonymous call.\n     * If all of these properties exist, then it is a time-based token anon call.\n     * Any other combination of exist/not-exist is an error scenario.\n     */\n    const { realm, accountToken, toToken, fromToken } = credentials\n\n    if (\n      // If any of them exist, but any other does not exist, then error.\n      (realm || accountToken || toToken || fromToken) &&\n      (!realm || !accountToken || !toToken || !fromToken)\n    ) {\n      const error = new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message:\n          'Time-based token anonymous call missing one or more of the following properties: `realm`, `accountToken`, `toToken`, `fromToken`.'\n      })\n      context.dispatch(callActions.makeAnonymousCallFinish(callId, { error }))\n      emitEvent(eventTypes.CALL_STARTED, {\n        callId,\n        error\n      })\n\n      throw error\n    }\n\n    let account, anonParticipants\n    let isTokenBased\n    if (realm && accountToken && toToken && fromToken) {\n      // If credentials were provided for a token-limited call.\n      log.debug('Performing time-limited token anonymous call.')\n      account = accountToken\n      anonParticipants = { to: toToken, from: fromToken }\n      isTokenBased = true\n    } else {\n      log.debug('Performing anonymous call.')\n      account = participants.to\n      anonParticipants = {\n        to: normalizeSipUri(participants.to),\n        from: normalizeSipUri(participants.from)\n      }\n      isTokenBased = false\n    }\n\n    // Dispatch an action to trigger the CallMe Auth plugin to authenticate\n    //    the credentials.\n    context.dispatch(\n      authActions.connect({\n        username: account,\n        password: '',\n        // The fake userId of the current, anonymous user.\n        anonUsername: participants.from,\n        realm\n      })\n    )\n    // Wait for the connect to finish.\n    const action = await Notifications.takeAction(authActionTypes.CONNECT_FINISHED)\n\n    if (action && action.error) {\n      const error = new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message: 'Failed to connect to server.'\n      })\n      context.dispatch(callActions.makeAnonymousCallFinish(callId, { error }))\n      emitEvent(eventTypes.CALL_STARTED, {\n        callId,\n        error\n      })\n\n      throw error\n    }\n\n    let error\n    try {\n      const anonOptions = {\n        ...options,\n        isAnonymous: true,\n        account,\n        displayName: isTokenBased ? '' : options.displayName\n      }\n\n      emitEvent(eventTypes.CALL_OPERATION, {\n        callId,\n        isLocal: true,\n        operation: OPERATIONS.MAKE,\n        transition: OP_TRANSITIONS.START,\n        previous: undefined\n      })\n\n      emitEvent(eventTypes.CALL_STARTED, { callId })\n\n      // Use the regular \"make call\" operation with the anonymous parameters.\n      await Callstack.operations.make(callId, anonParticipants, mediaConstraints, anonOptions)\n\n      // When the call ends, clean-up the anon subscription.\n      Notifications.takeAction(actionTypes.END_CALL_FINISH).then(action => {\n        CallOperations.anonymousCallEnd()\n      })\n    } catch (err) {\n      error = err\n      // If the call fails to be made, then clean-up the anon subscription.\n      CallOperations.anonymousCallEnd()\n    }\n\n    emitEvent(eventTypes.CALL_OPERATION, {\n      callId,\n      isLocal: true,\n      operation: OPERATIONS.MAKE,\n      // If the operation failed, then it is finished, but otherwise we are\n      //    waiting on the remote update for the operation to complete.\n      transition: error ? OP_TRANSITIONS.FINISH : OP_TRANSITIONS.UPDATE,\n      previous: {\n        operation: OPERATIONS.MAKE,\n        status: OP_STATUS.ONGOING\n      },\n      error: error\n    })\n  }\n\n  return makeAnonymousCall\n}\n","import anonymousCallEnd from './anonymousCallEnd'\n\n/*\n * Register the operation with the bottle. This will make it available on the\n *    top-level container under its namespace.\n */\nexport default function registerOperation (bottle) {\n  bottle.factory('CallOperations.anonymousCallEnd', () => {\n    return anonymousCallEnd(bottle.container)\n  })\n}\n","// Other plugins.\nimport * as authActions from '../../../../auth/interface/actions'\n\nexport default function createAnonOperations (container) {\n  const { context } = container\n\n  /**\n   * When an anonymous call ends, the user should be unsubscribed since they\n   *    were only authenticated for the call.\n   * @method anonymousCallEnd\n   */\n  function anonymousCallEnd () {\n    // TODO: After the CallMe Auth plugin is redesigned,\n    //    should call the \"unsubscribe\" operation directly.\n    // When the call ends, we want to disconnect the user.\n    context.dispatch(authActions.disconnect())\n  }\n\n  return anonymousCallEnd\n}\n","import * as callOperations from './operations'\nimport * as callNotifications from './notifications'\n\nimport initSdpOperations from './sdp'\nimport initWebrtcOperations from './webrtc'\nimport initCallManager from './callManager'\nimport initCallReporter from './reporter'\n\n/**\n * Callstack  factory function.\n * @method createCallstack\n * @param  {Object} bottle The bottle.\n */\nexport default function createCallstack (bottle) {\n  // Initialize the operation handlers, adding them to the bottle.\n  // They will be at `Callstack.operations` and `Callstack.utils`.\n  for (const name in callOperations) {\n    callOperations[name](bottle)\n  }\n  // Initialize the notification handlers, adding them to the bottle.\n  // They will be at `Callstack.notifications`.\n  for (const name in callNotifications) {\n    callNotifications[name](bottle)\n  }\n\n  initCallReporter(bottle)\n  // Initialize the SDP and WebRTC operations.\n  initSdpOperations(bottle)\n  initWebrtcOperations(bottle)\n\n  initCallManager(bottle)\n}\n","/*\n * Call Operations available in the Callstack.\n * This file is where the names for the operations are defined.\n */\nexport { default as createConsultTransfer } from './consultativeTransfer'\nexport { default as createDirectTransfer } from './directTransfer'\nexport { default as createJoin } from './join'\n\nexport { default as createMake } from './make'\nexport { default as createAnswer } from './answer'\nexport { default as createEnd } from './end'\nexport { default as createForward } from './forward'\nexport { default as createIgnore } from './ignore'\nexport { default as createReject } from './reject'\n\nexport { default as createAddMedia } from './addMedia'\nexport { default as createHold } from './hold'\nexport { default as createUnhold } from './unhold'\nexport { default as createRemoveMedia } from './removeMedia'\nexport { default as createReplaceTrack } from './replaceTrack'\nexport { default as createPlayAudioFile } from './playAudioFile'\n\nexport { default as createGetCodecs } from './getAvailableCodecs'\nexport { default as createIceRestart } from './iceRestart'\nexport { default as createSendDtmf } from './sendDtmf'\nexport { default as createUpdateCallState } from './updateCallState'\nexport { default as createResyncCallState } from './resyncCallState'\n\nexport { default as createIceCollectionCheck } from './iceCollectionCheck'\nexport { default as createGetStats } from './getStats'\nexport { default as createNormalizeIceFailure } from './normalizeIceFailure'\nexport { default as createSendCallAudit } from './sendCallAudit'\nexport { default as createSendCustom } from './sendCustomParameters'\nexport { default as createSendRingingFeedback } from './sendRingingFeedback'\n","// Operations.\nimport consultTransferOperation, { validate } from './consultativeTransfer'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.consultativeTransfer', () => {\n    const operation = consultTransferOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.CONSULTATIVE_TRANSFER\n    operation.validate = validate\n    return operation\n  })\n}\n","// Call Plugin\nimport { getCallById } from '../../../interface/selectors'\n\n// Helpers.\nimport { CALL_STATES } from '../../../constants'\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, otherCallId) {\n  const call = getCallById(state, callId)\n  const otherCall = getCallById(state, otherCallId)\n  /*\n   * `consultativeTransfer` operation validation:\n   *    1. First Call must exist.\n   *    2. Second Call must exist.\n   *    3. First Call must be in `On Hold` state.\n   *    4. Second Call must be in `On Hold` state.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (!otherCall) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (call.state !== CALL_STATES.ON_HOLD) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Call is in an invalid state: state=${call.state}. It should be: state=${CALL_STATES.ON_HOLD}.`\n    })\n  } else if (otherCall.state !== CALL_STATES.ON_HOLD) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Call is in an invalid state: state=${otherCall.state}. It should be: state=${CALL_STATES.ON_HOLD}.`\n    })\n  }\n}\n\n/**\n * Bottle wrapper for consultativeTransfer call operation.\n * @return {Function}\n */\nexport default function consultativeTransferOperation (container) {\n  const { context, CallRequests, logManager } = container\n\n  /**\n   *\n   * Transfers 2 ongoing calls to one another.\n   *\n   * This function handles the WebRTC and signalling portions of transferring 2 ongoing calls to one another.\n   * Assumptions:\n   *    1. The action contains the other call id\n   *    2. The calls are in the 'On Hold' state\n   * Responsibilities:\n   *    1. Perform the signaling to tell the server that we want to transfer 2 ongoing calls to one other.\n   *    2. Update call state (via redux actions).\n   * @method consultativeTransfer\n   * @param {string} callId ID of the call which needs to be transferred to another call.\n   * @param {string} otherCallId The ID of the second call, where the first call will be transfered to.\n   */\n  async function consultativeTransfer (callId, otherCallId) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Performing consultative transfer on call.')\n\n    const currentCall = getCallById(context.getState(), callId)\n    const otherCall = getCallById(context.getState(), otherCallId)\n\n    // Collect the information needed to make the request.\n    const callInfo = {\n      wrtcsSessionId: currentCall.wrtcsSessionId,\n      otherWrtcsSessionId: otherCall.wrtcsSessionId,\n      destination: otherCall.direction === 'outgoing' ? otherCall.to : otherCall.from\n    }\n\n    try {\n      await CallRequests.consultativeTransferSessions(callInfo)\n    } catch (responseError) {\n      log.info('Failed to consultative transfer call.')\n      throw responseError\n    }\n    log.info('Finished local portion of consultative transfer. Waiting on remote response.')\n  }\n\n  return consultativeTransfer\n}\n","// Operations.\nimport directTransferOperation, { validate } from './directTransfer'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.directTransfer', () => {\n    const operation = directTransferOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.DIRECT_TRANSFER\n    operation.validate = validate\n    return operation\n  })\n}\n","// Call Plugin\nimport { getCallById } from '../../../interface/selectors'\n\n// Helpers.\nimport { CALL_STATES } from '../../../constants'\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, destination) {\n  const call = getCallById(state, callId)\n  /*\n   * `directTransfer` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `On Hold` state.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Cannot direct transfer call: Invalid call ID.'\n    })\n  } else if (call.state !== CALL_STATES.ON_HOLD) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Call is in an invalid state: state=${call.state}. It should be: state=${CALL_STATES.ON_HOLD}.`\n    })\n  }\n}\n\n/**\n * Bottle wrapper for directTransfer call operation.\n * @return {Function}\n */\nexport default function directTransferOperation (container) {\n  const { context, CallRequests, logManager } = container\n\n  /**\n   *\n   * Direct Transfers an ongoing call.\n   *\n   * This function handles the WebRTC and signalling portions of direct transferring an ongoing call\n   * Assumptions:\n   *    1. The action contains a destination address\n   *    2. The call is in the 'On Hold' state\n   * Responsibilities:\n   *    1. Perform the signaling to tell the server that we want to direct transfer the call to a specified destination address.\n   *    2. Update call state (via redux actions).\n   * @method directTransfer\n   * @param {string} callId ID of the call being acted on.\n   * @param {string} destination The destination to transfer the call to.\n   */\n  async function directTransfer (callId, destination) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Performing direct transfer on call.')\n\n    const currentCall = getCallById(context.getState(), callId)\n    // Collect the information needed to make the request.\n    const callInfo = {\n      wrtcsSessionId: currentCall.wrtcsSessionId,\n      address: destination\n    }\n\n    try {\n      await CallRequests.directTransferSession(callInfo)\n    } catch (responseError) {\n      log.info('Failed to direct transfer call.')\n      throw responseError\n    }\n\n    log.info('Finished local portion of direct transfer. Waiting on remote response.')\n  }\n\n  return directTransfer\n}\n","// Operations.\nimport joinOperation, { validate } from './join'\n\nimport remoteAnswer from './remoteAnswer'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.join', () => {\n    const operation = joinOperation(bottle.container)\n    operation.remoteAnswer = remoteAnswer(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.JOIN\n    operation.validate = validate\n    return operation\n  })\n}\n","// Call plugin.\nimport { CALL_DIRECTION, CALL_STATES } from '../../../constants'\nimport { callActions } from '../../../interface/actions'\nimport { checkBandwidthControls } from '../../utils/call'\nimport * as eventTypes from '../../../interface/eventTypes'\nimport { getCallById, getOptions, getTurnInfo } from '../../../interface/selectors'\nimport { OPERATIONS, OP_TRANSITIONS } from '../../../interface/constants'\nimport { REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, otherCallId, newCallId, from) {\n  const primaryCall = getCallById(state, callId)\n  const secondaryCall = getCallById(state, otherCallId)\n  /*\n   * `join` operation validation:\n   *    1. First Call must exist.\n   *    2. Second Call must exist.\n   *    3. First Call must be in `On Hold` state.\n   *    4. Second Call must be in `On Hold` state.\n   */\n  if (!primaryCall) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (!secondaryCall) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (primaryCall.state !== CALL_STATES.ON_HOLD) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Call is in an invalid state: state=${primaryCall.state}. It should be: state=${CALL_STATES.ON_HOLD}.`\n    })\n  } else if (secondaryCall.state !== CALL_STATES.ON_HOLD) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Call is in an invalid state: state=${secondaryCall.state}. It should be: state=${CALL_STATES.ON_HOLD}.`\n    })\n  }\n}\n\n/**\n * Bottle wrapper for join call operation.\n * @return {Function}\n */\nexport default function joinOperation (container) {\n  const { CallRequests, CallReporter, Callstack, context, emitEvent, logManager } = container\n  const { setupOutgoingSession } = Callstack.utils\n\n  /**\n   *\n   * Joins 2 ongoing calls.\n   *\n   * This operation handles the WebRTC and signalling portions of joining 2 ongoing calls\n   * Validations:\n   *    1. The calls are in the 'On Hold' state\n   * Responsibilities:\n   *    1. Perform the signaling to tell the server that we want to join 2 ongoing calls.\n   *    2. Update call state (via redux actions).\n   * @method join\n   * @param {string} callId The ID of the call.\n   * @param {string} otherCallId The ID of the other call being joined.\n   * @param {string} newCallId The IF of the new joined call.\n   * @param {string} from The username of the account joining the calls.\n   */\n  async function join (callId, otherCallId, newCallId, from) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info(`Performing join on calls ${callId} and ${otherCallId}.`)\n\n    const currentCall = getCallById(context.getState(), callId)\n    const otherCall = getCallById(context.getState(), otherCallId)\n\n    // Determine combined participant name if any\n    const currentCallRemoteName = currentCall.remoteParticipant.displayName\n    const otherCallRemoteName = otherCall.remoteParticipant.displayName\n    let participantName\n    if (currentCallRemoteName && otherCallRemoteName) {\n      participantName = `${currentCallRemoteName},${otherCallRemoteName}`\n    } else if (currentCallRemoteName) {\n      participantName = `${currentCallRemoteName},`\n    } else if (otherCallRemoteName) {\n      participantName = `,${otherCallRemoteName}`\n    }\n\n    // Determine combined remote participant address\n    const currentCallRemoteAddress =\n      currentCall.direction === CALL_DIRECTION.OUTGOING ? currentCall.to : currentCall.from\n    const otherCallRemoteAddress = otherCall.direction === CALL_DIRECTION.OUTGOING ? otherCall.to : otherCall.from\n    const participantAddress = `${currentCallRemoteAddress},${otherCallRemoteAddress}`\n\n    // User the audio constraints from the current call and set video to false.\n    const mediaConstraints = {\n      video: false,\n      audio: currentCall.mediaConstraints ? currentCall.mediaConstraints.audio || true : true\n    }\n\n    // Use the bandwidth constraints from the current call\n    const bandwidth = checkBandwidthControls(currentCall.bandwidth)\n\n    const dscpControls = currentCall.dscpControls\n\n    const turnInfo = getTurnInfo(context.getState())\n    const { trickleIceMode, defaultPeerConfig, removeBundling, serverTurnCredentials } = getOptions(context.getState())\n\n    // Get the call report event ID\n    const callReport = CallReporter.getReport(newCallId)\n    const operationEvent = callReport.findLastOngoingEvent(REPORTER_OPERATION_EVENTS_MAP.JOIN)\n\n    // Create the new joined call in state right away\n    context.dispatch(\n      callActions.joinStart(newCallId, {\n        // The media constraints this call has.\n        mediaConstraints,\n        // The combined addresses of the 2 other participants in the joined call.\n        participantAddress,\n        // The combined names of the 2 other participants in the joined call.\n        participantName,\n        // This call's current user\n        from,\n        // The ids of the calls that were used for joining.\n        usedCallIds: [currentCall.id, otherCall.id],\n        // The custom parameters of the combined call.\n        customParameters: currentCall.customParameters,\n        // The DSCP Controls of the combined call.\n        dscpControls,\n        // The bandwidth from the original call.\n        bandwidth,\n        // The call report event id for this operation\n        eventId: operationEvent.id\n      })\n    )\n\n    let webrtcInfo\n    try {\n      webrtcInfo = await setupOutgoingSession(mediaConstraints, {\n        defaultPeerConfig,\n        turnInfo,\n        trickleIceMode,\n        dscpControls,\n        removeBundling,\n        bandwidth,\n        callId: newCallId,\n        serverTurnCredentials\n      })\n    } catch (error) {\n      // An error occurred while trying to setup the WebRTC portion of the joined call.\n      //    Report the error and mark the call as ended.\n      log.info(`Failed to initiate call. Changing to ${CALL_STATES.ENDED}.`)\n      context.dispatch(\n        callActions.joinFinish(newCallId, {\n          usedCallIds: [currentCall.id, otherCall.id],\n          error\n        })\n      )\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId: newCallId,\n        previous: {\n          // JOIN_START action sets the new call's state to initiating and holds to false\n          state: CALL_STATES.INITIATING,\n          localHold: false,\n          remoteHold: false\n        },\n        error\n      })\n      // Emits a call operation event only for the new call\n      emitEvent(eventTypes.CALL_OPERATION, {\n        callId: newCallId,\n        isLocal: true,\n        operation: OPERATIONS.JOIN,\n        transition: OP_TRANSITIONS.FINISH,\n        previous: undefined,\n        error\n      })\n      throw error\n    }\n\n    const { offerSdp, sessionId, mediaIds } = webrtcInfo\n\n    // Collect the information needed to make the request.\n    const callInfo = {\n      wrtcsSessionId: currentCall.wrtcsSessionId,\n      otherWrtcsSessionId: otherCall.wrtcsSessionId,\n      sdp: offerSdp,\n      // Use the customParameters of the current call\n      customParameters: currentCall.customParameters\n    }\n    let newWrtcsSessionId\n    try {\n      newWrtcsSessionId = await CallRequests.joinSessions(callInfo)\n    } catch (error) {\n      log.info('Failed to join call.')\n      context.dispatch(\n        callActions.joinFinish(newCallId, {\n          error,\n          usedCallIds: [callId, otherCallId]\n        })\n      )\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId: newCallId,\n        previous: {\n          // JOIN_START action sets the new call's state to initiating and holds to false\n          state: CALL_STATES.INITIATING,\n          localHold: false,\n          remoteHold: false\n        },\n        error\n      })\n      // Emits a call operation event only for the new call\n      emitEvent(eventTypes.CALL_OPERATION, {\n        callId: newCallId,\n        isLocal: true,\n        operation: OPERATIONS.JOIN,\n        transition: OP_TRANSITIONS.FINISH,\n        previous: undefined,\n        error\n      })\n      throw error\n    }\n\n    log.info('Finished local portion of join. Waiting on remote response.')\n    // Dispatch an action to do the following:\n    //  - create a new \"joined\" call in state\n    //  - update calls used in the join to have isPending property\n    context.dispatch(\n      callActions.pendingJoin(newCallId, {\n        // The ID that the backend uses to track this webRTC session.\n        wrtcsSessionId: newWrtcsSessionId,\n        // The ID that the webRTC stack uses to track this webRTC session.\n        webrtcSessionId: sessionId,\n        // The local Media object associated with this call.\n        mediaIds,\n        // The ids of the calls that were used for joining.\n        usedCallIds: [currentCall.id, otherCall.id],\n        // Set the state of the joined call to Initiated.\n        state: CALL_STATES.INITIATED\n      })\n    )\n    emitEvent(eventTypes.CALL_JOIN, {\n      callId: newCallId\n    })\n  }\n\n  return join\n}\n","import remoteAnswer from '../make/remoteAnswer'\n\n/*\n * The `join` operation creates a new outgoing call (the \"joined\" call). This function\n *    handles the remote answer SDP for that new call. (The two existing calls do\n *    not perform any WebRTC negotiation.)\n *\n * The scenario for the new joined call is the same as a new outgoing call. All\n *    events, state changes, etc. are done exactly the same. So, as a shortcut,\n *    re-use the `make` operation's \"remote answer\" handler. If this join operation\n *    would need any special handling, then its own handler should be implemented.\n */\nexport default remoteAnswer\n","// Operations.\nimport localOffer from './make'\nimport remoteOffer from './incomingCall'\n\nimport remoteAnswer from './remoteAnswer'\n\n// Helpers\nimport setupIncomingCall from './setupIncomingCall'\nimport setupOutgoingSession from './setupOutgoingSession'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.make', () => {\n    const operation = localOffer(bottle.container)\n    operation.remoteAnswer = remoteAnswer(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.MAKE\n    return operation\n  })\n  bottle.factory('Callstack.notifications.incomingCall', () => remoteOffer(bottle.container))\n\n  bottle.factory('Callstack.utils.setupIncomingCall', () => setupIncomingCall(bottle.container))\n  bottle.factory('Callstack.utils.setupOutgoingSession', () => setupOutgoingSession(bottle.container))\n}\n","// Call plugin.\nimport { callActions } from '../../../interface/actions'\nimport { CALL_TRACKS_ADDED } from '../../../interface/eventTypes'\nimport { getOptions, getTurnInfo } from '../../../interface/selectors'\nimport { checkBandwidthControls } from '../../utils/call'\nimport { CALL_STATES } from '../../../constants'\n\n// Other plugins.\nimport { getSessionById } from '../../../../webrtc/interface/selectors'\n\n/**\n * Bottle wrapper for makeCall call operation.\n * @return {Function}\n */\nexport default function createMakeOperation (container) {\n  const { context, CallRequests, Callstack, CallstackWebrtc, emitEvent, logManager } = container\n  const { setupOutgoingSession } = Callstack.utils\n\n  /**\n   * Callstack operation to start a new outgoing call.\n   *\n   * To start a new call, it requires:\n   *    - User media,\n   *    - A local PeerConnection, setup with the media and local offer, and\n   *    - To start the call on the server, providing the local offer.\n   * @method makeCall\n   * @param {string} callId The ID that the SDK uses to identify this call.\n   * @param {Object} participants\n   * @param {string} participants.to The \"callee\" address for the call.\n   * @param {string} participants.from The \"caller\" address for the call.\n   * @param {Object} media\n   * @param {Object|boolean} media.audio\n   * @param {Object|boolean} media.video\n   * @param {Object|boolean} media.screen\n   * @param {Object} [options={}]\n   * @param {string} [options.displayName]\n   * @param {call.DSCPControls} [options.dscpControls]\n   * @param {call.BandwidthControls} [options.bandwidth]\n   * @param {Array<call.CustomParameter>} [options.customParameters]\n   * @param {Array<call.CustomBody>} [options.customBodies]\n   * @param {boolean} [options.isAnonymous] Whether the call is being made with an \"anonymous user\" or not.\n   * @param {string} [options.account] If anonymous, the user account used to authenticate the call.\n   * @return {undefined}\n   * @throws {BasicError} Throws an error if the WebRTC operation fails.\n   * @throws {BasicError} Throws an error if the REST request fails.\n   */\n  async function makeCall (callId, participants, media, options = {}) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Initiating new outgoing call.')\n\n    // Get info from state for the operation.\n    const turnInfo = getTurnInfo(context.getState())\n    const callOptions = getOptions(context.getState())\n\n    // Verify input parameter(s).\n    // TODO: Validation of application-input should happen in the API.\n    const bandwidth = checkBandwidthControls(options.bandwidth)\n\n    let callInfo\n    try {\n      // Compile all of the info needed for the WebRTC operation.\n      const webrtcInfo = {\n        defaultPeerConfig: callOptions.defaultPeerConfig,\n        turnInfo,\n        bandwidth,\n        dscpControls: options.dscpControls,\n        callId,\n        // ICE related.\n        trickleIceMode: callOptions.trickleIceMode, // ??? Remove.\n        removeBundling: callOptions.removeBundling\n      }\n\n      /*\n       * Setup local WebRTC resources needed for the call. This includes user media\n       *    and a local PeerConnection.\n       *\n       * Expected return format:\n       * @type {Object}\n       * @param {string} sessionId The ID of the Session object associated with this call.\n       * @param {Array<string>} mediaIds List of Media objects associated with this call.\n       * @param {string} offerSdp The local offer SDP generated during Session setup.\n       */\n      callInfo = await setupOutgoingSession(media, webrtcInfo)\n    } catch (err) {\n      log.info(`Failed to initiate call. Changing to ${CALL_STATES.ENDED}.`)\n      // Rethrow the error so it gets to the API.\n      throw err\n    }\n\n    let wrtcsSessionId\n    try {\n      // Info required for the server to create the session.\n      const sessionInfo = {\n        id: callId,\n        to: participants.to,\n        offer: callInfo.offerSdp,\n        // For anonymous calls.\n        isAnonymous: options.isAnonymous,\n        account: options.account,\n        from: participants.from\n      }\n      // Info to augment the server session, but not required.\n      const sessionOptions = {\n        displayName: options.displayName ? options.displayName : '',\n        customParameters: options.customParameters,\n        customBodies: options.customBodies\n      }\n\n      /*\n       * Create the call on the server.\n       *\n       * Expected return format:\n       * @param {string} wrtcsSessionId The ID that the server uses to identify this call.\n       */\n      wrtcsSessionId = await CallRequests.createSession(sessionInfo, sessionOptions)\n    } catch (err) {\n      /*\n       * The call failed being created on the server. Clean up the local WebRTC resources\n       *    and finish the operation by updating state and emitting the \"state change\" error event.\n       */\n      log.info('Failed to initiate call. Ending call and cleaning up WebRTC portions.')\n\n      // TODO: Update redux state that the Media object is stopped.\n      //    Need an event from Media model to notify about the stop, and listener\n      //    set on Media when it is created (in `createLocalMedia` saga).\n      await CallstackWebrtc.closeCall(callInfo.sessionId)\n\n      // Rethrow the error to the API.\n      throw err\n    }\n\n    /*\n     * The call was succesfully created on the server. Finish the local side of\n     *    the operation by updating state and emitting the \"state change\" event.\n     */\n    log.info(`Finished initiating call. Changing to ${CALL_STATES.INITIATED} and waiting on remote answer.`)\n\n    // Get the list of all local tracks on the Session. Add the local tracks\n    //    to call state now so they are available while the call rings.\n    const sessionState = getSessionById(context.getState(), callInfo.sessionId)\n    context.dispatch(\n      callActions.pendingMakeCall(callId, {\n        // The ID that the backend uses to track this webRTC session.\n        wrtcsSessionId: wrtcsSessionId,\n        // The ID that the webRTC stack uses to track this webRTC session.\n        webrtcSessionId: callInfo.sessionId,\n        // The local Media object associated with this call.\n        mediaIds: callInfo.mediaIds,\n        // The bandwidth of the call.\n        bandwidth,\n        // The custom display name to use. Not supported on all environments.\n        displayName: options.displayName,\n        // The custom parameters (headers) and custom bodies of the call\n        customParameters: options.customParameters,\n        customBodies: options.customBodies,\n        localTracks: sessionState.localTracks,\n        // The current state of the call\n        // TODO: Normally, call state should not be part of action because\n        //       whoever checks this action payload, should obtain the call state from\n        //       Redux state, using a selector.\n        //       So further changes are needed in 'callAudit' middleware\n        state: CALL_STATES.INITIATED\n      })\n    )\n\n    // Tell the application that local tracks are available on the call now.\n    emitEvent(CALL_TRACKS_ADDED, {\n      callId,\n      trackIds: sessionState.localTracks\n    })\n  }\n\n  return makeCall\n}\n","// Call plugin\nimport { callActions } from '../../../interface/actions'\nimport { getOptions, getTurnInfo } from '../../../interface/selectors'\nimport { CALL_OPERATION, CALL_STATE_CHANGE } from '../../../interface/eventTypes'\nimport { OPERATIONS, OP_TRANSITIONS } from '../../../interface/constants'\nimport { CALL_STATES } from '../../../constants'\nimport { REPORTER_EVENTS } from '../../reporter/constants'\n\n/**\n * Bottle wrapper for \"incoming call\" notification handler.\n * @return {Function}\n */\nexport default function incomingCallOperation (container) {\n  const { context, CallRequests, Callstack, emitEvent, CallReporter, logManager } = container\n  const { setupIncomingCall } = Callstack.utils\n  /**\n   * A \"call incoming\" notification has been received and needs to be handled.\n   *\n   * This operation is intended to be the entry point for all \"call incoming\"\n   *    notifications. A \"call incoming\" notification is the initial offer to\n   *    establish a call with a remote endpoint. It represents the start of both\n   *    the call flow and webRTC negotiation process for the local side.\n   * Handling the notification will create a new call in state.\n   * Responsibilities:\n   *    1. Have the callstack perform the required webRTC negotiation process.\n   *        - Regular or Slow Start negotiation.\n   *    2. Respond that the call has been received (ie. ringing).\n   *    3. Create call state (via redux action).\n   * @method incomingCall\n   * @param {string}   wrtcsSessionId ID that the server uses to identify the session.\n   * @param {Object}   params        Parameters describing the incoming call.\n   * @param {string}   [params.sdp]  The remote SDP offer included with the notification (if any).\n   * @param {string}   params.remoteNumber   Number of the remote participant.\n   * @param {string}   params.remoteName     Display name of the remote participant.\n   * @param {string}   params.calleeNumber  Number of the intended call recipient\n   */\n  async function incomingCall (wrtcsSessionId, params, channel) {\n    const { sdp, callId } = params\n    const callConfig = getOptions(context.getState())\n\n    // Get the call report for this call\n    const callReport = CallReporter.getReport(callId)\n\n    // Get the RECEIVE_CALL event from the report\n    const receiveCallEvent = callReport.findLastOngoingEvent(REPORTER_EVENTS.RECEIVE_CALL)\n\n    const log = logManager.getLogger('CALL', callId)\n\n    /**\n     * An incoming call may or may not have an SDP offer associated with it.\n     * If it has an SDP, then it is a \"regular\" call scenario and can be handled\n     *    as a normal webRTC negotiation.\n     * If it has no SDP, then it is a \"slow start\" call scenario. In a slow start\n     *    scenario, the signaling server acts as a webRTC-middleman, requiring\n     *    both sides to provide it with offers and generating the answers itself.\n     */\n    if (sdp) {\n      // Regular call.\n      receiveCallEvent.addData('isSlowStart', false)\n      const turnInfo = getTurnInfo(context.getState())\n\n      // Since we have the remote offer SDP, we can setup a webRTC session.\n      try {\n        await setupIncomingCall({\n          offer: {\n            sdp,\n            type: 'offer'\n          },\n          trickleIceMode: callConfig.trickleIceMode,\n          defaultPeerConfig: callConfig.defaultPeerConfig,\n          turnInfo,\n          callId,\n          removeBundling: callConfig.removeBundling,\n          serverTurnCredentials: callConfig.serverTurnCredentials\n        })\n      } catch (error) {\n        // The reason we're wrapping the error in an object here is because the setupIncomingCall operation\n        // used to return an object with an error property. Now that we are throwing instead, we throw the\n        // BasicError directly, but our interface is expecting an object with an error property.\n        log.info(`Failed to initiate incoming call. Changing to ${CALL_STATES.ENDED}.`)\n        context.dispatch(\n          callActions.endCallFinish(callId, {\n            isLocal: true,\n            error: {\n              error\n            }\n          })\n        )\n\n        emitEvent(CALL_OPERATION, {\n          callId,\n          isLocal: true,\n          operation: OPERATIONS.END,\n          transition: OP_TRANSITIONS.FINISH,\n          error: {\n            error\n          }\n        })\n\n        emitEvent(CALL_STATE_CHANGE, {\n          callId,\n          previous: {\n            state: CALL_STATES.INITIATING,\n            localHold: false,\n            remoteHold: false\n          },\n          error: {\n            error\n          }\n        })\n\n        receiveCallEvent.setError(error)\n        return\n      }\n    } else {\n      log.debug('Incoming call is a slow-start call.')\n      // Slow start call.\n      receiveCallEvent.addData('isSlowStart', true)\n\n      /*\n       * We can't setup a webRTC session yet because generating an offer requires\n       *   media constraints. We need to wait until the application provides\n       *   media information before we can setup the call.\n       */\n    }\n\n    // Next state will be Initiated normally, or Ringing if ringing feedback is sent.\n    let nextState = CALL_STATES.INITIATED\n\n    // If in 'auto' mode for `ringingFeedbackMode`, send the feedback immediately.\n    if (callConfig.ringingFeedbackMode === 'auto') {\n      log.info('Sending ringing feedback automatically for incoming call.')\n      const callInfo = { wrtcsSessionId, id: callId }\n      try {\n        await CallRequests.updateCallRinging(callInfo)\n        log.debug('Successfully sent ringing feedback.')\n        nextState = CALL_STATES.RINGING\n      } catch (error) {\n        log.info(`Failed to send ringing feedback - ${error.code}: ${error.message} `)\n      }\n    }\n\n    log.info(`Finished initiating incoming call. Changing to ${nextState} and waiting on local answer.`)\n    context.dispatch(\n      callActions.updateCall(callId, {\n        state: nextState\n      })\n    )\n\n    emitEvent(CALL_STATE_CHANGE, {\n      callId,\n      previous: {\n        state: CALL_STATES.INITIATING,\n        localHold: false,\n        remoteHold: false\n      }\n    })\n  }\n\n  return incomingCall\n}\n","// Call plugin.\nimport { callActions } from '../../../interface/actions'\nimport { getOptions } from '../../../interface/selectors'\n\n// Helpers\nimport BasicError, { callCodes } from '../../../../errors'\n\n/**\n * Bottle wrapper for \"setup incoming call\" operation.\n * @return {Function}\n */\nexport default function setupIncomingCallOperation (container) {\n  const { context, logManager, WebRTC, CallstackSDP } = container\n  /**\n   * Prepares the WebRTC portions of setting up an incoming call.\n   *\n   * @method setupIncomingCall\n   * @param  {Object} sessionOptions\n   * @param  {string} sessionOptions.callId the local call id.\n   * @param  {Object} sessionOptions.sdpSemantics semantics for the SDP to use. The only supported value is: `'unified-plan'`. It implies video and audio constraints.\n   * @param  {Object} sessionOptions.turnInfo TURN information, contains server info.\n   * @param  {string} sessionOptions.trickleIceMode the mode to enable for Trickle ICE.\n   * @param  {Object} sessionOptions.offer an offer containing an SDP.\n   * @throws {BasicError} Throws an error if the WebRTC operation fails.\n   * @return {string} sessionId an identifier for the session.\n   */\n  async function setupIncomingCall (sessionOptions) {\n    const { defaultPeerConfig, turnInfo, trickleIceMode, callId, removeBundling } = sessionOptions\n    const offer = sessionOptions.offer\n\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Setting up remote WebRTC portions of call.')\n\n    let session\n    try {\n      session = await WebRTC.sessionManager.create({\n        peer: {\n          rtcConfig: {\n            ...defaultPeerConfig,\n            iceServers: turnInfo.servers\n          },\n          trickleIceMode,\n          removeBundling\n        }\n      })\n    } catch (error) {\n      log.debug('Failed to create WebRTC Session for incoming Call.', error.message)\n      const createSessionError = new BasicError({\n        message: error.message,\n        code: callCodes.GENERIC_ERROR\n      })\n\n      throw createSessionError\n    }\n\n    // Trigger a new action specifying that the session has been created\n    context.dispatch(\n      callActions.sessionCreated(callId, {\n        webrtcSessionId: session.id\n      })\n    )\n\n    /*\n     * Run the remote SDP offer through any SDP handlers provided, then set it\n     *    as the Session's remote description.\n     * This is the \"pre set remote\" stage.\n     */\n    const callConfigOptions = getOptions(context.getState())\n\n    offer.sdp = CallstackSDP.runPipeline(callConfigOptions.sdpHandlers, offer.sdp, {\n      callId,\n      type: offer.type,\n      step: 'set',\n      endpoint: 'remote'\n    })\n\n    await session.processOffer({\n      type: 'offer',\n      sdp: offer.sdp\n    })\n\n    log.info('Finished setting up remote WebRTC portions of call.')\n    return session.id\n  }\n\n  return setupIncomingCall\n}\n","// Call plugin.\nimport { callActions } from '../../../interface/actions'\nimport { getCallById, getOptions } from '../../../interface/selectors'\n\n// Utils\nimport { organizeTracks } from '../../utils/media'\nimport { getTrackDscpMapping } from '../../utils/call'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../../errors'\nimport { REPORTER_EVENTS, REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\n/**\n * Bottle wrapper for \"setup outgoing session\" operation.\n * @return {Function}\n */\nexport default function setupOutgoingSessionOperation (container) {\n  const { context, logManager, CallReporter, CallstackSDP, WebRTC } = container\n\n  /**\n   * Performs the WebRTC portion necessary for establishing outgoing calls\n   *\n   * @method setupOutgoingSession\n   * @async\n   * @param {Object} mediaConstraints\n   * @param {Object|boolean} mediaConstraints.audio\n   * @param {Object|boolean} mediaConstraints.video\n   * @param {Object|boolean} mediaConstraints.screen\n   * @param {Object} options\n   * @param {string} options.callId\n   * @param {Object} options.defaultPeerConfig\n   * @param {Object} options.turnInfo\n   * @param {call.BandwidthControls} options.bandwidth\n   * @param {call.DSCPControls} options.dscpControls\n   * @param {boolean} options.removeBundling\n   * @return {Object} callInfo\n   * @return {string} callInfo.sessionId\n   * @return {Arrray<string>} callInfo.mediaIds\n   * @return {string} callInfo.offerSdp\n   * @throws {BasicError} Throws a USER_MEDIA_ERROR error if cannot get user media.\n   * @throws {BasicError} Throws a GENERIC_ERROR error if cannot create webrtc Session.\n   * @throws {BasicError} Throws a TODO error if cannot add tracks to Session.\n   * @throws {BasicError} Throws a GENERIC_ERROR error if SDP handling fails.\n   */\n  async function setupOutgoingSession (mediaConstraints, options) {\n    const log = logManager.getLogger('CALL', options.callId)\n    log.info('Setting up local WebRTC portions of call.')\n\n    const call = getCallById(context.getState(), options.callId)\n    const callReport = CallReporter.getReport(call.id)\n    const operationEvent = callReport.getEvent(call.localOp.eventId)\n\n    let medias\n    try {\n      /*\n       * Create local user media for the call.\n       * Expected return:\n       * @param {Array<Obect>} medias List of objects.\n       * @param {Object} mediaObj\n       * @param {Media}  mediaObj.media The WebRTC-Stack Media object.\n       * @param {string} mediaObj.type The kind of media.\n       */\n      medias = await container.CallstackWebrtc.createLocal(mediaConstraints, options.callId)\n    } catch (err) {\n      log.debug('Failed to get media requested for the call.')\n      throw err\n    }\n\n    let session\n    try {\n      // Create a WebRTC-Stack Session object.\n      session = await WebRTC.sessionManager.create({\n        peer: {\n          rtcConfig: {\n            ...options.defaultPeerConfig,\n            iceServers: options.turnInfo ? options.turnInfo.servers : []\n          },\n          // Follow-up / TODO: Remove `trickleIceMode` option; not used.\n          trickleIceMode: options.trickleIceMode,\n          removeBundling: options.removeBundling\n        }\n      })\n\n      log.debug('Created WebRTC Session for Call.', { webrtcSessionId: session.id })\n    } catch (err) {\n      log.debug('Failed to create WebRTC Session for Call.', err.message)\n      throw new BasicError({\n        message: err.message,\n        code: callCodes.GENERIC_ERROR\n      })\n    }\n\n    // Dispatch action to update state; linking the Call to the Session.\n    context.dispatch(\n      callActions.sessionCreated(options.callId, {\n        webrtcSessionId: session.id\n      })\n    )\n\n    const trackLists = await organizeTracks(medias)\n    const dscpTrackMapping = getTrackDscpMapping(trackLists, options.dscpControls)\n\n    // eslint-disable-next-line no-useless-catch\n    try {\n      // Add all of the tracks to the Session.\n      await session.addTracks(trackLists.all, dscpTrackMapping)\n    } catch (err) {\n      // Follow-up / TODO.\n      throw err\n    }\n\n    const callConfig = getOptions(context.getState())\n    let finalSdp\n\n    /*\n     * Create the local SDP offer, run it through any provided SDP handlers,\n     *    then set it as the Session's local description.\n     */\n    const setLocalDescriptionEvent = operationEvent.addEvent(REPORTER_EVENTS.SET_LOCAL_DESCRIPTION)\n    setLocalDescriptionEvent.addData('operation', REPORTER_OPERATION_EVENTS_MAP.MAKE)\n    try {\n      let offer = await session.createOffer()\n      // Run the SDP through the Pipeline before we set it locally.\n      //    This is the \"pre set local\" stage.\n      offer.sdp = CallstackSDP.runPipeline(callConfig.sdpHandlers, offer.sdp, {\n        callId: options.callId,\n        type: offer.type,\n        step: 'set',\n        endpoint: 'local',\n        bandwidth: options.bandwidth\n      })\n\n      offer = await session.setLocalDescription(offer)\n\n      // Run the SDP through the Pipeline again before we send it to the remote side.\n      //    This is the \"pre send local\" stage.\n      finalSdp = CallstackSDP.runPipeline(callConfig.sdpHandlers, offer.sdp, {\n        callId: options.callId,\n        type: offer.type,\n        step: 'send',\n        endpoint: 'local',\n        bandwidth: options.bandwidth\n      })\n    } catch (err) {\n      log.debug('Failed to set local SDP.', err.message)\n      setLocalDescriptionEvent.setError(err)\n      setLocalDescriptionEvent.endEvent()\n      // Follow-up / TODO: Clean-up Media and Session resources.\n      throw new BasicError({\n        message: err.message,\n        code: callCodes.GENERIC_ERROR\n      })\n    }\n    setLocalDescriptionEvent.endEvent()\n\n    log.info('Finished setting up local WebRTC portions of call.')\n    return {\n      offerSdp: finalSdp,\n      sessionId: session.id,\n      mediaIds: medias.map(media => media.media.id)\n    }\n  }\n\n  return setupOutgoingSession\n}\n","// Operations.\nimport localAnswer, { validate } from './answer'\nimport slowAnswer, { validate as slowValidate } from './slowAnswer'\nimport remoteSlowAnswer from './remoteSlowAnswer'\n\n// Helpers\nimport answerWebrtcSession from './answerWebrtcSession'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.answer', () => {\n    const operation = localAnswer(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.ANSWER\n    operation.validate = validate\n    return operation\n  })\n\n  bottle.factory('Callstack.operations.answerSlow', () => {\n    const operation = slowAnswer(bottle.container)\n    operation.remoteAnswer = remoteSlowAnswer(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.ANSWER\n    operation.validate = slowValidate\n    return operation\n  })\n\n  bottle.factory('Callstack.utils.answerWebrtcSession', () => answerWebrtcSession(bottle.container))\n}\n","// Call plugin\nimport { callActions } from '../../../interface/actions'\nimport { CALL_STATE_CHANGE, CALL_TRACKS_ADDED } from '../../../interface/eventTypes'\nimport { getCallById } from '../../../interface/selectors'\nimport { CALL_STATES, CALL_DIRECTION } from '../../../constants'\nimport { checkBandwidthControls } from '../../utils/call'\nimport { getIncomingRemoteTracks } from '../../sdp/media/remoteTracks'\n\n// Other plugins\nimport BasicError, { callCodes } from '../../../../errors'\nimport { getSessionById } from '../../../../webrtc/interface/selectors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, media, options) {\n  const call = getCallById(state, callId)\n  /*\n   * `answer` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Initiated` or `Ringing` state.\n   *    3. Call must be `Incoming` direction.\n   */\n  if (!call) {\n    // Call must exist.\n    return new BasicError({\n      message: `Failed to answer call. Call ${callId} not found.`,\n      code: callCodes.INVALID_PARAM\n    })\n  } else if (![CALL_STATES.INITIATED, CALL_STATES.RINGING].includes(call.state)) {\n    // Call must be in Initiated or Ringing state.\n    return new BasicError({\n      message: `Failed to answer call. Call must be in ${CALL_STATES.INITIATED} or ${CALL_STATES.RINGING} state.`,\n      code: callCodes.INVALID_STATE\n    })\n  } else if (call.direction !== CALL_DIRECTION.INCOMING) {\n    // Call must be incoming.\n    return new BasicError({\n      message: 'Failed to answer call. Call must be incoming.',\n      code: callCodes.INVALID_STATE\n    })\n  } else if (call.isSlowStart) {\n    return new BasicError({\n      message: 'Failed to answer call. Call is slow-start.',\n      code: callCodes.INVALID_STATE\n    })\n  }\n}\n\n/**\n * Bottle wrapper for answer call operation.\n * @return {Function}\n */\nexport default function answerOperation (container) {\n  const { context, Callstack, CallRequests, emitEvent, logManager, WebRTC } = container\n  const { answerWebrtcSession } = Callstack.utils\n\n  /**\n   * Answers an incoming call.\n   *\n   * This operation defines how a call is answered. It performs the webRTC and\n   *    signaling operations to respond to a call on the server.\n   *\n   * The PeerConnection will exist already (created as part of receiving offer).\n   *    Signaling with an answer SDP will establish the call, so it can be\n   *    considered \"Connected\" afterwards.\n   *\n   * Assumptions:\n   *    1. The call is in Initiated or Ringing state.\n   *    2. The call's direction is incoming.\n   *    3. The call is not marked as slow-start.\n   * Responsibilities:\n   *    1. Create an answer for the call, using the webRTC helpers.\n   *    2. Update the call on the server with the answer.\n   *    3. Update call state (via redux actions).\n   * @method answer\n   * @param {string} callId The ID of the call to answer.\n   * @param {Object} media The media options the call should be initialized with.\n   * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n   * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n   * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n   * @param {boolean} [media.video=false] Whether the call should have video on start.\n   * @param {Object} [media.videoOptions] Options for configuring the call's video.\n   * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n   * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n   * @param {boolean} [media.screen=false] Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)\n   * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n   * @param {Object} [options]\n   * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n   * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n   * @param {Array<call.CustomParameter>} [options.customParameters] Custom SIP header parameters for the SIP backend.\n   * @param {Array<call.CustomBody>} [options.customBodies] Custom SIP bodies for the SIP backend.\n   */\n\n  async function answer (callId, media, options) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Answering incoming call.')\n\n    const incomingCall = getCallById(context.getState(), callId)\n    const bandwidth = checkBandwidthControls(options.bandwidth)\n\n    // Update the existing webRTC session with an answer.\n    const sessionOptions = {\n      sessionId: incomingCall.webrtcSessionId,\n      bandwidth,\n      dscpControls: options.dscpControls,\n      callId: incomingCall.id\n    }\n\n    let webrtcInfo\n    try {\n      webrtcInfo = await answerWebrtcSession(media, sessionOptions)\n    } catch (error) {\n      log.info('Failed to answer incoming call.')\n      throw error\n    }\n\n    const callInfo = {\n      id: incomingCall.id,\n      answer: webrtcInfo.answerSDP,\n      wrtcsSessionId: incomingCall.wrtcsSessionId,\n      customParameters: options.customParameters,\n      customBodies: options.customBodies\n    }\n\n    // Perform the signaling to answer the call.\n    try {\n      await CallRequests.answerSession(callInfo)\n\n      log.info(`Finished answering call. Changing to ${CALL_STATES.CONNECTED}.`)\n\n      // Get the list of all local tracks on the Session.\n      const sessionState = getSessionById(context.getState(), incomingCall.webrtcSessionId) || {}\n      const localTracks = sessionState.localTracks\n\n      // Get the list of all remote tracks being offered in this call. This is a\n      //    new call, so this should be the full list of remote tracks available.\n      const session = await WebRTC.sessionManager.get(incomingCall.webrtcSessionId)\n      const remoteTracks = await getIncomingRemoteTracks(session)\n\n      context.dispatch(\n        callActions.answerCallFinish(\n          callId,\n          {\n            state: CALL_STATES.CONNECTED,\n            startTime: Date.now(),\n            // The local Media object associated with this call.\n            mediaIds: webrtcInfo.mediaIds,\n            webrtcSessionId: webrtcInfo.sessionId,\n            // TODO: Properly track the media that the call has.\n            mediaConstraints: media,\n            // The bandwidth of the call\n            bandwidth,\n            // The custom parameters (headers) and custom bodies of the call\n            customParameters: options.customParameters,\n            customBodies: options.customBodies,\n            localTracks,\n            // Add the remote tracks to the call state now that negotiation is done.\n            remoteTracks\n          },\n          {\n            isSlowStart: false\n          }\n        )\n      )\n\n      // Tell the application that tracks are available on the call now.\n      emitEvent(CALL_TRACKS_ADDED, {\n        callId,\n        trackIds: [...localTracks, ...remoteTracks]\n      })\n\n      emitEvent(CALL_STATE_CHANGE, {\n        callId,\n        previous: {\n          state: incomingCall.state,\n          localHold: incomingCall.localHold,\n          remoteHold: incomingCall.remoteHold\n        }\n      })\n    } catch (error) {\n      log.info('Failed to answer call.')\n      throw error\n    }\n  }\n\n  return answer\n}\n","// Call plugin\nimport { callActions } from '../../../interface/actions'\nimport { getCallById, getOptions, getTurnInfo } from '../../../interface/selectors'\nimport { CALL_STATES, CALL_DIRECTION } from '../../../constants'\nimport { checkBandwidthControls } from '../../utils/call'\n\n// Other plugins\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, media, options) {\n  const call = getCallById(state, callId)\n  /*\n   * `answer` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Initiated` or `Ringing` state.\n   *    3. Call must be `Incoming` direction.\n   */\n  if (!call) {\n    // Call must exist.\n    return new BasicError({\n      message: `Failed to answer call. Call ${callId} not found.`,\n      code: callCodes.INVALID_PARAM\n    })\n  } else if (![CALL_STATES.INITIATED, CALL_STATES.RINGING].includes(call.state)) {\n    // Call must be in Initiated or Ringing state.\n    return new BasicError({\n      message: `Failed to answer call. Call must be in ${CALL_STATES.INITIATED} or ${CALL_STATES.RINGING} state.`,\n      code: callCodes.INVALID_STATE\n    })\n  } else if (call.direction !== CALL_DIRECTION.INCOMING) {\n    // Call must be incoming.\n    return new BasicError({\n      message: 'Failed to answer call. Call must be incoming.',\n      code: callCodes.INVALID_STATE\n    })\n  } else if (!call.isSlowStart) {\n    return new BasicError({\n      message: 'Failed to answer call. Call is not slow-start.',\n      code: callCodes.INVALID_STATE\n    })\n  }\n}\n\n/**\n * Bottle wrapper for answer call operation.\n * @return {Function}\n */\nexport default function answerOperation (container) {\n  const { context, Callstack, CallRequests, logManager } = container\n  const { setupOutgoingSession } = Callstack.utils\n\n  /**\n   * Answers an incoming slow-start call.\n   *\n   * This operation defines how a slow-start call is answered. It performs the webRTC and\n   *    signaling operations to respond to a call on the server.\n   *\n   * The local \"call\" does not exist at this point in time and needs to be created\n   *    locally. An offer SDP from the call will be used for signaling (as per\n   *    slow start), but the call cannot be considered \"Connected\" until we\n   *    receive a response to the offer SDP.\n   * Assumptions:\n   *    1. The call is in Initiated or Ringing state.\n   *    2. The call's direction is incoming.\n   *    3. The call is marked as slow-start.\n   * Responsibilities:\n   *    1. Setup the call locally, using the webRTC helper operation.\n   *    2. Update the call on the server with an offer.\n   *    3. Update state (via redux actions).\n   * @method answer\n   * @param {string} callId The ID of the call to answer.\n   * @param {Object} media The media options the call should be initialized with.\n   * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n   * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n   * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n   * @param {boolean} [media.video=false] Whether the call should have video on start.\n   * @param {Object} [media.videoOptions] Options for configuring the call's video.\n   * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n   * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n   * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n   * @param {boolean} [media.screen=false] Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)\n   * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n   * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n   * @param {Object} [options]\n   * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n   * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n   * @param {Array<call.CustomParameter>} [options.customParameters] Custom SIP header parameters for the SIP backend.\n   * @param {Array<call.CustomBody>} [options.customBodies] Custom SIP bodies for the SIP backend.\n   */\n  async function slowAnswer (callId, media, options) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Answering incoming call.')\n\n    const call = getCallById(context.getState(), callId)\n    const bandwidth = checkBandwidthControls(options.bandwidth)\n\n    const wrtcsSessionId = call.wrtcsSessionId\n    log.debug('Answering call with slow start negotiation.')\n\n    const turnInfo = getTurnInfo(context.getState())\n    const callOptions = getOptions(context.getState())\n\n    /*\n     * If the call was a slow start call, then it doesn't have a webRTC session\n     *    yet. We need to setup the session and provide the signaling server\n     *    with an SDP offer.\n     */\n    let webrtcInfo\n    try {\n      webrtcInfo = await setupOutgoingSession(media, {\n        callId,\n        defaultPeerConfig: callOptions.defaultPeerConfig,\n        turnInfo,\n        bandwidth,\n        dscpControls: options.dscpControls,\n        // ICE related configs.\n        trickleIceMode: callOptions.trickleIceMode,\n        removeBundling: callOptions.removeBundling,\n        serverTurnCredentials: callOptions.serverTurnCredentials\n      })\n    } catch (error) {\n      log.info('Failed to answer incoming call.')\n\n      throw error\n    }\n\n    const callInfo = {\n      id: callId,\n      answer: webrtcInfo.offerSdp,\n      wrtcsSessionId,\n      customParameters: options.customParameters,\n      customBodies: options.customBodies\n    }\n\n    // Perform the signaling to answer the call.\n    try {\n      await CallRequests.answerSession(callInfo)\n\n      log.info(\n        `Finished answering slow-start call. Changing to ${CALL_STATES.RINGING} and waiting for remote slow-start answer.`\n      )\n\n      context.dispatch(\n        callActions.answerCallFinish(\n          callId,\n          {\n            state: CALL_STATES.RINGING,\n            // TODO: Proper start time for slow-start calls.\n            startTime: Date.now(),\n            // The local Media object associated with this call.\n            mediaIds: webrtcInfo.mediaIds,\n            // For slow start calls, there isn't a webRTC session yet.\n            webrtcSessionId: webrtcInfo.sessionId,\n            // TODO: Properly track the media that the call has.\n            mediaConstraints: media,\n            // The bandwidth of the call\n            bandwidth,\n            // The custom parameters (headers) and custom bodies of the call\n            customParameters: options.customParameters,\n            customBodies: options.customBodies,\n            localTracks: [],\n            remoteTracks: []\n          },\n          {\n            isSlowStart: call.isSlowStart\n          }\n        )\n      )\n    } catch (error) {\n      log.info('Failed to answer call.')\n      throw error\n    }\n  }\n\n  return slowAnswer\n}\n","// Callstack.\nimport { callActions } from '../../../interface/actions'\nimport * as eventTypes from '../../../interface/eventTypes'\nimport { CALL_STATES } from '../../../constants'\nimport { getAllRemoteTracks } from '../../sdp/media/remoteTracks'\n\nimport { REPORTER_EVENTS, REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\n// Other plugins.\nimport { getSessionById } from '../../../../webrtc/interface/selectors'\n\nexport default function createSlowAnswerResponse (container) {\n  const { context, logManager, emitEvent, CallstackWebrtc, CallReporter, WebRTC } = container\n\n  /**\n   * Operation for handling the answer SDP of a locally-started slow-start answer operation.\n   *\n   * On succesful handling:\n   *    - updates call state to \"connected\",\n   *    - emits a \"tracks added\" event\n   *    - emits a \"call state change\" event.\n   *\n   * On failure to handle, ends the call as unrecoverable:\n   *    - updates call state to \"ended\",\n   *    - emits a \"call state change\" event.\n   *\n   * @method slowAnswerResponse\n   * @param {Object} call The call being acted on.\n   * @param {Object} params\n   * @param {Object} params.sdp The remote answer SDP.\n   * @return {undefined}\n   */\n  async function slowAnswerResponse (call, params) {\n    const log = logManager.getLogger('CALL', call.id)\n\n    const callReport = CallReporter.getReport(call.id)\n    // Start the process reseponse event\n    const operationEvent = callReport.getEvent(call.localOp.eventId)\n    const processResponseEvent = operationEvent.addEvent(REPORTER_EVENTS.PROCESS_RESPONSE)\n    // Add two metadata properties providing more context to this event.\n    processResponseEvent.addData('operation', REPORTER_OPERATION_EVENTS_MAP.ANSWER)\n    processResponseEvent.addData('isSlowStart', call.isSlowStart)\n\n    // Handle the remote answer SDP.\n    try {\n      const sessionInfo = { sessionId: call.webrtcSessionId, answerSdp: params.sdp }\n      await CallstackWebrtc.receivedAnswer(sessionInfo, call)\n    } catch (error) {\n      /*\n       * Failed to set the remote answer SDP. End the call.\n       * TODO: Better error handling. Is the Call fully cleaned-up here?\n       */\n      context.dispatch(\n        callActions.endCallFinish(call.id, {\n          error\n        })\n      )\n\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId: call.id,\n        previous: {\n          state: call.state,\n          localHold: call.localHold,\n          remoteHold: call.remoteHold\n        },\n        error\n      })\n      processResponseEvent.setError(error)\n      processResponseEvent.endEvent()\n      return\n    }\n\n    log.info(\n      `Finished processing remote response to local ${call.localOp.operation}. Changing state based on operation.`\n    )\n\n    // Get the list of all remote tracks being offered in this call. This is a\n    //    new call, so this should be the full list of remote tracks available.\n    const session = await WebRTC.sessionManager.get(call.webrtcSessionId)\n    const remoteTracks = await getAllRemoteTracks(session)\n\n    // Get the list of all local tracks on the Session.\n    const sessionState = getSessionById(context.getState(), call.webrtcSessionId)\n    const localTracks = sessionState.localTracks\n\n    /*\n     * Update call state:\n     *    - state change to \"connected\",\n     *    - tracks added to call\n     */\n    context.dispatch(\n      callActions.callAccepted(call.id, {\n        state: CALL_STATES.CONNECTED,\n        startTime: Date.now(),\n        // Remote participant's information.\n        remoteParticipant: {\n          displayNumber: params.remoteNumber,\n          displayName: params.remoteName\n        },\n        // Add the tracks to the call state.\n        remoteTracks,\n        localTracks\n      })\n    )\n\n    // Tell the application that tracks have been added.\n    emitEvent(eventTypes.CALL_TRACKS_ADDED, {\n      callId: call.id,\n      trackIds: [...remoteTracks, ...localTracks]\n    })\n\n    // Tell the application that call state has changed.\n    emitEvent(eventTypes.CALL_STATE_CHANGE, {\n      callId: call.id,\n      previous: {\n        state: call.state,\n        localHold: call.localHold,\n        remoteHold: call.remoteHold\n      }\n    })\n\n    processResponseEvent.endEvent()\n  }\n\n  return slowAnswerResponse\n}\n","// Call plugin.\nimport { getCallById, getOptions } from '../../../interface/selectors'\nimport { REPORTER_EVENTS, REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\n// Utils\nimport { getTrackDscpMapping } from '../../utils/call'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../../errors'\n\n/**\n * Bottle wrapper for \"answer session\" operation.\n * @return {Function}\n */\nexport default function answerWebrtcSessionOperation (container) {\n  const { context, logManager, CallstackSDP, WebRTC } = container\n\n  /**\n   * Prepares the WebRTC portions of answering a call\n   *\n   * @method answerWebrtcSession\n   * @param  {Object} mediaConstraints Video and audio media constraints\n   * @param  {boolean} mediaConstraints.audio Whether to enable audio or not\n   * @param  {boolean} mediaConstraints.video Whether to enable video or not\n   * @param  {Object} sessionOptions\n   * @param  {string} sessionOptions.sessionId the local webrtc session id\n   * @param  {string} sessionOptions.callId the local call id\n   * @param  {Object} [sessionOptions.bandwidth] Contains configuration details for setting bandwidth\n   * @return {Object} Object\n   * @return {string} Object.answerSDP Session Description Protocol for answer\n   * @return {string} Object.mediaId an identifier for media\n   */\n  async function answerWebrtcSession (mediaConstraints, sessionOptions) {\n    const { CallstackWebrtc, CallReporter } = container\n    const { sessionId, bandwidth, dscpControls, callId } = sessionOptions\n\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Setting up local WebRTC portions of call.')\n\n    // Get the webRTC session that represents this call.\n    const session = await WebRTC.sessionManager.get(sessionId)\n    if (!session) {\n      const message = `Error: webRTC session ${sessionId} not found.`\n      log.error(message)\n      throw new BasicError({ message })\n    }\n    const incomingCall = getCallById(context.getState(), callId)\n    const eventId = incomingCall.localOp.eventId\n\n    const report = CallReporter.getReport(callId)\n    const answerEvent = report.getEvent(eventId)\n\n    let medias\n    try {\n      medias = await CallstackWebrtc.createLocal(mediaConstraints, callId)\n    } catch (error) {\n      log.debug('Failed to get media requested for the call.')\n      throw error\n    }\n\n    let screen = []\n    let audio = []\n    let video = []\n    let allTracks = []\n\n    for (const eachMedia of medias) {\n      const tracks = await eachMedia.media.getTracks()\n      if (eachMedia.type === 'screen') {\n        screen = [...screen, ...tracks]\n      } else if (eachMedia.type === 'audio') {\n        audio = [...audio, ...tracks]\n      } else if (eachMedia.type === 'video') {\n        video = [...video, ...tracks]\n      }\n      allTracks = [...allTracks, ...tracks]\n    }\n\n    const dscpTrackMapping = getTrackDscpMapping({ audio, video, screen }, dscpControls)\n    // eslint-disable-next-line no-useless-catch\n    try {\n      await session.addTracks(allTracks, dscpTrackMapping)\n    } catch (error) {\n      // Follow-up / TODO\n      throw new BasicError(error)\n    }\n\n    /*\n     * Create the local SDP answer, run it through any provided SDP handlers,\n     *    then set it as the Session's local description.\n     */\n    let answer, callConfigOptions\n\n    const setLocalDescriptionEvent = answerEvent.addEvent(REPORTER_EVENTS.SET_LOCAL_DESCRIPTION)\n    setLocalDescriptionEvent.addData('operation', REPORTER_OPERATION_EVENTS_MAP.ANSWER)\n    try {\n      answer = await session.createAnswer()\n\n      callConfigOptions = getOptions(context.getState())\n      // This is the \"pre set local\" stage.\n      answer.sdp = CallstackSDP.runPipeline(callConfigOptions.sdpHandlers, answer.sdp, {\n        callId,\n        type: answer.type,\n        step: 'set',\n        endpoint: 'local',\n        bandwidth\n      })\n\n      answer = await session.setLocalDescription(answer)\n    } catch (error) {\n      setLocalDescriptionEvent.setError(error)\n      setLocalDescriptionEvent.endEvent()\n      throw new BasicError({\n        message: error.message,\n        code: callCodes.GENERIC_ERROR\n      })\n    }\n    setLocalDescriptionEvent.endEvent()\n\n    // Run the SDP through the Pipeline again before we send it to the remote side.\n    //    This is the \"pre send local\" stage.\n    // Assign it to a new variable because some browsers enforce the read-only\n    //    properties of a RTCSessionDescription object. The object from\n    //    setLocalDescription is enforced read-only, but the `offer` before that\n    //    is not enforced.\n    const newSdp = CallstackSDP.runPipeline(callConfigOptions.sdpHandlers, answer.sdp, {\n      callId,\n      type: answer.type,\n      step: 'send',\n      endpoint: 'local',\n      bandwidth\n    })\n\n    log.info('Finished setting up local WebRTC portions of call.')\n\n    return {\n      error: false,\n      answerSDP: newSdp,\n      mediaIds: medias.map(media => media.media.id)\n    }\n  }\n\n  return answerWebrtcSession\n}\n","import localOperation, { validate } from './end'\nimport remoteOperation from './callStatusUpdateEnded'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.end', () => {\n    const operation = localOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.END\n    operation.validate = validate\n    return operation\n  })\n  bottle.factory('Callstack.notifications.callStatusUpdateEnded', () => remoteOperation(bottle.container))\n}\n","import { getCallById } from '../../../interface/selectors'\n\n// Helpers\nimport { CALL_STATES } from '../../../constants'\n\nimport BasicError, { callCodes } from '../../../../errors'\n\nimport * as eventTypes from '../../../interface/eventTypes'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId) {\n  const call = getCallById(state, callId)\n  /*\n   * `end` operation validation:\n   *    1. Call must exist.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  }\n}\n\n/**\n * Bottle wrapper for end call operation.\n * @return {Function}\n */\nexport default function endOperation (container) {\n  const { context, CallRequests, CallstackWebrtc, logManager, emitEvent } = container\n\n  /**\n   * Callstack operation to end an existing call.\n   *\n   * @method endCall\n   * @param {string} callId The ID that the SDK uses to identify this call.\n   * @return {undefined}\n   * @throws {BasicError} Throws an error if the WebRTC operation fails.\n   * @throws {BasicError} Throws an error if the REST request fails.\n   */\n  async function end (callId) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Ending call.')\n\n    let call = getCallById(context.getState(), callId)\n    const { wrtcsSessionId, webrtcSessionId, isAnonymous, account } = call\n    // Perform webRTC functions\n    await CallstackWebrtc.closeCall(webrtcSessionId)\n\n    call = getCallById(context.getState(), callId)\n\n    // Invoke the request\n    try {\n      await CallRequests.endSession({ callId, wrtcsSessionId, isAnonymous, account })\n    } catch (error) {\n      // Catch and ignore the error.\n      // Design choice: The `end` operation will never fail for a valid call. If\n      //    the application wants to end the call, then make sure it ends. Avoid\n      //    the application getting in an awkward error state where they can't\n      //    end a call.\n    } finally {\n      log.info(`Finished ending call. Changing to ${CALL_STATES.ENDED}.`)\n\n      // Tell the application that no tracks are available any longer.\n      emitEvent(eventTypes.CALL_TRACKS_REMOVED, {\n        callId,\n        trackIds: [...call.localTracks, ...call.remoteTracks]\n      })\n    }\n  }\n\n  return end\n}\n","// Call plugin.\nimport { callActions } from '../../../interface/actions'\nimport { getCallByWrtcsSessionId } from '../../../interface/selectors'\nimport { OPERATIONS, OP_TRANSITIONS } from '../../../interface/constants'\nimport { CALL_STATES } from '../../../constants'\nimport { CALL_OPERATION, CALL_STATE_CHANGE, CALL_TRACKS_REMOVED } from '../../../interface/eventTypes'\n\nimport { generateEndParams } from '../../utils/call'\n\n/**\n * Bottle wrapper for \"call status ended\" notification handler.\n * @return {Function}\n */\nexport default function callStatusEndedOperation (container) {\n  const { context, emitEvent, CallstackWebrtc, logManager } = container\n\n  /**\n   * Handle a \"call ended\" notification from the backend.\n   *\n   * This notification means that the session has ended on the other side and we need to end our session as well.\n   * Handling the notification will cleanup the session's media and puts the call in ENDED state.\n   * Responsibilities:\n   *    1. Have the callstack perform the required webRTC cleanup process.\n   *    2. Update call state to ENDED (via redux action).\n   *    3. Emit events to the application about the operation.\n   * @method callStatusUpdateEnded\n   * @param {string}  wrtcsSessionId         ID that the server uses to identify the session.\n   * @param {Object}  params\n   * @param {string}  [params.reasonText]    Human-readable explanation for the call change.\n   * @param {string}  [params.statusCode]    Code representing the reason for the call change.\n   * @param {string}  [params.remoteName]    Name of the remote participant.\n   * @param {string}  [params.remoteNumber]  Number of the remote participant.\n   */\n  async function callStatusUpdateEnded (wrtcsSessionId, { reasonText, statusCode, remoteName, remoteNumber } = {}) {\n    const currentCall = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', (currentCall || {}).id)\n    log.info('Received call status ended notice; handling.', { wrtcsSessionId })\n\n    if (!currentCall) {\n      log.info('Call ended notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n      return\n    }\n\n    if (currentCall.state === CALL_STATES.ENDED) {\n      log.info('Call ended notice for already Ended call. Ignoring.', { wrtcsSessionId })\n      return\n    }\n\n    const prevCall = currentCall\n\n    log.debug(`Call ended notice caused by ${reasonText} (Status Code: ${statusCode}).`)\n\n    await CallstackWebrtc.closeCall(currentCall.webrtcSessionId)\n\n    log.info(`Finished handling call ended notice. Changing to ${CALL_STATES.ENDED}.`)\n\n    context.dispatch(\n      callActions.endCallFinish(\n        currentCall.id,\n        generateEndParams(currentCall.state, false, {\n          reasonText,\n          statusCode,\n          remoteName,\n          remoteNumber\n        })\n      )\n    )\n\n    emitEvent(CALL_OPERATION, {\n      callId: currentCall.id,\n      operation: OPERATIONS.END,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: false,\n      previous: prevCall.remoteOp\n    })\n\n    // Tell the application that no tracks are available any longer.\n    emitEvent(CALL_TRACKS_REMOVED, {\n      callId: currentCall.id,\n      trackIds: [...prevCall.localTracks, ...prevCall.remoteTracks]\n    })\n\n    emitEvent(CALL_STATE_CHANGE, {\n      callId: currentCall.id,\n      transition: { prevState: prevCall.state },\n      previous: {\n        state: prevCall.state,\n        localHold: prevCall.localHold,\n        remoteHold: prevCall.remoteHold\n      }\n    })\n  }\n\n  return callStatusUpdateEnded\n}\n","import localOperation, { validate } from './forward'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.forward', () => {\n    const operation = localOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.FORWARD_CALL\n    operation.validate = validate\n    return operation\n  })\n}\n","// Call plugin.\nimport { getCallById } from '../../../interface/selectors'\nimport { CALL_DIRECTION, CALL_STATES } from '../../../constants'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, destination) {\n  const call = getCallById(state, callId)\n  /*\n   * `forward` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Initiated` or `Ringing` state.\n   *    3. Call must be `Incoming` direction.\n   */\n  if (!call) {\n    // Call must exist.\n    return new BasicError({\n      message: `Failed to forward call. Call ${callId} not found.`,\n      code: callCodes.INVALID_PARAM\n    })\n  } else if (![CALL_STATES.INITIATED, CALL_STATES.RINGING].includes(call.state)) {\n    // Call must be in Initiated or Ringing state.\n    return new BasicError({\n      message: `Failed to forward call. Call must be in ${CALL_STATES.INITIATED} or ${CALL_STATES.RINGING} state.`,\n      code: callCodes.INVALID_STATE\n    })\n  } else if (call.direction !== CALL_DIRECTION.INCOMING) {\n    // Call must be incoming.\n    return new BasicError({\n      message: 'Failed to forward call. Call must be incoming.',\n      code: callCodes.INVALID_STATE\n    })\n  }\n}\n\n/**\n * Bottle wrapper for forward call operation.\n * @return {Function}\n */\nexport default function forwardOperation (container) {\n  const { CallRequests, CallstackWebrtc, context, logManager } = container\n\n  /**\n   *\n   * Forwards an incoming call.\n   *\n   * This operation handles the WebRTC and signalling portions of forwarding an incoming call\n   * Assumptions:\n   *    1. The action contains a destination address\n   * Responsibilities:\n   *    1. Perform the signaling to tell the server that we want to forward the call to a specified destination address.\n   *    2. Update call state (via redux actions).\n   * @method forwardCall\n   * @param {string} callId      ID of the call being acted on.\n   * @param {string} destination The destination to forward the call to.\n   * @return {undefined}\n   * @throws {BasicError} Throws INVALID_PARAM if the call cannot be found.\n   * @throws {BasicError} Throws INVALID_STATE if the call is in the wrong state.\n   * @throws {BasicError} Throws ??? if the REST request fails.\n   */\n  async function forward (callId, destination) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Forwarding incoming call.')\n\n    const call = getCallById(context.getState(), callId)\n    // Collect the information needed to make the request.\n    const callInfo = {\n      wrtcsSessionId: call.wrtcsSessionId,\n      address: destination\n    }\n\n    try {\n      await CallRequests.forwardSession(callInfo)\n\n      // Clean-up webrtc resources.\n      await CallstackWebrtc.closeCall(call.webrtcSessionId)\n\n      log.info(`Finished forwarding call. Changing to ${CALL_STATES.ENDED}.`)\n    } catch (err) {\n      log.info('Failed to forward call.')\n      throw err\n    }\n  }\n\n  return forward\n}\n","import localOperation, { validate } from './ignore'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.ignore', () => {\n    const operation = localOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.IGNORE\n    operation.validate = validate\n    return operation\n  })\n}\n","// Call plugin\nimport { CALL_STATES, CALL_DIRECTION } from '../../../constants'\nimport { getCallById } from '../../../interface/selectors'\n\n// Other plugins\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId) {\n  const call = getCallById(state, callId)\n  /*\n   * `ignore` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Initiated` or `Ringing` state.\n   *    3. Call must be `Incoming` direction.\n   */\n  if (!call) {\n    // Call must exist.\n    return new BasicError({\n      message: `Failed to ignore call. Call ${callId} not found.`,\n      code: callCodes.INVALID_PARAM\n    })\n  } else if (![CALL_STATES.INITIATED, CALL_STATES.RINGING].includes(call.state)) {\n    // Call must be in Initiated or Ringing state.\n    return new BasicError({\n      message: `Failed to ignore call. Call must be in ${CALL_STATES.INITIATED} or ${CALL_STATES.RINGING} state.`,\n      code: callCodes.INVALID_STATE\n    })\n  } else if (call.direction !== CALL_DIRECTION.INCOMING) {\n    // Call must be incoming.\n    return new BasicError({\n      message: 'Failed to ignore call. Call must be incoming.',\n      code: callCodes.INVALID_STATE\n    })\n  }\n}\n\n/**\n * Bottle wrapper for ignore call operation.\n * @return {Function}\n */\nexport default function ignoreOperation (container) {\n  const { context, CallstackWebrtc, logManager } = container\n  /**\n   * Ignores an incoming call.\n   *\n   * This operation defines how a call is ignored. It performs the webRTC\n   *    operations to ignore a \"call\".\n   * Assumptions:\n   *    1. None\n   * Responsibilities:\n   *    1. Cleanup the call locally, using the webRTC helper operation.\n   *    2. Update call state (via redux action).\n   * @method ignoreCall\n   * @param {string}   callId        The id for the call to be ignored.\n   */\n  async function ignore (callId) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Ignoring incoming call.')\n\n    const targetCall = getCallById(context.getState(), callId)\n    // Clean-up webRTC objects. Ignore any errors returned, since we want the\n    //    call / session to be ended either way.\n    CallstackWebrtc.closeCall(targetCall.webrtcSessionId)\n\n    log.info(`Finished ignoring call. Changing to ${CALL_STATES.ENDED}.`)\n  }\n\n  return ignore\n}\n","import localOperation, { validate } from './reject'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.reject', () => {\n    const operation = localOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.REJECT\n    operation.validate = validate\n    return operation\n  })\n}\n","// Call plugin\nimport { getCallById } from '../../../interface/selectors'\nimport { CALL_STATES, CALL_DIRECTION } from '../../../constants'\n\n// Other plugins\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} state The SDK state.\n * @param {Object} callId The ID used by the SDK to identify the call.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId) {\n  const call = getCallById(state, callId)\n  /*\n   * `reject` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Initiated` or `Ringing` state.\n   *    3. Call must be `Incoming` direction.\n   */\n  if (!call) {\n    // Call must exist.\n    return new BasicError({\n      message: `Failed to reject call. Call ${callId} not found.`,\n      code: callCodes.INVALID_PARAM\n    })\n  } else if (![CALL_STATES.INITIATED, CALL_STATES.RINGING].includes(call.state)) {\n    // Call must be in Initiated or Ringing state.\n    return new BasicError({\n      message: `Failed to reject call. Call must be in ${CALL_STATES.INITIATED} or ${CALL_STATES.RINGING} state.`,\n      code: callCodes.INVALID_STATE\n    })\n  } else if (call.direction !== CALL_DIRECTION.INCOMING) {\n    // Call must be incoming.\n    return new BasicError({\n      message: 'Failed to reject call. Call must be incoming.',\n      code: callCodes.INVALID_STATE\n    })\n  }\n}\n\n/**\n * Bottle wrapper for reject call operation.\n * @return {Function}\n */\nexport default function rejectOperation (container) {\n  const { context, CallRequests, CallstackWebrtc, logManager } = container\n  /**\n   * Rejects an incoming call.\n   *\n   * This operation defines how a call is rejected. It performs the WebRTC and\n   *    signalling operations to reject a \"call\" both locally and on the server.\n   * Assumptions:\n   *    1. None\n   * Responsibilities:\n   *    1. Cleanup the call locally, using the WebRTC helper saga.\n   *    2. Reject the call on the server.\n   *    3. Update call state (via redux action).\n   * @method rejectCall\n   * @param {Object} callId The ID of the call to reject.\n   */\n  async function reject (callId) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Rejecting incoming call.')\n\n    const incomingCall = getCallById(context.getState(), callId)\n    await CallstackWebrtc.closeCall(incomingCall.webrtcSessionId)\n\n    // Collect the information needed to make the request.\n    const callInfo = {\n      id: callId,\n      wrtcsSessionId: incomingCall.wrtcsSessionId\n    }\n    try {\n      await CallRequests.rejectSession(callInfo)\n    } catch (error) {\n      log.info('Failed to reject call.')\n      throw error\n    }\n\n    log.info(`Finished rejecting call. Changing to ${CALL_STATES.ENDED}.`)\n  }\n\n  return reject\n}\n","// Operations.\nimport addMediaOperation, { validate as addMediaValidate } from './addMedia'\nimport webrtcAddMediaOperation from './webrtcAddMedia'\nimport rollbackOperation from './rollbackAddMedia'\nimport addBasicMediaOperation, { validate as basicValidate } from './addBasicMedia'\n\nimport remoteAnswer from './remoteAnswer'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.addMedia', () => {\n    const operation = addMediaOperation(bottle.container)\n    operation.remoteAnswer = remoteAnswer(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.ADD_MEDIA\n    operation.validate = addMediaValidate\n    return operation\n  })\n  bottle.factory('Callstack.operations.addBasicMedia', () => {\n    const operation = addBasicMediaOperation(bottle.container)\n    operation.remoteAnswer = remoteAnswer(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.ADD_BASIC_MEDIA\n    operation.validate = basicValidate\n    return operation\n  })\n\n  // Helpers used only within the operation.\n  bottle.factory('Callstack.utils.webrtcAddMedia', () => webrtcAddMediaOperation(bottle.container))\n  bottle.factory('Callstack.utils.rollbackAddMedia', () => rollbackOperation(bottle.container))\n}\n","// Call plugin\nimport { getCallByWebrtcSessionId, getOptions } from '../../../interface/selectors'\nimport { REPORTER_EVENTS, REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\n// Utils\nimport { getTrackDscpMapping } from '../../utils/call'\nimport { organizeTracks } from '../../utils/media'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../../errors'\n\n/**\n * Bottle wrapper for \"webrtc AddMedia\" operation.\n * @return {Function}\n */\nexport default function webrtcAddMediaOperation (container) {\n  const { context, CallstackSDP, CallReporter, WebRTC } = container\n\n  /**\n   * Performs the webRTC responsibilities for adding media\n   *\n   * @param  {Object} mediaConstraints Video and audio media constraints\n   * @param  {boolean} mediaConstraints.audio Whether to enable audio or not\n   * @param  {boolean} mediaConstraints.video Whether to enable video or not\n   * @param  {Object} sessionOptions\n   * @param  {string} sessionOptions.sessionId the local webrtc session id\n   * @param  {Object} [sessionOptions.bandwidth] Contains configuration details for setting bandwidth\n   * @param  {Object} [sessionOptions.dscpControls] Contains configuration details for track network priorities\n   * @return {Object} Object\n   * @return {string} Object.sdp An offer in the form of a Session Description Protocol\n   * @return {Object} Object.media media object containing tracks\n   */\n  async function webrtcAddMedia (mediaConstraints, sessionOptions) {\n    const { CallstackWebrtc } = container\n\n    const { sessionId, bandwidth, dscpControls } = sessionOptions\n    const { id: callId, localOp } = getCallByWebrtcSessionId(context.getState(), sessionId)\n\n    const callReport = CallReporter.getReport(callId)\n    const operationEvent = callReport.getEvent(localOp.eventId)\n\n    const medias = await CallstackWebrtc.createLocal(mediaConstraints, callId)\n\n    const session = await WebRTC.sessionManager.get(sessionId)\n\n    const trackLists = await organizeTracks(medias)\n    const dscpTrackMapping = getTrackDscpMapping(trackLists, dscpControls)\n\n    // Add all of the tracks to the Session.\n    // TODO: Error handling.\n    await session.addTracks(trackLists.all, dscpTrackMapping)\n\n    /*\n     * Create the local SDP offer, run it through any provided SDP handlers,\n     *    then set it as the Session's local description.\n     */\n    // TODO: Make sure the session is in the correct signaling state to start a\n    //    renegotiation operation.\n    const callConfigOptions = getOptions(context.getState())\n    const setLocalDescriptionEvent = operationEvent.addEvent(REPORTER_EVENTS.SET_LOCAL_DESCRIPTION)\n    setLocalDescriptionEvent.addData('operation', REPORTER_OPERATION_EVENTS_MAP.ADD_MEDIA)\n    let newSdp\n    try {\n      let offer = await session.createOffer()\n      // This is the \"pre set local\" stage.\n      offer.sdp = CallstackSDP.runPipeline(callConfigOptions.sdpHandlers, offer.sdp, {\n        callId,\n        type: offer.type,\n        step: 'set',\n        endpoint: 'local',\n        bandwidth\n      })\n\n      offer = await session.setLocalDescription(offer)\n\n      // This is the \"pre send local\" stage.\n      // Assign it to a new variable because some browsers enforce the read-only\n      //    properties of a RTCSessionDescription object. The object from\n      //    setLocalDescription is enforced read-only, but the `offer` before that\n      //    is not enforced.\n      newSdp = CallstackSDP.runPipeline(callConfigOptions.sdpHandlers, offer.sdp, {\n        callId,\n        type: offer.type,\n        step: 'send',\n        endpoint: 'local',\n        bandwidth\n      })\n    } catch (setLocalError) {\n      const error = new BasicError({\n        message: setLocalError.message,\n        code: callCodes.GENERIC_ERROR\n      })\n\n      setLocalDescriptionEvent.setError(error)\n      setLocalDescriptionEvent.endEvent()\n      throw error\n    }\n\n    setLocalDescriptionEvent.endEvent()\n\n    let mediaStates = []\n\n    for (const eachMedia of medias) {\n      const mediaState = await eachMedia.media.getState()\n\n      mediaStates = [...mediaStates, mediaState]\n    }\n\n    return { medias: mediaStates, sdp: newSdp }\n  }\n\n  return webrtcAddMedia\n}\n","// Other plugins.\nimport BasicError from '../../../../errors'\n\n// Libraries\nimport { isEmpty, isUndefined } from 'lodash/fp'\n\n/**\n * Bottle wrapper for \"rollback AddMedia\" operation.\n * @return {Function}\n */\nexport default function rollbackAddMediaOperation (container) {\n  const { logManager, WebRTC } = container\n\n  /**\n   * Performs the webRTC session functions associated rolling back the local portion\n   *  of an \"Add Media\" offer\n   *\n   * Responsibilities:\n   *  1. Remove and cleanup the tracks added to the peer\n   *  2. Rollback the local description SDP offer\n   * @method rollbackLocalAddMedia\n   * @param {string} sessionId    The local webRTC session id, used to lookup the session object\n   * @param {Array}  medias       A list of Media state objects\n   * @return {Object} offer object containing a Session Description Protocol\n   */\n  async function rollbackAddMedia (sessionId, medias) {\n    const log = logManager.getLogger('CALLSTACK')\n    const session = await WebRTC.sessionManager.get(sessionId)\n\n    if (!session) {\n      const message = `WebRTC session ${sessionId} not found.`\n      log.debug(message)\n      throw new BasicError({ message })\n    }\n\n    // Remove the new local media(s) that were added\n    let tracks = []\n    medias.forEach(media => {\n      tracks = tracks.concat(media.tracks.map(track => track.id))\n    })\n\n    // Get the tracks that we want to remove\n    const localTracksToRemove = await WebRTC.track.getTracks(tracks)\n    // Get the indexes of undefined tracks.\n    const invalidIndexes = localTracksToRemove.reduce((acc, cur, ind) => {\n      return isUndefined(cur) ? acc.concat(ind) : acc\n    }, [])\n    // Get the track IDs of those indexes.\n    const invalidTracks = invalidIndexes.map(ind => tracks[ind])\n    if (!isEmpty(invalidTracks)) {\n      const message = `The following tracks could not be found for rollback: ${invalidTracks.join(', ')}`\n      log.debug(message)\n    }\n\n    // Removes tracks from peer (Will stop tracks from being sent to remote participant).\n    // Does NOT end the tracks.\n    await session.removeTracks(tracks)\n\n    // Ends the tracks.\n    // Clean-up the local tracks.\n    await Promise.all(localTracksToRemove.map(track => track.stop()))\n\n    // Rollback the local offer\n    let offer\n    try {\n      offer = await session.rollbackLocalDescription()\n    } catch (error) {\n      log.debug('Failed to rollback local description offer SDP:', error)\n      throw error\n    }\n\n    return { offer }\n  }\n\n  return rollbackAddMedia\n}\n","import { validate as addMediaValidate } from './addMedia'\n\n// Call plugin.\nimport { getCallById } from '../../../interface/selectors'\n\n// Other plugins\nimport BasicError, { callCodes } from '../../../../errors'\nimport { getTrackById } from '../../../../webrtc/interface/selectors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, kind, mediaConstraints, options) {\n  const call = getCallById(state, callId)\n  const tracksOfKind = call\n    ? call.localTracks.map(id => getTrackById(state, id)).filter(track => track.kind === kind)\n    : undefined\n\n  /*\n   * `addMedia` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Connected` state.\n   * `addBasicMedia` operation validation:\n   *    3. Call must not already have a track of `kind` media.\n   */\n  const addMediaError = addMediaValidate(state, callId, kind, mediaConstraints, options)\n  if (addMediaError) {\n    return addMediaError\n  } else if (tracksOfKind.length >= 1) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: `Too many ${kind} tracks for basic scenario!`\n    })\n  }\n}\n\n/**\n * Bottle wrapper for addBasicMedia call operation.\n * @return {Function}\n */\nexport default function addBasicMediaOperation (container) {\n  const { logManager } = container\n  /**\n   * Adds basic media scenario to the call\n   *\n   * This operation wraps addMedia as an easier to use function for simple scenarios\n   * Assumptions:\n   *    1. Validate that the call state is \"Connected\".\n   *        - The call is connected.\n   *    2. The track being added cannot already be on the call.\n   * Responsibilities:\n   *    1. Check that there isn't already a track of the same kind on the call\n   *    2. Call addMedia with the correct parameters\n   * @method addBasicMedia\n   * @param {string}                  id               Id for the call being operated on.\n   * @param {string}                  kind             The type of media being added.\n   * @param {Object}                  mediaConstraints Parameters describing the media being added.\n   * @param {Object}                 [options]\n   * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n   * @param {call.DSCPControls}      [options.dscpControls] Options for configuring DSCP markings on the media traffic.\n   */\n  async function addBasicMedia (id, kind, mediaConstraints, options) {\n    const log = logManager.getLogger('CALL', id)\n    log.debug(`Adding ${kind} media to call.`)\n\n    const { Callstack } = container\n    return await Callstack.operations.addMedia(id, mediaConstraints, options)\n  }\n\n  return addBasicMedia\n}\n","// Callstack.\nimport { callActions } from '../../../interface/actions'\nimport * as eventTypes from '../../../interface/eventTypes'\n\nimport { REPORTER_EVENTS, REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\n// Other plugins.\nimport { getMediaById } from '../../../../webrtc/interface/selectors'\n\nexport default function createAddMediaResponse (container) {\n  const { context, logManager, emitEvent, CallstackWebrtc, CallReporter } = container\n\n  /**\n   * Operation for handling the answer SDP of a locally-started add media operation.\n   *\n   * On succesful handling:\n   *    - updates call state to added new local tracks,\n   *    - emits a \"media added\" event\n   *    - emits a \"tracks added\" event\n   *\n   * On failure to handle, ends the call as unrecoverable:\n   *    - updates call state to \"ended\",\n   *    - emits a \"tracks removed\" event\n   *    - emits a \"call state change\" event.\n   *\n   * @method addMediaResponse\n   * @param {Object} call The call being acted on.\n   * @param {Object} params\n   * @param {Object} params.sdp The remote answer SDP.\n   * @return {undefined}\n   */\n  async function addMediaResponse (call, params) {\n    const log = logManager.getLogger('CALL', call.id)\n\n    const callReport = CallReporter.getReport(call.id)\n    // Start the process reseponse event\n    const operationEvent = callReport.getEvent(call.localOp.eventId)\n    const processResponseEvent = operationEvent.addEvent(REPORTER_EVENTS.PROCESS_RESPONSE)\n    processResponseEvent.addData('operation', REPORTER_OPERATION_EVENTS_MAP.ADD_MEDIA)\n\n    // Handle the remote answer SDP.\n    try {\n      const sessionInfo = { sessionId: call.webrtcSessionId, answerSdp: params.sdp }\n      await CallstackWebrtc.receivedAnswer(sessionInfo, call)\n    } catch (error) {\n      /*\n       * Failed to set the remote answer SDP. End the call.\n       * TODO: Better error handling. Is the Call fully cleaned-up here?\n       */\n      context.dispatch(\n        callActions.endCallFinish(call.id, {\n          error\n        })\n      )\n\n      // Tell the application that local tracks are not available, since the\n      //    call is ending in error.\n      emitEvent(eventTypes.CALL_TRACKS_REMOVED, {\n        callId: call.id,\n        trackIds: [...call.localTracks, ...call.remoteTracks]\n      })\n\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId: call.id,\n        previous: {\n          state: call.state,\n          localHold: call.localHold,\n          remoteHold: call.remoteHold\n        },\n        error\n      })\n      processResponseEvent.setError(error)\n      processResponseEvent.endEvent()\n      return\n    }\n\n    log.info(\n      `Finished processing remote response to local ${call.localOp.operation}. Changing state based on operation.`\n    )\n\n    // Get the list of track IDs added to the call by this operation.\n    const medias = call.localOp.operationData.mediaIds.map(id => getMediaById(context.getState(), id))\n    let affectedLocalTracks = []\n    medias.forEach(media => {\n      affectedLocalTracks = affectedLocalTracks.concat(media.tracks)\n    })\n\n    // call:newMedia event\n    emitEvent(eventTypes.CALL_ADDED_MEDIA, {\n      callId: call.id,\n      local: true,\n      tracks: affectedLocalTracks,\n      mediaId: call.localOp.operationData.mediaIds\n    })\n\n    /*\n     * Update call state:\n     *    - add new tracks to the call.\n     */\n    context.dispatch(\n      callActions.addMediaFinish(call.id, {\n        bandwidth: call.localOp.operationData.bandwidth,\n        // For an add media operation, the newly added media are the affected tracks.\n        localTracks: affectedLocalTracks\n      })\n    )\n\n    // Tell the application that new tracks have been added.\n    emitEvent(eventTypes.CALL_TRACKS_ADDED, {\n      callId: call.id,\n      trackIds: affectedLocalTracks\n    })\n\n    processResponseEvent.endEvent()\n  }\n\n  return addMediaResponse\n}\n","// Operations.\nimport holdOperation, { validate } from './hold'\nimport rollbackOperation from './rollbackHold'\n\nimport remoteAnswer from './remoteAnswer'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.hold', () => {\n    const operation = holdOperation(bottle.container)\n    operation.remoteAnswer = remoteAnswer(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.HOLD\n    operation.validate = validate\n    return operation\n  })\n\n  bottle.factory('Callstack.utils.rollbackHold', () => rollbackOperation(bottle.container))\n}\n","// Call plugin\nimport { callActions } from '../../../interface/actions'\nimport { getCallById } from '../../../interface/selectors'\n\n// Libraries\nimport { getBrowserDetails } from 'kandy-webrtc'\n\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId) {\n  const call = getCallById(state, callId)\n  /*\n   * `hold` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be not be held locally.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (call.localHold !== false) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: 'Call is in an invalid state: localHold=true. It should be: localHold=false.'\n    })\n  }\n}\n\n/**\n * Bottle wrapper for hold call operation.\n * @return {Function}\n */\nexport default function holdOperation (container) {\n  const { context, CallRequests, Callstack, CallstackWebrtc, logManager } = container\n\n  /**\n   * Updates an existing call to have inactive media.\n   * Can be used as a \"hold\" operation for plain webRTC scenarios.\n   *\n   * This function defines how a call is put \"on hold\". It performs the webRTC and\n   *    signaling operations to update the local and server sessions of a call.\n   *    This represents the start of the webRTC renegotiation process for the\n   *    local side.\n   * Assumptions:\n   *    1. The call is in the correct state for the operation.\n   *        - The call exists, and is not already locally held.\n   * Responsibilities:\n   *    1. Generate an offer with the media directions as \"locally held\".\n   *    2. Perform signaling to update the server session with the offer.\n   *    3. Update call state (via redux actions).\n   * @method hold\n   * @param {string}   callId  The ID of the call to hold.\n   */\n  async function hold (callId) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Holding call.')\n\n    const targetCall = getCallById(context.getState(), callId)\n    const { wrtcsSessionId, webrtcSessionId, isAnonymous, account, customParameters, customBodies } = targetCall\n    // TODO: Make sure the session is in the correct signaling state to start a\n    //    renegotiation operation.\n    let offer\n    try {\n      offer = await CallstackWebrtc.generateOffer(\n        webrtcSessionId,\n        {\n          audio: 'inactive',\n          video: 'inactive'\n        },\n        targetCall.bandwidth\n      )\n    } catch (generateOfferError) {\n      log.debug('Failed to generate SDP offer')\n      throw generateOfferError\n    }\n    const callInfo = {\n      wrtcsSessionId,\n      offer: offer.sdp,\n      isAnonymous,\n      account,\n      customParameters,\n      customBodies\n    }\n\n    try {\n      await CallRequests.updateSession(callInfo)\n    } catch (responseError) {\n      log.info('Failed to hold call.')\n      // Rollback is not supported on safari or for a plan other than unified-plan\n      let rollbackErr\n      try {\n        await Callstack.utils.rollbackHold(webrtcSessionId)\n      } catch (rollbackError) {\n        log.debug('Automatic hold rollback failed:', rollbackError)\n        rollbackErr = rollbackError\n      }\n\n      // There is a \"browser issue\" with Chrome where the remote track is removed from the call when the local description\n      //  offer is set. This track is not recovered during rollback so call remains in an awkward state.\n      //  See comments on PR-3224.\n      const browser = getBrowserDetails().browser\n      if (rollbackErr || browser === 'chrome') {\n        // Although Safari can automatically rollback and set another local offer while in `have-local-offer`\n        //  signalling state, Safari does not perform an automatic rollback when a remote offer is\n        //  received while in that state. An InvalidStateError is thrown instead and call is in an awkward state.\n        if (browser === 'safari' || browser === 'chrome') {\n          log.info('Ending call due to unrecoverable state after call hold failure.')\n          // Hangup the call from WebRTC perspective\n          await CallstackWebrtc.closeCall(webrtcSessionId)\n\n          // Cleanup Redux state by sending END_CALL_FINISH action\n          context.dispatch(\n            callActions.endCallFinish(callId, {\n              isLocal: true,\n              transition: { reasonText: 'Call has ended due to call hold failure.' }\n            })\n          )\n\n          throw responseError\n        }\n        log.info('Unable to reset state after hold operation failure, future operations may not work as intended.')\n      }\n\n      throw responseError\n    }\n    log.info('Finished local portion of holding call. Waiting on remote response.')\n  }\n\n  return hold\n}\n","// Other plugins.\nimport BasicError from '../../../../errors'\n\n/**\n * Bottle wrapper for \"rollback hold\" operation.\n * @return {Function}\n */\nexport default function rollbackHoldOperation (container) {\n  const { logManager, WebRTC } = container\n\n  /**\n   * Performs the webRTC session functions associated rolling back the local portion\n   *  of a \"hold\" (inactive media) offer\n   *\n   * Responsibilities:\n   *  1. Revert the direction of the local and remote transceivers to \"sendrecv\"\n   *  2. Rollback the local description SDP offer\n   * @method rollbackHold\n   * @param {string} sessionId the local webRTC session id, used to lookup the session object\n   * @return {Object} offer object containing a Session Description Protocol\n   */\n  async function rollbackHold (sessionId) {\n    const log = logManager.getLogger('CALLSTACK')\n    const session = await WebRTC.sessionManager.get(sessionId)\n\n    if (!session) {\n      const message = `WebRTC session ${sessionId} not found.`\n      throw new BasicError({ message })\n    }\n\n    try {\n      await session.setTransceiversDirection({\n        audio: 'sendrecv',\n        video: 'sendrecv'\n      })\n    } catch (error) {\n      // TODO: Handle this potential error\n      // log.debug('Failed to restore local/remote tranceiver directions for audio/video:', error)\n      // throw error\n    }\n\n    // Rollback the local offer\n    let offer\n    try {\n      offer = await session.rollbackLocalDescription()\n    } catch (error) {\n      log.debug('Failed to rollback local description offer SDP:', error)\n      throw error\n    }\n\n    return { offer }\n  }\n\n  return rollbackHold\n}\n","// Callstack.\nimport { callActions } from '../../../interface/actions'\nimport * as eventTypes from '../../../interface/eventTypes'\n\nimport { REPORTER_EVENTS, REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\nexport default function createHoldResponse (container) {\n  const { context, logManager, emitEvent, CallstackWebrtc, CallReporter } = container\n\n  /**\n   * Operation for handling the answer SDP of a locally-started hold operation.\n   *\n   * On succesful handling:\n   *    - updates call state to \"on hold\",\n   *    - emits a \"tracks removed\" event\n   *    - emits a \"call state change\" event.\n   *\n   * On failure to handle, ends the call as unrecoverable:\n   *    - updates call state to \"ended\",\n   *    - emits a \"tracks removed\" event\n   *    - emits a \"call state change\" event.\n   *\n   * @method holdResponse\n   * @param {Object} call The call being acted on.\n   * @param {Object} params\n   * @param {Object} params.sdp The remote answer SDP.\n   * @return {undefined}\n   */\n  async function holdResponse (call, params) {\n    const log = logManager.getLogger('CALL', call.id)\n\n    const callReport = CallReporter.getReport(call.id)\n    // Start the process reseponse event\n    const operationEvent = callReport.getEvent(call.localOp.eventId)\n    const processResponseEvent = operationEvent.addEvent(REPORTER_EVENTS.PROCESS_RESPONSE)\n    processResponseEvent.addData('operation', REPORTER_OPERATION_EVENTS_MAP.HOLD)\n\n    // Handle the remote answer SDP.\n    try {\n      const sessionInfo = { sessionId: call.webrtcSessionId, answerSdp: params.sdp }\n      await CallstackWebrtc.receivedAnswer(sessionInfo, call)\n    } catch (error) {\n      /*\n       * Failed to set the remote answer SDP. End the call.\n       * TODO: Better error handling. Is the Call fully cleaned-up here?\n       */\n      context.dispatch(\n        callActions.endCallFinish(call.id, {\n          error\n        })\n      )\n\n      // Tell the application that local tracks are not available, since the\n      //    call is ending in error.\n      emitEvent(eventTypes.CALL_TRACKS_REMOVED, {\n        callId: call.id,\n        trackIds: [...call.localTracks, ...call.remoteTracks]\n      })\n\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId: call.id,\n        previous: {\n          state: call.state,\n          localHold: call.localHold,\n          remoteHold: call.remoteHold\n        },\n        error\n      })\n      processResponseEvent.setError(error)\n      processResponseEvent.endEvent()\n      return\n    }\n\n    log.info(\n      `Finished processing remote response to local ${call.localOp.operation}. Changing state based on operation.`\n    )\n\n    /*\n     * Update call state:\n     *    - state change to \"on hold\",\n     *    - tracks affected by operation removed.\n     */\n    context.dispatch(\n      callActions.holdCallFinish(call.id, {\n        ...call.localOp.operationData,\n        // For a hold operation, all tracks currently on the call are affected.\n        localTracks: call.localTracks,\n        remoteTracks: call.remoteTracks\n      })\n    )\n\n    // Tell the application that tracks have been removed.\n    emitEvent(eventTypes.CALL_TRACKS_REMOVED, {\n      callId: call.id,\n      trackIds: [...call.localTracks, ...call.remoteTracks]\n    })\n\n    // Tell the application that call state has changed.\n    emitEvent(eventTypes.CALL_STATE_CHANGE, {\n      callId: call.id,\n      previous: {\n        state: call.state,\n        localHold: call.localHold,\n        remoteHold: call.remoteHold\n      }\n    })\n\n    processResponseEvent.endEvent()\n  }\n\n  return holdResponse\n}\n","// Operations.\nimport unholdOperation, { validate } from './unhold'\nimport rollbackOperation from './rollbackUnhold'\n\nimport createRemoteAnswer from './remoteAnswer'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.unhold', () => {\n    const operation = unholdOperation(bottle.container)\n    operation.remoteAnswer = createRemoteAnswer(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.UNHOLD\n    operation.validate = validate\n    return operation\n  })\n\n  bottle.factory('Callstack.utils.rollbackUnhold', () => rollbackOperation(bottle.container))\n}\n","// Call plugin\nimport { callActions } from '../../../interface/actions'\nimport { getCallById } from '../../../interface/selectors'\n\n// Libraries\nimport { getBrowserDetails } from 'kandy-webrtc'\nimport BasicError, { callCodes } from '../../../../errors'\nimport { getSessionById, getTrackById } from '../../../../webrtc/interface/selectors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} state The SDK state.\n * @param {string} callId The ID used by the SDK to identify the call.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId) {\n  const call = getCallById(state, callId)\n  /*\n   * `unhold` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be be held locally.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (call.localHold !== true) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: 'Call is in an invalid state: localHold=false. It should be: localHold=true.'\n    })\n  }\n}\n\n/**\n * Bottle wrapper for unhold call operation.\n * @return {Function}\n */\nexport default function unholdOperation (container) {\n  const { context, CallRequests, Callstack, CallstackWebrtc, logManager } = container\n\n  /**\n   * Updates an existing call to have \"full\" media.\n   * Can be used as an \"unhold\" operation for plain webRTC scenarios.\n   *\n   * This function defines how a call is taken off \"hold\". It performs the webRTC and\n   *    signaling operations to update the local and server sessions of a call.\n   *    This represents the start of the webRTC renegotiation process for the\n   *    local side.\n   * Assumptions:\n   *    1. The call is in the correct state for the operation.\n   *        - The call exists, and is locally held.\n   * Responsibilities:\n   *    1. Generate an offer with the media directions as \"connected\".\n   *    2. Perform signaling to update the server session with the offer.\n   *    3. Update call state (via redux actions).\n   * @method unhold\n   * @param {string} callId  The ID of the call to unhold.\n   */\n  async function unhold (callId) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Unholding call.')\n\n    const targetCall = getCallById(context.getState(), callId)\n    const { wrtcsSessionId, webrtcSessionId, isAnonymous, account, customParameters, customBodies } = targetCall\n\n    // If the Session doesn't have a local track for a media kind, then don't change\n    //    that direction to say we're sending one. This prevents the other side\n    //    from getting an empty track.\n    const sessionState = getSessionById(context.getState(), webrtcSessionId)\n    const localTracks = sessionState.localTracks\n    const tracks = localTracks.map(id => getTrackById(context.getState(), id))\n    const mediaDirections = {\n      audio: tracks.some(track => track.kind === 'audio') ? 'sendrecv' : 'recvonly',\n      video: tracks.some(track => track.kind === 'video') ? 'sendrecv' : 'recvonly'\n    }\n\n    let offer\n    try {\n      offer = await CallstackWebrtc.generateOffer(webrtcSessionId, mediaDirections, targetCall.bandwidth)\n    } catch (generateOfferError) {\n      log.debug('Invalid SDP offer or SDP offer not received.')\n      throw generateOfferError\n    }\n\n    const callInfo = {\n      wrtcsSessionId,\n      offer: offer.sdp,\n      isAnonymous,\n      account,\n      customParameters,\n      customBodies\n    }\n\n    try {\n      await CallRequests.updateSession(callInfo)\n    } catch (responseError) {\n      log.info('Failed to unhold call.')\n      // Rollback only supported on unified-plan\n      let rollbackErr\n      try {\n        await Callstack.utils.rollbackUnhold(webrtcSessionId)\n      } catch (rollbackError) {\n        log.debug('Automatic unhold rollback failed:', rollbackError)\n        rollbackErr = rollbackError\n      }\n\n      const browser = getBrowserDetails().browser\n      if (rollbackErr) {\n        // Although Safari can automatically rollback and set another local offer while in `have-local-offer`\n        //  signalling state, Safari does not perform an automatic rollback when a remote offer is\n        //  received while in that state. An InvalidStateError is thrown instead and call is in an awkward state.\n        if (browser === 'safari') {\n          log.info('Ending call due to unrecoverable state after call unhold failure.')\n          // Hangup the call from WebRTC perspective\n          await CallstackWebrtc.closeCall(webrtcSessionId)\n\n          // Cleanup Redux state by sending END_CALL_FINISH action\n          context.dispatch(\n            callActions.endCallFinish(callId, {\n              isLocal: true,\n              transition: { reasonText: 'Call has ended due to call unhold failure.' }\n            })\n          )\n\n          throw responseError\n        }\n        log.info('Unable to reset state after unhold operation failure, future operations may not work as intended.')\n      }\n\n      throw responseError\n    }\n    log.info('Finished local portion of unholding call. Waiting on remote response.')\n  }\n\n  return unhold\n}\n","// Other plugins.\nimport BasicError from '../../../../errors'\n\n/**\n * Bottle wrapper for \"rollback Unhold\" operation.\n * @return {Function}\n */\nexport default function rollbackUnholdOperation (container) {\n  const { logManager, WebRTC } = container\n\n  /**\n   * Performs the webRTC session functions associated rolling back the local portion\n   *  of an \"unhold\" (full media) offer\n   *\n   * Responsibilities:\n   *  1. Revert the direction of the local and remote transceivers to \"inactive\"\n   *  2. Rollback the local description SDP offer\n   * @method rollbackUnhold\n   * @param {string} sessionId the local webRTC session id, used to lookup the session object\n   * @return {Object} offer object containing a Session Description Protocol\n   */\n  async function rollbackUnhold (sessionId) {\n    const log = logManager.getLogger('CALLSTACK')\n    const session = await WebRTC.sessionManager.get(sessionId)\n\n    if (!session) {\n      const message = `WebRTC session ${sessionId} not found.`\n      throw new BasicError({ message })\n    }\n\n    // Set the direction of the transceivers back to 'inactive'\n    try {\n      await session.setTransceiversDirection({\n        audio: 'inactive',\n        video: 'inactive'\n      })\n    } catch (error) {\n      // TODO: Handle this potential error\n      // log.debug('Failed to restore local/remote tranceiver directions for audio/video to inactive:', error)\n      // throw error\n    }\n\n    // Rollback the local offer\n    let offer\n    try {\n      offer = await session.rollbackLocalDescription()\n    } catch (error) {\n      log.debug('Failed to rollback local description offer SDP:', error)\n      throw error\n    }\n\n    return { offer }\n  }\n\n  return rollbackUnhold\n}\n","// Callstack.\nimport { callActions } from '../../../interface/actions'\nimport * as eventTypes from '../../../interface/eventTypes'\nimport { getAllRemoteTracks } from '../../sdp/media/remoteTracks'\n\nimport { REPORTER_EVENTS, REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\n// Other plugins.\nimport { getSessionById } from '../../../../webrtc/interface/selectors'\n\nexport default function createUnholdResponse (container) {\n  const { context, logManager, emitEvent, CallstackWebrtc, CallReporter, WebRTC } = container\n\n  /**\n   * Operation for handling the answer SDP of a locally-started unhold operation.\n   *\n   * On succesful handling:\n   *    - updates call state to remove \"local hold\" flag,\n   *    - emits a \"tracks added\" event\n   *    - emits a \"call state change\" event.\n   *\n   * On failure to handle, ends the call as unrecoverable:\n   *    - updates call state to \"ended\",\n   *    - emits a \"call state change\" event.\n   *\n   * @method unholdResponse\n   * @param {Object} call The call being acted on.\n   * @param {Object} params\n   * @param {Object} params.sdp The remote answer SDP.\n   * @return {undefined}\n   */\n  async function unholdResponse (call, params) {\n    const log = logManager.getLogger('CALL', call.id)\n\n    const callReport = CallReporter.getReport(call.id)\n    // Start the process reseponse event\n    const operationEvent = callReport.getEvent(call.localOp.eventId)\n    const processResponseEvent = operationEvent.addEvent(REPORTER_EVENTS.PROCESS_RESPONSE)\n    processResponseEvent.addData('operation', REPORTER_OPERATION_EVENTS_MAP.UNHOLD)\n\n    // Handle the remote answer SDP.\n    try {\n      const sessionInfo = { sessionId: call.webrtcSessionId, answerSdp: params.sdp }\n      await CallstackWebrtc.receivedAnswer(sessionInfo, call)\n    } catch (error) {\n      /*\n       * Failed to set the remote answer SDP. End the call.\n       * TODO: Better error handling. Is the Call fully cleaned-up here?\n       */\n      context.dispatch(\n        callActions.endCallFinish(call.id, {\n          error\n        })\n      )\n\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId: call.id,\n        previous: {\n          state: call.state,\n          localHold: call.localHold,\n          remoteHold: call.remoteHold\n        },\n        error\n      })\n      processResponseEvent.setError(error)\n      processResponseEvent.endEvent()\n      return\n    }\n\n    /*\n     * TODO: Handle unexpected media directions after the operation.\n     *    ie. If we were on local-only hold, then unheld, the SDK assumes that\n     *      media is now flowing (`Connected` call state), but that may not be\n     *     the case.\n     * See KJS-1554.\n     */\n\n    log.info(\n      `Finished processing remote response to local ${call.localOp.operation}. Changing state based on operation.`\n    )\n\n    // For a local unhold, we need to look at the SDP and what tracks are\n    //    available in the Session to know which remote tracks will be re-added\n    //    by this operation.\n    const session = await WebRTC.sessionManager.get(call.webrtcSessionId)\n    const affectedRemoteTracks = await getAllRemoteTracks(session)\n\n    let affectedLocalTracks = []\n    // If we're not in dual-hold (ie. we will be Connected after this), then\n    //    local tracks will become available.\n    if (!call.remoteHold) {\n      // For local tracks, just need to get the local tracks the Session has.\n      const sessionState = getSessionById(context.getState(), call.webrtcSessionId)\n      affectedLocalTracks = sessionState.localTracks\n    }\n\n    /*\n     * Update call state:\n     *    - state change to remove local hold flag,\n     *    - add tracks affected by operation.\n     */\n    context.dispatch(\n      callActions.unholdCallFinish(call.id, {\n        ...call.localOp.operationData,\n        // For an unhold operation, only certain tracks are affected.\n        localTracks: affectedLocalTracks,\n        remoteTracks: affectedRemoteTracks\n      })\n    )\n\n    // Tell the application that tracks have been removed.\n    emitEvent(eventTypes.CALL_TRACKS_ADDED, {\n      callId: call.id,\n      trackIds: [...affectedLocalTracks, ...affectedRemoteTracks]\n    })\n\n    // Tell the application that call state has changed.\n    emitEvent(eventTypes.CALL_STATE_CHANGE, {\n      callId: call.id,\n      previous: {\n        state: call.state,\n        localHold: call.localHold,\n        remoteHold: call.remoteHold\n      }\n    })\n\n    processResponseEvent.endEvent()\n  }\n\n  return unholdResponse\n}\n","// Operations.\nimport removeMediaOperation, { validate as removeValidate } from './removeMedia'\nimport webrtcRemoveMediaOperation from './webrtcRemoveMedia'\nimport rollbackOperation from './rollbackRemoveMedia'\nimport removeBasicMediaOperation, { validate as basicValidate } from './removeBasicMedia'\n\nimport remoteAnswer from './remoteAnswer'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.removeMedia', () => {\n    const operation = removeMediaOperation(bottle.container)\n    operation.remoteAnswer = remoteAnswer(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.REMOVE_MEDIA\n    operation.validate = removeValidate\n    return operation\n  })\n\n  bottle.factory('Callstack.operations.removeBasicMedia', () => {\n    const operation = removeBasicMediaOperation(bottle.container)\n    operation.remoteAnswer = remoteAnswer(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.REMOVE_BASIC_MEDIA\n    operation.validate = basicValidate\n    return operation\n  })\n\n  bottle.factory('Callstack.utils.webrtcRemoveMedia', () => webrtcRemoveMediaOperation(bottle.container))\n  bottle.factory('Callstack.utils.rollbackRemoveMedia', () => rollbackOperation(bottle.container))\n}\n","// Call plugin\nimport { CALL_STATES } from '../../../constants'\nimport { CALL_STATE_CHANGE } from '../../../interface/eventTypes'\nimport { callActions } from '../../../interface/actions'\nimport { getCallById } from '../../../interface/selectors'\n\n// Libraries\nimport { isArray, isEmpty } from 'lodash/fp'\nimport { getBrowserDetails } from 'kandy-webrtc'\n\n// Other plugins\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, tracks, options = {}) {\n  const call = getCallById(state, callId)\n  /*\n   * `removeMedia` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Connected` state.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (call.state !== CALL_STATES.CONNECTED) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Invalid call state: ${call.state}. It should be: ${CALL_STATES.CONNECTED}.`\n    })\n  } else if (!isArray(tracks) || isEmpty(tracks)) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Invalid parameter\"; no track IDs specified to remove.'\n    })\n  }\n}\n\n/**\n * Bottle wrapper for removeMedia call operation.\n * @return {Function}\n */\nexport default function removeMediaOperation (container) {\n  const { context, CallRequests, Callstack, CallstackWebrtc, emitEvent, logManager } = container\n\n  /**\n   *\n   * Removes media from an existing session.\n   *\n   * This function handles the WebRTC and signalling portions of removing media from an existing call\n   * Assumptions:\n   *    1. The action contains a tracks object that is neither an array or an empty object\n   *    2. The call is in the 'Connected' state\n   * Responsibilities:\n   *    1. Perform the signaling to tell the server that we want to to remove the specified track\n   *    2. Update call state (via redux actions).\n   * @method removeMedia\n   * @param {Object} callId The ID of the call.\n   * @param {Array}  tracks The list of track IDs to be removed.\n   * @param {Object} options Extra options for the media.\n   */\n  async function removeMedia (callId, tracks, options = {}) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Removing media from call.')\n\n    const { bandwidth } = options\n    const targetCall = getCallById(context.getState(), callId)\n\n    const {\n      webrtcSessionId,\n      wrtcsSessionId,\n      bandwidth: callBandwidth,\n      isAnonymous,\n      account,\n      customParameters,\n      customBodies\n    } = targetCall\n\n    const finalBandwidth = {\n      audio: bandwidth && bandwidth.audio ? bandwidth.audio : callBandwidth.audio,\n      video: bandwidth && bandwidth.video ? bandwidth.video : callBandwidth.video\n    }\n\n    let sdp\n    try {\n      sdp = await Callstack.utils.webrtcRemoveMedia({\n        sessionId: webrtcSessionId,\n        tracks,\n        bandwidth: finalBandwidth\n      })\n    } catch (removeMediaError) {\n      log.info('Failed to remove media from call.')\n      throw removeMediaError\n    }\n\n    const callInfo = {\n      wrtcsSessionId,\n      offer: sdp,\n      isAnonymous,\n      account,\n      customParameters,\n      customBodies\n    }\n\n    // Perform signalling to remove media\n    try {\n      await CallRequests.updateSession(callInfo)\n    } catch (responseError) {\n      log.info('Failed to remove media from call.')\n      // Rollback is not supported on safari or for a plan other than unified-plan\n      try {\n        await Callstack.utils.rollbackRemoveMedia(webrtcSessionId)\n      } catch (rollbackError) {\n        log.debug('Automatic remove media rollback failed:', rollbackError)\n        const browser = getBrowserDetails().browser\n        // Although Safari can automatically rollback and set another local offer while in `have-local-offer`\n        // signalling state, Safari does not perform an automatic rollback when a remote offer is\n        // received while in that state. An InvalidStateError is thrown instead and call is in an awkward state.\n        if (browser === 'safari') {\n          log.info('Ending call due to unrecoverable state after call remove media failure.')\n          // Hangup the call from WebRTC perspective\n          await CallstackWebrtc.closeCall(webrtcSessionId)\n\n          // Cleanup Redux state by sending END_CALL_FINISH action\n          context.dispatch(\n            callActions.endCallFinish(callId, {\n              isLocal: true,\n              transition: { reasonText: 'Call has ended due to call remove media failure.' }\n            })\n          )\n\n          emitEvent(CALL_STATE_CHANGE, {\n            callId,\n            previous: {\n              state: targetCall.state,\n              localHold: targetCall.localHold,\n              remoteHold: targetCall.remoteHold\n            },\n            error: responseError\n          })\n          throw responseError\n        }\n        log.info(\n          'Unable to reset state after remove media operation failure, future operations may not work as intended.'\n        )\n      }\n\n      throw responseError\n    }\n\n    log.info('Finished local portion of removing media. Waiting on remote response.')\n    // Return the operation data so the CallManager can handle it.\n    return {\n      operationData: {\n        local: true,\n        tracks,\n        bandwidth: finalBandwidth\n      }\n    }\n  }\n\n  return removeMedia\n}\n","// Call plugin\nimport { getCallByWebrtcSessionId, getOptions } from '../../../interface/selectors'\nimport { REPORTER_EVENTS, REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\n// Libraries\nimport { isEmpty, isUndefined } from 'lodash/fp'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../../errors'\n\n/**\n * Bottle wrapper for \"webrtc RemoveMedia\" operation.\n * @return {Function}\n */\nexport default function webrtcRemoveMediaOperation (container) {\n  const { context, CallstackSDP, CallReporter, WebRTC } = container\n\n  /**\n   * Performs the webRTC responsibilities for removing media\n   *\n   * @param {Object} sessionOptions\n   * @param {string} sessionOptions.sessionId The local webrtc session id\n   * @param {Array}  sessionOptions.tracks A list of track IDs to remove\n   * @param {Object} [sessionOptions.bandwidth] Contains configuration details for setting bandwidth\n   * @return {string} sdp An offer in the form of a Session Description Protocol\n   */\n  async function webrtcRemoveMedia (sessionOptions) {\n    const { sessionId, bandwidth, tracks } = sessionOptions\n\n    // Get the tracks that we want to remove\n    const localTracksToRemove = await WebRTC.track.getTracks(tracks)\n    // Get the indexes of undefined tracks.\n    const invalidIndexes = localTracksToRemove.reduce((acc, cur, ind) => {\n      return isUndefined(cur) ? acc.concat(ind) : acc\n    }, [])\n    // Get the track IDs of those indexes.\n    const invalidTracks = invalidIndexes.map(ind => tracks[ind])\n\n    if (!isEmpty(invalidTracks)) {\n      const message = `The following invalid track ids were provided: ${invalidTracks.join(', ')}`\n      throw new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message\n      })\n    }\n\n    const session = await WebRTC.sessionManager.get(sessionId)\n    const { id: callId, localOp } = getCallByWebrtcSessionId(context.getState(), sessionId)\n\n    const callReport = CallReporter.getReport(callId)\n    const operationEvent = callReport.getEvent(localOp.eventId)\n\n    // Removes tracks from peer (Will stop tracks from being sent to remote participant).\n    // Does NOT end the tracks.\n    await session.removeTracks(tracks)\n\n    // TODO: This should only cleanup the removed tracks, shouldn't it?\n    // Ends the tracks.\n    // Clean-up the local tracks.\n    try {\n      await Promise.all(localTracksToRemove.map(track => track.stop()))\n    } catch (error) {\n      // TODO: Throw a BasicError (using GENERIC_ERROR code) and abort (see the skipped unit test)\n    }\n\n    /*\n     * Create the local SDP offer, run it through any provided SDP handlers,\n     *    then set it as the Session's local description.\n     */\n    // TODO: Make sure the session is in the correct signaling state to start a\n    //    renegotiation operation.\n    const callConfigOptions = getOptions(context.getState())\n    const setLocalDescriptionEvent = operationEvent.addEvent(REPORTER_EVENTS.SET_LOCAL_DESCRIPTION)\n    setLocalDescriptionEvent.addData('operation', REPORTER_OPERATION_EVENTS_MAP.REMOVE_MEDIA)\n    let newSdp\n    try {\n      let offer = await session.createOffer()\n      // This is the \"pre set local\" stage.\n      offer.sdp = CallstackSDP.runPipeline(callConfigOptions.sdpHandlers, offer.sdp, {\n        callId,\n        type: offer.type,\n        step: 'set',\n        endpoint: 'local',\n        bandwidth\n      })\n\n      offer = await session.setLocalDescription(offer)\n\n      // This is the \"pre send local\" stage.\n      // Assign it to a new variable because some browsers enforce the read-only\n      //    properties of a RTCSessionDescription object. The object from\n      //    setLocalDescription is enforced read-only, but the `offer` before that\n      //    is not enforced.\n      newSdp = CallstackSDP.runPipeline(callConfigOptions.sdpHandlers, offer.sdp, {\n        callId,\n        type: offer.type,\n        step: 'send',\n        endpoint: 'local',\n        bandwidth\n      })\n    } catch (setLocalError) {\n      const error = new BasicError({\n        message: setLocalError.message,\n        code: callCodes.GENERIC_ERROR\n      })\n\n      setLocalDescriptionEvent.setError(error)\n      setLocalDescriptionEvent.endEvent()\n      throw error\n    }\n\n    setLocalDescriptionEvent.endEvent()\n    return newSdp\n  }\n\n  return webrtcRemoveMedia\n}\n","// Other plugins.\nimport BasicError from '../../../../errors'\n\n/**\n * Bottle wrapper for \"rollback RemoveMedia\" operation.\n * @return {Function}\n */\nexport default function rollbackRemoveMediaOperation (container) {\n  const { logManager, WebRTC } = container\n\n  /**\n   * Performs the webRTC session functions associated rolling back the local portion\n   *  of a \"Remove Media\" offer.\n   *\n   * Unlike other rollback operations, for a remove media operation we will not try and re-add\n   *  the removed tracks since the application's intention was to stop the media.\n   *\n   * Responsibilities:\n   *  1. Rollback the local description SDP offer\n   * @method rollbackLocalRemoveMedia\n   * @param {Object} deps\n   * @param {Object} deps.webRTC  The WebRTC stack.\n   * @param {string} sessionId    The local webRTC session id, used to lookup the session object\n   * @return {Object} offer object containing a Session Description Protocol\n   */\n  async function rollbackRemoveMedia (sessionId) {\n    const log = logManager.getLogger('CALLSTACK')\n    const session = await WebRTC.sessionManager.get(sessionId)\n\n    if (!session) {\n      const message = `WebRTC session ${sessionId} not found.`\n      log.debug(message)\n      throw new BasicError({ message })\n    }\n\n    // Rollback the local offer\n    let offer\n    try {\n      offer = await session.rollbackLocalDescription()\n    } catch (error) {\n      log.debug('Failed to rollback local description offer SDP:', error)\n      throw error\n    }\n\n    return { offer }\n  }\n\n  return rollbackRemoveMedia\n}\n","import BasicError, { callCodes } from '../../../../errors'\nimport { getLocalTracks } from '../../utils/call'\nimport { CALL_STATES } from '../../../constants'\nimport { getCallById } from '../../../interface/selectors'\n\n// Other plugins.\nimport { getTrackById } from '../../../../webrtc/interface/selectors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, kind) {\n  const call = getCallById(state, callId)\n  const tracksOfKind = call\n    ? call.localTracks.map(id => getTrackById(state, id)).filter(track => track.kind === kind)\n    : undefined\n\n  /*\n   * `removeMedia` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Connected` state.\n   * `removeBasicMedia` operation validation:\n   *    3. Call must not already have a track of `kind` media.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (call.state !== CALL_STATES.CONNECTED) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Invalid call state: ${call.state}. It should be: ${CALL_STATES.CONNECTED}.`\n    })\n  } else if (tracksOfKind.length !== 1) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: `Must have only one ${kind} track for basic scenario!`\n    })\n  }\n}\n\n/**\n * Bottle wrapper for removeBasicMedia call operation.\n * @return {Function}\n */\nexport default function removeBasicMediaOperation (container) {\n  const { context, logManager } = container\n  /**\n   *\n   * Removes basic media from an existing session.\n   *\n   * This operation wraps removeMedia as an easier to use function for simple scenarios\n   * Assumptions:\n   *    1. The call is in the 'Connected' state\n   *    2. The track being removed should be the only one of its kind on the call.\n   * Responsibilities:\n   *    1. Check that this is a basic scenario (removing the only kind of track on the call)\n   *    2. Call removeMedia with the correct parameters\n   * @method removeMedia\n   * @param {string} id The ID of the call.\n   * @param {string} kind The kind of track to remove.\n   */\n  async function removeBasicMedia (id, kind) {\n    const { Callstack } = container\n    const log = logManager.getLogger('CALL', id)\n    log.debug(`Removing ${kind} media from call.`)\n\n    const tracks = getLocalTracks(context, id, kind)\n\n    return await Callstack.operations.removeMedia(\n      id,\n      tracks.map(trackObj => trackObj.trackId)\n    )\n  }\n\n  return removeBasicMedia\n}\n","// Callstack.\nimport { callActions } from '../../../interface/actions'\nimport * as eventTypes from '../../../interface/eventTypes'\n\nimport { REPORTER_EVENTS, REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\nexport default function createRemoveMediaResponse (container) {\n  const { context, logManager, emitEvent, CallstackWebrtc, CallReporter } = container\n\n  /**\n   * Operation for handling the answer SDP of a locally-started remove media operation.\n   *\n   * On succesful handling:\n   *    - updates call state to remove specified local tracks,\n   *    - emits a \"media removed\" event\n   *    - emits a \"tracks removed\" event\n   *\n   * On failure to handle, ends the call as unrecoverable:\n   *    - updates call state to \"ended\",\n   *    - emits a \"tracks removed\" event\n   *    - emits a \"call state change\" event.\n   *\n   * @method removeMediaResponse\n   * @param {Object} call The call being acted on.\n   * @param {Object} params\n   * @param {Object} params.sdp The remote answer SDP.\n   * @return {undefined}\n   */\n  async function removeMediaResponse (call, params) {\n    const log = logManager.getLogger('CALL', call.id)\n\n    const callReport = CallReporter.getReport(call.id)\n    // Start the process reseponse event\n    const operationEvent = callReport.getEvent(call.localOp.eventId)\n    const processResponseEvent = operationEvent.addEvent(REPORTER_EVENTS.PROCESS_RESPONSE)\n    processResponseEvent.addData('operation', REPORTER_OPERATION_EVENTS_MAP.REMOVE_MEDIA)\n\n    // Handle the remote answer SDP.\n    try {\n      const sessionInfo = { sessionId: call.webrtcSessionId, answerSdp: params.sdp }\n      await CallstackWebrtc.receivedAnswer(sessionInfo, call)\n    } catch (error) {\n      /*\n       * Failed to set the remote answer SDP. End the call.\n       * TODO: Better error handling. Is the Call fully cleaned-up here?\n       */\n      context.dispatch(\n        callActions.endCallFinish(call.id, {\n          error\n        })\n      )\n\n      // Tell the application that tracks are not available, since the\n      //    call is ending in error.\n      emitEvent(eventTypes.CALL_TRACKS_REMOVED, {\n        callId: call.id,\n        trackIds: [...call.localTracks, ...call.remoteTracks]\n      })\n\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId: call.id,\n        previous: {\n          state: call.state,\n          localHold: call.localHold,\n          remoteHold: call.remoteHold\n        },\n        error\n      })\n      processResponseEvent.setError(error)\n      processResponseEvent.endEvent()\n      return\n    }\n\n    log.info(\n      `Finished processing remote response to local ${call.localOp.operation}. Changing state based on operation.`\n    )\n\n    // Get the list of track IDs removed from the call by this operation.\n    const affectedLocalTracks = call.localOp.operationData.tracks\n\n    // call:removedMedia event\n    emitEvent(eventTypes.CALL_REMOVED_MEDIA, {\n      callId: call.id,\n      local: true,\n      tracks: affectedLocalTracks\n    })\n\n    /*\n     * Update call state:\n     *    - remove tracks from the call.\n     */\n    context.dispatch(\n      callActions.removeMediaFinish(call.id, {\n        bandwidth: call.localOp.operationData.bandwidth,\n        // For an remove media operation, the affected tracks are those that\n        //    where specified at the start of the operation.\n        localTracks: affectedLocalTracks\n      })\n    )\n\n    // Tell the application that tracks have been removed.\n    emitEvent(eventTypes.CALL_TRACKS_REMOVED, {\n      callId: call.id,\n      trackIds: affectedLocalTracks\n    })\n\n    processResponseEvent.endEvent()\n  }\n\n  return removeMediaResponse\n}\n","import replaceTrackOperation, { validate } from './replaceTrack'\nimport replaceTrackWebrtcOperation from './webrtcReplaceTrack'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.replaceTrack', () => {\n    const operation = replaceTrackOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.REPLACE_TRACK\n    operation.validate = validate\n    return operation\n  })\n\n  bottle.factory('Callstack.utils.webRtcReplaceTrack', () => replaceTrackWebrtcOperation(bottle.container))\n}\n","// Call plugin\nimport { getCallById } from '../../../interface/selectors'\n\n// Helpers.\nimport { CALL_STATES } from '../../../constants'\n\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} state SDK state.\n * @param {Object} callId The ID the SDK uses to identify the call.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, trackId, mediaConstraints) {\n  const call = getCallById(state, callId)\n  /*\n   * `replaceTrack` operation validation:\n   *    1. Call must exist.\n   *    2. Call  must not be `Cancelled`, `Ended` or `Initiating` state.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if ([CALL_STATES.CANCELLED, CALL_STATES.ENDED, CALL_STATES.INITIATING].includes(call.state)) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Call is in an invalid state: ${call.state}.`\n    })\n  }\n}\n\n/**\n * Bottle wrapper for replaceTrack call operation.\n * @return {Function}\n */\nexport default function replaceTrackOperation (container) {\n  const { context, Callstack, logManager } = container\n  /**\n   *\n   * Replaces an existing track with a new track.\n   *\n   * This function handles the WebRTC portion of replacing a track.\n   * Assumptions:\n   *    1. The action contains call id, trackId, and mediaConstraints\n   * Responsibilities:\n   *    1. Creates a new track.\n   *    2. Replaces an an existing track with the newly created track.\n   *    3. Update call state (via redux actions).\n   * @method replaceTrack\n   * @param {string} callId The ID of the call to replace the track of.\n   * @param {string} trackId The ID of the track to replace.\n   * @param {Object} [mediaConstraints={}] The media constraints.\n   *\n   * @param {Object|boolean} [mediaConstraints.audio] Audio-based constraints object or false.\n   * @param {string} [mediaConstraints.audio.deviceId] ID of the microphone to receive audio from.\n   *\n   * @param {Object|boolean} [mediaConstraints.video] Video-based constraints object or false.\n   * @param {string} [mediaConstraints.video.deviceId] ID of the camera to receive video from.\n   * @param {string} [mediaConstraints.video.width] The width of the video.\n   * @param {string} [mediaConstraints.video.height] The height of the video.\n   * @param {string} [mediaConstraints.video.frameRate] The frame rate of the video.\n   *\n   * @param {Object|boolean} [mediaConstraints.screen] Screen Share-based constraints object or false.\n   * @param {string} [mediaConstraints.screen.width] The width of the video.\n   * @param {string} [mediaConstraints.screen.height] The height of the video.\n   * @param {string} [mediaConstraints.screen.frameRate] The frame rate of the video.\n   */\n  async function replaceTrack (callId, trackId, mediaConstraints) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Replacing track on call.')\n\n    const targetCall = getCallById(context.getState(), callId)\n    let result\n    try {\n      result = await Callstack.utils.webRtcReplaceTrack({\n        sessionId: targetCall.webrtcSessionId,\n        trackId,\n        mediaConstraints\n      })\n    } catch (error) {\n      log.info('Failed to replace track on call.')\n      throw error\n    }\n    const { newTrackId, oldTrackState } = result\n    return { newTrackId, oldTrackState }\n  }\n\n  return replaceTrack\n}\n","import { getCallByWebrtcSessionId } from '../../../interface/selectors'\nimport BasicError, { callCodes } from '../../../../errors'\n\n/**\n * Bottle wrapper for \"webrtc ReplaceTrack\" operation.\n * @return {Function}\n */\nexport default function webrtcReplaceTrackOperation (container) {\n  const { context, logManager, WebRTC } = container\n\n  /**\n   * Performs the webRTC responsibilities for replacing a track.\n   *\n   * @param {Object} params\n   * @param {string} params.sessionId The id of the session to replace the track of.\n   * @param {string} params.trackId The id of the track to replace.\n   * @param  {Object} params.mediaConstraints Video or audio media constraints.\n   * @param  {Object|boolean} params.mediaConstraints.audio Audio configs.\n   * @param  {Object|boolean} params.mediaConstraints.video Video configs.\n   * @param  {Object|boolean} params.mediaConstraints.screenShare Screen sharing configs.\n   * @returns {Object} replaceTrackResult The result of the track replace operation.\n   * @returns {string} replaceTrackResult.newTrackId The ID of the new track that we used to replace the old one.\n   * @returns {Object} replaceTrackResult.oldTrackState The state of the old track before it was replaced.\n   * @throws {BasicError} [replaceTrackResult.error] Error object if track replacment fails.\n   */\n  async function webrtcReplaceTrack (params) {\n    const { CallstackWebrtc } = container\n    const { sessionId, trackId, mediaConstraints } = params\n    const log = logManager.getLogger('CALLSTACK')\n\n    let noOfTruthyTrackTypes = 0\n    let newTrackKind\n    Object.entries(mediaConstraints).forEach(([key, value]) => {\n      if (value) {\n        noOfTruthyTrackTypes++\n        newTrackKind = key\n      }\n    })\n\n    // Need to handle both cases as valid media constraints, for example:\n    //   mediaConstraints = {video: true, audio: false, screenShare: false}\n    //   mediaConstraints = {video: true}\n    if (noOfTruthyTrackTypes !== 1) {\n      // We require exactly one new track to be provided by API.\n      throw new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message: `Require exactly one new track type to be specified. Found ${noOfTruthyTrackTypes} track types.`\n      })\n    }\n\n    let session\n    try {\n      session = await WebRTC.sessionManager.get(sessionId)\n    } catch (err) {\n      /*\n       * A WebRTC operation should only throw in Proxy mode when the channel times-out\n       *    the operation. Check the first \"get\" in the saga to catch this problem.\n       */\n      log.debug(err.message)\n      throw err\n    }\n    const oldTrack = session.allLocalTracks.find(track => track.id === trackId)\n    if (!oldTrack) {\n      throw new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message: `Old track ${trackId} not found.`\n      })\n    }\n\n    const oldTrackState = await oldTrack.getState()\n    const oldTrackKind = oldTrackState.kind\n    // At the moment, only video & screen share are compatible tracks that can replace each other.\n    // (That's because screen share is sent as a video track to remote peer)\n    // Otherwise, the exact media type is required in order to allow a track replacement.\n    const compatibleTrackKinds =\n      (oldTrackKind === 'audio' && newTrackKind === 'audio') ||\n      (oldTrackKind === 'video' && ['video', 'screen'].includes(newTrackKind))\n\n    if (!compatibleTrackKinds) {\n      throw new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message: `Media constraints incompatible for old track kind: ${oldTrackKind}.`\n      })\n    }\n    let newMedias\n    try {\n      // Create Media\n      const call = getCallByWebrtcSessionId(context.getState(), sessionId)\n      newMedias = await CallstackWebrtc.createLocal(mediaConstraints, call.id)\n    } catch (err) {\n      // Error thown from call/callstack/webrtc/media/createLocal\n      log.debug('Failed to create local media.')\n      throw err\n    }\n\n    let allNewTracks = []\n\n    // Find the new track that matches the old track we want to replace.\n    for (const eachMedia of newMedias) {\n      const newTracks = await eachMedia.media.getTracks()\n      allNewTracks = [...allNewTracks, ...newTracks]\n    }\n\n    let newTrack\n    for (const track of allNewTracks) {\n      // Matching the track is done this way because we need to yield to getState,\n      //    but we can't yield inside of a `.find(func)` or similar. So iterate\n      //    over the new tracks \"manually\".\n      const state = await track.getState()\n      if (state.kind === oldTrackKind) {\n        newTrack = track\n        break\n      }\n    }\n\n    if (!newTrack) {\n      throw new BasicError({\n        code: callCodes.USER_MEDIA_ERROR,\n        message: `${oldTrackKind} track not found`\n      })\n    }\n\n    // Replace the track\n    // According to packages/webrtc/src/models/session it can return a failed Promise\n    const replaceTrackError = await session.replaceTrack(newTrack, { trackId })\n    if (replaceTrackError) {\n      log.debug('Failed to replace track.')\n      // If cannot replace old track, cleanup the newly created track\n      await newTrack.stop()\n\n      throw new BasicError({\n        code: callCodes.GENERIC_ERROR,\n        message: replaceTrackError.message\n      })\n    }\n\n    // stop the old track\n    await oldTrack.stop()\n\n    return {\n      newTrackId: newTrack.id,\n      oldTrackState\n    }\n  }\n  return webrtcReplaceTrack\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/object/entries\"), __esModule: true };","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import playAudio, { validate } from './playAudio'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.playAudioFile', () => {\n    const operation = playAudio(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.PLAY_AUDIO\n    operation.validate = validate\n    return operation\n  })\n}\n","// Call plugin\nimport { callActions } from '../../../interface/actions'\nimport { getCallById } from '../../../interface/selectors'\nimport * as eventTypes from '../../../interface/eventTypes'\nimport { OPERATIONS, OP_STATUS, OP_TRANSITIONS } from '../../../interface/constants'\nimport { CALL_STATES } from '../../../constants'\n\n// Other plugins\nimport BasicError, { callCodes } from '../../../../errors'\nimport { SESSION_AUDIO_ENDED } from '../../../../webrtc/interface/actionTypes'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} state The SDK state.\n * @param {Object} callId The ID the SDK uses to identify the call.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, filePath, onPlayingCallback) {\n  const call = getCallById(state, callId)\n  /*\n   * `playAudioFile` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Connected` state.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (call.state !== CALL_STATES.CONNECTED) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Invalid call state: ${call.state}. It should be: ${CALL_STATES.CONNECTED}.`\n    })\n  }\n}\n\n/**\n * Bottle wrapper for playAudioFile call operation.\n * @return {Function}\n */\nexport default function createOperation (container) {\n  const { context, WebRTC, emitEvent, Notifications, logManager } = container\n\n  /**\n   * \"Play audio file\" operation.\n   * Validates that it can perform the operation, then passes it off to the\n   *    Call's Session object. The WebRTC stack performs the actual operation; this\n   *    function manages the responses from the WebRTC stack and forwards feedback\n   *    to the API.\n   *\n   * @method playAudio\n   * @param {string}   callId            ID of the Call the act on.\n   * @param {string}   filePath          Path to the audio file.\n   * @param {Function} onPlayingCallback Callback for when audio starts playing.\n   * @return {undefined}\n   * @throws {BasicError} Throws if call does not exist.\n   * @throws {BasicError} Throws if call is not in correct state.\n   * @throws {BasicError} Throws if call does not have a WebRTC session.\n   * @throws {BasicError} Throws if the session cannot play audio.\n   * @throws {BasicError} Throws if audio plays longer than expected duration.\n   */\n  async function playAudio (callId, filePath, onPlayingCallback) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Replacing call audio with file media.')\n\n    const call = getCallById(context.getState(), callId)\n    const session = await WebRTC.sessionManager.get(call.webrtcSessionId)\n\n    if (!session) {\n      throw new BasicError({\n        code: callCodes.INVALID_STATE,\n        message: \"Call's WebRTC session not found.\"\n      })\n    }\n\n    let duration\n    try {\n      duration = await session.insertAudio(filePath)\n      log.info('Audio file has started to play.')\n\n      /*\n       * Special-case: Have the playAudio operation manage the \"update\" transition.\n       *    This is because it is not a negotiation operation (hence the CallManager\n       *    wouldn't give it an update transition), but still has a \"pending\" stage\n       *    (hence needs an update transition).\n       */\n      context.dispatch(\n        callActions.operationUpdate(callId, OP_TRANSITIONS.PLAY_AUDIO, true, {\n          transition: OP_TRANSITIONS.UPDATE,\n          eventId: call.localOp.eventId\n        })\n      )\n\n      emitEvent(eventTypes.CALL_OPERATION, {\n        callId,\n        isLocal: true,\n        operation: OPERATIONS.PLAY_AUDIO,\n        transition: OP_TRANSITIONS.UPDATE,\n        previous: {\n          operations: OPERATIONS.PLAY_AUDIO,\n          status: OP_STATUS.ONGOING\n        }\n      })\n    } catch (err) {\n      // Failed to start playing audio file.\n      log.info('Failed to start playing audio file.')\n\n      let code\n      switch (err.message) {\n        case 'Failed to play audio file.':\n          // Likely: the filePath is invalid.\n          code = callCodes.INVALID_PARAM\n          break\n        case 'No valid local audio track found to insert audio file on.':\n          // Error: The Call needs to have a local audio track.\n          code = callCodes.NOT_SUPPORTED\n          break\n        default:\n          // Likely: the native `replaceTrack` function failed.\n          code = callCodes.UNKNOWN_ERROR\n          break\n      }\n\n      throw new BasicError({ code, message: err.message })\n    }\n\n    // Resolve the 'pending' promise to signify the file has started to play.\n    onPlayingCallback({ duration })\n\n    // Wait for the notice saying that the audio file has stopped playing.\n    const timeout = duration * 1000 + 3000\n    let action\n    try {\n      action = await Notifications.takeAction(action => {\n        return action.type === SESSION_AUDIO_ENDED && action.payload.id === session.id\n      }, timeout)\n    } catch (err) {\n      // Audio file hasn't completed when it should have; assume error.\n      log.info('No response from audio file after expected duration; timing-out.')\n      throw new BasicError({\n        code: callCodes.STATE_DESYNC,\n        message: 'Play audio file operation timed-out.'\n      })\n    }\n\n    if (action.error) {\n      // Audio file encountered an error.\n      log.info('Audio file encountered an error while playing.')\n      throw new BasicError({\n        code: callCodes.UNKNOWN_ERROR,\n        message: 'Encountered error while playing audio file.'\n      })\n    } else {\n      // Audio file ended.\n      log.info('Audio file has finished playing.')\n    }\n  }\n\n  return playAudio\n}\n","import getCodecsOperation from './getAvailableCodecs'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.getAvailableCodecs', () => {\n    const operation = getCodecsOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.GET_AVAILABLE_CODECS\n    return operation\n  })\n}\n","// Other plugins.\nimport BasicError from '../../../../errors'\n\n/**\n * Bottle wrapper for \"get codecs\" operation.\n * @return {Function}\n */\nexport default function getAvailableCodecsOperation (container) {\n  const { logManager, WebRTC } = container\n\n  /**\n   * Uses the WebRTC stack to get the list of available and supported codecs by the browser\n   *\n   * @method getAvailableCodecs\n   * @param  {string} kind The kind of media, i.e., 'audio' or 'video', to get the list of available codecs of.\n   * @return {Object} An object containing the available codecs.\n   */\n  async function getAvailableCodecs (kind) {\n    const log = logManager.getLogger('CALL')\n\n    // TODO: Remove this once parameter validation is available for APIs\n    if (kind !== 'audio' && kind !== 'video') {\n      const errorMsg = `Cannot retrieve codecs for media kind ${kind}. Only 'audio' or 'video' kind supported.`\n      log.info(errorMsg)\n\n      throw new BasicError({ message: errorMsg })\n    }\n    log.info(`Retrieving list of available codecs for media kind '${kind}'.`)\n\n    // Get the list of codecs from the general WebRTCManager\n    const codecs = await WebRTC.webrtcManager.getAvailableCodecs(kind)\n\n    // NOTE: There does not seem to be a path for failure, as RTCRtpSender.getCapabilities(kind)\n    //       always returns something according to API doc\n    //       (including null, if there are simply no capabilities present)\n    //       As a result of null, may want to consider an empty array of `codecs` as a failure in the furture.\n    log.debug('Successfully retrieved codec list:', codecs)\n    return codecs\n  }\n\n  return getAvailableCodecs\n}\n","import iceRestartOperation, { validate } from './iceRestart'\n\nimport remoteAnswer from './remoteAnswer'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.iceRestart', () => {\n    const operation = iceRestartOperation(bottle.container)\n    operation.remoteAnswer = remoteAnswer(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = true\n    operation.type = OPERATIONS.MEDIA_RESTART\n    operation.validate = validate\n    return operation\n  })\n}\n","// Call plugin\nimport { getCallById, getOptions } from '../../../interface/selectors'\nimport { getLocalTracks } from '../../utils/call'\nimport { CALL_STATES } from '../../../constants'\n\n// Other plugins\nimport { getPlatform } from '../../../../auth/interface/selectors'\nimport { getConnectionState } from '../../../../connectivity/interface/selectors'\nimport { waitForReconnect } from '../../../../connectivity/interface/utils'\nimport BasicError, { callCodes, subscriptionCodes } from '../../../../errors'\n\n// Utils\nimport { delay } from '../../../../common/utils'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId) {\n  const call = getCallById(state, callId)\n  /*\n   * `iceRestart` operation validation:\n   *    1. Call must exist.\n   *    2. Call must not be in `Ended` state.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (call.state === CALL_STATES.ENDED) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Invalid call state: ${call.state}. It should be on-going.`\n    })\n  }\n}\n\n/**\n * Bottle wrapper for iceRestart call operation.\n * @return {Function}\n */\nexport default function iceRestartOperation (container) {\n  const { context, CallRequests, WebRTC, CallstackWebrtc, logManager } = container\n  /**\n   * Updates an existing call with unchanged media to trigger an ICE restart and renegotiation.\n   *\n   * This operation defines how a call's media is restarted. It performs the webRTC and\n   *    signaling operations to update the local and server sessions of a call.\n   *    This represents the start of the webRTC renegotiation process for the\n   *    local side.\n   * Assumptions:\n   *    1. The call is in the correct state for the operation.\n   *        - The call exists.\n   * Responsibilities:\n   *    1. Flag the Peer to restart ICE.\n   *    2. Generate an offer with unchanged media directions.\n   *    3. Perform signaling to update the server session with the offer.\n   *    4. Update call state (via redux actions).\n   * @method iceRestart\n   * @param {string} callId The id of the call having it's media restarted.\n   */\n  async function iceRestart (callId) {\n    const call = getCallById(context.getState(), callId)\n\n    // Get some call data.\n    const {\n      webrtcSessionId,\n      wrtcsSessionId,\n      bandwidth,\n      isAnonymous,\n      account,\n      localHold,\n      customParameters,\n      customBodies\n    } = call\n\n    const session = await WebRTC.sessionManager.get(webrtcSessionId)\n\n    const dtlsRole = await session.getDtlsRole()\n\n    // The passive side of the call should wait a short amount of time before restarting media connection\n    // to avoid a glare scenario where both sides of the call try to restart the media connection\n    // at the same time.\n    if (dtlsRole === 'passive') {\n      const { mediaConnectionRetryDelay } = getOptions(context.getState())\n\n      await delay(mediaConnectionRetryDelay)\n    }\n\n    // Tell the RTCPeerConnection to restart the ICE connection as part of the\n    //    next negotiation.\n    await session.restartIce()\n\n    const log = logManager.getLogger('CALL', callId)\n\n    // Before doing the negotiation for ICE Restart, make sure we have network.\n    const platform = getPlatform(context.getState())\n    const { connected: isConnected } = getConnectionState(context.getState(), platform)\n\n    if (!isConnected) {\n      log.debug('Websocket not connected; waiting for reconnect before performing media restart.')\n      const isConnected = await waitForReconnect()\n\n      if (!isConnected) {\n        log.info('Subscription lost; stopping media restart attempt.')\n\n        throw new BasicError({\n          code: subscriptionCodes.WS_CONNECTION_ERROR,\n          message: 'No subscription for operation.'\n        })\n      }\n    }\n\n    log.info('Performing call renegotiation to reconnect media connection.')\n\n    // Make sure we have the right media directions in the negotiation.\n    //    We don't want to accidentally unhold media while on local hold.\n    const mediaDirections = {\n      audio: localHold ? 'inactive' : 'sendrecv',\n      video: localHold ? 'inactive' : 'sendrecv'\n    }\n\n    // If we're not on hold nor sending any audio or video, change the media direction(s) to recvonly to\n    //  prevent the other side from getting empty tracks.\n    if (!localHold) {\n      const localTracks = getLocalTracks(context, callId)\n      mediaDirections.audio = localTracks.some(track => track.kind === 'audio') ? 'sendrecv' : 'recvonly'\n      mediaDirections.video = localTracks.some(track => track.kind === 'video') ? 'sendrecv' : 'recvonly'\n    }\n\n    const callInfo = {\n      wrtcsSessionId,\n      isAnonymous,\n      account,\n      customParameters,\n      customBodies\n    }\n\n    // Generate the offer\n    let offer\n    try {\n      offer = await CallstackWebrtc.generateOffer(webrtcSessionId, mediaDirections, bandwidth)\n      callInfo.offer = offer.sdp\n    } catch (err) {\n      log.debug('Failed to generate offer.')\n\n      throw new BasicError({\n        code: callCodes.INVALID_OFFER,\n        message: 'Failed to generate SDP offer'\n      })\n    }\n\n    // Update the server\n    try {\n      await CallRequests.updateSession(callInfo)\n\n      log.info('Finished local portion of media restart. Waiting on remote response.')\n    } catch (error) {\n      log.info('Failed to renegotiate call.')\n      throw error\n    }\n  }\n\n  return iceRestart\n}\n","// Connectivity plugin\nimport { getConnectionState } from './selectors'\nimport { WS_CONNECT_FINISHED } from './actionTypes'\n\n// Other plugins\nimport { getPlatform } from '../../auth/interface/selectors'\nimport { delay } from '../../common/utils'\nimport { UNSUBSCRIBE_FINISHED } from '../../subscription/interface/actionTypes'\n\n/**\n * Util for waiting for the websocket / subscription to reconnect.\n * Assumption is that the websocket is in the middle of reconnect attempts. This\n *    is why the timeout is so long; one of the two scenarios should be guaranteed\n *    to happen before then.\n * @param {Object} container The bottle container.\n * @param {number} timeout The time, in milliseconds, to wait before timing out.\n * @return {boolean} Whether the websocket has reconnected or not.\n */\nexport async function waitForReconnect (container, timeout = 60000) {\n  const { context, Notifications } = container\n  const platform = getPlatform(context.getState())\n  const { connected: isConnected } = getConnectionState(context.getState(), platform)\n\n  if (isConnected) {\n    return true\n  }\n\n  const result = await Promise.race([\n    Notifications.takeAction(WS_CONNECT_FINISHED),\n    Notifications.takeAction(UNSUBSCRIBE_FINISHED),\n    delay(timeout)\n  ])\n\n  if (result && result.actionType && result.actionType === WS_CONNECT_FINISHED) {\n    return true\n  }\n\n  return false\n}\n","// Callstack.\nimport { getMediaState } from '../../../utils/state'\nimport { callActions } from '../../../interface/actions'\nimport * as eventTypes from '../../../interface/eventTypes'\n\nimport { REPORTER_EVENTS, REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\nexport default function createMediaRestartResponse (container) {\n  const { context, logManager, emitEvent, CallstackWebrtc, CallReporter } = container\n\n  /**\n   * Operation for handling the answer SDP of a locally-started media restart operation.\n   *\n   * On succesful handling:\n   *    - emits a \"media restart\" event\n   *\n   * On failure to handle, ends the call as unrecoverable:\n   *    - updates call state to \"ended\",\n   *    - emits a \"tracks removed\" event\n   *    - emits a \"call state change\" event.\n   *\n   * @method mediaRestartResponse\n   * @param {Object} call The call being acted on.\n   * @param {Object} params\n   * @param {Object} params.sdp The remote answer SDP.\n   * @return {undefined}\n   */\n  async function mediaRestartResponse (call, params) {\n    const log = logManager.getLogger('CALL', call.id)\n    log.info('Processing remote response from regular, local update request.')\n\n    const callReport = CallReporter.getReport(call.id)\n    // Start the process reseponse event\n    const operationEvent = callReport.getEvent(call.localOp.eventId)\n    const processResponseEvent = operationEvent.addEvent(REPORTER_EVENTS.PROCESS_RESPONSE)\n    processResponseEvent.addData('operation', REPORTER_OPERATION_EVENTS_MAP.MEDIA_RESTART)\n\n    const mediaState = getMediaState(call)\n    log.debug(`Current call info; State: ${call.state}, MediaState: ${mediaState}.`)\n\n    // Handle the remote answer SDP.\n    try {\n      const sessionInfo = { sessionId: call.webrtcSessionId, answerSdp: params.sdp }\n      await CallstackWebrtc.receivedAnswer(sessionInfo, call)\n    } catch (error) {\n      /*\n       * Failed to set the remote answer SDP. End the call.\n       * TODO: Better error handling. Is the Call fully cleaned-up here?\n       */\n      context.dispatch(\n        callActions.endCallFinish(call.id, {\n          error\n        })\n      )\n\n      // Tell the application that local tracks are not available, since the\n      //    call is ending in error.\n      emitEvent(eventTypes.CALL_TRACKS_REMOVED, {\n        callId: call.id,\n        trackIds: [...call.localTracks, ...call.remoteTracks]\n      })\n\n      emitEvent(eventTypes.CALL_STATE_CHANGE, {\n        callId: call.id,\n        previous: {\n          state: call.state,\n          localHold: call.localHold,\n          remoteHold: call.remoteHold\n        },\n        error\n      })\n      processResponseEvent.setError(error)\n      processResponseEvent.endEvent()\n      return\n    }\n\n    log.info(\n      `Finished processing remote response to local ${call.localOp.operation}. Changing state based on operation.`\n    )\n\n    /*\n     * Dispatch action. Doesn't update state.\n     */\n    context.dispatch(callActions.restartMediaFinish(call.id))\n\n    // Tell the application that media has restarted.\n    emitEvent(eventTypes.MEDIA_RESTART, {\n      callId: call.id\n    })\n\n    processResponseEvent.endEvent()\n  }\n\n  return mediaRestartResponse\n}\n","import sendDtmfOperation, { validate } from './sendDtmf'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.sendDtmf', () => {\n    const operation = sendDtmfOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.SEND_DTMF\n    operation.validate = validate\n    return operation\n  })\n}\n","// import { addTone, convertTone, splitTones } from './tones'\nimport { playInBand, playOutBand } from './playMethods'\nimport hasTelephoneEvent from '../../sdp/utils/hasTelephoneEvent'\n\n// Call plugin.\nimport { getCallById } from '../../../interface/selectors'\nimport { CALL_STATES } from '../../../constants'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, tone, { duration, intertoneGap } = {}) {\n  const call = getCallById(state, callId)\n  /*\n   * `sendDtmf` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Connected`, `Ringing`, or `Early Media` state.\n   *    3. A valid tone was provided.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (![CALL_STATES.CONNECTED, CALL_STATES.RINGING, CALL_STATES.EARLY_MEDIA].includes(call.state)) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Call is in an invalid state (${call.state}).`\n    })\n  } else if (!tone || !/^[\\d*#]+/.test(tone)) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'No DTMF tone specified.'\n    })\n  }\n}\n\n/**\n * Bottle wrapper for sendDtmf call operation.\n * @return {Function}\n */\nexport default function createDtmfOperation (container) {\n  const { context, logManager, WebRTC } = container\n\n  /**\n   * Operation for sending DTMF tones on a call.\n   * Determines if the DTMF tones need to be out-of-band (preferred) or in-band.\n   *    Refers to helper functions to send the tones.\n   *\n   * Responsibilities:\n   *    1. Validate the operation is currently possible.\n   *    2. Determine if out-of-band tones are possible for the call.\n   *    3. Send the tones, depending on method available.\n   * @async\n   * @method sendDtmf\n   * @param {string} callId ID for the Call.\n   * @param {string} tone The tone(s) to be sent.\n   * @param {Object} options\n   * @param {number} options.duration How long each tone should be played for.\n   * @param {number} options.intertoneGap How long in between of each tone.\n   * @return {undefined}\n   * @throws {BasicError} Throws INVALID_PARAM if call does not exist.\n   * @throws {BasicError} Throws INVALID_STATE if call is in the wrong state.\n   * @throws {BasicError} Throws INVALID_PARAM if tone is not a valid DTMF tone.\n   * @throws {BasicError} Throws GENERIC_ERROR if sending the tone fails.\n   */\n  async function sendDtmf (callId, tone, { duration, intertoneGap } = {}) {\n    const log = logManager.getLogger('CALL', callId)\n    const call = getCallById(context.getState(), callId)\n\n    // Get the webrtc Session for the call.\n    const session = await WebRTC.sessionManager.get(call.webrtcSessionId)\n    // Get the remote description for the Session.\n    const remoteDesc = await session.getRemoteDescription()\n\n    const canSendOutBand = hasTelephoneEvent(remoteDesc.sdp)\n    try {\n      if (canSendOutBand) {\n        log.debug(`Sending DTMF tones out-of-band for call ${call.id}.`)\n        await playOutBand(session, { tone, duration, intertoneGap })\n      } else {\n        log.debug(`Sending DTMF tones in-band for call ${call.id}.`)\n        await playInBand(session, { tone, duration, intertoneGap })\n      }\n\n      log.info(`Successfully sent DTMF tones for call ${call.id}.`)\n    } catch (err) {\n      log.debug(`Failed to send DTMF tones for call ${call.id}.`)\n      throw new BasicError({\n        code: callCodes.GENERIC_ERROR,\n        message: `Unable to send DTMF tones for call ${call.id}.`\n      })\n    }\n  }\n\n  return sendDtmf\n}\n","import { addTones } from './tones'\n\n/**\n * Sends DTMF tones out-of-band over a Session.\n *\n * The Callstack implementation uses the WebRTC stack's implementation for this.\n *    There is no signaling involved.\n *\n * @method playOutBand\n * @param  {Session} session A Webrtc Session object.\n * @param  {Object}  options\n * @param  {string}  options.tone           The tone sequence.\n * @param  {number}  [options.duration]     The length of each DTMF tone.\n * @param  {number}  [options.intertoneGap] The gap between each DTMF tone.\n * @return {boolean} Whether the operation was successful or not.\n */\nexport async function playOutBand (session, options) {\n  return await session.sendDTMF(options)\n}\n\n/**\n * Sends DTMF tones in-band over a Session.\n *\n * DTMF tones are added to the audio track by using AudioContext nodes. A\n *    MediaStream is converted into an audio node, which allows us to add more\n *    audio inputs into the node. The original audio and DTMF tones are mixed\n *    into a single node this way, and the track from this node temporarily\n *    replaces the original track in the Session.\n *\n *                       +-------------------------+\n *    Original           | Additional Audio Source |\n *   MediaStream         +---------+---------------+\n *       |                         |\n *       |                         |\n *       v                         v\n * +-----+-------+         +-------+----------+\n * | Source Node +-------->| Destination Node |\n * +-------------+         +-------+----------+\n *                                 |\n *                                 |\n *                                 v\n *                         MediaStream w/ DTMF\n *\n * @method playInBand\n * @param  {Session} session A Webrtc Session object.\n * @param  {Object}  options\n * @param  {string}  options.tone           The tone sequence.\n * @param  {number}  [options.duration=100]     The length of each DTMF tone.\n * @param  {number}  [options.intertoneGap=70]  The gap between each DTMF tone.\n * @return {boolean} Whether the operation was successful or not.\n */\nexport async function playInBand (session, options) {\n  let { tone, duration, intertoneGap: gap } = options\n\n  // Ensure optional options are numbers (not strings). If not numbers, or\n  //    undefined, use default values.\n  duration = Number(duration) > 0 ? Number(duration) : 100\n  gap = Number(gap) > -1 ? Number(gap) : 70\n\n  // Get the (native) track the tones will be inserted into.\n  const track = session.localTracks.find(track => {\n    const state = track.getState()\n    return state.kind === 'audio'\n  })\n\n  const stream = track.getStream()\n  const context = new AudioContext()\n\n  // Create a source node that has the stream media.\n  const source = context.createMediaStreamSource(stream)\n\n  /**\n   * Create the \"destination node\". All audio sources will be connected to This\n   *    node, and it will be used as the \"final output\".\n   */\n  const dest = context.createMediaStreamDestination()\n  // Connect the source node to it, so that it has the original audio.\n  source.connect(dest)\n\n  // Get the track from the destination node and replace the original track\n  //    on the PeerConnection with it. The remote endpoint will now receive\n  //    any/all audio that is connected to the destination node.\n  const newTrack = dest.stream.getAudioTracks()[0]\n  await session.peer.replaceTrack(newTrack, { trackId: track.id })\n\n  // Add the DTMF tones to the destination node.\n  await addTones(context, dest, tone, { duration, gap })\n\n  // Un-replace track on the PeerConnection. This resets the tracks back to\n  //    \"normal\".\n  await session.peer.replaceTrack(track.track, { trackId: newTrack.id })\n\n  // Clean-up the AudioContext nodes.\n  context.close()\n\n  return true\n}\n","/**\n * Converts a single tone input to its dual-frequencies.\n * @method convertTone\n * @param  {string} tone A DTMF tone input character.\n * @return {Array} The set of frequencies for the DTMF tone.\n */\nexport function convertTone (tone) {\n  if (typeof tone !== 'string' || tone.length > 1 || !/[\\d*#]+/.test(tone)) {\n    throw new Error('Invalid input for DTMF tone.')\n  }\n\n  switch (tone) {\n    case '1':\n      return ['697', '1209']\n    case '2':\n      return ['697', '1336']\n    case '3':\n      return ['697', '1477']\n    case '4':\n      return ['770', '1209']\n    case '5':\n      return ['770', '1336']\n    case '6':\n      return ['770', '1477']\n    case '7':\n      return ['852', '1209']\n    case '8':\n      return ['852', '1336']\n    case '9':\n      return ['852', '1477']\n    case '0':\n      return ['941', '1336']\n    case '*':\n      return ['941', '1209']\n    case '#':\n      return ['941', '1477']\n  }\n}\n\n/**\n * Splits a DTMF tone sequence into individual tones.\n * @method splitTones\n * @param  {string} tone A DTMF tone string.\n * @return {Array} List of single-character tones.\n */\nexport function splitTones (tone) {\n  const matches = tone.match(/[\\d*#]+/)\n  if (!matches || matches[0] !== tone) {\n    throw new Error('Invalid characters in tone.')\n  }\n\n  return tone.split('')\n}\n\n/**\n * Generates DTMF tones based on input, and connects the audio to the provided\n *    target node.\n * @method addTones\n * @param  {AudioContext} context      The AudioContext being used.\n * @param  {AudioNode} targetNode      The AudioNode to add DTMF tones to.\n * @param  {string} tones              The input tones.\n * @param  {Object} [options]\n * @param  {number} [options.duration] The length of each DTMF tone.\n * @param  {number} [options.gap]      The gap between each DTMF tone.\n */\nexport async function addTones (context, targetNode, tones, options) {\n  /**\n   * Node Diagram:\n   * +--------------+\n   * | Oscillator 1 +--+\n   * +--------------+  |    +--------------+\n   *                   +--->|   Osc Node   |\n   * +--------------+  |    +------+-------+\n   * | Oscillator 2 +--+           |\n   * +--------------+              | Connect generated audio\n   *                               v to the provided node.\n   *                        +------+--------+\n   *                        |  Target Node  |\n   *                        +---------------+\n   */\n\n  /**\n   * Step 1: Setup the audio nodes.\n   */\n  // Create the Oscillator nodes that will generate the frequencies.\n  const oscillators = [context.createOscillator(), context.createOscillator()]\n  oscillators[0].type = 'sine'\n  oscillators[1].type = 'sine'\n\n  /**\n   * Create an intermediary Gain node to control the volume of the oscillator\n   *   frequencies before connecting them to anything else.\n   */\n  const oscNode = context.createGain()\n  oscillators[0].connect(oscNode)\n  oscillators[1].connect(oscNode)\n  oscNode.gain.value = 0.1\n\n  // Connect the combined oscillators to the target node. Any tones created\n  //    by the oscillators will be heard in the target node.\n  oscNode.connect(targetNode)\n\n  // Connect the oscillators to the \"destination\" as well, which works magically.\n  // `context.destination` connects to the \"default destination\" (or something\n  //    like that), which will be the machine's speakers. This will play the\n  //    audio locally.\n  oscNode.connect(context.destination)\n\n  /**\n   * Step 2: Use the oscillators to generate DTMF tones.\n   */\n\n  /**\n   * Schedule a frequency to be played for a period of time.\n   * @method scheduleTone\n   * @param  {number} tone  A frequency.\n   * @param  {number} start When the tone should start.\n   * @param  {number} dur   The duration of the tone, in seconds.\n   */\n  function scheduleTone (tone, start, dur) {\n    oscillators[0].frequency.setValueAtTime(tone[0], start)\n    oscillators[0].frequency.setValueAtTime(0, start + dur)\n\n    oscillators[1].frequency.setValueAtTime(tone[1], start)\n    oscillators[1].frequency.setValueAtTime(0, start + dur)\n  }\n\n  const toneSequence = splitTones(tones).map(convertTone)\n\n  // Convert the time units to seconds.\n  const dur = options.duration / 1000\n  const gap = options.gap / 1000\n\n  let toneStart = context.currentTime\n  for (let i = 0; i < toneSequence.length; i++) {\n    scheduleTone(toneSequence[i], toneStart, dur)\n\n    toneStart = toneStart + dur + gap\n  }\n\n  // Start playing the scheduled tones.\n  oscillators[0].start()\n  oscillators[1].start()\n\n  /**\n   * Step 3: Clean-up the audio nodes.\n   */\n\n  // Wait until all tones have finished playing.\n  const numTones = toneSequence.length\n  const delayTime = numTones * (options.duration + options.gap)\n  await new Promise(resolve => {\n    setTimeout(resolve, delayTime)\n  })\n\n  // Disconnect all nodes from each other.\n  oscNode.disconnect()\n  oscillators[0].stop()\n  oscillators[0].disconnect()\n  oscillators[1].stop()\n  oscillators[1].disconnect()\n}\n","// Libraries.\nimport sdpTransform from 'sdp-transform'\n\n/**\n * Checks whether an SDP has at least one telephone-event codec.\n *\n * TODO: If there isn't a telephone-event, then the PeerConnection won't have\n *    a \"dtmf sender\" (RTCRtpSender.dtmf). Should preferably check for that\n *    rather than looking through the SDP.\n * This isn't being done because the Session/Peer models wrap \"send dtmf\" in a\n *    way that makes it inconvenient to use.\n *\n * @method hasTelephoneEvent\n * @param  {string}  stringSdp An SDP.\n * @return {boolean}\n */\nexport default function hasTelephoneEvent (stringSdp) {\n  const sdp = sdpTransform.parse(stringSdp)\n\n  const hasCodec = sdp.media\n    .filter(media => media.type === 'audio')\n    .some(media => {\n      return media.rtp.some(rtp => rtp.codec === 'telephone-event')\n    })\n\n  return hasCodec\n}\n","import updateCallStateOperation from './updateCallState'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.updateCallState', () => updateCallStateOperation(bottle.container))\n}\n","// Call plugin\nimport { callActions } from '../../../interface/actions'\nimport { getCallById } from '../../../interface/selectors'\nimport { CALL_STATES } from '../../../constants'\nimport * as eventTypes from '../../../interface/eventTypes'\nimport { OPERATIONS, OP_TRANSITIONS } from '../../../interface/constants'\n\n/**\n * Bottle wrapper for \"update call state\" operation.\n * @return {Function}\n */\nexport default function updateCallStateOperation (container) {\n  const { context, CallRequests, logManager, emitEvent } = container\n\n  // eslint-disable-next-line no-warning-comments\n  /**\n   * Sends a GET session request and updates call if required.\n   *\n   * This operation performs the signaling operation to get the status of a call session on the server.\n   *    There are no local webRTC operations involved.\n   *\n   * Assumptions:\n   *    1. The server uses Kandy Link 4.7.1+\n   * Responsibilities:\n   *    2. Update the call state if the call is out of sync (call's status does not match response from server)\n   * @method updateCallState\n   * @param {Object}   activeCall        The call being acted on.\n   */\n  async function updateCallState (activeCall) {\n    const { Callstack } = container\n    const log = logManager.getLogger('CALL', activeCall.id)\n    const callStateAfterConnect = activeCall.state\n\n    // If there is an ongoing operation when the WS connects, the response to that operation will re-sync the state\n    // Otherwise, we need to get the status of the session from the server\n    if (!activeCall.localOp && !activeCall.remoteOp) {\n      try {\n        const sessionStatusResponse = await CallRequests.getSession({\n          wrtcsSessionId: activeCall.wrtcsSessionId\n        })\n\n        // Get state of the call again before evaluating the response as an operation request and response\n        // could have been processed in between the request to get the session and the response received\n        const currentCall = getCallById(context.getState(), activeCall.id)\n\n        // Do nothing if an operation was triggered in between the GET sessions request and response, and is ongoing\n        if (!currentCall.localOp && !currentCall.remoteOp) {\n          /*\n           * If the current call state is ringing OR if the state of the call was connected/on hold before we\n           * did the GET, look at the response of the GET request.\n           * If call is ringing and GET session returns ringing, we don't need to do anything\n           * Also, if we were previously connected, but GET returns ringing, this could be due to an operation that was resolved\n           * between the GET request and response. In any case, no need to look at GET response for this scenario.\n           */\n          if (currentCall.state === CALL_STATES.RINGING || callStateAfterConnect !== CALL_STATES.RINGING) {\n            if (\n              sessionStatusResponse.state === 'ANSWERED' &&\n              currentCall.state !== CALL_STATES.CONNECTED &&\n              currentCall.state !== CALL_STATES.ON_HOLD\n            ) {\n              // Report call as cancelled\n              await Callstack.operations.closeCall(activeCall.webrtcSessionId)\n              log.info(`Call re-sync found that call is cancelled. Changing to ${CALL_STATES.CANCELLED}.`)\n              context.dispatch(callActions.callCancelled(activeCall.id))\n\n              emitEvent(eventTypes.CALL_STATE_CHANGE, {\n                callId: activeCall.id,\n                previous: {\n                  state: activeCall.state,\n                  localHold: activeCall.localHold,\n                  remoteHold: activeCall.remoteHold\n                }\n              })\n            }\n          }\n        }\n      } catch (error) {\n        // Get state of the call again before evaluating the response as an operation request and response\n        // could have been processed in between the request to get the session and the response received\n        const currentCall = getCallById(context.getState(), activeCall.id)\n\n        // Do nothing if an operation was triggered in between the GET sessions request and response, and is ongoing\n        if (!currentCall.localOp && !currentCall.remoteOp) {\n          /*\n           * If the current call state is ringing OR if the state of the call was connected/on hold before we\n           * did the GET, look at the response of the GET request.\n           * If call is ringing and GET session returns ringing, we don't need to do anything\n           * Also, if we were previously connected, but GET returns ringing, this could be due to an operation that was resolved\n           * between the GET request and response. In any case, no need to look at GET response for this scenario.\n           */\n          if (currentCall.state === CALL_STATES.RINGING || callStateAfterConnect !== CALL_STATES.RINGING) {\n            // Call not found\n            if (error.code === 47) {\n              // End the call as the session does not exist on the server anymore (statusCode 47 response)\n              await Callstack.operations.closeCall(activeCall.webrtcSessionId)\n\n              log.info(`Call re-sync found that call is ended. Changing to ${CALL_STATES.ENDED}.`)\n              context.dispatch(\n                callActions.endCallFinish(activeCall.id, {\n                  isLocal: true,\n                  error\n                })\n              )\n\n              // 1- 'call operation' event\n              emitEvent(eventTypes.CALL_OPERATION, {\n                callId: activeCall.id,\n                isLocal: true,\n                operation: OPERATIONS.END,\n                transition: OP_TRANSITIONS.FINISH,\n                previous: activeCall.localOp,\n                error\n              })\n\n              // Tell the application that no tracks are available any longer.\n              emitEvent(eventTypes.CALL_TRACKS_REMOVED, {\n                callId: activeCall.id,\n                trackIds: [...activeCall.localTracks, ...activeCall.remoteTracks]\n              })\n\n              // 2- 'call state change' event, which updates the state.\n              emitEvent(eventTypes.CALL_STATE_CHANGE, {\n                callId: activeCall.id,\n                previous: {\n                  state: activeCall.state,\n                  localHold: activeCall.localHold,\n                  remoteHold: activeCall.remoteHold\n                },\n                error\n              })\n\n              // GET response errors other than session not found\n            } else {\n              log.debug(`Call re-sync failure (${error.code}).`, error)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return updateCallState\n}\n","import resyncCallStateOperation, { validate } from './resyncCallState'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.resyncCallState', () => {\n    const operation = resyncCallStateOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.RESYNC\n    operation.validate = validate\n    return operation\n  })\n}\n","// Call plugin\nimport { callActions } from '../../../interface/actions'\nimport { getCallById } from '../../../interface/selectors'\nimport { CALL_STATES } from '../../../constants'\nimport * as eventTypes from '../../../interface/eventTypes'\n\n// Other plugins\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId) {\n  const call = getCallById(state, callId)\n  /*\n   * `resyncCallState` operation validation:\n   *    1. Call must exist.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call not found; invalid call ID.'\n    })\n  }\n}\n\n/**\n * Bottle wrapper for resyncCallState call operation.\n * @return {Function}\n */\nexport default function resyncCallStateOperation (container) {\n  const { context, CallRequests, logManager, emitEvent } = container\n  /**\n   * Sends a GET session request and updates the call if necessary.\n   * The response to the GET session request contains two properties that can be used for determining the call state:\n   *  1. `statusCode` - Code which can be used to provide more info for error responses\n   *  2. `state`\n   *    a. \"RINGING\" - Call exists, and can be either accepted or rejected.\n   *    b. \"ANSWERED\" - Call is active, and can be either Connected or Held.\n   *\n   * This operation performs the signaling operation to get the status of a call session on the server, and any local\n   *    WebRTC operations necessary for closing the call if necessary.\n   *\n   * Responsibilities:\n   *    1. Update the call state if the call is out of sync (call's status does not match the response from the server)\n   * @method resyncCallState\n   * @param {string}   callId        The call being acted on.\n   */\n  async function resyncCallState (callId) {\n    const { Callstack } = container\n    const log = logManager.getLogger('CALL', callId)\n\n    const currentCall = getCallById(context.getState(), callId)\n    try {\n      const sessionStatusResponse = await CallRequests.getSession({\n        wrtcsSessionId: currentCall.wrtcsSessionId\n      })\n\n      if (\n        sessionStatusResponse.state === 'ANSWERED' &&\n        currentCall.state !== CALL_STATES.CONNECTED &&\n        currentCall.state !== CALL_STATES.ON_HOLD\n      ) {\n        log.info('Call re-sync found that call is cancelled. Cancelling call.')\n        // If the call is answered, but not by us, report call as cancelled\n        await Callstack.operations.closeCall(currentCall.webrtcSessionId)\n\n        const latestCall = getCallById(context.getState(), callId)\n        if (latestCall.state !== CALL_STATES.ENDED && latestCall.state !== CALL_STATES.CANCELLED) {\n          context.dispatch(callActions.callCancelled(currentCall.id))\n\n          // Notifiy the application that the call has been closed\n          emitEvent(eventTypes.CALL_STATE_CHANGE, {\n            callId,\n            previous: {\n              state: latestCall.state,\n              localHold: latestCall.localHold,\n              remoteHold: latestCall.remoteHold\n            }\n          })\n        }\n      } else {\n        log.info('Call re-sync found that there are no changes necessary for the call')\n        context.dispatch(callActions.resyncFinish(currentCall.id))\n      }\n    } catch (error) {\n      // Call not found\n      if (error.code === 47) {\n        log.info('Call re-sync found that the call has ended. Ending Call.')\n        // End the call as the session does not exist on the server anymore (statusCode 47 response)\n        await Callstack.operations.closeCall(currentCall.webrtcSessionId)\n\n        const latestCall = getCallById(context.getState(), callId)\n        if (latestCall.state !== CALL_STATES.ENDED && latestCall.state !== CALL_STATES.CANCELLED) {\n          context.dispatch(\n            callActions.endCallFinish(currentCall.id, {\n              isLocal: true\n            })\n          )\n\n          // Tell the application that no tracks are available any longer.\n          emitEvent(eventTypes.CALL_TRACKS_REMOVED, {\n            callId,\n            trackIds: [...currentCall.localTracks, ...currentCall.remoteTracks]\n          })\n\n          // 2- 'call state change' event, which updates the state.\n          emitEvent(eventTypes.CALL_STATE_CHANGE, {\n            callId,\n            previous: {\n              state: currentCall.state,\n              localHold: currentCall.localHold,\n              remoteHold: currentCall.remoteHold\n            },\n            error\n          })\n        }\n      } else {\n        // GET response errors other than session not found\n        log.info(`Call re-sync failure (${error.code}).`, error)\n      }\n    }\n  }\n\n  return resyncCallState\n}\n","import iceCollectionCheckOperation from './iceCollectionCheck'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.callIceCollectionCheck', () => iceCollectionCheckOperation(bottle.container))\n}\n","// Call plugin.\nimport { getOptions, getCallByWebrtcSessionId } from '../../../interface/selectors'\nimport { callActions } from '../../../interface/actions'\nimport { ICE_COLLECTION_RESULT_TYPES } from '../../../constants'\nimport { ICE_COLLECTION_OPERATIONS, REPORTER_EVENTS } from '../../reporter/constants'\n\n/**\n * Bottle wrapper for ...\"callIceCollectionCheck\".\n * @return {Function}\n */\nexport default function callIceCollectionCheckOperation (container) {\n  const { CallReporter, context, logManager, WebRTC } = container\n\n  /**\n   * Add the necessary information to the ice collection info object and call the\n   *  ice collection check function. Then pass the results of the check back to the\n   *  WebRTC stack for further processing.\n   *\n   * @method callIceCollectionCheck\n   * @param {Object} webrtcSessionId    The id of the call being acted on.\n   * @param {Object} iceCollectionInfo  An object containing necessary info for the call.\n   */\n  async function callIceCollectionCheck (webrtcSessionId, iceCollectionInfo) {\n    // Get info from state for the operation.\n    const currentCall = getCallByWebrtcSessionId(context.getState(), webrtcSessionId)\n    const config = getOptions(context.getState())\n\n    const log = logManager.getLogger('CALL', currentCall ? webrtcSessionId : '')\n\n    // Metrics tracking for relay candidates\n    const callReport = CallReporter.getReport(currentCall.id)\n    const latestMainEvent = callReport.findLastOngoingEvent(Object.values(ICE_COLLECTION_OPERATIONS))\n    let iceCollectionEvent\n    if (latestMainEvent) {\n      const setLocalDescEvent = latestMainEvent.timeline.find(\n        event => event.type === REPORTER_EVENTS.SET_LOCAL_DESCRIPTION\n      )\n      if (setLocalDescEvent) {\n        const relayCandidates = iceCollectionInfo.iceCandidates.filter(\n          candidate => candidate.component === 'rtp' && candidate.type === 'relay'\n        )\n\n        // Get or create the ice collection reporter event if it doesn't already exist\n        iceCollectionEvent = setLocalDescEvent.timeline.find(event => event.type === REPORTER_EVENTS.ICE_COLLECTION)\n        if (!iceCollectionEvent) {\n          iceCollectionEvent = setLocalDescEvent.addEvent(REPORTER_EVENTS.ICE_COLLECTION)\n        }\n        if (relayCandidates.length > 0) {\n          const eventData = iceCollectionEvent.getData('relayCandidates') || []\n\n          relayCandidates.forEach(candidate => {\n            if (!eventData.includes(candidate)) {\n              const relayCollectedEvent = iceCollectionEvent.addEvent(REPORTER_EVENTS.RELAY_CANDIDATE_COLLECTED)\n              relayCollectedEvent.addData('address', candidate.address)\n              relayCollectedEvent.addData('port', candidate.port)\n              relayCollectedEvent.endEvent()\n              // Update the relayCandidates array\n              iceCollectionEvent.addData('relayCandidates', relayCandidates)\n            }\n          })\n        }\n      }\n    }\n\n    log.debug('Calling ICE collection check function for reason:', iceCollectionInfo.reason)\n    let result\n    try {\n      result = config.iceCollectionCheckFunction(\n        {\n          callId: currentCall.id,\n          callOperation: currentCall.localOp && currentCall.localOp.operation,\n          ...iceCollectionInfo\n        },\n        {\n          // TODO: If a call changes these configs in the middle of ICE collection,\n          //    it will change the values given to this function. Very unlikely scenario,\n          //    but could cause issues. Could also change `iceCollectionCheckFunction` itself.\n          iceCollectionIdealTimeout: config.iceCollectionIdealTimeout,\n          iceCollectionMaxTimeout: config.iceCollectionMaxTimeout\n        }\n      )\n    } catch (e) {\n      log.info('Error thrown by the iceCollectionCheckFunction. Ending call.', e)\n      result = {\n        type: 'Error',\n        error: e\n      }\n\n      if (iceCollectionEvent) {\n        iceCollectionEvent.setError(result)\n      }\n    }\n\n    if (\n      iceCollectionEvent &&\n      (result.type === ICE_COLLECTION_RESULT_TYPES.START_CALL || result.type === ICE_COLLECTION_RESULT_TYPES.ERROR)\n    ) {\n      iceCollectionEvent.endEvent()\n    }\n\n    // Get the webrtc Session for the call.\n    const session = await WebRTC.sessionManager.get(webrtcSessionId)\n    // Get the remote description for the Session.\n    log.debug('Handling ICE collection check result:', result.type)\n    await session.iceCollectionCheckResult(result)\n\n    // If the result is neither 'StartCall' or 'Wait', then it is either an error or an undefined result type.\n    //   In either case, the session will cleanup the WebRTC portions of the call so just cleanup the state here.\n    if (result.type !== ICE_COLLECTION_RESULT_TYPES.START_CALL && result.type !== ICE_COLLECTION_RESULT_TYPES.WAIT) {\n      context.dispatch(\n        callActions.endCallFinish(currentCall.id, {\n          isLocal: true,\n          error: result.error || true\n        })\n      )\n    }\n  }\n\n  return callIceCollectionCheck\n}\n","import getStatsOperation, { validate } from './getStats'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.getStats', () => {\n    const operation = getStatsOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.GET_STATS\n    operation.validate = validate\n    return operation\n  })\n}\n","// Call plugin.\nimport { getCallById } from '../../../interface/selectors'\nimport { CALL_STATES } from '../../../constants'\n\n// Other plugins.\nimport { getPlatform } from '../../../../auth/interface/selectors'\nimport BasicError, { callCodes } from '../../../../errors'\n\n// Libraries.\nimport { getBrowserDetails } from 'kandy-webrtc'\n\n// Utils.\nimport { getVersion } from '../../../../common/version'\nimport { platforms } from '../../../../constants'\nimport sdkId from '../../../../common/sdkId'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} call The call being operated on.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId, trackId) {\n  const call = getCallById(state, callId)\n  /*\n   * `getStats` operation validation:\n   *    1. Call must exist.\n   *    2. Call must not be Ended.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (call.state === CALL_STATES.ENDED) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: 'Failed to get call stats; call must not be ended.'\n    })\n  }\n}\n\n/**\n * Bottle wrapper for getStats call operation.\n * @return {Function}\n */\nexport default function getStatsOperation (container) {\n  const { context, logManager, WebRTC } = container\n\n  /**\n   * Gets low-level statistics about a call (or track).\n   *\n   * This operation defines how/what statistics are retrieved about a call. It performs\n   *    the webRTC operations on the local session. No signaling is involved.\n   * The retrieved call statistics are a RTCStatsReport as provided by the WebRTC\n   *    specification. Stats can be retrieved for either an entire call or\n   *    individual tracks.\n   * Assumptions:\n   *    1. The call is on-going.\n   * Responsibilities:\n   *    1. Ensure the call exists.\n   *    2. Use the webRTC layer to retrieve the stats.\n   *    3. Dispatch an action with the results (which triggers an event).\n   * @method getStats\n   * @param {string} callId The ID of the Call to retrieve the report.\n   * @param {string} trackId Id of a Track being used by the Call. If not\n   *    provided, RTCStatsReport is generated for the Call itself.\n   * @throws {BasicError} Throws an error if the call is not found.\n   * @throws {BasicError} Throws an error if the WebRTC stats can't be retrieved.\n   * @return {Promise} A promise that will resolve with the stats report or an error if it fails.\n   */\n  async function getStats (callId, trackId) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Getting call statistics.')\n\n    // Get the call.\n    const targetCall = getCallById(context.getState(), callId)\n    const result = new Map()\n    // Get the local Session for the call.\n    const session = await WebRTC.sessionManager.get(targetCall.webrtcSessionId)\n\n    // Retrieve the RTCStatsReport from the session.\n    const rtcStatsReport = await session.getStats(trackId)\n\n    log.info('Finished getting call statistics.')\n\n    // Extract values for our own custom Statistics\n    const type = 'kandy_sdk_info'\n    const id = 'kandy-sdk-info_' + sdkId\n    const version = getVersion()\n    const platform = getPlatform(context.getState())\n\n    let sdk\n    if (platform === platforms.CPAAS) {\n      sdk = '@kandy-io/cpaas-sdk'\n    } else if (platform === platforms.UC) {\n      sdk = '@kandy-io/uc-sdk'\n    } else if (platform === platforms.LINK) {\n      // callMe service also uses Link platform for call requests as well.\n      if (targetCall.isAnonymous) {\n        sdk = '@kandy-io/callme-sdk'\n      } else {\n        sdk = '@kandy-io/link-sdk'\n      }\n    }\n\n    // Note that getting browser details is only intended for local browser.\n    // For proxy mode this would return undefined. (see getBrowserDetails() on proxyStack)\n    const details = getBrowserDetails()\n\n    // Define our custom Stats object\n    const sdkMetaData = {\n      id,\n      type,\n      sdk,\n      version,\n      callId: callId\n    }\n\n    if (details) {\n      sdkMetaData.platform = details.browser + '/' + details.version\n    }\n\n    // Set the timestamp value of our custom report to be same value as\n    // the timestamp associated with any stat coming from original webRTC report.\n    const iter = rtcStatsReport.keys()\n    const rtcStatValue = rtcStatsReport.get(iter.next().value)\n    if (rtcStatValue) {\n      sdkMetaData.timestamp = rtcStatValue.timestamp\n    }\n    // Add our custom stats to the ones reported by Web RTC.\n    // Since rtcStatsReport seems to be read-only Map, create a new Map\n    // which includes both our stat & the ones from webrtc.\n    result.set(id, sdkMetaData)\n    rtcStatsReport.forEach(stat => {\n      result.set(stat.id, stat)\n    })\n\n    return result\n  }\n\n  return getStats\n}\n","import { v4 as uuidV4 } from 'uuid'\n\n// Generate a unique SDK GUID for the running SDK instance.\nconst sdkId = uuidV4()\n\nexport default sdkId\n","import normalizeIceFailureOp from './normalizeIceFailure'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.normalizeIceFailure', () => normalizeIceFailureOp(bottle.container))\n}\n","// Call plugin\nimport { getCallByWebrtcSessionId } from '../../../interface/selectors'\n\n// Other plugins\nimport { CALL_MEDIA_CONNECTION_STATES, CALL_STATES } from '../../../constants'\nimport { SESSION_ICE_CONNECTION_STATE_CHANGE } from '../../../../webrtc/interface/actionTypes'\nimport { END_CALL_FINISH } from '../../../interface/actionTypes'\nimport * as sessionActions from '../../../../webrtc/interface/actions/sessions'\nimport { MEDIA_CONNECTION_CHANGE } from '../../../interface/eventTypes'\n\n/**\n * Bottle wrapper for \"normalize ICE failure\" operation.\n * @return {Function}\n */\nexport default function createNormalizeIceFailureOperation (container) {\n  const { context, emitEvent, logManager, Notifications } = container\n  /**\n   * This operation is meant to normalize ICE connection state changes for Unified-Plan PeerConnections only.\n   *\n   * Expectation: When ICE connection has an issue, it moves into `disconnected`\n   *    state. If it can't automatically fix the issue, it should move into `failed`\n   *    state shortly afterwards.\n   * Reality: Unified-Plan behaves a little differently, where it never transitions\n   *    into `failed` state. Other plans (such as Plan-B) use heuristics to know when to give up and\n   *    transition into `failed` state, but Unified-Plan does not.\n   * Ref: https://docs.google.com/document/d/1-ZfikoUtoJa9k-GZG1daN0BU3IjIanQ_JSscHxQesvU/edit#heading=h.xy9xt6bk24e\n   *\n   * So this function is meant to \"fill-in\" that missing behaviour for Unified-Plan:\n   *    If a Unified-Plan call enters `disconnected` state, we want to wait a short\n   *    amount of time (due to lacking any real heuristic). If the call is still\n   *    disconnect after that time, we assume it should be in `failed` state and\n   *    manually update the call state.\n   *\n   * The purpose for doing this is to enter other behaviours that rely on the `failed`\n   *    state (eg. ICE restart, telling the application there is no media) still occur.\n   * @method normalizeIceFailure\n   * @param  {Action} action A \"ICE connection state change\" action specifically\n   *    for the disconnected state.\n   */\n  async function normalizeIceFailure (webrtcSessionId, mediaConnectionState) {\n    /**\n     * Determines if a call is in limbo disconnected media state.\n     * @param  {CallObject}  targetCall\n     * @return {boolean} Whether the call is on-going but in disconnected ICE state.\n     */\n    function isDisconnected (targetCall) {\n      // 1) Call exists, 2) Call is on-going, 3) Call's media is disconnected.\n      return (\n        targetCall &&\n        ![CALL_STATES.ENDED, CALL_STATES.CANCELLED].includes(targetCall.state) &&\n        mediaConnectionState === CALL_MEDIA_CONNECTION_STATES.DISCONNECTED\n      )\n    }\n\n    const call = getCallByWebrtcSessionId(context.getState(), webrtcSessionId)\n\n    if (!isDisconnected(call, mediaConnectionState)) {\n      // We only want to act if the call is currently disconnected.\n      return\n    }\n\n    try {\n      /*\n       * Wait a short time to let the Call try fixing things itself.\n       * The number \"10000\" was determined by comparing how long it takes for the\n       *    disconnected-->failed transition to happen when on Plan-B. It consistently\n       *    took [almost] exactly 10 seconds for the change to happen, no matter\n       *    if it was an audio-only or audio+video call.\n       * Note: This test was done on Chrome, since it was the only browser to support\n       *       Plan-B.\n       * Note: 10s is also Chrome's timeout for collecting ICE candidates on an\n       *    interface. I assume this isn't a coincidence.\n       */\n      await Notifications.takeAction(action => {\n        return (\n          (action.type === SESSION_ICE_CONNECTION_STATE_CHANGE &&\n            action.payload.id === webrtcSessionId &&\n            action.payload.iceConnectionState !== CALL_MEDIA_CONNECTION_STATES.DISCONNECTED) ||\n          (action.type === END_CALL_FINISH && action.payload.id === call.id)\n        )\n      }, 10000)\n    } catch (error) {\n      // Timed out waiting for ice connection state to change\n      // Get the call state again, to make sure we have the latest state.\n      const currentCall = getCallByWebrtcSessionId(context.getState(), webrtcSessionId)\n      // If the call is still disconnected, assume that it should have moved into\n      //    failed state. Manually trigger the action to transition into failed state.\n      const log = logManager.getLogger('CALL', currentCall.id)\n      log.debug(\n        'Call has remained in disconnected media connection state too long. Manually transitioning to failed state.'\n      )\n\n      context.dispatch(\n        sessionActions.sessionIceConnectionStateChange(currentCall.webrtcSessionId, {\n          iceConnectionState: CALL_MEDIA_CONNECTION_STATES.FAILED\n        })\n      )\n      emitEvent(MEDIA_CONNECTION_CHANGE, {\n        callId: currentCall.id,\n        previous: {\n          state: currentCall.mediaConnectionState\n        }\n      })\n    }\n  }\n\n  return normalizeIceFailure\n}\n","import sendCallAuditOperation from './sendCallAudit'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.sendCallAudit', () => {\n    // `sendCallAudit` operation returns an object of functions instead of the\n    //    operation itself.\n    return sendCallAuditOperation(bottle.container).sendCallAudit\n  })\n}\n","import { getCallById, getOptions } from '../../../interface/selectors'\nimport { CALL_STATES } from '../../../constants'\nimport { callActions } from '../../../interface/actions'\nimport * as eventTypes from '../../../interface/eventTypes'\nimport { OPERATIONS, OP_TRANSITIONS } from '../../../interface/constants'\n\n/**\n * Bottle wrapper for call audit operation.\n * @return {Function}\n */\nexport default function sendCallAuditOperation (container) {\n  const { context, CallstackWebrtc, CallRequests, logManager, emitEvent } = container\n\n  // Global within the scope of this operation. This is the handle returned by the\n  // call to `setTimeout` which involves a 4000 ms waiting time.\n  let timeoutHandle\n\n  let successDelay\n  let errorDelay\n\n  function getAuditDuration (lastAudit) {\n    return Date.now() - lastAudit\n  }\n\n  /**\n   * This is the first called helper function in a continuous audit loop.\n   * It just instantiates the two tasks that are about to be run: a timeout task and a call audit task.\n   * These two tasks will be competing against each other to see which one executes first.\n   *\n   * @param {Object} currentCall The Call's state.\n   * @returns {Object} An object containing the two tasks.\n   */\n  function prepareRaceTriggers (currentCall, wrtcsSessionId) {\n    const triggerTimeout = new Promise((resolve, reject) => {\n      const result = { timeout: 4000 } // `value` returned when timeout expires.\n      timeoutHandle = setTimeout(resolve, 4000, result)\n    })\n\n    const triggerAudit = new Promise((resolve, reject) => {\n      // Clear the timeout handle since it is still on-going at this point.\n      clearTimeout(timeoutHandle)\n\n      // For both CpaaS & Link the function request has the same name.\n      // Note that the caller, wrtcsSessionId is not yet available as part of the currentCall,\n      // as it was not yet commited in Redux state.\n      // This is because the `callAudit` middleware is still in progress at this time.\n      // TODO: Replace the logic in determining value for `wrtcsSessionId` with a better way..\n      const wrtcsSessionIdToUse = currentCall.isCaller ? wrtcsSessionId : currentCall.wrtcsSessionId\n\n      CallRequests.auditCall({\n        wrtcsSessionId: wrtcsSessionIdToUse,\n        isAnonymous: currentCall.isAnonymous,\n        account: currentCall.account\n      })\n        .then(result => {\n          resolve({ audit: { status: result.status } }) // `value` returned when we get a response from request (for either success or failure)\n        })\n        .catch(error => {\n          // Assume for most of errors we can retry..\n          let statusVal = 'Retry'\n          // 404 is the 'Not found' error that CpaaS may return, whereas\n          // 42  is the 'Not found' error that LINK may return\n          if (error && (error.code === 404 || error.code === 42)) {\n            // We got a 'Not found' error. In this case we can safely assume status is Closed. No need to keep retrying...\n            statusVal = 'Closed'\n          }\n          resolve({ audit: { status: statusVal, error } })\n        })\n    })\n\n    return {\n      triggerTimeout,\n      triggerAudit\n    }\n  }\n\n  /**\n   * This is the second helper function invoked as part of the audit loop.\n   * @param {Object} value The race result. If audit task completed first, then it will have an audit property, otherwise it will have a timeout property.\n   * @param {Object} currentCall The current call we're auditing.\n   * @param {number} lastAudit The most recently generated timestamp as returned by: Date.now().\n   * @param {Object} log The logger necessary to generate some logs along the way.\n   * @returns {number} Milliseconds to wait before next loop. If negative, should not loop again.\n   */\n  async function handleAuditResult (value, currentCall, lastAudit, log) {\n    const config = getOptions(context.getState())\n    successDelay = Math.max(10000, config.callAuditTimer)\n    errorDelay = Math.min(5000, config.callAuditTimer * 0.45)\n\n    /*\n     * Audit response error scenarios include the response having an `error: true` and `status` property.\n     *  The status will be either 'Retry' or 'Closed' (depending on statusCode we get from response),\n     *  and nothing else. See `auditCall` request implementation in either CpaaS or Link.\n     * Success scenarios will have `error: false` along with the call's `status`.\n     */\n    if (value.audit.status === 'Retry') {\n      // We have an error but status is not Closed, so we continue sending audit request in hoping audit will recover\n      const basicError = value.audit.error\n      const auditDuration = getAuditDuration(lastAudit)\n      log.debug(\n        `Call audit failed, caused by ${basicError.message} (${\n          basicError.code\n        }); will retry failed audit for call in: ${errorDelay - auditDuration} ms`\n      )\n      return errorDelay - auditDuration\n    } else if (value.audit.status === 'Closed') {\n      // If this audit returned 'Closed', then the audit loop should stop right away.\n      log.info(`Ending audit loop and Call due to Closed status. Changing to ${CALL_STATES.ENDED}.`)\n      // Hangup call automatically (from webRTC perspective)\n      await CallstackWebrtc.closeCall(currentCall.webrtcSessionId)\n\n      const latestCallState = getCallById(context.getState(), currentCall.id)\n      if (latestCallState.state !== CALL_STATES.ENDED && latestCallState.state !== CALL_STATES.CANCELLED) {\n        // Cleanup Redux state by sending END_CALL_FINISH action\n        context.dispatch(\n          callActions.endCallFinish(currentCall.id, {\n            isLocal: true,\n            transition: { statusCode: 9909, reasonText: 'Call has ended due to call audit failure.' }\n          })\n        )\n\n        // Dispatch the same events that are normally triggered by action: END_CALL_FINISH\n        // (see `call/callstack/operations/establish/end` operation)\n\n        // 1- 'call operation' event\n        emitEvent(eventTypes.CALL_OPERATION, {\n          callId: currentCall.id,\n          isLocal: true,\n          operation: OPERATIONS.END,\n          transition: OP_TRANSITIONS.FINISH,\n          previous: currentCall.localOp,\n          error: undefined\n        })\n\n        // Tell the application that no tracks are available any longer.\n        emitEvent(eventTypes.CALL_TRACKS_REMOVED, {\n          callId: currentCall.id,\n          trackIds: [...currentCall.localTracks, ...currentCall.remoteTracks]\n        })\n\n        // 2- 'call state change' event, which updates the state.\n        emitEvent(eventTypes.CALL_STATE_CHANGE, {\n          callId: currentCall.id,\n          previous: {\n            state: currentCall.state,\n            localHold: currentCall.localHold,\n            remoteHold: currentCall.remoteHold\n          },\n          transition: {\n            statusCode: 9909,\n            reasonText: 'Call has ended due to call audit failure.'\n          },\n          error: value.audit.error\n        })\n      }\n      // Return a negative number to prevent the task from looping again.\n      return -1\n    } else {\n      const auditDuration = getAuditDuration(lastAudit)\n      log.debug(`Call audit status is ${value.audit.status}. Will retry in ${successDelay - auditDuration} ms`)\n      return successDelay - auditDuration\n    }\n  }\n\n  /**\n   * This is the repeated task executed during each call audit's loop iteration.\n   * @param {string} callId The unique call identifier for which we're auditing.\n   * @param {string} wrtcsSessionId The ID that the server uses to identify the call.\n   */\n  async function repeatingTask (callId, wrtcsSessionId) {\n    const currentCall = getCallById(context.getState(), callId)\n    const log = logManager.getLogger('CALL', currentCall ? callId : '')\n\n    // Stop repeating if the Call has already ended.\n    if (currentCall.state === CALL_STATES.ENDED) {\n      log.info('Call has ended; stopping audit loop.')\n      return\n    }\n\n    const raceTriggers = prepareRaceTriggers(currentCall, wrtcsSessionId)\n\n    // NOTE: lastAudit value is calculated at the beginning of each loop\n    const lastAudit = Date.now()\n\n    return Promise.race([raceTriggers.triggerTimeout, raceTriggers.triggerAudit])\n      .then(value => {\n        if (value.timeout) {\n          // No need to cancel the audit task since the effect that loses the race is automatically cancelled\n          log.debug('Audit request timed out, retrying in 1 second.')\n          return 1000\n        } else {\n          if (value.audit) {\n            return handleAuditResult(value, currentCall, lastAudit, log)\n          } else {\n            log.debug('Audit loop encountered an unknown scenario; ending.')\n            // Return a negative number to prevent the task from looping again.\n            return -1\n          }\n        }\n      })\n      .then(waitTime => {\n        // If the resolve has a positive wait time, loop again after that.\n        if (waitTime >= 0) {\n          setTimeout(function () {\n            repeatingTask(callId, wrtcsSessionId)\n          }, waitTime)\n        }\n      })\n  }\n\n  /**\n   * Performs a call audit and manages the audit loop.\n   *\n   * This function is responsible for sending a call audit repeatedly on a consistent interval.\n   *  Consistency is ensured by calculating the time it takes to perform the actual\n   *  audit request, and subtracting that from the configured call audit timer.\n   *\n   * The function determines which interval to use for the delay between requests by analyzing\n   *  the response to the audit request:\n   *    - for a successful response we use __Max(10s, configured `callAuditTimer`) - request duration__\n   *    - for an error response we use __Min(5s, 45% of `callAuditTimer`) - request duration__\n   *    - for a \"Closed\" status response, we stop the audit loop and tear down the call\n   *\n   * Responsibilities:\n   *    1. Determine if an audit should be sent.\n   *        - Check call's state.\n   *    2. Perform signaling (if needed).\n   *    3. Return the status of the audit\n   * @method sendCallAudit\n   * @param {string} callId The unique identifier of a call instance.\n   * @param {Object} params\n   * @param {string} params.wrtcsSessionId The ID that the server uses to identify the call.\n   * @return {undefined}\n   */\n  async function sendCallAudit (callId, params) {\n    const wrtcsSessionId = params.wrtcsSessionId\n    const currentCall = getCallById(context.getState(), callId)\n\n    const log = logManager.getLogger('CALL', currentCall ? callId : '')\n    // Basic validation\n    if (!currentCall) {\n      log.debug(`Call ${callId} not found; no audit loop needed.`)\n      return\n    }\n\n    log.info('Starting audit loop for new call.')\n    repeatingTask(callId, wrtcsSessionId)\n  }\n\n  return {\n    sendCallAudit,\n    prepareRaceTriggers,\n    handleAuditResult,\n    repeatingTask,\n    errorDelay,\n    successDelay\n  }\n}\n","import sendCustomParametersOperation, { validate } from './sendCustomParameters'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.sendCustomParameters', () => {\n    const operation = sendCustomParametersOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.SEND_CUSTOM_PARAMETERS\n    operation.validate = validate\n    return operation\n  })\n}\n","// Call plugin\nimport { getCallById } from '../../../interface/selectors'\nimport { CALL_STATES } from '../../../constants'\n\n// Other plugins\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} state The SDK state.\n * @param {string} callId The ID used by the SDK to identify the call.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId) {\n  const call = getCallById(state, callId)\n  /*\n   * `sendCustomParameters` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Connected` or `On Hold` state.\n   */\n  if (!call) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: `Invalid Call ID. No call found with Call ID: ${callId}`\n    })\n  } else if (call.state !== CALL_STATES.CONNECTED && call.state !== CALL_STATES.ON_HOLD) {\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Call in invalid state for sending custom parameters. Call state: ${call.state}`\n    })\n  }\n}\n\n/**\n * Bottle wrapper for sendCustomParameters call operation.\n * @return {Function}\n */\nexport default function sendCustomParametersOperation (container) {\n  const { context, CallRequests, logManager } = container\n\n  /**\n   * Sends custom parameters for a call.\n   * @param {string} callId The ID of the call being acted on.\n   * @return {undefined}\n   * @throws {BasicError} Throws an error if the REST request fails.\n   */\n  async function sendCustomParameters (callId) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Sending custom parameters for call.')\n\n    // Get the call.\n    const targetCall = getCallById(context.getState(), callId)\n    const { wrtcsSessionId, isAnonymous, account, customParameters } = targetCall\n\n    const callInfo = {\n      wrtcsSessionId,\n      isAnonymous,\n      account,\n      customParameters\n    }\n\n    try {\n      await CallRequests.updateCustomParameters(callInfo)\n\n      log.info('Finished sending custom parameters.')\n    } catch (error) {\n      log.info('Failed to send custom parameters.')\n      throw error\n    }\n  }\n\n  return sendCustomParameters\n}\n","import sendRingingFeedbackOperation, { validate } from './sendRingingFeedback'\n\nimport { OPERATIONS } from '../../../interface/constants'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('Callstack.operations.sendRingingFeedback', () => {\n    const operation = sendRingingFeedbackOperation(bottle.container)\n    // Add meta-data to the operation for the CallManager.\n    operation.isNegotiation = false\n    operation.type = OPERATIONS.SEND_RINGING_FEEDBACK\n    operation.validate = validate\n    return operation\n  })\n}\n","// Call plugin\nimport { getCallById, getOptions } from '../../../interface/selectors'\nimport { CALL_STATES, CALL_DIRECTION } from '../../../constants'\n\n// Other plugins\nimport BasicError, { callCodes } from '../../../../errors'\n\n/*\n * Pre-operation validation method.\n *\n * @param {Object} state The SDK state.\n * @param {string} callId The ID used by the SDK to identify the call.\n * @return {BasicError|undefined} If operation cannot be performed, returns an error.\n */\nexport function validate (state, callId) {\n  const call = getCallById(state, callId)\n  const options = getOptions(state)\n  /*\n   * `sendRingingFeedback` operation validation:\n   *    1. Call must exist.\n   *    2. Call must be in `Initiated` state.\n   *    3. Call must be `Incoming` direction.\n   */\n  if (!call) {\n    return new BasicError({\n      message: `Failed to send ringing feedback. Call ${callId} not found.`,\n      code: callCodes.INVALID_PARAM\n    })\n  } else if (options.ringingFeedbackMode !== 'manual') {\n    return new BasicError({\n      message: \"Failed to send ringing feedback. Configuration must be set to 'manual' mode.\",\n      code: callCodes.NOT_SUPPORTED\n    })\n  } else if (call.state !== CALL_STATES.INITIATED) {\n    return new BasicError({\n      message: `Failed to send ringing feedback. Call must be in ${CALL_STATES.INITIATED} state.`,\n      code: callCodes.INVALID_STATE\n    })\n  } else if (call.direction !== CALL_DIRECTION.INCOMING) {\n    return new BasicError({\n      message: 'Failed to send ringing feedback. Call must be incoming.',\n      code: callCodes.INVALID_STATE\n    })\n  }\n}\n\n/**\n * Bottle wrapper for sendRingingFeedback call operation.\n * @return {Function}\n */\nexport default function sendRingingFeedbackOperation (container) {\n  const { context, CallRequests, logManager } = container\n  /**\n   * Sends ringing feedback to the server for an incoming, Initiated call.\n   *\n   * This saga defines how/when a call can send ringing feedback to the remote user.\n   *    It performs signaling to send this notification to the server, which forwards\n   *    it to the remote side of the call.\n   * Assumptions:\n   *    1. The call is in Initiated state.\n   *    2. The call's direction is incoming.\n   *    3. The SDK is configured `ringingFeedbackMode: 'manual'`.\n   * Responsibilities:\n   *    1. Perform signaling.\n   *    2. Update call state (via redux action).\n   * @method sendRingingFeedback\n   * @param {string}   callId        The id for the call sending ringing feedback.\n   */\n  async function sendRingingFeedback (callId) {\n    const log = logManager.getLogger('CALL', callId)\n    log.info('Sending ringing feedback for incoming call.')\n\n    const targetCall = getCallById(context.getState(), callId)\n    const callInfo = { wrtcsSessionId: targetCall.wrtcsSessionId, id: targetCall.id }\n    try {\n      await CallRequests.updateCallRinging(callInfo)\n    } catch (error) {\n      log.info(`Failed to send ringing feedback: ${error.code}: ${error.message}`)\n      throw error\n    }\n\n    log.info(`Ringing feedback sent. Changing call to ${CALL_STATES.RINGING} state.`)\n  }\n\n  return sendRingingFeedback\n}\n","/*\n * Call Notification handlers available in the Callstack.\n * This file is where the names for the operations are defined.\n */\n\n// State change notifications.\nexport { default as callCancelled } from './callCancelled'\nexport { default as callStatusUpdateRinging } from './callStatusRinging'\nexport { default as callStatusUpdateFailed } from './callStatusUpdateFailed'\nexport { default as sessionStatusUpdateEnded } from './sessionStatusEnded'\n\n// Negotiation notifications.\nexport { default as receiveEarlyMedia } from './receiveEarlyMedia'\n\nexport { default as handleUpdates } from './negotiation'\n","// The factory funnction for the notification handler.\nimport notification from './callCancelled'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory function.\n  //    Otherwise it would get the `notification` sub-container.\n  bottle.factory('Callstack.notifications.callCancelled', () => notification(bottle.container))\n}\n","import { CALL_STATE_CHANGE } from '../../../interface/eventTypes'\nimport { CALL_STATES } from '../../../constants'\nimport { callActions } from '../../../interface/actions'\nimport { getCallByWrtcsSessionId } from '../../../interface/selectors'\n\n/**\n * Bottle wrapper for \"call cancel\" notification handler.\n * @return {Function}\n */\nexport default function callCancelOperation (container) {\n  const { context, emitEvent, CallstackWebrtc, logManager } = container\n\n  /**\n   * A \"call cancelled\" notification needs to be handled.\n   *\n   * A call can be \"cancelled\" for different reasons. In general, it means that\n   *    the call was not established (locally) but it is no longer available for\n   *    the user to respond. For example, it may have been answered on another\n   *    device, or the caller may have ended it while it was ringing.\n   *\n   * The call is cancelled locally by cleaning up any/all Webrtc resources and\n   *    changing the call state to indicate it was cancelled.\n   *\n   * @method callCancel\n   * @param {string} wrtcsSessionId The server-side session ID of the call.\n   */\n  async function callCancel (wrtcsSessionId) {\n    const targetCall = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', (targetCall || {}).id)\n    log.info('Received call cancelled notice; handling.', { wrtcsSessionId })\n\n    if (!targetCall) {\n      log.info('Call cancelled notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n      return\n    } else if ([CALL_STATES.ENDED, CALL_STATES.CANCELLED].includes(targetCall.state)) {\n      log.info(`Call cancelled notice for already ${targetCall.state} call. Ignoring.`, { wrtcsSessionId })\n      return\n    }\n\n    // Clean up the Webrtc portion of the Call.\n    await CallstackWebrtc.closeCall(targetCall.webrtcSessionId)\n\n    log.info(`Finished handling call cancelled notice. Changing to ${CALL_STATES.CANCELLED}.`)\n    // Dispatch an action to handle the redux portion of the Call.\n    context.dispatch(callActions.callCancelled(targetCall.id))\n\n    // Emit an event for the state change to cancelled\n    emitEvent(CALL_STATE_CHANGE, {\n      callId: targetCall.id,\n      previous: {\n        state: targetCall.state,\n        localHold: targetCall.localHold,\n        remoteHold: targetCall.remoteHold\n      }\n    })\n  }\n\n  return callCancel\n}\n","// The factory funnction for the notification handler.\nimport notification from './callStatusUpdateRinging'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory function.\n  //    Otherwise it would get the `notification` sub-container.\n  bottle.factory('Callstack.notifications.callStatusUpdateRinging', () => notification(bottle.container))\n}\n","// Call plugin.\nimport { callActions } from '../../../interface/actions'\nimport { CALL_STATE_CHANGE, CUSTOM_PARAMETERS } from '../../../interface/eventTypes'\nimport { getCallByWrtcsSessionId } from '../../../interface/selectors'\nimport { CALL_STATES } from '../../../constants'\nimport { REPORTER_EVENTS } from '../../reporter/constants'\n\n/**\n * Bottle wrapper for \"call status ringing\" notification handler.\n * @return {Function}\n */\nexport default function callStatusRingingOperation (container) {\n  const { context, CallReporter, emitEvent, logManager } = container\n\n  /**\n   * A \"call status update\" has been received and needs to be handled.\n   * The update specifies the server session is in \"ringing\" state.\n   *\n   * This operation handles the \"call ringing\" notification by updating the local\n   *    session state to match the server session state. This only affects the\n   *    local call state.\n   * Responsibilities:\n   *    1. Update call state to RINGING (via redux action).\n   *    2. Emit event to application.\n   * @method callStatusUpdateRinging\n   * @param {string} wrtcsSessionId ID that the server uses to identify the session.\n   * @param {Object} [params={}]\n   * @param {string} params.remoteName   Name of the remote participant.\n   * @param {string} params.remoteNumber Number of the remote participant.\n   * @param {Array}  params.customParameters\n   */\n  function callStatusUpdateRinging (wrtcsSessionId, params = {}) {\n    const call = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', (call || {}).id)\n    log.info('Received call status ringing notice; handling.', { wrtcsSessionId })\n\n    if (!call) {\n      log.info('Call ringing notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n      return\n    } else if (call.state !== CALL_STATES.INITIATED) {\n      log.info(`Call ringing notice for Call in an invalid state: ${call.state}. Ignoring.`)\n      return\n    }\n\n    const callReport = CallReporter.getReport(call.id)\n    const operationEvent = callReport.getEvent(call.localOp.eventId)\n    const receiveRingingEvent = operationEvent.addEvent(REPORTER_EVENTS.REMOTE_RINGING)\n\n    // Dispatch a custom parameters received action/event if any custom parameters were\n    //    received as part of the notification\n    if (params.customParameters) {\n      const customNames = params.customParameters.map(param => param.name)\n      log.debug(`Received custom parameters as part of the Call: ${customNames}.`)\n      context.dispatch(\n        callActions.customParametersReceived(call.id, {\n          customParameters: params.customParameters\n        })\n      )\n\n      emitEvent(CUSTOM_PARAMETERS, {\n        callId: call.id,\n        customParameters: params.customParameters\n      })\n    }\n\n    log.info(`Finished handling call ringing notice. Changing to ${CALL_STATES.RINGING}.`)\n    context.dispatch(\n      callActions.callRinging(call.id, {\n        // Remote participant's information.\n        remoteParticipant: {\n          displayNumber: params.remoteNumber,\n          displayName: params.remoteName\n        }\n      })\n    )\n\n    emitEvent(CALL_STATE_CHANGE, {\n      callId: call.id,\n      previous: {\n        state: call.state,\n        localHold: call.localHold,\n        remoteHold: call.remoteHold\n      }\n    })\n    receiveRingingEvent.endEvent()\n  }\n\n  return callStatusUpdateRinging\n}\n","// The factory funnction for the notification handler.\nimport notification from './callStatusUpdateFailed'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory function.\n  //    Otherwise it would get the `notification` sub-container.\n  bottle.factory('Callstack.notifications.callStatusUpdateFailed', () => notification(bottle.container))\n}\n","// Call plugin.\nimport { callActions } from '../../../interface/actions'\nimport { OPERATIONS, OP_STATUS } from '../../../interface/constants'\nimport { COMPLEX_OPERATION_MESSAGES, STATUS_CODES } from '../../../constants'\nimport { getCallByWrtcsSessionId } from '../../../interface/selectors'\nimport * as eventTypes from '../../../interface/eventTypes'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../../errors'\n\n/**\n * Bottle wrapper for \"call status failed\" notification handler.\n * @return {Function}\n */\nexport default function callStatusFailedOperation (container) {\n  const { context, emitEvent, logManager } = container\n  /**\n   * A call status notification indicating that an operation has failed and needs to be handled.\n   *\n   * This operation handles the \"session fail\" notification by generating a transition object\n   *    containing proper statusCode and reasonText and removing the current pending operation.\n   * Responsibilities:\n   *    1. Generate transition object containing proper statusCode and reasonText depending on pending operation.\n   * @method callStatusUpdateFailed\n   * @param {string}   wrtcsSessionId ID that the server uses to identify the session.\n   * @param {Object}   params        Parameters describing the incoming call.\n   */\n  function callStatusUpdateFailed (wrtcsSessionId, params) {\n    const { reasonText, statusCode } = params\n    const currentCall = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', (currentCall || {}).id)\n    log.info('Received call operation failed notice; handling.', { wrtcsSessionId })\n\n    if (!currentCall) {\n      log.info('Call operation failed notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n      return\n    }\n\n    const localOp = currentCall.localOp\n    if (localOp && localOp.operation && localOp.status === OP_STATUS.PENDING) {\n      let transition\n      let finishAction\n      switch (localOp.operation) {\n        case OPERATIONS.DIRECT_TRANSFER:\n          finishAction = callActions.directTransferFinish\n          // TODO: May or may not need this when generic operation event is setup.\n          transition = {\n            reasonText: reasonText || COMPLEX_OPERATION_MESSAGES.DIRECT_TRANSFER_FAILURE,\n            statusCode: statusCode || STATUS_CODES.DIRECT_TRANSFER_FAILURE\n          }\n          break\n        case OPERATIONS.CONSULTATIVE_TRANSFER:\n          finishAction = callActions.consultativeTransferFinish\n          transition = {\n            reasonText: reasonText || COMPLEX_OPERATION_MESSAGES.CONSULTATIVE_TRANSFER_FAILURE,\n            statusCode: statusCode || STATUS_CODES.CONSULTATIVE_TRANSFER_FAILURE\n          }\n          break\n        case OPERATIONS.JOIN:\n          finishAction = callActions.joinFinish\n          transition = {\n            reasonText: reasonText || COMPLEX_OPERATION_MESSAGES.JOIN_FAILURE,\n            statusCode: statusCode || STATUS_CODES.JOIN_FAILURE\n          }\n          break\n      }\n      log.debug(`Processing as a local ${localOp.operation} failure (${transition.statusCode}).`)\n\n      if (finishAction) {\n        log.info('Finished handling call operation failed notice.')\n\n        const error = new BasicError({\n          message: `Operation ${localOp.operation} failed.`,\n          code: callCodes.GENERIC_ERROR\n        })\n\n        context.dispatch(\n          finishAction(currentCall.id, {\n            error,\n            transition\n          })\n        )\n\n        // Notify the app that there has been a call state change\n        emitEvent(eventTypes.CALL_STATE_CHANGE, {\n          callId: currentCall.id,\n          previous: {\n            state: currentCall.state,\n            localHold: false,\n            remoteHold: false\n          }\n        })\n\n        return\n      }\n    }\n\n    context.dispatch(callActions.updateCall(currentCall.id))\n\n    emitEvent(eventTypes.CALL_STATE_CHANGE, {\n      callId: currentCall.id,\n      previous: {\n        state: currentCall.state,\n        localHold: false,\n        remoteHold: false\n      }\n    })\n  }\n\n  return callStatusUpdateFailed\n}\n","// The factory funnction for the notification handler.\nimport notification from './sessionStatusUpdateEnded'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory function.\n  //    Otherwise it would get the `notification` sub-container.\n  bottle.factory('Callstack.notifications.sessionStatusUpdateEnded', () => notification(bottle.container))\n}\n","// Call plugin\nimport { callActions } from '../../../interface/actions'\nimport { getCallByWrtcsSessionId } from '../../../interface/selectors'\nimport { CALL_STATES, COMPLEX_OPERATION_MESSAGES, STATUS_CODES } from '../../../constants'\nimport { OPERATIONS, OP_STATUS } from '../../../interface/constants'\nimport { CALL_STATE_CHANGE, CALL_TRACKS_REMOVED } from '../../../interface/eventTypes'\n\n// Helpers\nimport { generateEndParams } from '../../utils/call'\n\n/**\n * Bottle wrapper for \"session status ended\" notification handler.\n * @return {Function}\n */\nexport default function sessionStatusEndedOperation (container) {\n  const { context, CallRequests, CallstackWebrtc, emitEvent, logManager } = container\n\n  /**\n   * A \"session status ended\" notification has been received and needs to be handled.\n   * A session has completed (in this context) means completing a midcall operation such as:\n   *\n   * - direct transfer\n   * - consultative transfer\n   * - join\n   * , where user A transferred user B to user C.\n   *\n   * For the direct & consultative transfer operations, the 'sessionComplete' notification\n   * will just refer to the original call between: A<->B, which has now completed.\n   * Therefore this saga will send a 'DELETE' REST request to inform backend to tear down\n   * this particular original call.\n   *\n   * Note that for the other original call, which is A<->C, server already knows\n   * that it has ended and callStatusUpdateEnded saga (above) already handles it by simply\n   * marking it locally as ended (i.e. in local Redux state). Therefore there is no need\n   * to send any 'DELETE' REST request for A<->C call.\n   *\n   * For the join operation, SDK will receive two separate 'sessionComplete' notifications from backend.\n   * Therefore this saga will send two 'DELETE' REST requests to inform backend to tear down those\n   * two original calls.\n   *\n   * @method sessionStatusUpdateEnded\n   * @param {string}   wrtcsSessionId ID that the server uses to identify the session.\n   * @param {Object}   params        Parameters describing the incoming call.\n   * @param {string}   [params.reasonText]   Human-readable explanation for the call change.\n   * @param {string}   [params.statusCode]     Code representing the reason for the call change.\n   */\n  async function sessionStatusEnded (wrtcsSessionId, params) {\n    const { reasonText, statusCode } = params\n\n    const currentCall = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', (currentCall || {}).id)\n\n    // Make sure the call state is what we expect\n    if (!currentCall) {\n      log.info('Session completed notice for unknown Call. Ignoring.')\n      return\n    }\n\n    log.info('Received session status completed notice; handling.', { wrtcsSessionId })\n\n    if (reasonText) {\n      let customStatusCode = statusCode\n      if (!statusCode && statusCode !== 0) {\n        if (reasonText === COMPLEX_OPERATION_MESSAGES.DIRECT_TRANSFER_SUCCESS) {\n          customStatusCode = STATUS_CODES.DIRECT_TRANSFER_SUCCESS\n        } else if (reasonText === COMPLEX_OPERATION_MESSAGES.CONSULTATIVE_TRANSFER_SUCCESS) {\n          customStatusCode = STATUS_CODES.CONSULTATIVE_TRANSFER_SUCCESS\n        } else if (reasonText === COMPLEX_OPERATION_MESSAGES.JOIN_SUCCESS) {\n          customStatusCode = STATUS_CODES.JOIN_SUCCESS\n        }\n      }\n      log.debug(`Session completed notice caused by ${reasonText} (${customStatusCode}).`)\n    }\n\n    log.info(`Ending webRTC session with id: ${currentCall.webrtcSessionId}, locally ...`)\n\n    const prevCall = currentCall\n\n    // Close the local webRTC session\n    await CallstackWebrtc.closeCall(currentCall.webrtcSessionId)\n\n    // If we had the local operation tracked in state, then we can dispatch the action\n    //    intended to \"finish\" the operation.\n    const localOp = currentCall.localOp\n    if (localOp && localOp.operation && localOp.status === OP_STATUS.PENDING) {\n      let transition\n      let finishAction\n      switch (localOp.operation) {\n        case OPERATIONS.DIRECT_TRANSFER:\n          finishAction = callActions.directTransferFinish\n          transition = {\n            reasonText: COMPLEX_OPERATION_MESSAGES.DIRECT_TRANSFER_SUCCESS,\n            statusCode: STATUS_CODES.DIRECT_TRANSFER_SUCCESS\n          }\n          break\n        case OPERATIONS.CONSULTATIVE_TRANSFER:\n          finishAction = callActions.consultativeTransferFinish\n          transition = {\n            reasonText: COMPLEX_OPERATION_MESSAGES.CONSULTATIVE_TRANSFER_SUCCESS,\n            statusCode: STATUS_CODES.CONSULTATIVE_TRANSFER_SUCCESS\n          }\n          break\n        case OPERATIONS.JOIN:\n          finishAction = callActions.joinFinish\n          transition = {\n            reasonText: COMPLEX_OPERATION_MESSAGES.JOIN_SUCCESS,\n            statusCode: STATUS_CODES.JOIN_SUCCESS\n          }\n          break\n        default:\n          log.info('Unknown local call operation for completed notice. Cannot provide transition information.')\n          break\n      }\n      if (finishAction) {\n        context.dispatch(finishAction(currentCall.id, { transition }))\n      }\n    }\n\n    // We also need to notify the backend that call with currentCall.id should be removed\n    // by sending a DELETE REST request.\n    // Perform signalling to end the session on server's side.\n    try {\n      const isAnonymous = currentCall.isAnonymous\n      const account = currentCall.account\n\n      log.debug('Ending call session on server-side.')\n      await CallRequests.endSession({ callId: currentCall.id, wrtcsSessionId, isAnonymous, account })\n\n      log.info(`Finished ending call. Changing call state to ${CALL_STATES.ENDED}.`)\n      context.dispatch(callActions.endCallFinish(currentCall.id, generateEndParams(currentCall.state, true, params)))\n\n      // Tell the application that no tracks are available any longer.\n      emitEvent(CALL_TRACKS_REMOVED, {\n        callId: currentCall.id,\n        trackIds: [...prevCall.localTracks, ...prevCall.remoteTracks]\n      })\n\n      emitEvent(CALL_STATE_CHANGE, {\n        callId: currentCall.id,\n        previous: {\n          state: prevCall.state,\n          localHold: prevCall.localHold,\n          remoteHold: prevCall.remoteHold\n        }\n      })\n    } catch (error) {\n      log.debug(\n        `Error received when attempting to end the session: ${error}. Changing call state to ${CALL_STATES.ENDED}.`\n      )\n      context.dispatch(\n        callActions.endCallFinish(currentCall.id, {\n          isLocal: true,\n          error\n        })\n      )\n\n      // Tell the application that no tracks are available any longer.\n      emitEvent(CALL_TRACKS_REMOVED, {\n        callId: currentCall.id,\n        trackIds: [...prevCall.localTracks, ...prevCall.remoteTracks]\n      })\n\n      emitEvent(CALL_STATE_CHANGE, {\n        callId: currentCall.id,\n        previous: {\n          state: prevCall.state,\n          localHold: prevCall.localHold,\n          remoteHold: prevCall.remoteHold\n        },\n        error\n      })\n    }\n  }\n\n  return sessionStatusEnded\n}\n","// The factory funnction for the notification handler.\nimport notification from './receiveEarlyMedia'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory function.\n  //    Otherwise it would get the `notification` sub-container.\n  bottle.factory('Callstack.notifications.receiveEarlyMedia', () => notification(bottle.container))\n}\n","// Call Plugin\nimport { callActions } from '../../../interface/actions'\nimport { getOptions, getCallByWrtcsSessionId } from '../../../interface/selectors'\nimport { getAllRemoteTracks } from '../../sdp/media/remoteTracks'\nimport { CALL_STATE_CHANGE, CALL_TRACKS_ADDED, CUSTOM_PARAMETERS } from '../../../interface/eventTypes'\nimport { CALL_STATES } from '../../../constants'\n\n/**\n * Bottle wrapper for \"receive early media\" notification handler.\n * @return {Function}\n */\nexport default function receiveEarlyMediaOperation (container) {\n  const { context, emitEvent, logManager, WebRTC, CallstackSDP } = container\n\n  /**\n   * A \"session progress\" notification has been received. It contains an \"early\n   *    media\" SDP (pranswer) that needs to be processed.\n   *\n   * Processing a pranswer is done by:\n   *    1. Validating the Call / Session.\n   *    2. Running the SDP through the SDP pipeline.\n   *    3. Setting the SDP as the Session's remote description (as pranswer).\n   *    4. Updating the Call state.\n   *\n   * @method receiveEarlyMedia\n   * @param {Object} params       Parameters describing the notification.\n   */\n  async function receiveEarlyMedia (wrtcsSessionId, params) {\n    const { customParameters } = params\n\n    /**\n     * Get the call from state.\n     */\n    const currentCall = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', (currentCall || {}).id)\n    log.info('Received early media notice; handling.', { wrtcsSessionId })\n\n    if (!currentCall) {\n      log.info('Early media notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n      return\n    }\n\n    /**\n     * Get the Webrtc Session.\n     */\n    const session = await WebRTC.sessionManager.get(currentCall.webrtcSessionId)\n\n    if (!session) {\n      log.info('Early media notice for missing wrtcsSession. Ignoring.', { wrtcsSessionId })\n      // TODO: Better error.\n      return\n    }\n    // Dispatch a custom parameters received action/event if any custom parameters were received as part of the notification\n    if (customParameters) {\n      const customNames = customParameters.map(param => param.name)\n      log.debug(`Received custom parameters as part of the Call: ${customNames}.`)\n      context.dispatch(\n        callActions.customParametersReceived(currentCall.id, {\n          customParameters\n        })\n      )\n\n      // Emit the associated event with the above action\n      emitEvent(CUSTOM_PARAMETERS, { callId: currentCall.id, customParameters })\n    }\n\n    try {\n      /*\n       * Run the remote SDP pranswer through any SDP handlers provided, then set it\n       *    as the Session's remote description.\n       * This is the \"pre set remote\" stage.\n       */\n      const callConfigOptions = getOptions(context.getState())\n      const sdp = CallstackSDP.runPipeline(callConfigOptions.sdpHandlers, params.sdp, {\n        callId: currentCall.id,\n        type: 'pranswer',\n        step: 'set',\n        endpoint: 'remote'\n      })\n      await session.processAnswer({\n        type: 'pranswer',\n        sdp: sdp\n      })\n    } catch (err) {\n      log.debug(`Failed to process pranswer for Call ${currentCall.id}; ignoring.`)\n      return\n    }\n\n    // Get the list of all remote tracks being offered in this call. This is a\n    //    new call, so this should be the full list of remote tracks available.\n    const remoteTracks = await getAllRemoteTracks(session)\n\n    log.info(`Finished handling early media notice. Changing to ${CALL_STATES.EARLY_MEDIA}.`)\n    context.dispatch(\n      callActions.sessionProgress(currentCall.id, {\n        // Remote participant's information.\n        remoteParticipant: {\n          displayNumber: params.remoteNumber,\n          displayName: params.remoteName\n        },\n        remoteTracks\n      })\n    )\n\n    // Tell the application that tracks are available on the call now.\n    emitEvent(CALL_TRACKS_ADDED, {\n      callId: currentCall.id,\n      trackIds: remoteTracks\n    })\n\n    emitEvent(CALL_STATE_CHANGE, {\n      callId: currentCall.id,\n      previous: {\n        state: currentCall.state,\n        localHold: currentCall.localHold,\n        remoteHold: currentCall.remoteHold\n      }\n    })\n  }\n\n  return receiveEarlyMedia\n}\n","// The factory funnctions for the negotiation handlers.\nimport handleSlowUpdateRequest from './handleSlowUpdateRequest'\nimport handleSlowUpdateResponse from './handleSlowUpdateResponse'\n\nimport handleUpdateRequest from './handleUpdateRequest'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `notification` sub-container.\n  bottle.factory('Callstack.notifications.handleSlowUpdateRequest', () => handleSlowUpdateRequest(bottle.container))\n  bottle.factory('Callstack.notifications.handleSlowUpdateResponse', () => handleSlowUpdateResponse(bottle.container))\n  bottle.factory('Callstack.notifications.handleUpdateRequest', () => handleUpdateRequest(bottle.container))\n}\n","// Call plugin\nimport * as callActions from '../../../interface/actions/call'\nimport { getOptions } from '../../../interface/selectors'\nimport { getMediaState } from '../../../utils/state'\n\n/**\n * Bottle wrapper for handleSlowUpdateRequest call operation.\n * @return {Function}\n */\nexport default function handleSlowUpdateRequestOperation (container) {\n  const { context, logManager, CallRequests, CallstackWebrtc, WebRTC } = container\n\n  /**\n   * A \"call update request\" has been received and needs to be handled.\n   * The request does not include an SDP, so this is a slow start webRTC scenario.\n   *\n   * This function is intended to process all \"call update requests\", that have no\n   *    SDP, received from the call's remote side. It is assumed the call has\n   *    already been established, so this represents the start of the slow start\n   *    webRTC renegotiation process for the local side.\n   * Handling the request will not affect the call's media at this point. As\n   *    opposed to regular negotiation, we require an additional \"call response\"\n   *    notification before negotiation is complete. Media and call state will\n   *    only be affected by that response notification.\n   * Assumptions:\n   *    1. The request notification is valid.\n   *        - Call exists, Call is not Ended, Call is able to receive a request.\n   *    2. There is no SDP.\n   *        - Indicates slow start webRTC negotiation should occur.\n   * Responsibilities:\n   *    1. Generate an offer SDP based on our current local state.\n   *    2. Respond to the request with our offer.\n   * @method handleSlowUpdateRequest\n   * @param {Object} targetCall The call being acted on.\n   * @param {Object} params       Parameters of the update request.\n   * @param {string} params.remoteNumber Number of the remote participant.\n   * @param {string} params.remoteName   Name of the remote participant.\n   */\n  async function handleSlowUpdateRequest (targetCall, params) {\n    const { remoteNumber, remoteName } = params\n\n    const log = logManager.getLogger('CALL', targetCall.id)\n    log.info('Processing slow-start update request from remote endpoint.')\n\n    const mediaState = getMediaState(targetCall)\n    log.debug(`Current call info; State: ${targetCall.state}, MediaState: ${mediaState}.`)\n\n    /**\n     * Decision: Whenever we receive a slow-start notification, recreate the Peer.\n     *    This is needed in certain situations (but not all...)\n     * Known Scenarios:\n     * 1. Link direct transfer:\n     *    - The user being transferred will be on remote hold and will receive a\n     *        slow-start notification as part of the \"transfer renegotitions\".\n     *        Not recreating the Peer will result in a DTLS role conflict.\n     *    - The user receiving the transfer will negotiate the initial connection,\n     *        then will receive a slow-start notification (when Connected). Not\n     *        recreating the Peer for the slow-start results in DTLS conflict.\n     * Exception: If client has set the call option 'mediaBrokerOnly' to true, then\n     *    we don't need to recreate the call's PeerConnection.\n     */\n    const { mediaBrokerOnly } = getOptions(context.getState())\n    if (!mediaBrokerOnly) {\n      log.debug(`Recreating Peer for Session ${targetCall.webrtcSessionId}.`)\n      const session = await WebRTC.sessionManager.get(targetCall.webrtcSessionId)\n      await session.recreatePeer()\n    } else {\n      log.debug('Not recreating PeerConnection as mediaBrokerOnly is set to true in configuration.')\n    }\n    /*\n     * Decision: Whenever we receive an offer without an SDP (slow start), and\n     *    we're not locally held, respond with all media directions as sendrecv.\n     *    This is to signal what we are capable of, rather than what we want.\n     *    When we are locally held, we don't want to allow the remote side to\n     *    restart media, hence respond with media directions as inactive.\n     * This handles two (non-local hold) scenarios specifically:\n     *  1. Re-invite: We have already negotiated to perform the remote operation,\n     *      but we received a second offer (without an SDP) as a side-effect to\n     *      further update media.\n     *    Eg. Music on Hold: The remote operation is to set media to inactive,\n     *      and the re-invite updates media so we can receive the hold audio.\n     *  2. Slow start unhold: We receive an offer without an SDP, but we have no\n     *      idea what the remote operation was. If we are on remote hold, we\n     *      assume that it's a remote unhold operation.\n     */\n    const mediaDirections = {\n      audio: targetCall.localHold ? 'inactive' : 'sendrecv',\n      video: targetCall.localHold ? 'inactive' : 'sendrecv'\n    }\n\n    // Create an offer to use for responding to the slow start notification.\n    let slowOffer\n    try {\n      slowOffer = await CallstackWebrtc.generateOffer(targetCall.webrtcSessionId, mediaDirections)\n    } catch (error) {\n      // TODO: Handle this scenario (revert operation if necessary).\n      log.info('Failed to respond to slow-start remote update.', error)\n      throw error\n    }\n\n    const callInfo = {\n      wrtcsSessionId: targetCall.wrtcsSessionId,\n      answer: slowOffer.sdp,\n      isAnonymous: targetCall.isAnonymous,\n      account: targetCall.account,\n      customParameters: targetCall.customParameters,\n      customBodies: targetCall.customBodies\n    }\n\n    // Respond with our \"offer\".\n    try {\n      await CallRequests.updateSessionResponse(callInfo)\n    } catch (error) {\n      // TODO: Handle this scenario (retry request or fail/revert operation?)\n      log.info('Failed to respond to slow-start remote update.', error)\n      throw error\n    }\n\n    log.info('Finished responding to slow-start remote update. Waiting on remote response.')\n    /*\n     * The operation is not complete until we receive a response to our offer. The\n     *    response will be handled by the `handleSlowUpdateResponse` saga.\n     */\n    context.dispatch(\n      callActions.remoteSlowStart(targetCall.id, {\n        remoteParticipant: {\n          displayNumber: remoteNumber,\n          displayName: remoteName\n        }\n      })\n    )\n  }\n\n  return handleSlowUpdateRequest\n}\n","import { getSessionById } from '../../../../webrtc/interface/selectors'\nimport { CALL_MEDIA_STATES, CALL_STATES } from '../../../constants'\nimport * as actionTypes from '../../../interface/actionTypes'\nimport { OPERATIONS } from '../../../interface/constants'\nimport { getMediaState } from '../../../utils/state'\nimport getOperation from '../../sdp/media/operations'\nimport getAffectedRemoteTracks from '../../sdp/media/remoteTracks'\nimport hasMediaFlowing from '../../sdp/utils/hasMediaFlowing'\nimport { getCallAction } from '../../utils/call'\n\n/**\n * Bottle wrapper for handleSlowUpdateResponse call operation.\n * @return {Function}\n */\nexport default function handleSlowUpdateResponseOperation (container) {\n  const { context, logManager, emitEvent, CallstackSDP, CallstackWebrtc, WebRTC } = container\n\n  /**\n   * A \"call update response\" has been received and needs to be handled.\n   * The response is for a remote operation, so this a slow start webRTC scenario.\n   *\n   * This operation is intended to process all \"call update responses\", that are from\n   *    remote operations, received from the call's remote side. This represents\n   *    the end of slow start webRTC negotiation process for the local side.\n   * Handling the response will affect the call's media, and the call state will\n   *    be updated depending on the new media and the current call state.\n   * Assumptions:\n   *    1. Ensure this is a valid notification.\n   *        - Call exists, Call is not ended, Call expects the response.\n   *    2. The original operation was started remotely.\n   *        - Indicates that it a was slow start negotiation process.\n   *        - The call has a pending remote operation.\n   * Responsibilities:\n   *    1. Determine what the original operation was.\n   *    2. Have the callstack process the answer SDP.\n   *    3. Update call state (via redux action) based on original operation.\n   * @method handleSlowUpdateResponse\n   * @param  {Object} targetCall The call being acted on.\n   * @param  {Object} params\n   * @param  {string} params.sdp A remote answer SDP.\n   * @param  {string} params.remoteName   Name of the remote participant.\n   * @param  {string} params.remoteNumber Number of the remote participant.\n   */\n  async function handleSlowUpdateResponse (targetCall, params) {\n    let { sdp } = params\n\n    const log = logManager.getLogger('CALL', targetCall.id)\n    log.info('Processing remote response from slow-start remote update request.')\n\n    const mediaState = getMediaState(targetCall)\n    log.debug(`Current call info; State: ${targetCall.state}, MediaState: ${mediaState}.`)\n\n    /*\n     * Determine what the remote operation was. The remote operation and our\n     *    current local state will affect how we update the call's state.\n     */\n    const session = await WebRTC.sessionManager.get(targetCall.webrtcSessionId)\n    if (!session) {\n      log.debug(`webRTC session ${targetCall.webrtcSessionId} not found.`)\n      return\n    }\n\n    /*\n     * Use the currently set remote SDP and the newly-received remote SDP to\n     *    determine what the remote operation was.\n     */\n    const remoteDesc = await session.getLatestRemoteDesc()\n    let mediaDiff = CallstackSDP.compareMedia(remoteDesc.sdp, sdp)\n\n    let remoteOp = getOperation(mediaDiff)\n    log.debug(`Interpreted slow-start response as a ${remoteOp} operation.`)\n    const mediaFlowing = hasMediaFlowing(sdp)\n\n    if (remoteOp === 'UNKNOWN') {\n      log.debug('Could not determine remote operation; retrying.')\n      // Try it again, but this time match medias naively.\n      mediaDiff = CallstackSDP.compareMedia(remoteDesc.sdp, sdp, true)\n      remoteOp = getOperation(mediaDiff)\n      log.debug(`Re-interpreted slow-start response as a ${remoteOp} operation.`)\n    }\n\n    /**\n     * Special case: Assume the remote operation was actually a Hold.\n     * The operation was interpreted as \"no change\" because the remote media did\n     *    not change in the remote operation. But all media is inactive and we are\n     *    in a Local Hold state. This means that the previous media was inactive\n     *    because of our local hold. So the new media being inactive is a change\n     *    that was done on the remote side, ie. it was actually a remote hold.\n     */\n    if (remoteOp === 'NO_CHANGE' && !mediaFlowing && mediaState === CALL_MEDIA_STATES.LOCAL_HOLD) {\n      remoteOp = OPERATIONS.HOLD\n      log.debug(`Interpreting NO_CHANGE operation as ${remoteOp} due to ${mediaState} state.`)\n    }\n\n    log.info(`Handling state change as remote ${remoteOp} in ${mediaState} scenario.`)\n\n    /*\n     * If the remote operation was an unhold and we're in a dual hold scenario,\n     *    then make sure the remote SDP can't restart media. Do this by ensuring\n     *    that all media directions in the remote SDP are inactive.\n     *\n     * This won't affect the remote end, but it prevents the local side from\n     *    thinking it is receiving a track when it shouldn't be.\n     *\n     * This can occur during slow start renegotiation, if the server doesn't\n     *    respect the media directions we set (assuming we set them correctly).\n     */\n    if (remoteOp === OPERATIONS.UNHOLD && targetCall.localHold === true) {\n      const undesired = ['sendrecv', 'sendonly', 'recvonly']\n      // If any undesirable direction is found in the SDP, replace it with inactive.\n      if (undesired.some(dir => sdp.includes(dir))) {\n        log.debug('Modifying remote SDP to prevent media in local hold scenario.')\n        sdp = sdp.replace(/sendrecv|sendonly|recvonly/gi, 'inactive')\n        // Update the `mediaDiff` after we modified the SDP.\n        mediaDiff = CallstackSDP.compareMedia(remoteDesc.sdp, sdp, true)\n      }\n    }\n\n    // Handle the remote answer SDP.\n    const sessionInfo = { sessionId: targetCall.webrtcSessionId, answerSdp: sdp }\n    try {\n      await CallstackWebrtc.receivedAnswer(sessionInfo, targetCall)\n    } catch (error) {\n      log.debug('Failed to receive answer SDP', error)\n      // TODO: Dispatch an error action to notify of the error scenario.\n      // The call may now be in a bad state and needs to be fixed.\n      return\n    }\n\n    if (targetCall.state === CALL_STATES.CONNECTED || targetCall.state === CALL_STATES.ON_HOLD) {\n      const { callAction, eventFns } = getCallAction(remoteOp)\n      const nextState = mediaFlowing ? CALL_STATES.CONNECTED : CALL_STATES.ON_HOLD\n\n      log.info(`Finished processing remote slow-start response. Changing to ${nextState}.`)\n\n      // Get the list of remote tracks that are changing (either added or removed) as\n      //    part of the remote operation. This is done after `handleOffer` so the\n      //    Transceivers are up-to-date with the changes being offered.\n      const affectedRemoteTracks = await getAffectedRemoteTracks(remoteOp, mediaDiff, session)\n\n      let affectedLocalTracks = []\n      // If we're not in dual-hold (ie. we will be Connected after this), then\n      //    local tracks will become available.\n      if (remoteOp === OPERATIONS.UNHOLD && !targetCall.localHold) {\n        // For local tracks, just need to get the local tracks the Session has.\n        const sessionState = getSessionById(context.getState(), targetCall.webrtcSessionId)\n        affectedLocalTracks = sessionState.localTracks\n      }\n\n      const action = callAction(targetCall.id, {\n        state: nextState,\n        // Remote participant's information.\n        remoteParticipant: {\n          displayNumber: params.remoteNumber,\n          displayName: params.remoteName\n        },\n        // Add the remote tracks to the call state.\n        remoteTracks: affectedRemoteTracks,\n        localTracks: affectedLocalTracks\n      })\n\n      if (action.type === actionTypes.UPDATE_CALL) {\n        /*\n         * This is a hack. The proper solution would be to never use a generic action for state changes.\n         * This action doesn't work with the SDK's \"operation tracking\" logic in the call reducers, so\n         *     the call state becomes out-of-sync with the operations.\n         *  In this scenario, the operation start was a remote slow-start negotiation, but the SDK fails\n         *      to determine what the actual operation was, so it falls-back to using the generic action\n         *      for the \"finish\". This means that the remoteOp in state never gets cleaned-up, which can\n         *      cause issues later.\n         *  The workaround is to mark the action as a remote update action, so that the reducer can\n         *      manually clean-up the remote operation in this scenario.\n         * Reference: KJS-542, , KJS-571\n         */\n        action.meta = {\n          isRemote: true\n        }\n      }\n\n      const prevState = context.getState()\n      context.dispatch(action)\n      const currentState = context.getState()\n      eventFns.forEach(eventFn => {\n        const event = eventFn(action, prevState, currentState)\n        if (!event.skip) {\n          emitEvent(event.type, event.args)\n        }\n      })\n    } else {\n      // Scenario: The call is in an unexpected state for receiving a remote\n      //    answer SDP. This should never happen.\n      log.error('The call is in a bad state for receiving response. Cannot update.')\n    }\n  }\n\n  return handleSlowUpdateResponse\n}\n","// Call plugin.\nimport getOperation from '../../sdp/media/operations'\nimport getAffectedRemoteTracks, { getAllRemoteTracks } from '../../sdp/media/remoteTracks'\nimport hasMediaFlowing from '../../sdp/utils/hasMediaFlowing'\nimport setMediaInactive from '../../sdp/utils/setMediaInactive'\nimport { getCallAction } from '../../utils/call'\nimport { isSameSdpSessionId } from '../../utils/webrtc'\nimport { CALL_MEDIA_STATES } from '../../../constants'\nimport { OPERATIONS, OP_TRANSITIONS } from '../../../interface/constants'\nimport { getMediaState } from '../../../utils/state'\nimport { callActions as actions } from '../../../interface/actions'\nimport { REPORTER_OPERATION_EVENTS_MAP } from '../../reporter/constants'\n\n// Other plugins\nimport { getSessionById } from '../../../../webrtc/interface/selectors'\n\n/**\n * Bottle wrapper for handleUpdateRequest call operation.\n * @return {Function}\n */\nexport default function handleUpdateRequestOperation (container) {\n  const {\n    context,\n    logManager,\n    CallRequests,\n    CallstackSDP,\n    CallstackWebrtc,\n    WebRTC,\n    emitEvent,\n    CallReporter\n  } = container\n\n  /**\n   * A \"call update request\" has been received and needs to be handled.\n   * The request includes an offer SDP, so this is a regular webRTC scenario.\n   *\n   * This operation is intended to process all \"call update requests\", that have an\n   *    SDP, received from the call's remote side. It is assumed the call has\n   *    already been established, so this represents the start of the webRTC\n   *    renegotiation process for the local side.\n   * Handling the request is expected (but may not necessarily) affect the call's\n   *    media. The call state will be updated depending on the requested changes\n   *    and the current call state.\n   * Assumptions:\n   *    1. The request notification is valid.\n   *        - Call exists, Call is not Ended, Call is able to receive a request.\n   *    2. The SDP is a remote offer SDP.\n   *        - Indicates regular webRTC negotiation should occur.\n   * Responsibilities:\n   *    1. Determine what the remote operation was (ie. what is being offered).\n   *    2. Process the offer based on remote operation and current local state.\n   *    3. Respond to the request.\n   *    4. Update call state (via redux action).\n   * @method handleUpdateRequest\n   * @param {Object}   targetCall    The call being acted on.\n   * @param {Object}   params        Parameters of the update request.\n   * @param {string}   params.sdp          A remote offer SDP.\n   * @param {string}   params.remoteNumber Number of the remote participant.\n   * @param {string}   params.remoteName   Name of the remote participant.\n   */\n  async function handleUpdateRequest (targetCall, params) {\n    const log = logManager.getLogger('CALL', targetCall.id)\n    log.info('Processing regular update request from remote endpoint.')\n\n    let { sdp } = params\n    const { remoteNumber, remoteName } = params\n\n    const mediaState = getMediaState(targetCall)\n    log.debug(`Current call info; State: ${targetCall.state}, MediaState: ${mediaState}.`)\n\n    /*\n     * Determine what the remote operation was. The remote operation and our\n     *    current local state will affect how we process the received offer. Our\n     *    response needs to reflect our desired local state, so that the remote\n     *    side does not change the call in an undesired way (eg. offering media\n     *    in a dual hold scenario should not reconnect media).\n     */\n    const session = await WebRTC.sessionManager.get(targetCall.webrtcSessionId)\n    if (!session) {\n      log.debug(`WebRTC session ${targetCall.webrtcSessionId} not found.`)\n      return\n    }\n    /*\n     * Use the currently set remote SDP and the newly-received remote SDP to\n     *    determine what the remote operation was.\n     */\n    const remoteDesc = await session.getLatestRemoteDesc()\n    let mediaDiff = CallstackSDP.compareMedia(remoteDesc.sdp, sdp)\n    let remoteOp = getOperation(mediaDiff)\n\n    log.debug(`Interpreted update request as a ${remoteOp} operation.`)\n    /**\n     * Check for remoteOp special-cases.\n     *  This is needed for complex operations, where a few renegotiations occur\n     *      as a single remote operation. Some of those renegotiations are\n     *      special-cases (ie. not actual SDK operations).\n     *  If the remoteOp is not \"standard\", then try to fit it to a \"standard\"\n     *    operation that \"fits best\".\n     */\n    const isMediaFlowing = hasMediaFlowing(sdp)\n    if (remoteOp === 'UNKNOWN') {\n      /*\n       * If the media state is remotely held but the latest renegotiation has\n       *    media flowing, then handle it as an unhold.\n       * This occurs:\n       *  - As part of a remote direct transfer operation (when this user is being\n       *      transferred to another user). When the transferee accepts the call,\n       *      a renegotiation occurs that changes from 'MoH' to 'media flowing'\n       *      state. This needs to be handled as an unhold by the SDK so that\n       *      the call state is updated to reflect the media state.\n       *  - As part of a remote consultative transfer operation (when this user was\n       *      the first call specified in the transfer operation, but not for the\n       *      second user). Same 'MoH' to 'media flowing' scenario as direct\n       *      transfer.\n       */\n      if (mediaState === CALL_MEDIA_STATES.REMOTE_HOLD && isMediaFlowing) {\n        remoteOp = OPERATIONS.UNHOLD\n      } else {\n        log.debug('Could not determine remote operation; retrying.')\n        // Try it again, but this time match medias naively.\n        mediaDiff = CallstackSDP.compareMedia(remoteDesc.sdp, sdp, true)\n        remoteOp = getOperation(mediaDiff)\n        log.debug(`Re-interpreted update request as a ${remoteOp} operation.`)\n      }\n    } else if (remoteOp === 'NO_CHANGE') {\n      /*\n       * Renegotiation did not change anything media related. This renegotiation\n       *    may have been for a different purpose, such as changing the remote\n       *    endpoint during a transfer.\n       *\n       * Let this remoteOp default to the generic \"update call\" operation except when we're on locally hold.\n       */\n\n      /*\n       * When our media state is Local Hold, this means that our sdp has media as inactive.\n       * Therefore, when we receive remote sdp with media as also inactive, this means the remote side is doing a hold operation.\n       * Because of this, we get a remoteOp of `NO_CHANGE` when we actually want to handle it as a remote operation\n       *  inorder to get into a dual hold state.\n       */\n      if (mediaState === CALL_MEDIA_STATES.LOCAL_HOLD) {\n        remoteOp = OPERATIONS.HOLD\n      }\n    }\n\n    // Mark the moment when we got a remote operation with a top-level event.\n    const callReport = CallReporter.getReport(targetCall.id)\n    // NOTE: Not all OPERATION event names refer to a 'remote' counterpart\n    let eventName\n    if (remoteOp.includes('_MEDIA') || remoteOp === 'HOLD' || remoteOp === 'UNHOLD') {\n      eventName = REPORTER_OPERATION_EVENTS_MAP[remoteOp + '_REMOTE']\n    } else if (remoteOp === 'NO_CHANGE' || remoteOp === 'UNKNOWN') {\n      // TODO: A backup of 'UNKNOWN' type is included as a fail-safe to prevent operations\n      //    from crashing (eg. media restart). This needs a proper solution.\n      eventName = 'UNKNOWN'\n    } else {\n      eventName = REPORTER_OPERATION_EVENTS_MAP[remoteOp]\n    }\n\n    const operationEvent = callReport.addEvent(eventName)\n    context.dispatch(\n      actions.operationUpdate(targetCall.id, remoteOp, false, {\n        transition: OP_TRANSITIONS.START,\n        eventId: operationEvent.id\n      })\n    )\n\n    log.info(`Processing update request as remote ${remoteOp} operation in ${mediaState} scenario.`)\n    const { callAction, eventFns } = getCallAction(remoteOp)\n\n    if (callAction.name === 'updateCall') {\n      log.debug(`Call action for ${remoteOp} not known; using generic action.`)\n    }\n\n    /*\n     * If the remote operation is offering media but the call is locally held,\n     *    then we need to modify the offer to ensure that media does not restart.\n     */\n    if (isMediaFlowing && [CALL_MEDIA_STATES.DUAL_HOLD, CALL_MEDIA_STATES.LOCAL_HOLD].includes(mediaState)) {\n      log.debug('Modifying remote offer to prevent resetting media while in local hold.')\n      sdp = setMediaInactive(sdp)\n      if (!sdp) {\n        log.debug('SDP is either undefined or not a string.')\n        return\n      }\n      // Update the `mediaDiff` after we modified the SDP.\n      mediaDiff = CallstackSDP.compareMedia(remoteDesc.sdp, sdp, true)\n    }\n\n    /**\n     * Decision: When we receive a remote offer SDP that has a different \"session\n     *    ID\" as the currently set remote SDP, recreate the call's PeerConnection.\n     * This is a workaround/fix for scenarios where the remote endpoint changes.\n     *    It avoids possible DTLS role conflict issues.\n     */\n    // TODO: Also check fingerprint?\n    const sameSession = await isSameSdpSessionId(WebRTC, targetCall.webrtcSessionId, sdp)\n    if (!sameSession) {\n      log.debug(`Received offer SDP is from a different session. Recreating Peer for call ${targetCall.id}.`)\n      const session = await WebRTC.sessionManager.get(targetCall.webrtcSessionId)\n      await session.recreatePeer()\n    } else if (remoteOp === OPERATIONS.UNHOLD && targetCall.hasMOH) {\n      /*\n       * Edge-case: Even though its the same SDP session, the Peer still needs to\n       *    be recreated.\n       * The remote operation is an unhold but it is also stopping MoH. The Peer was\n       *    recreated on start MOH because the SDP was from a different session, but\n       *    the session doesn't change for stop MOH because it was a remote complex\n       *    operation. The Peer needs to be recreated again otherwise local tracks\n       *    will not be properly added back the call (because of how `recreatePeer` works).\n       * Reference: KJS-934\n       */\n      log.debug(\n        `Received offer SDP is both an unhold and stop MoH on the same session. Recreating Peer for call ${targetCall.id}.`\n      )\n      const session = await WebRTC.sessionManager.get(targetCall.webrtcSessionId)\n      await session.recreatePeer()\n    }\n\n    /**\n     * If the offer SDP has a DTLS role of active (which is invalid), change it to\n     *    actpass. This is a workaround for transfer scenarios where the offer SDP\n     *    is the remote endpoint's answer SDP from them answering the call. This\n     *    happens when slow-start is not done for the transfer.\n     */\n    if (sdp.includes('setup:active')) {\n      log.debug(`Received offer SDP with active role for call ${targetCall.id}. Changing.`)\n      sdp = sdp.replace(/setup:active/g, 'setup:actpass')\n    }\n\n    // Handle the offer SDP to receive an answer SDP.\n    // TODO: Handle the offer differently depending on remote operation.\n    let answer\n    try {\n      answer = await CallstackWebrtc.handleOffer(sdp, targetCall.webrtcSessionId, targetCall.bandwidth)\n    } catch (error) {\n      log.debug('Failed to receive offer SDP.', error)\n      // TODO: Dispatch an error action to notify of the error scenario.\n      // The call may now be in a bad state and needs to be fixed.\n      throw error\n    }\n\n    // Get the list of remote tracks that are changing (either added or removed) as\n    //    part of the remote operation. This is done after `handleOffer` so the\n    //    Transceivers are up-to-date with the changes being offered.\n    let remoteTracks = []\n    if (!sameSession) {\n      // If the PeerConnection was recreated, then ALL remote tracks will be new.\n      remoteTracks = await getAllRemoteTracks(session)\n    } else {\n      remoteTracks = await getAffectedRemoteTracks(remoteOp, mediaDiff, session)\n    }\n\n    let affectedLocalTracks\n    if (remoteOp === OPERATIONS.HOLD) {\n      // On remote hold, all local tracks become unavailable.\n      affectedLocalTracks = targetCall.localTracks\n    } else if (remoteOp === OPERATIONS.UNHOLD && !targetCall.localHold) {\n      // On remote unhold (that isn't a dual-hold), all local tracks on the Session\n      //    become available.\n      const sessionState = getSessionById(context.getState(), targetCall.webrtcSessionId)\n      affectedLocalTracks = sessionState.localTracks\n    }\n\n    // Send answer sdp back to remote side\n    const callInfo = {\n      wrtcsSessionId: targetCall.wrtcsSessionId,\n      answer: answer.answerSDP,\n      isAnonymous: targetCall.isAnonymous,\n      account: targetCall.account,\n      customParameters: targetCall.customParameters,\n      customBodies: targetCall.customBodies\n    }\n\n    try {\n      await CallRequests.updateSessionResponse(callInfo)\n      log.info('Finished responding to remote update. Changing state based on the remote operation.')\n      const action = callAction(targetCall.id, {\n        remote: true,\n        remoteParticipant: {\n          displayNumber: remoteNumber,\n          displayName: remoteName\n        },\n        // Include the affected tracks as part of the action so the call's\n        //    state can be updated accordingly.\n        localTracks: affectedLocalTracks,\n        remoteTracks\n      })\n\n      const prevState = context.getState()\n\n      context.dispatch(action)\n\n      // Dispatch an operational update action just to update the main event's id\n      // as being the most recent one, as a result of a remote hold.\n      // There is no follow-up for transition, so consider it a finished transition.\n      context.dispatch(\n        actions.operationUpdate(targetCall.id, remoteOp, false, {\n          transition: OP_TRANSITIONS.FINISH\n        })\n      )\n\n      const currentState = context.getState()\n\n      if (eventFns) {\n        eventFns.forEach(eventFn => {\n          const event = eventFn(action, prevState, currentState)\n          if (!event.skip) {\n            emitEvent(event.type, event.args)\n          }\n        })\n      }\n    } catch (error) {\n      // Scenario: The offer was processed, but failed to respond with the answer.\n      // The remote side needs the answer SDP before the call is \"connected\".\n      // TODO: Handle this scenario (retry request or fail/revert operation?)\n      log.info('Failed to respond to remote offer with an answer.')\n      const action = callAction(targetCall.id, {\n        remote: true,\n        error\n      })\n\n      const prevState = context.getState()\n\n      context.dispatch(action)\n\n      // Update call state to indicate the operation is finished, since it failed.\n      context.dispatch(\n        actions.operationUpdate(targetCall.Id, remoteOp, false, {\n          transition: OP_TRANSITIONS.FINISH\n        })\n      )\n\n      const currentState = context.getState()\n\n      if (eventFns) {\n        eventFns.forEach(eventFn => {\n          const event = eventFn(action, prevState, currentState)\n          if (!event.skip) {\n            emitEvent(event.type, event.args)\n          }\n        })\n      }\n      operationEvent.setError(error)\n    }\n    // For both success or failure cases, end the event\n    operationEvent.endEvent()\n  }\n\n  return handleUpdateRequest\n}\n","export default function setMediaInactive (sdp) {\n  const regex = /sendrecv|sendonly|recvonly/gi\n  if (!sdp || typeof sdp !== 'string') {\n    return\n  }\n\n  return sdp.replace(regex, 'inactive')\n}\n","/**\n * Compares whether a new remote SDP for a Session has the same SDP session ID\n *    of the previous remote SDP.\n * @method isSameSdpSessionId\n * @param  {Object}  WebRTC    The webRTC stack.\n * @param  {string}  sessionId ID of the Session under question.\n * @param  {string}  sdp       New remote SDP to compare the current one with.\n * @return {boolean}\n */\nexport async function isSameSdpSessionId (WebRTC, sessionId, sdp) {\n  const session = await WebRTC.sessionManager.get(sessionId)\n  const currentDesc = await session.getRemoteDescription()\n\n  // TODO: How to act when there isn't a remote SDP set?\n  // Currently: Return falsy to cause a recreate. If there isn't a remote SDP\n  //    set, it's possible we're in an error scenario.\n  if (currentDesc && currentDesc.sdp) {\n    const sameId = hasSameSessionId(currentDesc.sdp, sdp)\n    return sameId\n  }\n}\n\n/**\n * Checks whether two SDPs have the same session ID.\n * @method hasSameSessionId\n * @param  {string}  sdp    A valid SDP string.\n * @param  {string}  newSdp A valid SDP string.\n * @return {boolean} Whether the two SDPs have the same session ID.\n */\nexport function hasSameSessionId (sdp, newSdp) {\n  const firstSdpSessionId = getSdpSessionId(sdp)\n  const secondSdpSessionId = getSdpSessionId(newSdp)\n\n  if (firstSdpSessionId && secondSdpSessionId) {\n    return firstSdpSessionId === secondSdpSessionId\n  }\n}\n\n/**\n * Extracts the session ID from the SDP.\n * Session ID is located in the o= line.\n * Ref: https://tools.ietf.org/html/rfc4566#section-5.2\n * @method getSdpSessionId\n * @param  {string} sdp A valid SDP string.\n * @return {string} The SDP's session ID.\n */\nexport function getSdpSessionId (sdp) {\n  const oLine = sdp.match(/o=.*/gm)\n\n  if (oLine && oLine[0]) {\n    return oLine[0].split(' ')[1]\n  }\n}\n","/*\n * SDP Helper Operations available in the Callstack.\n * This file is where the names for the operations are defined.\n */\nimport compareMedia from './media/compareMedia'\nimport runPipeline from './pipeline'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('CallstackSDP.compareMedia', () => compareMedia(bottle.container))\n  bottle.factory('CallstackSDP.runPipeline', () => runPipeline(bottle.container))\n}\n","import summarizeMedia from './summarizeMedia'\nimport { matchMedias, matchMediasNaive } from './matchMedias'\nimport compareSummary from './compareSummary'\nimport { MEDIA_TRANSITIONS } from './constants'\n\n// Libraries.\nimport sdpTransform from 'sdp-transform'\n\n/**\n * Factory function for creating an instance of the compare media sdp function.\n * @method createCompareMedia\n * @param {Object} container\n * @param {Object} container.logManager The SDK's logManager.\n * @return {Function}\n */\nexport default function createCompareMedia (container) {\n  const { logManager } = container\n  /**\n   * Compare two SDPs to determine the differences in their media sections.\n   * The SDPs need to have been created by the same source.\n   * @method compareMedia\n   * @param  {string}  logManager    The log manager.\n   * @param  {string}  prevSdpString A previous SDP.\n   * @param  {string}  sdpString     A new SDP.\n   * @param  {boolean} [isNaive=false] Whether to match media sections naively.\n   * @return {MediaDiff}\n   */\n  function compareMedia (prevSdpString, sdpString, isNaive = false) {\n    // Parse the SDP string into an SDP object for easier handling.\n    const prevSdp = sdpTransform.parse(prevSdpString)\n    const sdp = sdpTransform.parse(sdpString)\n\n    // Take out only the parts of the SDP that we are interested in.\n    //    Each \"media\" relates to a media section of the SDP.\n    const prevMedia = summarizeMedia(logManager, prevSdp)\n    const currMedia = summarizeMedia(logManager, sdp)\n\n    let sortedMedia\n    if (isNaive) {\n      // Match the medias naively, instead of guaranteeing they are\n      //    the same media section.\n      sortedMedia = matchMediasNaive(prevMedia, currMedia)\n    } else {\n      sortedMedia = matchMedias(prevMedia, currMedia)\n    }\n\n    // Media found in the previous SDP but not the latest SDP were removed.\n    const removed = sortedMedia.prevUnmatched\n    // Media found in the latest SDP but not the previous SDP were added.\n    const added = sortedMedia.currUnmatched\n\n    // Media found in both SDPs may have been changed.\n    const changed = []\n    const unchanged = []\n\n    sortedMedia.matched.forEach(({ previous, current }) => {\n      const changes = compareSummary(previous, current)\n\n      if (changes.sending === MEDIA_TRANSITIONS.SAME && changes.receiving === MEDIA_TRANSITIONS.SAME) {\n        // No changes.\n        unchanged.push(previous)\n      } else {\n        // Changes. Include both the media summary and the changes found.\n        /**\n         * Description of how a media line changed, with the latest summary.\n         * @typedef  {Object}       ChangedMedia\n         * @property {MediaSummary} media        The new summary of the media section.\n         * @property {MediaChanges} changes      The changes that occurred to the media.\n         */\n        changed.push({ media: current, changes })\n      }\n    })\n\n    /**\n     * The computed differences of media sections between two SDPs.\n     * @typedef  {Object}              MediaDiff\n     * @property {Array<MediaSummary>} added     Media sections that are new in the latest SDP.\n     * @property {Array<MediaSummary>} removed   Media sections that are missing in the latest SDP.\n     * @property {Array<ChangedMedia>} changed   Media changes between the two SDPs.\n     * @property {Array<MediaSummary>} unchanged Media sections that remained the same.\n     */\n    return {\n      added,\n      removed,\n      changed,\n      unchanged\n    }\n  }\n\n  return compareMedia\n}\n","/**\n * Reduce the media information in the SDP to only what we will use.\n * The SDP object provided as input is assumed to use standard values.\n *\n * Only supports SDPs where there is only one track per media section.\n *    eg. Unified-Plan (?).\n *\n * @method summarizeMedia\n * @param  {Object} sdp The full SDP object.\n * @param  {Object} logManager The log manager.\n * @return {Array<MediaSummary>} Summarized media sections from the SDP.\n */\nexport default function summarizeMedia (logManager, sdp) {\n  const log = logManager.getLogger('SDP')\n  const sdpMedia = []\n  sdp.media.forEach((media, index) => {\n    /*\n     * Generate/Find a unique ID for this media section. This will be used to\n     *    compare against another SDP's media sections to find matching\n     *    sections.\n     */\n    const sectionId = media.mid\n    // In case the sectionId is undefined, take note of the index of the media section.\n    const sectionIndex = index\n\n    if (media.ssrcGroups && media.ssrcGroups.length > 1) {\n      /*\n       * All of the logic in this file assumes that a media section only has 1\n       *    track. If there are more than one, it means that we are using\n       *    a plan other then Unified-Plan (e.g. A plan with more than 1 track of the same media type), which is not\n       *    something that we want to support.\n       */\n      log.debug(`Media section contains multiple ssrc groups. Summary for ${sectionId} will be wrong.`)\n    }\n\n    // If the media section doesn't have a direction, then use the session-level direction.\n    const mediaDirection = media.direction || sdp.direction\n\n    // Whether this media section is sending and/or receiving.\n    let willSend\n    let willReceive\n\n    if (mediaDirection) {\n      willSend = mediaDirection.includes('send')\n      willReceive = mediaDirection.includes('recv')\n    } else {\n      // If there is no media direction attribute at both the media-level and\n      //    session-level, then it is to be assumed the direction is \"sendrecv\".\n      // Ref: RFC 4566, page 26: https://tools.ietf.org/html/rfc4566\n      willSend = true\n      willReceive = true\n    }\n\n    let mediaId, trackId\n    /*\n     * If the media section is sending, then it has information about the track\n     *    that it is sending.\n     *\n     * Note: The media section will never have information about a track it is\n     *    receiving (ie. willReceive), because the SDP only describes the\n     *    \"local\" PeerConnection's situation.\n     */\n    if (willSend) {\n      /**\n       * The SDP should either have a `msid` property (a=msid line) or `ssrc`\n       *    lines with the same information (`a=ssrc:... label:...` and\n       *    `a=ssrc:... mslabel:...`).\n       * If it has nethier, then the SDP says it wants to send a track, but it\n       *    has no track to send.\n       */\n      if (media.msid) {\n        ;[mediaId, trackId] = media.msid.split(' ')\n      } else if (media.ssrcs) {\n        mediaId = media.ssrcs.find(ssrc => ssrc.attribute === 'mslabel').value\n        trackId = media.ssrcs.find(ssrc => ssrc.attribute === 'label').value\n      }\n    } else {\n      // This media section is not sending a track, so there is no information.\n      mediaId = undefined\n      trackId = undefined\n    }\n\n    /**\n     * Summarized information about a media section from an SDP.\n     * @typedef  {Object}  MediaSummary\n     * @property {string}  sectionId    A unique identifier for the media section.\n     * @property {string}  sectionIndex The index of the media section in the SDP.\n     * @property {string}  type         The type of media line.\n     * @property {boolean} willSend     Whether the media will send data.\n     * @property {boolean} willReceive  Whether the media will receive data.\n     * @property {string}  mediaId      The MediaStream ID of the media.\n     * @property {string}  trackId      The MediaStreamTrack ID of the media.\n     */\n    const summary = {\n      sectionId,\n      sectionIndex,\n      type: media.type,\n      willSend,\n      willReceive,\n      mediaId,\n      trackId\n    }\n\n    sdpMedia.push(summary)\n  })\n  return sdpMedia\n}\n","/**\n * Matches MediaSummary objects between two lists of media.\n *    Finds matches between the lists based on the media's sectionId.\n *    If sectionId is undefined (rare cases), matches based on stream/track Ids.\n * Returns a list of matching medias, and a list of unmatched medias for both\n *    previous and current lists.\n * @method matchMedias\n * @param  {Array<MediaSummary>} prevList List of previous media summaries.\n * @param  {Array<MediaSummary>} currList List of current media summaries.\n * @return {Object} Three lists of matched, prevUnmmatched, and currUnmatched.\n */\nexport function matchMedias (prevList, currList) {\n  // Redeclare these lists so we don't modify the originals.\n  const prev = [...prevList]\n  const curr = [...currList]\n\n  const prevUnmatched = []\n  let currUnmatched = []\n  const matched = []\n\n  // Function for matching a single media object to another object from a list.\n  //    Matches by sectionId.\n  const findMatchingSectionId = function (prevM, mediaList) {\n    return mediaList.findIndex(media => media.sectionId === prevM.sectionId)\n  }\n  // Function for matching a single media object to another object from a list.\n  //    Matches by media/track ID.\n  const findMatchingMediaIds = function (prevM, mediaList) {\n    return mediaList.findIndex(media => {\n      return (\n        // One or both of the sectionIds should be undefined, otherwise we shouldn't\n        //    be matching with the media/track ID.\n        (typeof prevM.sectionId === 'undefined' || typeof media.sectionId === 'undefined') &&\n        prevM.mediaId === media.mediaId &&\n        prevM.trackId === media.trackId\n      )\n    })\n  }\n\n  /*\n   * Step 1:\n   * Iterate over previous medias that have a defined sectionId.\n   *    First try to find a matching current media with a sectionId.\n   *    If none, try to find a matching current media with the same media IDs.\n   *    If still none, then consider the prev media to be unmatched.\n   */\n  prev\n    .filter(m => ['number', 'string'].includes(typeof m.sectionId))\n    .forEach(prevM => {\n      const currIndex = findMatchingSectionId(prevM, curr)\n      if (currIndex >= 0) {\n        // If there's a matching sectionId, add the two medias to the matched list.\n        //    Remove currM from its list to ensure nothing else can match with it.\n        const [currM] = curr.splice(currIndex, 1)\n        matched.push({ previous: prevM, current: currM })\n      } else {\n        const currIndex = findMatchingMediaIds(prevM, curr)\n        if (currIndex >= 0) {\n          // If there's a matching media IDs, add the two medias to the matched list.\n          //    Remove currM from its list to ensure nothing else can match with it.\n          const [currM] = curr.splice(currIndex, 1)\n          matched.push({ previous: prevM, current: currM })\n        } else {\n          // If a match still wasn't found, then consider prevM unmatched.\n          prevUnmatched.push(prevM)\n        }\n      }\n    })\n\n  /*\n   * Step 2:\n   * Iterate over previous medias that do not have a defined sectionId.\n   * Media with sectionIds were given priority since that should be 99% of scenarios.\n   *    Try to find a matching current media with the same media IDs.\n   *    If none, then consider the prev media to be unmatched.\n   */\n  prev\n    .filter(m => typeof m.sectionId === 'undefined')\n    .forEach(prevM => {\n      const currIndex = findMatchingMediaIds(prevM, curr)\n      if (currIndex >= 0) {\n        // If there's a matching media IDs, add the two medias to the matched list.\n        //    Remove currM from its list to ensure nothing else can match with it.\n        const [currM] = curr.splice(currIndex, 1)\n        matched.push({ previous: prevM, current: currM })\n      } else {\n        // If a match wasn't found, then consider prevM unmatched.\n        prevUnmatched.push(prevM)\n      }\n    })\n\n  /*\n   * Step 3:\n   * Consider all remaining medias in the current list to be unmatched.\n   *    All matched currMedia should have been removed from the list when it was matched.\n   */\n  currUnmatched = curr\n\n  return {\n    prevUnmatched,\n    currUnmatched,\n    matched\n  }\n}\n\n/**\n * Matches MediaSummary objects between two lists of media.\n *\n * Matches them based on their index in the lists. That's it.\n * This works under the assumption that the order of the media sections\n *    will never change, which is generally true. This may not be true\n *    in \"non-basic\" media scenarios (ie. more than two media sections)\n *    if a PeerConnection needs to be recreated.\n * This will only work if only comparing SDPs, and not using the\n *    Transceivers that represent the media sections.\n * @method matchMediasNaive\n * @param  {Array<MediaSummary>} prevList List of previous media summaries.\n * @param  {Array<MediaSummary>} currList List of current media summaries.\n * @return {Object} Three lists of matched, prevUnmmatched, and currUnmatched.\n */\nexport function matchMediasNaive (prevList, currList) {\n  // Redeclare these lists so we don't modify the originals.\n  const prev = [...prevList]\n  const curr = [...currList]\n\n  const prevUnmatched = []\n  const currUnmatched = []\n  const matched = []\n\n  const longerLength = prev.length <= curr.length ? curr.length : prev.length\n\n  // Loop enough times to cover which media list is longer.\n  for (let i = 0; i < longerLength; i++) {\n    if (prev[i] === undefined) {\n      // If the prev media at this index is undefined, then the curr\n      //    media at this index is currUnmatched.\n      currUnmatched.push(curr[i])\n    } else if (curr[i] === undefined) {\n      // Same thing other way around.\n      prevUnmatched.push(prev[i])\n    } else {\n      // Else both prev/curr have a media at this index. Match them.\n      matched.push({ previous: prev[i], current: curr[i] })\n    }\n  }\n\n  return {\n    prevUnmatched,\n    currUnmatched,\n    matched\n  }\n}\n","import { MEDIA_TRANSITIONS } from './constants'\n\n/**\n * Compare two summarized Media section objects to determine how it changed.\n * @method compareSummary\n * @param  {MediaSummary} prevMedia The previous media summary.\n * @param  {MediaSummary} currMedia The current media summary.\n * @return {MediaChanges} How the media directions changed from prevMedia to currMedia.\n */\nexport default function compareSummary (prevMedia, currMedia) {\n  /**\n   * Description of changes to a media line.\n   * @typedef  {Object} MediaChanges\n   * @property {MediaTransition} sending   The change in the media sending data.\n   * @property {MediaTransition} receiving The change in the media receiving data.\n   */\n  const change = {\n    sending: undefined,\n    receiving: undefined\n  }\n\n  if (prevMedia.willSend !== currMedia.willSend) {\n    if (currMedia.willSend) {\n      // Started sending.\n      change.sending = MEDIA_TRANSITIONS.START\n    } else {\n      // Stopped sending.\n      change.sending = MEDIA_TRANSITIONS.STOP\n    }\n  } else {\n    // No change.\n    change.sending = MEDIA_TRANSITIONS.SAME\n  }\n\n  if (prevMedia.willReceive !== currMedia.willReceive) {\n    if (currMedia.willReceive) {\n      // Started receiving.\n      change.receiving = MEDIA_TRANSITIONS.START\n    } else {\n      // Stopped receiving.\n      change.receiving = MEDIA_TRANSITIONS.STOP\n    }\n  } else {\n    // No change.\n    change.receiving = MEDIA_TRANSITIONS.SAME\n  }\n\n  return change\n}\n","// Pipeline modes.\nimport runPipelineDefault from './runDefault'\nimport runPipelineYaml from './runYaml'\n\n// Libraries.\nimport { logLevels } from 'kandy-logger'\n\n/**\n * Factory function for creating an instance of the SDP Pipeline.\n * @param {Object} container\n * @param {Object} container.logManager The SDK's logManager.\n * @return {Function}\n */\nexport default function createPipeline (container) {\n  const { logManager } = container\n  const log = logManager.getLogger('SDP')\n\n  /**\n   * Basic SDP pipeline runner. Decides how to log the output based on log level.\n   * @method runPipeline\n   * @param  {Array}      handlers       List of functions that transform the SDP.\n   * @param  {string}     sdp            The session description.\n   * @param  {Object}     info           Information about the session description.\n   * @param  {string}     info.callId    The id corresponding to the call on which this pipeline is being run.\n   * @param  {RTCSdpType} info.type      The session description's type.\n   * @param  {string}     info.step      The step that will occur after the Pipeline is run.\n   *    Will be either 'set' (the SDP will be set locally) or 'send' (the SDP will be sent\n   *    to the remote endpoint).\n   * @param  {string}     info.endpoint  Which end of the connection created the SDP.\n   * @param  {BandwidthControls} [info.bandwidth] Information about bandwidth controls.\n   * @return {string}     The modified session description.\n   */\n  function runPipeline (handlers, sdp, info) {\n    const logLevel = log.getLevel()\n    const isDebug = logLevel === logLevels.DEBUG || logLevel === logLevels.TRACE\n    const pipelineFunc = isDebug ? runPipelineYaml : runPipelineDefault\n\n    return pipelineFunc(handlers, sdp, info, log)\n  }\n\n  return runPipeline\n}\n","// Utils.\nimport { formattedFunctionName } from './utils'\n\n// Libraries.\nimport sdpTransform from 'sdp-transform'\nimport { cloneDeep, isArray, isFunction } from 'lodash/fp'\n\n/**\n * Basic SDP pipeline runner.\n * See parameters for runPipeline in index for full description of them.\n * @method runPipelineYaml\n * @param  {Array}  handlers List of functions that transform the SDP.\n * @param  {string} sdp      The session description.\n * @param  {Object} info     Information about the session description.\n * @param  {Logger} log      The logger to use.\n * @return {string}          The modified session description.\n */\nexport default function runPipelineDefault (handlers, sdp, info, log) {\n  const objectSdp = sdpTransform.parse(sdp)\n\n  const originalSdp = Object.freeze(objectSdp)\n  let newSdp = cloneDeep(originalSdp)\n\n  if (isArray(handlers)) {\n    handlers.forEach(handler => {\n      const name = formattedFunctionName(handler)\n\n      if (isFunction(handler)) {\n        try {\n          newSdp = handler(newSdp, info, originalSdp)\n        } catch (error) {\n          log.info(\n            `Currently running pipeline to ${info.step} ${info.endpoint} ${info.type} for callId: ${info.callId}`\n          )\n          log.error(`Error running SDP handler: ${name}`, error)\n        }\n      } else {\n        log.error('SDP handler not a function; skipping.')\n      }\n    })\n  }\n\n  return sdpTransform.write(newSdp)\n}\n","// Utils.\nimport { formattedFunctionName, sdpToYaml } from './utils'\n\n// Libraries.\nimport sdpTransform from 'sdp-transform'\nimport { cloneDeep, isArray, isFunction } from 'lodash/fp'\nimport diff from 'variable-diff'\n\n/**\n * Basic SDP pipeline runner that logs the functions in Yaml.\n * See parameters for runPipeline in index for full description of them.\n * @method runPipelineYaml\n * @param  {Array}  handlers List of functions that transform the SDP.\n * @param  {string} sdp      The session description.\n * @param  {Object} info     Information about the session description.\n * @param  {Logger} log      The logger to use.\n * @return {string}          The modified session description.\n */\nexport default function runPipelineYaml (handlers, sdp, info, log) {\n  const objectSdp = sdpTransform.parse(sdp)\n\n  if (!isArray(handlers)) {\n    return sdpTransform.write(objectSdp)\n  }\n\n  const originalSdp = Object.freeze(objectSdp)\n  let newSdp = cloneDeep(originalSdp)\n\n  /**\n   * For each sdpHandler function we want to log the changes\n   * it makes to the SDP and present a yaml report of the diffs.\n   * So that each diff doesn't contain all previous changes\n   * we need to diff the sdp at it's current stage of transformation.\n   * Only perform this work if we're in debug logging mode.\n   */\n  let diffed\n  let oldNewSdp\n  const results = []\n\n  handlers.forEach(handler => {\n    const name = formattedFunctionName(handler)\n\n    if (isFunction(handler)) {\n      log.debug(`Running SDP handler ${name}.`)\n\n      try {\n        oldNewSdp = cloneDeep(newSdp)\n        newSdp = handler(newSdp, info, originalSdp)\n        diffed = diff(oldNewSdp, newSdp)\n        results.push({ name, diff: diffed.text })\n      } catch (error) {\n        log.info(`Currently running pipeline to ${info.step} ${info.endpoint} ${info.type} for callId: ${info.callId}`)\n        log.error(`Error running SDP handler: ${name}`, error)\n      }\n    } else {\n      log.error('SDP handler not a function; skipping.')\n      results.push({ name, diff: 'No diff, not a function.' })\n    }\n  })\n\n  diffed = diff(originalSdp, newSdp)\n  const yamlFormat = sdpToYaml(info)(originalSdp)(newSdp)(results)(diffed)\n  log.debug(`SDP Handler changes: ${yamlFormat}`)\n\n  return sdpTransform.write(newSdp)\n}\n","'use strict';\n\nvar chalk = require('chalk');\n\nvar typeColors = {\n  modified: 'yellow',\n  added: 'green',\n  removed: 'red'\n};\n\nvar defaultOptions = {\n  indent: '  ',\n  newLine: '\\n',\n  wrap: function wrap(type, text) {\n    return chalk[typeColors[type]](text);\n  },\n  color: true\n};\n\nfunction isObject(obj) {\n  return typeof obj === 'object' && obj && !Array.isArray(obj);\n}\n\nfunction printVar(variable) {\n  if (typeof variable === 'function') {\n    return variable.toString().replace(/\\{.+\\}/,'{}');\n  } else if((typeof variable === 'object' || typeof variable === 'string') && !(variable instanceof RegExp)) {\n    return JSON.stringify(variable);\n  }\n\n  return '' + variable;\n}\n\nfunction indentSubItem(text, options) {\n  return text.split(options.newLine).map(function onMap(line, index) {\n    if (index === 0) {\n      return line;\n    }\n    return options.indent + line;\n  }).join(options.newLine);\n}\n\nfunction keyChanged(key, text, options) {\n  return options.indent + key + ': ' + indentSubItem(text, options) + options.newLine\n}\n\nfunction keyRemoved(key, variable, options) {\n  return options.wrap('removed', '- ' + key + ': ' + printVar(variable)) + options.newLine;\n}\n\nfunction keyAdded(key, variable, options) {\n  return options.wrap('added', '+ ' + key + ': ' + printVar(variable)) + options.newLine;\n}\n\nfunction diffInternal(left, right, options) {\n  var text = '';\n  var changed = false;\n  var itemDiff;\n  var keys;\n  var subOutput = '';\n\n  if (Array.isArray(left) && Array.isArray(right)) {\n    for (var i = 0; i < left.length; i++) {\n      if (i < right.length) {\n        itemDiff = diffInternal(left[i], right[i], options);\n        if (itemDiff.changed) {\n          subOutput += keyChanged(i, itemDiff.text, options);\n          changed = true;\n        }\n      } else {\n        subOutput += keyRemoved(i, left[i], options);\n        changed = true;\n      }\n    }\n    if (right.length > left.length) {\n      for (; i < right.length; i++) {\n        subOutput +=  keyAdded(i, right[i], options);\n      }\n      changed = true;\n    }\n    if (changed) {\n      text = '[' + options.newLine + subOutput + ']';\n    }\n  } else if (isObject(left) && isObject(right)) {\n    keys = Object.keys(left);\n    var rightObj = Object.assign({}, right);\n    var key;\n    keys.sort();\n    for (var i = 0; i < keys.length; i++) {\n      key = keys[i];\n      if (right.hasOwnProperty(key)) {\n        itemDiff = diffInternal(left[key], right[key], options);\n        if (itemDiff.changed) {\n          subOutput += keyChanged(key, itemDiff.text, options);\n          changed = true;\n        }\n        delete rightObj[key];\n      } else {\n        subOutput += keyRemoved(key, left[key], options);\n        changed = true;\n      }\n    }\n\n    var addedKeys = Object.keys(rightObj);\n    for (var i = 0; i < addedKeys.length; i++) {\n      subOutput += keyAdded(addedKeys[i], right[addedKeys[i]], options);\n      changed = true;\n    }\n\n    if (changed) {\n      text = '{' + options.newLine + subOutput + '}';\n    }\n\n  } else if (left !== right) {\n    text = options.wrap('modified', printVar(left) + ' => ' + printVar(right));\n    changed = true;\n  }\n\n  return {\n    changed: changed,\n    text: text\n  };\n}\n\nfunction diff(left, right, options) {\n  options = options || {};\n  if (!options.color && options.wrap) {\n    throw new Error('Can\\'t specify wrap and color options together.')\n  }\n\n  var combinedOptions = Object.assign({}, defaultOptions, options);\n  if (!combinedOptions.color) {\n    combinedOptions.wrap = function(type, text) { return text }\n  }\n\n  return diffInternal(left, right, combinedOptions)\n}\n\n\nmodule.exports = diff;","'use strict';\nconst ansiStyles = require('ansi-styles');\nconst {stdout: stdoutColor, stderr: stderrColor} = require('supports-color');\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = require('./util');\n\nconst {isArray} = Array;\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = require('./templates');\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n","'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n","/*\n * Webrtc Helper Operations available in the Callstack.\n * This file is where the names for the operations are defined.\n */\nimport closeCall from './establish/closeCall'\n\nimport createLocal from './media/createLocal'\n\nimport generateOffer from './negotiation/generateOffer'\nimport handleOffer from './negotiation/handleOffer'\nimport receivedAnswer from './negotiation/receivedAnswer'\n\nexport default function initOperation (bottle) {\n  // Provide the top-level container to the factory functions.\n  //    Otherwise they would get the `operations` sub-container.\n  bottle.factory('CallstackWebrtc.closeCall', () => closeCall(bottle.container))\n  bottle.factory('CallstackWebrtc.createLocal', () => createLocal(bottle.container))\n  bottle.factory('CallstackWebrtc.generateOffer', () => generateOffer(bottle.container))\n  bottle.factory('CallstackWebrtc.handleOffer', () => handleOffer(bottle.container))\n  bottle.factory('CallstackWebrtc.receivedAnswer', () => receivedAnswer(bottle.container))\n}\n","/**\n * Bottle wrapper for \"close call\" operation.\n * @return {Function}\n */\nexport default function closeCallOperation (container) {\n  const { logManager, WebRTC } = container\n\n  /**\n   * Performs the webRTC session functions associated with closing a call.\n   * @method closeCall\n   * @param {string} sessionId the local webRTC session id, used to lookup the session object\n   * @return {undefined}\n   */\n  async function closeCall (sessionId) {\n    const log = logManager.getLogger('CALLSTACK')\n\n    const session = await WebRTC.sessionManager.get(sessionId)\n\n    if (!session) {\n      log.debug(`webRTC session ${sessionId} not found.`)\n      return\n    }\n\n    await Promise.all(\n      session.localTracks.map(async track => {\n        await track.stop()\n      })\n    )\n\n    await session.end()\n  }\n\n  return closeCall\n}\n","// Call Plugin.\nimport { getCallById } from '../../../interface/selectors'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../../errors'\nimport { REPORTER_EVENTS } from '../../reporter/constants'\n\n/**\n * Bottle wrapper for \"create local media\" operation.\n * @return {Function}\n */\nexport default function createLocalOperation (container) {\n  const { context, CallReporter, logManager, WebRTC } = container\n\n  /**\n   * Use the WebRTC stack to create local Media object(s).\n   * The underlying WebRTC APIs used are getUserMedia and getDisplayMedia.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n   *    for more information.\n   * @method createLocal\n   * @async\n   * @param  {Object} mediaConstraints Collection of constraints for each media type.\n   * @param  {MediaStreamConstraints} mediaConstraints.audio Native media contraints for audio.\n   * @param  {MediaStreamConstraints} mediaConstraints.video Native media constraints for video.\n   * @param  {MediaStreamConstraints} mediaConstraints.screen Native media constraints for display (screen).\n   * @return {Array<Object>} List of objects containing the media type and the media itself.\n   * @throws {BasicError} Throws a USER_MEDIA_ERROR error if provided constraints cannot be fulfilled.\n   * @throws {BasicError} Throws a USER_MEDIA_ERROR error if it fails to get media for other reasons.\n   */\n  async function createLocal (mediaConstraints, callId) {\n    const log = logManager.getLogger('CALLSTACK')\n    log.debug('Getting media with constraints: ', mediaConstraints)\n\n    // Add the get user media sub event to the current operation event in the call report\n    const call = getCallById(context.getState(), callId)\n    const callReport = CallReporter.getReport(callId)\n    const operationEvent = callReport.getEvent(call.localOp.eventId)\n    const getUserMediaEvent = operationEvent.addEvent(REPORTER_EVENTS.GET_USER_MEDIA)\n    getUserMediaEvent.addData('mediaConstraints', mediaConstraints)\n\n    const medias = []\n\n    try {\n      if (mediaConstraints.screen) {\n        const screenShareConstraints = {\n          video: mediaConstraints.screen\n        }\n        const screenShareMedia = await WebRTC.media.createLocalScreen(screenShareConstraints)\n        medias.push({\n          type: 'screen',\n          media: screenShareMedia\n        })\n      }\n\n      if (mediaConstraints.audio) {\n        const audioConstraints = {\n          audio: mediaConstraints.audio\n        }\n        const audioMedia = await WebRTC.media.createLocal(audioConstraints)\n        medias.push({\n          type: 'audio',\n          media: audioMedia\n        })\n      }\n\n      if (mediaConstraints.video) {\n        const videoConstraints = {\n          video: mediaConstraints.video\n        }\n        const videoMedia = await WebRTC.media.createLocal(videoConstraints)\n        medias.push({\n          type: 'video',\n          media: videoMedia\n        })\n      }\n    } catch (err) {\n      let errMessage\n      if (err.name === 'OverconstrainedError') {\n        errMessage = `Failed to get media due to constraint: ${err.constraint}.`\n      } else {\n        errMessage = `Failed to get media => Name: ${err.name}; Error Message :${err.message}.`\n      }\n\n      log.info(errMessage)\n\n      // Clean up successful media object when there is partial media failure.\n      for (const eachMedia of medias) {\n        await eachMedia.media.stop()\n      }\n\n      const errorObj = new BasicError({\n        message: errMessage,\n        code: callCodes.USER_MEDIA_ERROR\n      })\n      getUserMediaEvent.setError(errorObj)\n      getUserMediaEvent.endEvent()\n      throw errorObj\n    }\n\n    getUserMediaEvent.endEvent()\n    return medias\n  }\n\n  return createLocal\n}\n","// Call plugin\nimport { getCallByWebrtcSessionId, getOptions } from '../../../interface/selectors'\n\n// Other plugins\nimport BasicError, { callCodes } from '../../../../errors'\nimport { REPORTER_EVENTS } from '../../reporter/constants'\n\n/**\n * Bottle wrapper for \"generate offer\" operation.\n * @return {Function}\n */\nexport default function generateOfferOperation (container) {\n  const { context, logManager, CallstackSDP, WebRTC, CallReporter } = container\n\n  /**\n   * Performs the webRTC session functions associated with creating an SDP offer\n   *\n   * @method generateOffer\n   * @param {string} sessionId the local webRTC session id, used to lookup the session object\n   * @param {Object} mediaDirections\n   * @param {string} mediaDirections.audio mode of audio add to the sdp offer\n   * @param {string} mediaDirections.video mode of video add to the sdp offer\n   * @param {BandwidthControls} [bandwidth] bandwidth configurations to use\n   * @return {Object} offer object containing a Session Description Protocol\n   */\n  async function generateOffer (sessionId, mediaDirections, bandwidth) {\n    const log = logManager.getLogger('CALLSTACK')\n    const session = await WebRTC.sessionManager.get(sessionId)\n\n    if (!session) {\n      const sessionNotFoundMsg = `WebRTC session ${sessionId} not found.`\n      log.debug(sessionNotFoundMsg)\n      throw new BasicError({\n        message: sessionNotFoundMsg,\n        code: callCodes.GENERIC_ERROR\n      })\n    }\n\n    const call = getCallByWebrtcSessionId(context.getState(), sessionId)\n    const callReport = CallReporter.getReport(call.id)\n    const eventId = call.localOp ? call.localOp.eventId : call.remoteOp.eventId\n    const operationEvent = callReport.getEvent(eventId)\n    const setLocalDescriptionEvent = operationEvent.addEvent(REPORTER_EVENTS.SET_LOCAL_DESCRIPTION)\n    setLocalDescriptionEvent.addData('operation', operationEvent.type)\n    /*\n     * Create the local SDP offer, run it through any provided SDP handlers,\n     *    then set it as the Session's local description.\n     */\n    // TODO: Make sure the session is in the correct signaling state to start a\n    //    renegotiation operation.\n    let offer, callConfigOptions\n\n    try {\n      offer = await session.createOffer({ mediaDirections })\n      callConfigOptions = getOptions(context.getState())\n      // This is the \"pre set local\" stage.\n      offer.sdp = CallstackSDP.runPipeline(\n        callConfigOptions.sdpHandlers,\n        offer.sdp,\n        {\n          callId: call.id,\n          type: offer.type,\n          step: 'set',\n          endpoint: 'local',\n          bandwidth\n        },\n        log\n      )\n\n      offer = await session.setLocalDescription(offer)\n    } catch (e) {\n      const error = new BasicError({\n        message: e.message,\n        code: callCodes.GENERIC_ERROR\n      })\n\n      setLocalDescriptionEvent.setError(error)\n      setLocalDescriptionEvent.endEvent()\n      // TODO: Throw an error here and have it handled.\n      //  For now, backwards-compatibility means to just return the error and proceed.\n      return {\n        error,\n        type: null,\n        sdp: null\n      }\n    }\n    // This is the \"pre send local\" stage.\n    // Assign it to a new variable because some browsers enforce the read-only\n    //    properties of a RTCSessionDescription object. The object from\n    //    setLocalDescription is enforced read-only, but the `offer` before that\n    //    is not enforced.\n    const newSdp = CallstackSDP.runPipeline(\n      callConfigOptions.sdpHandlers,\n      offer.sdp,\n      {\n        callId: call.id,\n        type: offer.type,\n        step: 'send',\n        endpoint: 'local',\n        bandwidth\n      },\n      log\n    )\n\n    // TODO: May want to save extra data for this event, maybe ICE candidates\n    setLocalDescriptionEvent.endEvent()\n    return { type: offer.type, sdp: newSdp }\n  }\n\n  return generateOffer\n}\n","// Call plugin.\nimport { getOptions, getCallByWebrtcSessionId, getCallById } from '../../../interface/selectors'\nimport { REPORTER_EVENTS } from '../../reporter/constants'\n\n// Other Plugins\nimport BasicError, { callCodes } from '../../../../errors'\n\n/**\n * Bottle wrapper for \"handle offer\" operation.\n * @return {Function}\n */\nexport default function handleOfferOperation (container) {\n  const { context, logManager, CallstackSDP, WebRTC, CallReporter } = container\n  /**\n   * Performs webRTC portions of receiving an \"offer\" Session Description Protocol\n   *\n   * @method handleOffer\n   * @param  {string} offer Session Description protocol offer\n   * @param  {string} webrtcSessionId local webrtc session id\n   * @param {BandwidthControls} bandwidth bandwidth configurations to use\n   * @returns {Object}\n   */\n  async function handleOffer (offer, webrtcSessionId, bandwidth) {\n    const log = logManager.getLogger('CALLSTACK')\n    const session = await WebRTC.sessionManager.get(webrtcSessionId)\n\n    if (!session) {\n      log.debug(`webRTC session ${webrtcSessionId} not found.`)\n      return\n    }\n\n    const { id: callId } = getCallByWebrtcSessionId(context.getState(), webrtcSessionId)\n\n    /*\n     * Run the remote SDP offer through any SDP handlers provided, then set it\n     *    as the Session's remote description.\n     * This is the \"pre set remote\" stage.\n     */\n    const callConfigOptions = getOptions(context.getState())\n\n    offer = CallstackSDP.runPipeline(\n      callConfigOptions.sdpHandlers,\n      offer,\n      {\n        callId,\n        type: 'offer',\n        step: 'set',\n        endpoint: 'remote'\n      },\n      log\n    )\n\n    const targetCall = getCallById(context.getState(), callId)\n    const callReport = CallReporter.getReport(targetCall.id)\n\n    const operationEvent = callReport.getEvent(targetCall.remoteOp.eventId)\n    const setRemoteDescriptionEvent = operationEvent.addEvent(REPORTER_EVENTS.SET_REMOTE_DESCRIPTION)\n\n    let answer\n    let setLocalDescriptionEvent\n    try {\n      // TODO: Make sure the session is in the correct signaling state to process an offer.\n      const error = await session.processOffer({\n        type: 'offer',\n        sdp: offer\n      })\n\n      if (error) {\n        setRemoteDescriptionEvent.endEvent(error)\n        return { error }\n      }\n      setRemoteDescriptionEvent.endEvent()\n\n      setLocalDescriptionEvent = operationEvent.addEvent(REPORTER_EVENTS.SET_LOCAL_DESCRIPTION)\n      setLocalDescriptionEvent.addData('operation', operationEvent.type)\n\n      /*\n       * Create the local SDP answer, run it through any provided SDP handlers,\n       *    then set it as the Session's local description.\n       */\n      answer = await session.createAnswer()\n\n      // This is the \"pre set local\" stage.\n      answer.sdp = CallstackSDP.runPipeline(\n        callConfigOptions.sdpHandlers,\n        answer.sdp,\n        {\n          callId,\n          type: answer.type,\n          step: 'set',\n          endpoint: 'local',\n          bandwidth\n        },\n        log\n      )\n\n      answer = await session.setLocalDescription(answer)\n    } catch (e) {\n      const error = new BasicError({\n        message: e.message,\n        code: callCodes.GENERIC_ERROR\n      })\n      if (setLocalDescriptionEvent) {\n        setLocalDescriptionEvent.setError(error)\n        setLocalDescriptionEvent.endEvent()\n      }\n      return {\n        error,\n        answerSDP: null\n      }\n    }\n\n    // Run the SDP through the Pipeline again before we send it to the remote side.\n    //    This is the \"pre send local\" stage.\n    // Assign it to a new variable because some browsers enforce the read-only\n    //    properties of a RTCSessionDescription object. The object from\n    //    setLocalDescription is enforced read-only, but the `offer` before that\n    //    is not enforced.\n    const newSdp = CallstackSDP.runPipeline(\n      callConfigOptions.sdpHandlers,\n      answer.sdp,\n      {\n        callId,\n        type: answer.type,\n        step: 'send',\n        endpoint: 'local',\n        bandwidth\n      },\n      log\n    )\n    if (setLocalDescriptionEvent) {\n      setLocalDescriptionEvent.endEvent()\n    }\n\n    return {\n      answerSDP: newSdp\n    }\n  }\n\n  return handleOffer\n}\n","// Call plugin.\nimport { getOptions } from '../../../interface/selectors'\n\n// Helpers.\nimport changeDtlsRoleTo from '../../sdp/handlers/changeDtlsRoleTo'\nimport BasicError, { callCodes } from '../../../../errors'\n\n/**\n * Bottle wrapper for \"received answer\" operation.\n * @return {Function}\n */\nexport default function receivedAnswerOperation (container) {\n  const { context, logManager, CallstackSDP, WebRTC } = container\n\n  /**\n   * An answer SDP has been received and should be applied to the Session.\n   *\n   * This operation is intended to handle all webRTC scenarios where a remote answer\n   *    SDP has been received and needs to be added to the Session. At this point\n   *    in negotiation, a Session should have been created and a local offer SDP\n   *    set. This can be for initial negotiation or for midcall renegotiation, so\n   *    the Session may or may not have a \"current remote SDP\" already.\n   * This saga will complete the negotiation process, as both ends will have both\n   *    an offer and answer SDP set.\n   * Responsibilities:\n   *    1. Ensure this is a valid operation.\n   *        - Session exists, Session is in correct signaling state.\n   *    2. Check the answer SDP for abnormal scenarios.\n   *        - DTLS role issue.\n   *    3. Process the answer SDP via Session's APIs.\n   * @method receivedAnswer\n   * @param {Object} sessionInfo\n   * @param {string} sessionInfo.sessionId\n   * @param {string} sessionInfo.answerSdp\n   * @param {Object} targetCall\n   * @param {string} targetCall.id\n   * @param {boolean} targetCall.isCaller\n   * @returns {undefined}\n   * @throws {BasicError} Throws INVALID_PARAM if the WebRTC session does not exist.\n   * @throws {BasicError} Throws GENERIC_ERROR if the SDP pipeline encounters an error.\n   * @throws {BasicError} Throws SESSION_MISMATCH if negotiation m-line error occurs.\n   * @throws {BasicError} Throws GENERIC_ERROR if other negotiation error occurs.\n   */\n  async function receivedAnswer (sessionInfo, targetCall) {\n    const log = logManager.getLogger('CALL', targetCall.id)\n    log.debug(`Processing SDP answer for session ${sessionInfo.sessionId}.`)\n\n    const session = await WebRTC.sessionManager.get(sessionInfo.sessionId)\n    if (!session) {\n      log.debug(`webRTC session ${sessionInfo.sessionId} not found.`)\n      throw new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message: `WebRTC session for Call ${targetCall.id} does not exist.`\n      })\n    }\n\n    let sdpHandlers = getOptions(context.getState()).sdpHandlers\n    let answerSdp = sessionInfo.answerSdp\n\n    /*\n     * If the answer we received has DTLS role of 'actpass', then this is not a\n     *    normal webRTC scenario. An answer SDP cannot have 'actpass' as the role.\n     * It is assumed that the reason for this is a slow start call.\n     */\n    if (answerSdp.includes('a=setup:actpass')) {\n      /*\n       * Change the DTLS role depending on which side of the call the user is.\n       * Change the caller to passive and the callee to active roles, because\n       *    this is how it would be set for a regular call.\n       */\n      const newRole = targetCall.isCaller ? 'passive' : 'active'\n      log.debug(`Received answer SDP has role of actpass. Changing to ${newRole}.`)\n      sdpHandlers = [...sdpHandlers, changeDtlsRoleTo(newRole, log)]\n    }\n\n    /*\n     * Provide the answer SDP to the Session for \"processing\".\n     * If successful, the webRTC negotiation process is considered complete.\n     */\n    try {\n      /*\n       * Run the remote SDP answer through any SDP handlers provided, then set it\n       *    as the Session's remote description.\n       * This is the \"pre set remote\" stage.\n       */\n      answerSdp = CallstackSDP.runPipeline(sdpHandlers, answerSdp, {\n        callId: targetCall.id,\n        type: 'answer',\n        step: 'set',\n        endpoint: 'remote'\n      })\n      await session.processAnswer({\n        type: 'answer',\n        sdp: answerSdp\n      })\n    } catch (err) {\n      // TODO: Better error handling.\n      log.debug(`Failed to process answer: ${err.message}`)\n      let errorInfo\n      if (err.message.includes('The order of m-lines')) {\n        errorInfo = {\n          code: callCodes.SESSION_MISMATCH,\n          message: 'Failed to receive answer due to media negotiation mismatch.'\n        }\n      } else {\n        errorInfo = {\n          code: callCodes.GENERIC_ERROR,\n          message: `Failed to receive answer: ${err.message}`\n        }\n      }\n\n      throw new BasicError(errorInfo)\n    }\n  }\n\n  return receivedAnswer\n}\n","/**\n * Function generator for an SDP handler function that changes the DTLS role of the SDP.\n * @method changeDtlsRoleTo\n * @param  {string} role\n * @param  {Logger} log The Logger for this call.\n * @return {Function} SDP handler.\n */\nexport default function changeDtlsRoleTo (role, log) {\n  return function changeDtlsRole (newSdp, info, originalSdp) {\n    // Grab the original DTLS role for logging purposes.\n    //    Assumed that the DTLS role is the same in every media section.\n    const original = newSdp.media[0].setup\n    log.debug(`Changing SDP DTLS role from ${original} to ${role}.`)\n\n    // Change the DTLS role in every media section.\n    newSdp.media.map(media => {\n      media.setup = role\n      return media\n    })\n\n    return newSdp\n  }\n}\n","// Call plugin.\nimport { OP_TRANSITIONS, OP_STATUS, OPERATIONS } from '../../interface/constants'\nimport { CALL_STATES } from '../../constants'\nimport { callActions as actions } from '../../interface/actions'\nimport * as eventTypes from '../../interface/eventTypes'\nimport { getCallById, getCallByWrtcsSessionId } from '../../interface/selectors'\nimport { operationMap, notificationMap } from './operationMap'\nimport { REPORTER_EVENTS, REPORTER_OPERATION_EVENTS_MAP } from '../reporter/constants'\n\nimport createNegotiations from './negotiations'\n\n// Libraries\nimport { v4 as uuidV4 } from 'uuid'\nimport sdpTransform from 'sdp-transform'\n\nexport default function createManager (bottle) {\n  bottle.factory('CallManager', () => callManager(bottle.container))\n}\n\n/**\n * Call Manager factory function.\n * @method createManager\n * @param {Object} bottle The bottle.\n */\nexport function callManager (container) {\n  const { context, emitEvent, Callstack, CallReporter, logManager } = container\n\n  const negotiations = createNegotiations(container)\n\n  /**\n   * CallManager function that handles all call operations,\n   *    then routes them to the appropriate Callstack operation.\n   *\n   * @param {string} callId The ID that the SDK uses for the call.\n   * @param {Function} operation The Callstack's method for this operation.\n   * @param {Object} params The operation's parameters.\n   */\n  async function processOperation (callId, operation, params) {\n    /*\n     * Check for glare scenarios.\n     * ...\n     */\n\n    /*\n     * Validate the operation before starting it. If the operation deems that it\n     *    can't be done right now, avoid doing any state tracking, etc. for the\n     *    operation.\n     */\n    if (operation.validate) {\n      const validationError = operation.validate(context.getState(), callId, ...params)\n      if (validationError) {\n        throw validationError\n      }\n    }\n\n    // Get the call report for this call, or create a call report if a report does not aleady exist\n    let callReport = CallReporter.getReport(callId)\n    if (!callReport) {\n      callReport = CallReporter.createReport('CALL', callId)\n    }\n\n    const operationEvent = callReport.addEvent(REPORTER_OPERATION_EVENTS_MAP[operation.type])\n\n    // Update call state to indicate that an operation is starting.\n    context.dispatch(\n      actions.operationUpdate(callId, operation.type, true, {\n        transition: OP_TRANSITIONS.START,\n        eventId: operationEvent.id\n      })\n    )\n\n    // Emit \"operation start\" event for the application.\n    emitEvent(eventTypes.CALL_OPERATION, {\n      callId,\n      isLocal: true,\n      operation: operation.type,\n      transition: OP_TRANSITIONS.START,\n      previous: undefined\n    })\n\n    /*\n     * Complex Operation Special Handling\n     *  Complex operations involve another call, so a report needs to be created for that second call\n     *  and the operation update action and call operation events also need to be emitted for the other call.\n     */\n    let otherCallOperationEvent\n    if ([OPERATIONS.JOIN, OPERATIONS.CONSULTATIVE_TRANSFER].includes(operation.type)) {\n      const otherCallReport = CallReporter.getReport(params[0])\n      otherCallOperationEvent = otherCallReport.addEvent(REPORTER_OPERATION_EVENTS_MAP[operation.type])\n      // Update call state for the other call to indicate that an operation is starting.\n      context.dispatch(\n        actions.operationUpdate(params[0], operation.type, true, {\n          transition: OP_TRANSITIONS.START,\n          eventId: otherCallOperationEvent.id\n        })\n      )\n\n      // Emit \"operation start\" event for the other call to the application.\n      emitEvent(eventTypes.CALL_OPERATION, {\n        callId: params[0],\n        isLocal: true,\n        operation: operation.type,\n        transition: OP_TRANSITIONS.START,\n        previous: undefined\n      })\n\n      // Special case for JOIN. A new call is created for the joined call and the callId for that is passed\n      // through params as the second element in the array. We should use that callId to create a report\n      // for the newly joined call.\n      if (operation.type === OPERATIONS.JOIN) {\n        const joinedCallId = params[1]\n        const joinedCallReport = CallReporter.createReport('CALL', joinedCallId)\n        joinedCallReport.addEvent(REPORTER_OPERATION_EVENTS_MAP[operation.type])\n      }\n    }\n\n    try {\n      // Perform the operation.\n      // Special-case: `addMedia` and `removeMedia` operations have data that needs\n      //    to be saved for when the response notification is handled. Save it by\n      //    returning to the CallManager and saved via the update action.\n      const result = await operation(callId, ...params)\n\n      // Update call state to indicate that the operation is going to the next step.\n      //    The 'next step' is either waiting for the remote side or being finished.\n      const nextTransition = operation.isNegotiation ? OP_TRANSITIONS.UPDATE : OP_TRANSITIONS.FINISH\n      context.dispatch(\n        actions.operationUpdate(callId, operation.type, true, {\n          transition: nextTransition,\n          operationData: result && result.operationData ? result.operationData : undefined,\n          eventId: operationEvent.id\n        })\n      )\n\n      // Emit \"operation update/finish\" event for the application.\n      emitEvent(eventTypes.CALL_OPERATION, {\n        callId,\n        isLocal: true,\n        operation: operation.type,\n        transition: nextTransition,\n        previous: {\n          operation: operation.type,\n          status: OP_STATUS.ONGOING\n        }\n      })\n\n      /*\n       * Complex Operation Special Handling\n       *  Complex operations involve another call, so the operation update action and call operation events also\n       *  need to be emitted for the other call.\n       */\n      if ([OPERATIONS.JOIN, OPERATIONS.CONSULTATIVE_TRANSFER].includes(operation.type)) {\n        // Update call state to indicate that the operation is going to the next step.\n        context.dispatch(\n          actions.operationUpdate(params[0], operation.type, true, {\n            transition: OP_TRANSITIONS.UPDATE\n          })\n        )\n\n        // Emit \"operation update/finish\" event for the application.\n        emitEvent(eventTypes.CALL_OPERATION, {\n          callId: params[0],\n          isLocal: true,\n          operation: operation.type,\n          transition: OP_TRANSITIONS.UPDATE,\n          previous: {\n            operation: operation.type,\n            status: OP_STATUS.ONGOING\n          }\n        })\n      }\n\n      // If there was no negotiation for the operation, end the event\n      if (!operation.isNegotiation && operationEvent && !operationEvent.isEnded()) {\n        // Special-case for slow-start answer\n        const call = getCallById(context.getState(), callId)\n        if (operation.type !== OPERATIONS.ANSWER || !call.isSlowStart) {\n          operationEvent.endEvent()\n        }\n      }\n\n      return result\n    } catch (err) {\n      // Update call state to indicate the operation is finished, since it failed.\n      context.dispatch(\n        actions.operationUpdate(callId, operation.type, true, {\n          transition: OP_TRANSITIONS.FINISH,\n          eventId: operationEvent.id\n        })\n      )\n\n      // Emit \"operation finish\" event for the application.\n      emitEvent(eventTypes.CALL_OPERATION, {\n        callId,\n        isLocal: true,\n        operation: operation.type,\n        transition: OP_TRANSITIONS.FINISH,\n        error: err,\n        previous: {\n          operation: operation.type,\n          status: OP_STATUS.ONGOING\n        }\n      })\n\n      // End any report event created if operation errored out\n      if (operationEvent && !operationEvent.isEnded()) {\n        operationEvent.setError(err)\n        operationEvent.endEvent()\n      }\n\n      /*\n       * Complex Operation Special Handling\n       *  Complex operations involve another call, so the operation update action and call operation events also\n       *  need to be emitted for the other call.\n       */\n      if ([OPERATIONS.JOIN, OPERATIONS.CONSULTATIVE_TRANSFER].includes(operation.type)) {\n        // Update call state to indicate that the operation is finished, since it failed.\n        context.dispatch(\n          actions.operationUpdate(params[0], operation.type, true, {\n            transition: OP_TRANSITIONS.FINISH\n          })\n        )\n\n        // Emit \"operation update/finish\" event for the application.\n        emitEvent(eventTypes.CALL_OPERATION, {\n          callId: params[0],\n          isLocal: true,\n          operation: operation.type,\n          transition: OP_TRANSITIONS.FINISH,\n          previous: {\n            operation: operation.type,\n            status: OP_STATUS.ONGOING\n          }\n        })\n\n        // End any report event created if operation errored out\n        if (otherCallOperationEvent && !otherCallOperationEvent.isEnded()) {\n          otherCallOperationEvent.setError(err)\n          otherCallOperationEvent.endEvent()\n        }\n      }\n\n      throw err\n    }\n  }\n\n  /**\n   * CallManager function that handles all call notifications,\n   *    then routes them to the appropriate Callstack operation.\n   *\n   * @param {string} wrtcsSessionId The ID that the server uses for the call.\n   * @param {Function} handler The Callstack's method for this notification.\n   * @param {Object} params The notification's parameters.\n   */\n  async function processNotification (wrtcsSessionId, handler, params) {\n    let call = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n    let notificationEvent\n    // TODO: Handle all notifications instead of only the ones the reporter knows about.\n    if (call && call.localOp && call.localOp.eventId && REPORTER_OPERATION_EVENTS_MAP.hasOwnProperty(handler.name)) {\n      // If the call exists and has an on-going local operation, then the\n      //    notification is part of that operation.\n      const operationEvent = CallReporter.getReport(call.id).getEvent(call.localOp.eventId)\n      notificationEvent = operationEvent.addEvent(REPORTER_OPERATION_EVENTS_MAP[handler.name])\n    } else if (call && REPORTER_OPERATION_EVENTS_MAP.hasOwnProperty(handler.name)) {\n      // Otherwise, if the call exists (but there isn't an on-going local operation),\n      //    the notification is part of a new remote operation.\n      const report = CallReporter.getReport(call.id)\n      notificationEvent = report.addEvent(REPORTER_OPERATION_EVENTS_MAP[handler.name])\n    } else {\n      // If the call doesn't exist, can't add anything to its report. TODO.\n    }\n\n    await handler(wrtcsSessionId, ...params)\n\n    // End the sub-event from handling the notification.\n    notificationEvent && notificationEvent.endEvent()\n\n    // Get the call again for new state after the handler has run\n    call = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n    // If this notification is an answer from a local operation, update call state\n    //    to indicate that the local operation is finished.\n    if (\n      call.localOp &&\n      [\n        'sessionStatusEnded', // Complex operation success.\n        'callStatusUpdateFailed', // Complex operation failure.\n        'callStatusUpdateEnded' // Call end notification mid-operation.\n      ].includes(handler.name)\n    ) {\n      const eventId = call.localOp.eventId\n      context.dispatch(\n        actions.operationUpdate(call.id, call.localOp.operation, true, {\n          transition: OP_TRANSITIONS.FINISH,\n          eventId\n        })\n      )\n\n      // End the timeline event for the local operation.\n      const operationEvent = CallReporter.getReport(call.id).getEvent(call.localOp.eventId)\n      operationEvent.endEvent()\n\n      // Emit \"operation finish\" event for the application.\n      emitEvent(eventTypes.CALL_OPERATION, {\n        callId: call.id,\n        isLocal: true,\n        operation: call.localOp.operation,\n        transition: OP_TRANSITIONS.FINISH,\n        previous: {\n          operation: call.localOp.operation,\n          status: OP_STATUS.PENDING\n        }\n      })\n    }\n  }\n\n  const manager = {}\n  /*\n   * For every defined operation, create a CallManager method\n   *    that routes into `processOperation`. This lets a component\n   *    call `CallManager.hold` for a more intuitive interface.\n   */\n  for (const op in operationMap) {\n    // Get the name of the operation method.\n    const stackMethod = operationMap[op]\n\n    // Create the operation API on the Call Manager.\n    manager[stackMethod] = async (callId, ...params) => {\n      const operation = Callstack.operations[stackMethod]\n\n      return await processOperation(callId, operation, params)\n    }\n  }\n\n  /*\n   * For every supported notification, create a CallManager method that routes\n   *    into `processNotification`.\n   */\n  for (const op in notificationMap) {\n    // Get the name of the notification handler.\n    const stackMethod = notificationMap[op]\n\n    // Create the handler API on the Call Manager.\n    manager[stackMethod] = async (wrtcsSessionId, ...params) => {\n      const handler = Callstack.notifications[stackMethod]\n\n      await processNotification(wrtcsSessionId, handler, params)\n    }\n  }\n\n  /**\n   * Handle incoming call \"establish offer\" messages.\n   * @method establishOffer\n   * @param {string} wrtcsSessionId The ID used by the backend to identify the call.\n   * @param {Object} params Arbitrary parameter object.\n   * @param {string} [channel] The notification channel the message was received on.\n   */\n  manager.establishOffer = async (wrtcsSessionId, params, channel) => {\n    // Create an ID for the SDK to use for the call.\n    params.callId = uuidV4()\n    const log = logManager.getLogger('CALL', params.callId)\n    log.info('Received new incoming call; initiating.', { wrtcsSessionId })\n\n    const call = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n    if (call) {\n      log.warn('Local call already exists; ignoring incoming call.')\n      return\n    }\n\n    const isSlowStart = !params.sdp\n    const callReport = CallReporter.createReport('CALL', params.callId)\n    const notificationEvent = callReport.addEvent(REPORTER_EVENTS.RECEIVE_CALL)\n\n    let mediaOffered = null\n    if (!isSlowStart) {\n      // For a regular call, parse the SDP & collect what media has been offered by the caller:\n      // We only support two types\n      mediaOffered = { audio: false, video: false }\n      sdpTransform.parse(params.sdp).media.forEach(aMedia => {\n        mediaOffered[aMedia.type] = true\n      })\n    }\n\n    // Dispatch the action right away so the call is in state at this point.\n    context.dispatch(\n      actions.callIncoming(params.callId, {\n        remoteParticipant: {\n          displayName: params.remoteName,\n          displayNumber: params.remoteNumber\n        },\n        to: params.calleeNumber,\n        // Number of the remote participant when the call was established.\n        from: params.remoteNumber,\n        // The ID that the backend uses to track this webRTC session.\n        wrtcsSessionId,\n\n        // Whether the call was received as a slow start call or not.\n        isSlowStart,\n\n        // Capture what the caller offered in terms of media\n        // For a slow-start call, this will be null.\n        mediaOffered\n      })\n    )\n\n    emitEvent(eventTypes.CALL_INCOMING, {\n      callId: params.callId,\n      mediaOffered\n    })\n\n    // Dispatch a custom parameters received action/event if any custom parameters\n    //    were received as part of the notification.\n    // TODO: Handle this is a more general way, since multiple notifications can\n    //    have custom parameters on them.\n    if (params.customParameters) {\n      const customParameters = params.customParameters\n      const customNames = customParameters.map(param => param.name)\n\n      log.debug(`Received custom parameters as part of the Call: ${customNames}.`)\n      context.dispatch(\n        actions.customParametersReceived(params.callId, {\n          customParameters\n        })\n      )\n\n      emitEvent(eventTypes.CUSTOM_PARAMETERS, {\n        callId: params.callId,\n        customParameters\n      })\n    }\n\n    await Callstack.notifications.incomingCall(wrtcsSessionId, params)\n\n    // Workaround for re-syncing incoming calls received via PUSH.\n    // TODO: Check if this can be removed once we start receiving TURN credentials with incoming call notifications.\n    if (channel && channel.toLowerCase() === 'push') {\n      /*\n       * If the incoming call notification came from the push channel, then there\n       *    can be a gap where other notifications can be missed during the time\n       *    it takes to setup the websocket channel. Resync the call state to\n       *    make sure it is not out-of-sync with the backend.\n       */\n      try {\n        await Callstack.operations.resyncCallState(params.callId)\n      } catch (err) {\n        // Don't do anything with an error here. This is a side-effect, and the\n        //    operation will handly any required changes.\n      }\n    }\n\n    notificationEvent.endEvent()\n  }\n\n  /**\n   * Handle \"negotiation offer\" messages.\n   * @method negotiationOffer\n   * @param {string} wrtcsSessionId The ID used by the backend to identify the call.\n   * @param {Object} params Arbitrary parameter object.\n   */\n  manager.negotiationOffer = async (wrtcsSessionId, params) => {\n    const call = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n\n    const log = logManager.getLogger('CALL', call ? call.id : undefined)\n    log.info('Received new update call request; handling.', { wrtcsSessionId })\n\n    // TODO: Is this check needed? The middleware already verifies if the call exists or not.\n    if (!call) {\n      // Scenario: No call is associated with the wrtcsSessionId.\n      log.info('Update request is for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n      return\n    } else if (call.state === CALL_STATES.ENDED) {\n      // Scenario: The associated call is ended, and should not have an active\n      //    WebRTC session.\n      log.info('Update request is for ended call. Ignoring.', { wrtcsSessionId })\n      return\n    }\n\n    // Dispatch a custom parameters received action/event if any custom parameters were received as part of the notification\n    if (params.customParameters) {\n      const customParameters = params.customParameters\n      const customNames = customParameters.map(param => param.name)\n\n      log.debug(`Received custom parameters as part of the Call: ${customNames}.`)\n      context.dispatch(\n        actions.customParametersReceived(call.id, {\n          customParameters\n        })\n      )\n      // Emit the associated event with the above action\n      emitEvent(eventTypes.CUSTOM_PARAMETERS, { callId: call.id, customParameters })\n    }\n\n    await negotiations.offer(wrtcsSessionId, params)\n  }\n\n  /**\n   * Handle \"negotiation answer\" messages.\n   * @method negotiationAnswer\n   * @param {string} wrtcsSessionId The ID used by the backend to identify the call.\n   * @param {Object} params Arbitrary parameter object.\n   */\n  manager.negotiationAnswer = async (wrtcsSessionId, params) => {\n    const call = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n    const log = logManager.getLogger('CALL', call ? call.id : undefined)\n    log.info('Received new update call response; handling.', { wrtcsSessionId })\n\n    if (!call) {\n      // Scenario: The notification is about a call that state does not know about.\n      //    Ignore the notification.\n      log.info('Update response for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n      return\n    } else if (call.state === CALL_STATES.ENDED) {\n      // Scenario: The notification is about a call that state says is ended.\n      //    Ignore the notification, since ended calls should not have an active\n      //    webRTC Session.\n      log.info('Update response for ended call. Ignoring.', { wrtcsSessionId })\n      return\n    }\n\n    // Dispatch a custom parameters received action/event if any custom parameters\n    //    were received as part of the notification.\n    // TODO: Handle this is a more general way, since multiple notifications can\n    //    have custom parameters on them.\n    if (params.customParameters) {\n      const customParameters = params.customParameters\n      const customNames = customParameters.map(param => param.name)\n\n      log.debug(`Received custom parameters as part of the Call: ${customNames}.`)\n      context.dispatch(\n        actions.customParametersReceived(call.id, {\n          customParameters\n        })\n      )\n\n      // Emit the associated event with the above action\n      emitEvent(eventTypes.CUSTOM_PARAMETERS, {\n        callId: call.id,\n        customParameters\n      })\n    }\n\n    await negotiations.answer(wrtcsSessionId, params)\n  }\n\n  return manager\n}\n","// Call plugin.\nimport { getMediaState } from '../../utils/state'\nimport { getCallByWrtcsSessionId } from '../../interface/selectors'\nimport { callActions as actions } from '../../interface/actions'\nimport * as actionTypes from '../../interface/actionTypes'\nimport * as eventTypes from '../../interface/eventTypes'\nimport { OP_TRANSITIONS, OP_STATUS, OPERATIONS } from '../../interface/constants'\nimport { operationMap } from './operationMap'\nimport { CALL_STATES } from '../../constants'\n\nimport { REPORTER_OPERATION_EVENTS_MAP } from '../reporter/constants'\n\nexport default function createHandlers (container) {\n  const { context, CallReporter, Callstack, logManager, emitEvent, Notifications } = container\n\n  /**\n   * Manager the offer for a new midcall negotiation.\n   * This function is intended to be the entry point to the Callstack for all\n   *    \"negotiation offer\" notifications received from the call's remote side.\n   *\n   * A \"negotiation offer\" notification is the request for a new operation, and\n   *    so represents the start of a new WebRTC negotiation process.\n   *\n   * This function does not handle the offer itself. It handles the non-call/webrtc\n   *    aspects of processing the offer (eg. operation tracking, report events),\n   *    as well as (TODO) determining what type of operation the offer is for.\n   *\n   * @method negotiationOffer\n   * @param {string} wrtcsSessionId The ID used by the backend to identify the call.\n   * @param {Object} params Arbitrary parameters object.\n   * @param {string} [params.sdp] The remote SDP offer included with the notification (if any).\n   * @return {undefined}\n   */\n  async function negotiationOffer (wrtcsSessionId, params) {\n    const call = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n    const log = logManager.getLogger('CALL', call.id)\n    log.info('Received new update call request; handling.', { wrtcsSessionId })\n\n    const callReport = CallReporter.getReport(call.id)\n    if (!call.localOp && !call.remoteOp) {\n      // No existing operation: start of new remote operation.\n      if (params.sdp) {\n        // TODO: Have the CallManager figure out what the remote operation is here.\n        //    Then move the operation tracking and report logic here instad of in\n        //    handleUpdateRequest.\n        await Callstack.notifications.handleUpdateRequest(call, params)\n      } else {\n        const operationEvent = callReport.addEvent(REPORTER_OPERATION_EVENTS_MAP.SLOW_START)\n\n        // Update call state to indicate that a remote operation is starting.\n        context.dispatch(\n          actions.operationUpdate(call.id, OPERATIONS.SLOW_START, false, {\n            transition: OP_TRANSITIONS.START,\n            eventId: operationEvent.id\n          })\n        )\n\n        try {\n          await Callstack.notifications.handleSlowUpdateRequest(call, params)\n        } catch (err) {\n          // Update call state to indicate that the remote operation is finished since it failed.\n          context.dispatch(\n            actions.operationUpdate(call.id, OPERATIONS.SLOW_START, false, {\n              transition: OP_TRANSITIONS.FINISH,\n              eventId: operationEvent.id\n            })\n          )\n\n          operationEvent.setError(err)\n          operationEvent.endEvent()\n\n          // TODO: Respond to Gateway that operation failed, so that the remote\n          //    endpoint knows.\n          return\n        }\n\n        // Update call state to indicate that the remote operation is finished.\n        context.dispatch(\n          actions.operationUpdate(call.id, OPERATIONS.SLOW_START, false, {\n            transition: OP_TRANSITIONS.UPDATE,\n            eventId: operationEvent.id\n          })\n        )\n      }\n    } else if (call.localOp) {\n      const isPreEstablish = [CALL_STATES.RINGING, CALL_STATES.INITIATED, CALL_STATES.EARLY_MEDIA].includes(call.state)\n      const isPendingMake = call.localOp.status === OP_STATUS.PENDING && call.localOp.operation === OPERATIONS.MAKE\n\n      if (isPreEstablish && isPendingMake) {\n        /*\n         * Special-case Scenario: We have received a remote offer for a midcall operation\n         *    before the call has been established. This can happen when the remote\n         *    endpoint performs an operation immediately after they answer the call,\n         *    and the notifications are received in the wrong order.\n         *\n         * The call is waiting for the call answer, so delay the new request until\n         *    that is processed. This is a timing issue where the update is received\n         *    too early.\n         *\n         * Reference: KJS-1152\n         */\n        delayMidCall(wrtcsSessionId, params)\n      } else {\n        // Receive offer SDP when there is already an on-going negotiation (glare scenario).\n        log.warn('Received offer SDP with an on-going negotiation; ignoring.')\n        // KJS-288 TODO: Report glare scenario to Gateway.\n      }\n    }\n  }\n\n  /**\n   * Manage the answer for an on-going negotiation.\n   * This function is intended to be the entry point to the Callstack for all\n   *    \"negotiation answer\" notifications received from the call's remote side.\n   *\n   * A \"negotiation answer\" notification is the response to an operation that was\n   *    previously performed (a \"negotiation offer\"), and so represents the last\n   *    step in the WebRTC negotiation process.\n   *\n   * This function does not handle the answer itself. It handles the\n   *    non-call/webrtc aspects of processing the answer (eg. operation tracking\n   *    and report events).\n   *\n   * @method negotiationAnswer\n   * @param {string} wrtcsSessionId The ID used by the backend to identify the call.\n   * @param {Object} params Arbitrary parameters object.\n   * @param {string} [params.sdp] The remote SDP answer included with the notification (if any).\n   * @return {undefined}\n   */\n  async function negotiationAnswer (wrtcsSessionId, params) {\n    const call = getCallByWrtcsSessionId(context.getState(), wrtcsSessionId)\n    const log = logManager.getLogger('CALL', call.id)\n\n    const callReport = CallReporter.getReport(call.id)\n    let operationEvent\n\n    /**\n     * Check that the notification was not an \"error\" notification.\n     * Status code 49 with a `retryAfter` value indicates the original operation\n     *    failed (likely glare condition) and the SDK should retry the operation.\n     */\n    if (!params.sdp && params.code === 49 && params.retryAfter) {\n      // TODO: Properly handle this scenario. The call may be in a bad state\n      //    because we set an offer but not an answer. May need to revert\n      //    signaling state and/or re-perform operation internally.\n      // For now, fail loudly and abort the operation to prevent crashes. The\n      //    negotiation sagas expect there to be an SDP.\n      // The call state will be left in a broken state because of KAA-1607.\n      log.error(`Response indicates an error scenario (${params.message}). Aborting operation.`)\n      return\n    }\n\n    if (call.localOp) {\n      log.info(`Processing remote response for local ${call.localOp.operation} operation.`)\n      const mediaState = getMediaState(call)\n      log.debug(`Current call info; State: ${call.state}, MediaState: ${mediaState}.`)\n\n      /*\n       * Scenario: A local operation is on-going.\n       *    This answer is the response to our local negotiation operation.\n       *\n       * Process the answer SDP, update call state to mark the operation as\n       *    finished, then tell the application of the update.\n       */\n      operationEvent = callReport.getEvent(call.localOp.eventId)\n\n      // Call  the \"remote answer\" handler for the on-going local operation.\n      let opName = operationMap[call.localOp.operation]\n\n      if (call.localOp.operation === OPERATIONS.ANSWER && call.isSlowStart) {\n        opName = 'answerSlow'\n      }\n\n      await Callstack.operations[opName].remoteAnswer(call, params)\n\n      // Update call state to remove the on-going operation.\n      context.dispatch(\n        actions.operationUpdate(call.id, call.localOp.operation, true, {\n          transition: OP_TRANSITIONS.FINISH,\n          eventId: operationEvent.id\n        })\n      )\n\n      operationEvent.endEvent()\n\n      // After everything internal is complete, emit \"operation finish\" event\n      //    for the application.\n      emitEvent(eventTypes.CALL_OPERATION, {\n        callId: call.id,\n        isLocal: true,\n        operation: call.localOp.operation,\n        transition: OP_TRANSITIONS.FINISH,\n        previous: {\n          operation: call.localOp.operation,\n          status: OP_STATUS.PENDING\n        }\n      })\n    } else if (call.remoteOp && call.remoteOp.operation === OPERATIONS.SLOW_START) {\n      /*\n       * Scenario: A remote slow-start operation is on-going.\n       *    This answer is the response to the offer we sent out after receiving\n       *    the slow-start negotiation.\n       *\n       * Process the answer SDP, then update call state to mark the operation as\n       *    finished.\n       */\n      operationEvent = callReport.getEvent(call.remoteOp.eventId)\n\n      await Callstack.notifications.handleSlowUpdateResponse(call, params)\n\n      // Update call state to remove the on-going operation.\n      context.dispatch(\n        actions.operationUpdate(call.id, call.remoteOp.operation, false, {\n          transition: OP_TRANSITIONS.FINISH,\n          eventId: operationEvent.id\n        })\n      )\n\n      operationEvent.endEvent()\n    } else {\n      /*\n       * Scenario #1: A remote (non slow-start) operation is on-going.\n       * Scenario #2: No local or remote operation is on-going.\n       *    We don't know why we're receiving an answer; it doesn't match any\n       *    valid on-going WebRTC negotiation where we would expect it.\n       */\n      log.warn('Received negotiation answer without a matching offer; ignoring.')\n    }\n  }\n\n  async function negotiationPranswer () {}\n\n  /**\n   * Workaround for negotiationOffer:\\\n   *    If a midcall negotiation is received before the call answer, this method\n   *    will delay the midcall negotiation until after the call is established.\n   *    On a time-out of 3 seconds.\n   * @method delayMidCall\n   * @param {string} wrtcsSessionId Id that was provided to `negotiationOffer`.\n   * @param {Object} params Params that were provided to `negotiationOffer`.\n   */\n  async function delayMidCall (wrtcsSessionId, params) {\n    const call = getCallByWrtcsSessionId(context.getState(), params.wrtcsSessionId)\n    const log = logManager.getLogger('CALL', call.id)\n\n    function callStartPattern (action) {\n      // Wait for the call to be established or ended.\n      return (\n        [actionTypes.MAKE_CALL_FINISH, actionTypes.END_CALL_FINISH].includes(action.type) &&\n        action.payload.id === call.id\n      )\n    }\n\n    try {\n      await Notifications.takeAction(callStartPattern, 3000)\n      log.info('Replaying delayed update request.', { wrtcsSessionId: params.wrtcsSessionId })\n      // Call back into negotiationOffer to start again.\n      negotiationOffer(wrtcsSessionId, params)\n    } catch (err) {\n      log.info('Timed-out delayed update request. Ignoring.', { wrtcsSessionId: params.wrtcsSessionId })\n      // TODO: Send 491 response.\n    }\n  }\n\n  return {\n    offer: negotiationOffer,\n    answer: negotiationAnswer,\n    pranswer: negotiationPranswer\n  }\n}\n","// Call Report related.\nimport metricHandlers from '../reporter/metricHandlers'\n\nimport createReporter from 'webrtc-reporter'\n\nexport default function createComponent (bottle) {\n  // Create a new Reporter to collect call report metrics\n  const callReporter = reporter()\n  bottle.value('CallReporter', callReporter)\n}\n\n/**\n * CallReporter component for the SDK, using the reporter tool.\n */\nfunction reporter () {\n  const reporter = createReporter()\n\n  function createReport (...params) {\n    const report = reporter.createReport(...params)\n    metricHandlers.registerAllMetricHandlers(report)\n    return report\n  }\n\n  return {\n    createReport,\n    getReport: reporter.getReport,\n    deleteReport: reporter.deleteReport\n  }\n}\n","import { REPORTER_EVENTS, REPORTER_METRICS, REPORTER_OPERATION_EVENTS_MAP } from './constants'\n\n/**\n * @method durationHandler\n * @param {string} metric The metric type which will be added to report when handler function is executed.\n * @param {Array} startEvents The set of event types whose `start` timestamp will be used to calculate the metric value.\n * @param {boolean} autoUnregister Specifies wether to automatically unregister the event handler function after it executed once.\n *   By default (if not specified), it will unregister the handler once it executed.\n * @returns {undefined}\n */\nfunction durationHandler (metric, startEvents, autoUnregister = true) {\n  /**\n   * Handler function which executes when a certain registered event has ended.\n   * @return {boolean} Returns true if handler was executed AND metric was saved. False otherwise.\n   */\n  return function (callReport, event) {\n    // First search for the event in the timeline of the report\n    // i.e. see if it's a top-level event\n    // We need to find the last type of that event because in the case of\n    // mutiple HOLD/UNHOLD operations, the metric calculated for it needs to\n    // use the last entry.\n    const startEvent = callReport.timeline.findLast(event => {\n      if (startEvents.includes(event.type)) {\n        return true\n      }\n      // We didn't find it in top-level events, search within the sub-events\n      return event.timeline.find(subEvent => {\n        return startEvents.includes(subEvent.type)\n      })\n    })\n\n    if (startEvent) {\n      if (\n        event.type === REPORTER_EVENTS.PROCESS_RESPONSE &&\n        metric === 'MAKE_CALL_REMOTE_SETUP' &&\n        event.getData('operation') !== 'MAKE'\n      ) {\n        // PROCESS_RESPONSE event is triggered as part of many SDK operations and on both sides of the call.\n        // But we don't want to add a 'MAKE_CALL_REMOTE_SETUP' metric for the callee side,\n        // because it only makes sense for caller side.\n        return\n      }\n      // We found the start event, so save its associated metric containing the measurement.\n      callReport.addMetric(metric, event.end - startEvent.start)\n      if (autoUnregister) {\n        // We automatically unregister the handler once it was executed.\n        callReport.unregisterMetricHandler(metric)\n      }\n      return true\n    }\n    return false\n  }\n}\n\n/**\n * @method joinedCallDurationHandler\n * @param {string} metric The metric type which will be added to report when handler function is executed.\n * @param {Array} startEvents The set of event types whose `start` timestamp will be used to calculate the metric value.\n * @param {boolean} autoUnregister Specifies wether to automatically unregister the event handler function after it executed once.\n *   By default (if not specified), it will unregister the handler once it executed.\n * @returns {undefined}\n */\nfunction joinedCallDurationHandler (metric, startEvents, autoUnregister = true) {\n  /**\n   * Handler function which executes when a certain registered event has ended.\n   * @return {boolean} Returns true if handler was executed AND metric was saved. False otherwise.\n   */\n  return function (callReport, event) {\n    // First search for the event in the timeline of the report\n    // i.e. see if it's a top-level event\n    const startEvent = callReport.timeline.find(event => {\n      if (startEvents.includes(event.type)) {\n        return true\n      }\n      // We didn't find it in top-level events, search within the sub-events\n      return event.timeline.find(subEvent => {\n        return startEvents.includes(subEvent.type)\n      })\n    })\n    // startEvent !== event is for the special case join operation which is used as the end for the initial\n    // two calls, but the starting event for the joined call.\n    if (startEvent && startEvent !== event) {\n      // We found the start event, so save its associated metric containing the measurement.\n      callReport.addMetric(metric, event.end - startEvent.start)\n      if (autoUnregister) {\n        // We automatically unregister the handler once it was executed.\n        callReport.unregisterMetricHandler(metric)\n      }\n      return true\n    }\n    return false\n  }\n}\n\n/**\n * A function that gathers the relay candidates as they are collected and then returns a handler function that will\n * create the metric for the relay candidates after collection is complete.\n *\n * Each time a relay candidate collected event is received it will create an object with that relay candidates data and\n * store it in an array. When the set local description event ends it will update all the collected candidates in the array\n * with the correct duration, and add a metric to the call report for them.\n * @method relayCandidatesHandler\n * @returns {Function} The metric handler function\n */\nfunction relayCandidatesHandler () {\n  const collectedCandidates = []\n  return (callReport, event) => {\n    if (event.type === REPORTER_EVENTS.RELAY_CANDIDATE_COLLECTED) {\n      const eventData = event.getData()\n      const collectedCandidateInformation = {\n        ...eventData,\n        duration: event.start // The candidate was collected by the time this event was added\n      }\n      collectedCandidates.push(collectedCandidateInformation)\n    } else if (event.type === REPORTER_EVENTS.SET_LOCAL_DESCRIPTION) {\n      // Update the duration of all the collected candidates\n      collectedCandidates.map(candidateInfo => {\n        candidateInfo.duration = candidateInfo.duration - event.start\n        return collectedCandidates\n      })\n      // Only need to add metric if there will be any data...\n      if (collectedCandidates.length) {\n        callReport.addMetric(REPORTER_METRICS.TIME_TO_RELAY_CANDIDATES, {\n          operation: event.getData('operation'),\n          candidates: [...collectedCandidates]\n        })\n      }\n      collectedCandidates.length = 0\n    }\n  }\n}\n\n// Generic function to register all metric handlers to the call reporter\nfunction registerAllMetricHandlers (callReport) {\n  // Register the call duration handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.CALL_DURATION,\n    [\n      REPORTER_EVENTS.END_LOCAL,\n      REPORTER_EVENTS.END_REMOTE,\n      REPORTER_EVENTS.JOIN,\n      REPORTER_EVENTS.DIRECT_TRANSFER,\n      REPORTER_EVENTS.CONSULTATIVE_TRANSFER\n    ],\n    joinedCallDurationHandler(REPORTER_METRICS.CALL_DURATION, [\n      REPORTER_EVENTS.MAKE,\n      REPORTER_EVENTS.RECEIVE_CALL,\n      REPORTER_EVENTS.JOIN\n    ])\n  )\n\n  // Register the local-setup handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.MAKE_CALL_LOCAL_SETUP,\n    [REPORTER_EVENTS.SET_LOCAL_DESCRIPTION],\n    durationHandler(REPORTER_METRICS.MAKE_CALL_LOCAL_SETUP, [REPORTER_EVENTS.MAKE])\n  )\n\n  // Register the handler for collecting ice candidates during the local-setup.\n  // The start event will be SET_LOCAL_DESCRIPTION and the metric will be saved when\n  // its sub-event (i.e. ICE_COLLECTION) has ended.\n  // Since SET_LOCAL_DESCRIPTION event occurs on both caller & callee, its sub-event: ICE_COLLECTION\n  // will also be available for each party.\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_COLLECT_ICE_CANDIDATES,\n    [REPORTER_EVENTS.ICE_COLLECTION],\n    durationHandler(REPORTER_METRICS.TIME_TO_COLLECT_ICE_CANDIDATES, [REPORTER_EVENTS.SET_LOCAL_DESCRIPTION])\n  )\n\n  // Register the remote-setup handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.MAKE_CALL_REMOTE_SETUP,\n    [REPORTER_EVENTS.PROCESS_RESPONSE],\n    durationHandler(REPORTER_METRICS.MAKE_CALL_REMOTE_SETUP, [REPORTER_EVENTS.REST_REQUEST])\n  )\n\n  // Register the time-to-ringing handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_RINGING,\n    [REPORTER_EVENTS.REMOTE_RINGING],\n    durationHandler(REPORTER_METRICS.TIME_TO_RINGING, [REPORTER_EVENTS.MAKE])\n  )\n\n  // Register the time-to-answer handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_ANSWER,\n    REPORTER_OPERATION_EVENTS_MAP.ANSWER,\n    durationHandler(REPORTER_METRICS.TIME_TO_ANSWER, [REPORTER_EVENTS.MAKE, REPORTER_EVENTS.RECEIVE_CALL])\n  )\n\n  // Call time to media duration (answer operation starts until media is connected)\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_MEDIA_DURATION,\n    REPORTER_EVENTS.SET_LOCAL_DESCRIPTION,\n    durationHandler(REPORTER_METRICS.TIME_TO_MEDIA_DURATION, [REPORTER_OPERATION_EVENTS_MAP.ANSWER])\n  )\n\n  // Time to setup incoming call (incoming call notification until media is connected)\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_CALL_SETUP_DURATION,\n    REPORTER_EVENTS.SET_LOCAL_DESCRIPTION,\n    durationHandler(REPORTER_METRICS.TIME_TO_CALL_SETUP_DURATION, [REPORTER_EVENTS.RECEIVE_CALL])\n  )\n\n  // Time to reject incoming call\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_REJECT,\n    [REPORTER_EVENTS.REJECT],\n    durationHandler(REPORTER_METRICS.TIME_TO_REJECT, [REPORTER_EVENTS.REJECT])\n  )\n\n  // Register the time-to-ignore handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_IGNORE,\n    [REPORTER_EVENTS.IGNORE],\n    durationHandler(REPORTER_METRICS.TIME_TO_IGNORE, [REPORTER_EVENTS.IGNORE])\n  )\n\n  // Register the time-to-add-media handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_ADD_MEDIA,\n    REPORTER_EVENTS.SET_LOCAL_DESCRIPTION,\n    durationHandler(REPORTER_METRICS.TIME_TO_ADD_MEDIA, [REPORTER_OPERATION_EVENTS_MAP.ADD_MEDIA], false)\n  )\n\n  // Register the time-to-add-remote-media handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_ADD_MEDIA_REMOTE,\n    REPORTER_EVENTS.SET_REMOTE_DESCRIPTION,\n    durationHandler(REPORTER_METRICS.TIME_TO_ADD_MEDIA_REMOTE, [REPORTER_OPERATION_EVENTS_MAP.ADD_MEDIA_REMOTE], false)\n  )\n\n  // Register the time-to-hold-local handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_HOLD_LOCAL,\n    [REPORTER_EVENTS.HOLD_LOCAL],\n    durationHandler(REPORTER_METRICS.TIME_TO_HOLD_LOCAL, [REPORTER_EVENTS.HOLD_LOCAL], false)\n  )\n\n  // Register the time-to-hold-remote handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_HOLD_REMOTE,\n    [REPORTER_EVENTS.HOLD_REMOTE],\n    durationHandler(REPORTER_METRICS.TIME_TO_HOLD_REMOTE, [REPORTER_EVENTS.HOLD_REMOTE], false)\n  )\n\n  // Register the time-to-unhold-local handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_UNHOLD_LOCAL,\n    [REPORTER_EVENTS.UNHOLD_LOCAL],\n    durationHandler(REPORTER_METRICS.TIME_TO_UNHOLD_LOCAL, [REPORTER_EVENTS.UNHOLD_LOCAL], false)\n  )\n\n  // Register the time-to-unhold-remote handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_UNHOLD_REMOTE,\n    [REPORTER_EVENTS.UNHOLD_REMOTE],\n    durationHandler(REPORTER_METRICS.TIME_TO_UNHOLD_REMOTE, [REPORTER_EVENTS.UNHOLD_REMOTE], false)\n  )\n\n  // Register the time-to-remove-media handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_REMOVE_MEDIA,\n    REPORTER_EVENTS.SET_LOCAL_DESCRIPTION,\n    durationHandler(REPORTER_METRICS.TIME_TO_REMOVE_MEDIA, [REPORTER_OPERATION_EVENTS_MAP.REMOVE_MEDIA], false)\n  )\n\n  // Register the time-to-remove-media-remote handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_REMOVE_MEDIA_REMOTE,\n    REPORTER_EVENTS.SET_REMOTE_DESCRIPTION,\n    durationHandler(\n      REPORTER_METRICS.TIME_TO_REMOVE_MEDIA_REMOTE,\n      [REPORTER_OPERATION_EVENTS_MAP.REMOVE_MEDIA_REMOTE],\n      false\n    )\n  )\n\n  // Register the time-to-restart-media handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_RESTART_MEDIA,\n    REPORTER_OPERATION_EVENTS_MAP.MEDIA_RESTART,\n    durationHandler(REPORTER_METRICS.TIME_TO_RESTART_MEDIA, [REPORTER_OPERATION_EVENTS_MAP.MEDIA_RESTART], false)\n  )\n\n  // Register the time-to-send-custom-paramters handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_SEND_CUSTOM_PARAMETERS,\n    REPORTER_OPERATION_EVENTS_MAP.SEND_CUSTOM_PARAMETERS,\n    durationHandler(REPORTER_METRICS.TIME_TO_SEND_CUSTOM_PARAMETERS, [\n      REPORTER_OPERATION_EVENTS_MAP.SEND_CUSTOM_PARAMETERS\n    ])\n  )\n\n  // Register the time-to-relay-candidates handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_RELAY_CANDIDATES,\n    [REPORTER_EVENTS.SET_LOCAL_DESCRIPTION, REPORTER_EVENTS.RELAY_CANDIDATE_COLLECTED],\n    relayCandidatesHandler()\n  )\n\n  // Time to forward incoming call\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_FORWARD,\n    [REPORTER_EVENTS.FORWARD_CALL],\n    durationHandler(REPORTER_METRICS.TIME_TO_FORWARD, [REPORTER_EVENTS.FORWARD_CALL])\n  )\n\n  // Register the time-to-direct-transfer handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_DIRECT_TRANSFER,\n    [REPORTER_EVENTS.DIRECT_TRANSFER],\n    durationHandler(REPORTER_METRICS.TIME_TO_DIRECT_TRANSFER, [REPORTER_EVENTS.DIRECT_TRANSFER])\n  )\n\n  // Register the time-to-consultative-transfer handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_CONSULTATIVE_TRANSFER,\n    [REPORTER_EVENTS.CONSULTATIVE_TRANSFER],\n    durationHandler(REPORTER_METRICS.TIME_TO_CONSULTATIVE_TRANSFER, [REPORTER_EVENTS.CONSULTATIVE_TRANSFER])\n  )\n\n  // Register the time-to-join handler\n  callReport.registerMetricHandler(\n    REPORTER_METRICS.TIME_TO_JOIN,\n    REPORTER_OPERATION_EVENTS_MAP.JOIN,\n    joinedCallDurationHandler(REPORTER_METRICS.TIME_TO_JOIN, [REPORTER_OPERATION_EVENTS_MAP.JOIN])\n  )\n}\n\nexport default {\n  handlers: {\n    durationHandler,\n    joinedCallDurationHandler,\n    relayCandidatesHandler\n  },\n  registerAllMetricHandlers\n}\n","import createReporter from './reporter'\n\n/**\n * Package main.\n */\n\n// Main export is the manager's factory function.\nexport default createReporter\n","import reportFactory from './report'\n\n// Utils\nimport { isString } from 'lodash/fp'\n\n/**\n * Creates a Reporter.\n * @method createReporter\n * @return {Reporter}\n */\nexport default function createReporter () {\n  const API_TAG = 'API invoked: '\n\n  // All reports created so far, indexed by id.\n  const reports = {}\n\n  /**\n   * Create a new report.\n   * @method createReport\n   * @param type {string} The type of report to create.\n   * @param id {string} A unique identifier to represent this report.\n   * @throws {Error} Throws an error if any of the two parameters fail to validate.\n   * @return {Report} A new Report is returned if validation passed.\n   */\n  function createReport (type, id) {\n    if (!type || !isString(type)) {\n      throw new Error(`${API_TAG}reporter.createReport: Invalid type (${typeof type}), must be of type string.`)\n    }\n\n    if (!id || !isString(id)) {\n      throw new Error(`${API_TAG}reporter.createReport: Invalid id (${typeof id}), must be of type string.`)\n    }\n\n    if (reports.hasOwnProperty(id)) {\n      throw new Error(`${API_TAG}reporter.createReport: Cannot create report. One already exists for id: ${id}`)\n    }\n    // Create a blank report\n    const newReport = reportFactory(type, id)\n\n    // ... and it under the id that was provided\n    reports[id] = newReport\n\n    return newReport\n  }\n\n  /**\n   * Get a report.\n   * @method getReport\n   * @param {string} id A unique identifier representing a report.\n   * @throws {Error} Throws an error if id fails to validate.\n   * @return {Report|undefined} The report object or undefined if no report was found for that id.\n   */\n  function getReport (id) {\n    if (!id || !isString(id)) {\n      throw new Error(`${API_TAG}reporter.getReport: Invalid id ${typeof id} (must be of type string).`)\n    }\n    return reports[id]\n  }\n\n  /**\n   * Delete a report.\n   * @method deleteReport\n   * @param {string} id A unique identifier representing a report.\n   * @throws {Error} Throws an error if id fails to validate.\n   * @return {undefined}\n   */\n  function deleteReport (id) {\n    if (!id || !isString(id)) {\n      throw new Error(`${API_TAG}reporter.deleteReport: Invalid id ${typeof id} (must be of type string).`)\n    }\n    if (!reports.hasOwnProperty(id)) {\n      console.warn(`No report was found for id: ${id}`)\n      return\n    }\n    delete reports[id]\n  }\n  return {\n    createReport,\n    getReport,\n    deleteReport\n  }\n}\n","import createTimelineEvent from './timelineEvent'\n\n// Utils\nimport { isString } from 'lodash/fp'\n\n/**\n * Factory function to create reports.\n * @method reportFactory\n * @param {string} type The type of report to be created.\n * @param {id} The unique identifier for this new report.\n * @return {Report}\n */\nexport default function reportFactory (type, id) {\n  const API_TAG = 'API invoked: '\n  // Events (for this report instance) will be appended to this timeline\n  const timeline = []\n  // Data (associated with this report) will be indexed by the specific data type\n  const reportData = {}\n  // Computed metrics\n  const metrics = []\n  // A map of metrics and the events and handlers used to compute them.\n  const metricHandlers = {}\n\n  /**\n   * Add a new event to the Reports timeline.\n   * @method addEvent\n   * @param {string} The type of event being added.\n   * @throws {Error} Throws an error if type fails to validate.\n   * @return {TimelineEvent} A new TimelineEvent.\n   */\n  function addEvent (type) {\n    if (!type || !isString(type)) {\n      throw new Error(`${API_TAG}report.addEvent: Invalid type (${typeof type}), must be of type string.`)\n    }\n    const newEvent = createTimelineEvent(type, onEventEnded)\n    timeline.push(newEvent)\n\n    return newEvent\n  }\n\n  /**\n   * Add data to the Report.\n   * @method addData\n   * @param {string} type The type of data being added to the Report.\n   * @param {*} data The data being added to the Report.\n   * @throws {Error} Throws an error if any of the two parameters fail to validate.\n   * @return {undefined}\n   */\n  function addData (type, data) {\n    if (!type || !isString(type)) {\n      throw new Error(`${API_TAG}report.addData: Invalid type (${typeof type}), must be of type string.`)\n    }\n    reportData[type] = data\n    if (data === undefined) {\n      console.warn(`${API_TAG}report.addData: No actual data provided. Only ${type} key was saved.`)\n    }\n  }\n\n  /**\n   * Find and return data added to a report.\n   * @method getData\n   * @param {string|undefined} key The key the for the data requested, if no key is provided return the entire data object.\n   * @return {*} The data mapped to key.\n   */\n  function getData (key) {\n    if (key) {\n      return reportData[key]\n    } else {\n      return reportData\n    }\n  }\n\n  /**\n   * Add computed metric to the Report.\n   * @method addMetric\n   * @param {string} type The type of metric being added to the Report.\n   * @param {*} data The metric data being added to the Report.\n   * @throws {Error} Throws an error if the type is not of type string.\n   * @return {undefined}\n   */\n  function addMetric (type, data) {\n    if (!type || !isString(type)) {\n      throw new Error(`${API_TAG}report.addMetric: Invalid type (${typeof type}), must be of type string.`)\n    }\n    metrics.push({ type, data })\n    if (!data) {\n      console.warn(`${API_TAG}report.addMetric: No actual data provided. Only ${type} key was saved.`)\n    }\n  }\n\n  /**\n   * Update computed metric in the Report by adding the event ID which was responsible\n   * for computing such metric.\n   * There could be multiple events which account for the calculation (or updating)\n   * of a given metric value so any time this function is called, it will add event ID to existing\n   * list of event IDS.\n   * @method addEventIdToMetric\n   * @param {string} type The type of metric being updated in the Report.\n   * @param {string} eventId The event ID, as a unique identifier.\n   * @throws {Error} Throws an error if the type is not a string.\n   * @throws {Error} Throws an error if the type is not found.\n   * @throws {Error} Throws an error if the eventId is not a string.\n   * @throws {Error} Throws an error if the eventId is not found.\n   * @return {undefind}\n   */\n  function addEventIdToMetric (type, eventId) {\n    if (!type || !isString(type)) {\n      throw new Error(`${API_TAG}report.addEventIdToMetric: Invalid type (${typeof type}), must be of type string.`)\n    }\n    if (!eventId || !isString(eventId)) {\n      throw new Error(\n        `${API_TAG}report.addEventIdToMetric: Invalid eventId (${typeof eventId}), must be of type string.`\n      )\n    }\n    const metric = metrics.find(metric => metric.type === type)\n\n    if (!metric) {\n      console.warn(`${API_TAG}report.addEventIdToMetric: No metric found for type: ${type}`)\n      return\n    }\n    if (!metric.eventIds) {\n      metric.eventIds = []\n    }\n    // Adding in the order the events happen.\n    // (i.e. last eventId in array being the most recent one)\n    metric.eventIds.push(eventId)\n  }\n\n  /**\n   * Get the data for a provided metric type.\n   * @method getMetric\n   * @param {string} type The type of metric to return.\n   * @throws {Error} Throws an error if the type is not a string.\n   * @return {*} The data associated with the provided metric type.\n   */\n  function getMetric (type) {\n    if (!type || !isString(type)) {\n      throw new Error(`${API_TAG}report.getMetric: Invalid type (${typeof type}), must be of type string.`)\n    }\n\n    return metrics.filter(metric => metric.type === type).map(metric => metric.data)\n  }\n\n  /**\n   * Register a handler to allow the user to act on specific events once they've ended.\n   * @method registerMetricHandler\n   * @param type {string} An identifier for the type of metric to be handled.\n   * @param events {Array} An array of event types that trigger this handler.\n   * @param handler {function} A function that handles the event for this metric type.\n   * @throws {Error} Throws an error if any of the three parameters fail to validate.\n   * @return {undefined}\n   */\n  function registerMetricHandler (type, events, handler) {\n    if (!type || !isString(type)) {\n      throw new Error(`${API_TAG}report.registerMetricHandler: Invalid type (${typeof type}), must be of type string.`)\n    }\n    if (!events) {\n      throw new Error(\n        `${API_TAG}report.registerMetricHandler: Invalid events (${typeof type}), must be a string or an array with at least one event type.`\n      )\n    }\n    if (!handler || typeof handler !== 'function') {\n      throw new Error(\n        `${API_TAG}report.registerMetricHandler: Invalid handler (${typeof handler}, must be a function.)`\n      )\n    }\n\n    if (isString(events)) {\n      events = [events]\n    }\n\n    // Add/update the handler to our event handler map.\n    metricHandlers[type] = {\n      events,\n      handler\n    }\n  }\n\n  /**\n   * Unregister a metric handler.\n   * @method unregisterMetricHandler\n   * @param type {string} An identifier for the type of metric we no longer need to report on.\n   * @return {undefined}\n   */\n  function unregisterMetricHandler (type) {\n    if (type) {\n      delete metricHandlers[type]\n    }\n  }\n\n  /**\n   * A listener for when TimelineEvents have ended.\n   * @method onEventEnded\n   * @return undefined\n   */\n  function onEventEnded (event) {\n    // Check if we need to run a metric calculation handler against this event\n    for (const metric in metricHandlers) {\n      if (metricHandlers[metric].events.includes(event.type)) {\n        if (metricHandlers[metric].handler(report, event)) {\n          // Now that the handler has run & metric was saved,\n          // record the event ID that triggered this handler.\n          // The event id will be added as part of that saved metric object.\n          addEventIdToMetric(metric, event.id)\n        }\n      }\n    }\n  }\n\n  /**\n   * Traverse the list of events and return the first one that matches the provided id.\n   * @method getEvent\n   * @param {string} id The id for the event being requested.\n   * @return {TimelineEvent} The event with matching id.\n   */\n  function getEvent (id) {\n    for (let i = 0; i < timeline.length; i++) {\n      if (timeline[i].id === id) {\n        return timeline[i]\n      } else {\n        const subEvent = timeline[i].getEvent(id)\n        if (subEvent) {\n          return subEvent\n        }\n      }\n    }\n  }\n\n  /**\n   * Find the last event of a specific type.\n   * @method findLastOngoingEvent\n   * @param {Array<string>|string} [type] The type of event to search for.\n   * @return {TimelineEvent} The last event matching the provided type.\n   */\n  function findLastOngoingEvent (type) {\n    return timeline.findLast(event => {\n      // If no type is provided return the latest ongoing event\n      // If an array is provided, find the last ongoing event that is part of the array\n      // If a string is provided, find that particular last ongoing event\n      if (!type && !event.isEnded()) {\n        return event\n      } else if (Array.isArray(type) && type.includes(event.type) && !event.isEnded()) {\n        return event\n      } else if (event.type === type && !event.isEnded()) {\n        return event\n      }\n    })\n  }\n\n  /**\n   * Return a serializable version of this Report.\n   * @method getSerializable\n   * @return {Object} A read-only, serializable version of the Report.\n   */\n  function getSerializable () {\n    // We omit the functions and just return the properties.\n    return {\n      type,\n      id,\n      timeline: timeline.map(event => event.getSerializable()),\n      data: reportData,\n      metrics\n    }\n  }\n\n  const report = {\n    type,\n    id,\n    timeline,\n    metrics,\n    addEvent,\n    getEvent,\n    findLastOngoingEvent,\n    addData,\n    getData,\n    addMetric,\n    getMetric,\n    registerMetricHandler,\n    unregisterMetricHandler,\n    getSerializable\n  }\n\n  return report\n}\n","// Utils\nimport { isString } from 'lodash/fp'\nimport { v4 as uuidV4 } from 'uuid'\n\n/**\n * Creates a TimelineEvent.\n * @method createTimelineEvent\n * @param {string} The type of event being created.\n * @return {TimelineEvent}\n */\nexport default function createTimelineEvent (type, onEventEnded) {\n  const currentDate = new Date()\n  const start = currentDate.getTime()\n  let end\n  const id = uuidV4()\n  //  this will hold any sub-events for this event\n  const timeline = []\n  // this will hold associated data for this event, indexed by type\n  const eventData = {}\n  // Computed metrics\n  const metrics = []\n  // Indication of an error during this event, `undefined` if there is no error to report\n  let error\n\n  const API_TAG = 'API invoked: '\n  /**\n   * Add a new event to this events timeline.\n   * @method addEvent\n   * @param {string} type The type of event being added.\n   * @throws {Error} Throws an error if type fails to validate.\n   * @return {TimelineEvent} A new TimelineEvent.\n   */\n  function addEvent (type) {\n    if (end) {\n      // iF event was marked as ended, we cannot add further sub-events to it.\n      throw new Error(\n        `${API_TAG}timelineEvent.addEvent: Cannot add further sub-events. Event has been marked as ended.`\n      )\n    }\n    if (!type || !isString(type)) {\n      throw new Error(`${API_TAG}timelineEvent.addEvent: Invalid type (${typeof type}), must be of type string.`)\n    }\n    const newSubEvent = createTimelineEvent(type, onEventEnded)\n\n    // Store the sub-event in the timeline beloging to parent event\n    timeline.push(newSubEvent)\n\n    return newSubEvent\n  }\n\n  /**\n   * Add data to the TimelineEvent.\n   * @method addData\n   * @param {string} type The type of data being added to the TimelineEvent.\n   * @param {Object} data The data being added to the TimelineEvent.\n   * @throws {Error} Throws an error if type fails to validate.\n   * @return {undefined}\n   */\n  function addData (type, data) {\n    if (!type || !isString(type)) {\n      throw new Error(`${API_TAG}timelineEvent.addData: Invalid type (${typeof type}), must be of type string.`)\n    }\n    // Add data to parent event (event if parent event has been marked as ended)\n    eventData[type] = data\n    if (data === undefined) {\n      console.warn(`${API_TAG}eventTimeline.addData: No actual data provided. Only ${type} key was saved.`)\n    }\n  }\n\n  /**\n   * Find and return data added to a report.\n   * @method getData\n   * @param {string|undefined} key The key the for the data requested, if no key is provided return the entire data object.\n   * @return {*} The data mapped to key.\n   */\n  function getData (key) {\n    if (key) {\n      return eventData[key]\n    } else {\n      return eventData\n    }\n  }\n\n  /**\n   * Add computed metric to the TimelineEvent.\n   * @method addMetric\n   * @param {string} type The type of metric being added to the TimelineEvent.\n   * @param {*} data The metric data being added to the TimelineEvent.\n   * @throws {Error} Throws an error if the type is not of type string.\n   * @return {undefined}\n   */\n  function addMetric (type, data) {\n    if (!type || !isString(type)) {\n      throw new Error(`${API_TAG}timelineEvent.addMetric: Invalid type (${typeof type}), must be of type string.`)\n    }\n    metrics.push({ type, data })\n    if (!data) {\n      console.warn(`${API_TAG}timelineEvent.addMetric: No actual data provided. Only ${type} key was saved.`)\n    }\n  }\n\n  /**\n   * Get the data for a provided metric type.\n   * @method getMetric\n   * @param {string} type The type of metric to return.\n   * @throws {Error} Throws an error if the type is not a string.\n   * @return {*} The data associated with the provided metric type.\n   */\n  function getMetric (type) {\n    if (!type || !isString(type)) {\n      throw new Error(`${API_TAG}timelineEvent.getMetric: Invalid type (${typeof type}), must be of type string.`)\n    }\n\n    return metrics.filter(metric => metric.type === type).map(metric => metric.data)\n  }\n\n  /**\n   * Traverse the list of events and return the first one that matches the provided id.\n   * @method getEvent\n   * @param {string} id The id for the event being requested.\n   * @return {TimelineEvent} The event with matching id.\n   */\n  function getEvent (id) {\n    for (let i = 0; i < timeline.length; i++) {\n      if (timeline[i].id === id) {\n        return timeline[i]\n      } else {\n        const subEvent = timeline[i].getEvent(id)\n        if (subEvent) {\n          return subEvent\n        }\n      }\n    }\n  }\n\n  /**\n   * Find the last event of a specific type.\n   * @method findLastOngoingEvent\n   * @param {string} type The type of event to search for.\n   * @return {TimelineEvent} The last event matching the provided type.\n   */\n  function findLastOngoingEvent (type) {\n    return timeline.findLast(event => {\n      if (event.type === type && !event.isEnded()) {\n        return event\n      }\n    })\n  }\n\n  /**\n   * End a TimelineEvent.\n   * @method endEvent\n   * @param {Error} An optional error object.\n   *   This can be provided if there is an error by the time SDK ends this event instance.\n   * @return {undefined}\n   */\n  function endEvent (error) {\n    if (this.end) {\n      // We already marked this event as ended.\n      return\n    }\n    if (error) {\n      this.error = error\n    }\n    const currentDate = new Date()\n    this.end = currentDate.getTime()\n\n    onEventEnded(event)\n  }\n\n  /**\n   * Check if the event has an end time.\n   * @method isEnded\n   * @return {boolean}\n   */\n  function isEnded () {\n    return !!this.end\n  }\n\n  /**\n   * Set an error on the event.\n   * @method setError\n   * @param {Error} An error object.\n   * @throws {Error} An error indicating that the event has already ended.\n   * @return {undefined}\n   */\n  function setError (error) {\n    if (this.end) {\n      throw new Error(\"Can't set error on an event that has already ended.\")\n    }\n    this.error = error\n  }\n\n  /**\n   * Get an error that may have been set on this event.\n   * @method getError\n   * @return {Error|undefined}\n   */\n  function getError () {\n    return this.error\n  }\n\n  /**\n   * Return a serializable version of this TimelineEvent.\n   * @method getSerializable\n   * @return {Object} A read-only, serializable version of the TimelineEvent.\n   */\n  function getSerializable () {\n    // We omit the functions and return just the properties.\n    return {\n      type,\n      id,\n      timeline: timeline.map(event => event.getSerializable()),\n      data: eventData,\n      metrics,\n      start,\n      end: this.end,\n      error\n    }\n  }\n\n  const event = {\n    type,\n    id,\n    timeline,\n    metrics,\n    start,\n    addEvent,\n    isEnded,\n    getEvent,\n    findLastOngoingEvent,\n    addData,\n    getData,\n    addMetric,\n    getMetric,\n    endEvent,\n    setError,\n    getError,\n    getSerializable\n  }\n\n  return event\n}\n","import baseConnectivity from '../common/base'\nimport { connCheckMethods } from '../../constants'\nimport { defaults } from 'lodash/fp'\n\n// Parse and/or Validate\nimport { validation as v8n, parse, enums } from '../../../src/common/validation'\n\nconst defaultValues = {\n  method: connCheckMethods.KEEP_ALIVE,\n  pingInterval: 30000,\n  reconnectLimit: 5,\n  reconnectDelay: 5000,\n  reconnectTimeMultiplier: 1,\n  reconnectTimeLimit: 640000,\n  autoReconnect: true,\n  maxMissedPings: 3,\n  checkConnectivity: true,\n  webSocketOAuthMode: 'query'\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  method: enums([connCheckMethods.KEEP_ALIVE]),\n  pingInterval: v8n.positive(),\n  reconnectLimit: v8n.positive(),\n  reconnectDelay: v8n.positive(),\n  reconnectTimeMultiplier: v8n.positive(),\n  reconnectTimeLimit: v8n.positive(),\n  autoReconnect: v8n.boolean(),\n  maxMissedPings: v8n.positive(),\n  checkConnectivity: v8n.boolean(),\n  webSocketOAuthMode: v8n.string()\n})\nconst parseOptions = parse('connectivity', v8nValidation)\n\n/**\n * Configuration options for the Connectivity feature.\n * The SDK can only use keepalive as the connectivity check.\n *\n * Keep Alive: The client sends \"keepalive\" messages (to the server) on the websocket at regular intervals. This lets the server know that the client is still connected, and that it should \"keep the connection alive\".\n *\n * For more information on keepalive see here: https://en.wikipedia.org/wiki/Keepalive\n * @public\n * @name config.connectivity\n * @memberof config\n * @instance\n * @param {Object} connectivity Connectivity configs.\n * @param {Number} [connectivity.pingInterval=30000] Time in between websocket ping attempts (milliseconds).\n * @param {Number} [connectivity.reconnectLimit=5] Number of failed reconnect attempts before reporting an error. Can be set to 0 to not limit reconnection attempts.\n * @param {Number} [connectivity.reconnectDelay=5000] Base time between websocket reconnect attempts (milliseconds).\n * @param {Number} [connectivity.reconnectTimeMultiplier=1] Reconnect delay multiplier for subsequent attempts. The reconnect delay time will be multiplied by this after each failed reconnect attempt to increase the delay between attempts. eg. 5000ms then 10000ms then 20000ms delay if value is 2.\n * @param {Number} [connectivity.reconnectTimeLimit=640000] Maximum time delay between reconnect attempts (milliseconds). Used in conjunction with the reconnect time multiplier to prevent overly long delays between reconnection attempts.\n * @param {Boolean} [connectivity.autoReconnect=true] Flag to determine whether the SDK will attempt to automatically reconnect after connectivity disruptions.\n * @param {Number} [connectivity.maxMissedPings=3] Maximum pings sent (without receiving a response) before reporting an error.\n * @param {Boolean} [connectivity.checkConnectivity=true] Flag to determine whether the SDK should check connectivity.\n * @param {string} [connectivity.webSocketOAuthMode=query] query will send the bearer access token to authenticate the websocket and none will not send it.\n */\nexport default function connectivity (options = {}) {\n  options = defaults(defaultValues, options)\n  parseOptions(options)\n  return baseConnectivity(options)\n}\n","// Connectivity plugin.\nimport pluginInterface from '../interface'\nimport eventsMap from '../interface/events'\nimport { wsConnectFlow } from './sagas'\n\n// Other plugins.\nimport { update as updateConfig } from '../../config/interface/actions'\nimport { mapEvents } from '../../events/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { connCheckResponsibility } from '../../constants'\n\n/**\n * Base Connectivity plugin factory.\n * Responsible for handling websockets.\n * @method baseConnectivity\n * @param  {Object} [options={}] Connectivity configs. See above.\n * @return {Object} Plugin - A connectivity plugin.\n */\nexport default function baseConnectivity (options) {\n  // For backwards compatibility, convert the old style to the new style.\n  if (typeof options.method === 'string') {\n    const method = options.method\n    options.method = {\n      type: method,\n      // In both old scenarios, the client is responsible.\n      responsibleParty: connCheckResponsibility.CLIENT\n    }\n  }\n\n  function * init () {\n    yield put(updateConfig(options, pluginInterface.name))\n    yield put(mapEvents(eventsMap))\n  }\n\n  return {\n    sagas: [wsConnectFlow],\n    init,\n    name: pluginInterface.name,\n    reducer: pluginInterface.reducer,\n    api: pluginInterface.api\n  }\n}\n","import name from './name'\nimport api from './api'\nimport reducer from './reducers'\n\nexport default { name, api, reducer }\n","// Constants\nimport { platforms } from '../../constants'\n\n/**\n * The 'connection' namespace is used to connect and maintain connections between\n * the SDK and one or more backend servers.\n *\n * @public\n * @namespace connection\n */\n\n/**\n * Information about a websocket connection.\n *\n * Can be retrieved using the {@link connection.getSocketState} API.\n *\n * @public\n * @static\n * @typedef {Object} WSConnectionObject\n * @memberof connection\n * @property {boolean} connected The state of the websocket connection.\n * @property {boolean} pinging True if the client has sent a ping to the server and is still waiting for a pong response.\n * @property {Object} method Information about how the websocket is being used.\n * @property {string} [method.type] How the websocket is staying connected.\n * @property {string} [method.responsibleParty] Who is responsible for keeping the connection alive.\n * @property {string} platform The SDK platform being used.\n * @property {number} pingInterval How often the client will ping the server to test for websocket connectivity.\n * @property {number} reconnectLimit How many times the SDK will try to reconnect a disconnected websocket.\n * @property {number} reconnectDelay How long the SDK will wait before retrying websocket reconnection.\n * @property {number} reconnectTimeMultiplier Reconnect delay multiplier for subsequent attempts. The reconnect delay time will be multiplied by this after each failed reconnect attempt to increase the delay between attempts. eg. 5000ms then 10000ms then 20000ms delay if value is 2.\n * @property {number} reconnectTimeLimit Maximum time delay between reconnect attempts (milliseconds). Used in conjunction with `reconnectTimeMultiplier` to prevent overly long delays between reconnection attempts.\n * @property {boolean} autoReconnect Indicates if the SDK should automatically try reconnecting a disconnected websocket.\n * @property {number} maxMissedPings How many missed pings before the SDK stops trying to reconnect a disconnected websocket.\n * @property {string} webSocketOAuthMode The mode used for authenticating with the server.\n * @property {Object} wsInfo Information required to connect a websocket to the server.\n * @property {string} [wsInfo.protocol] The protocol to use to connect a websocket.\n * @property {string} [wsInfo.server] The domain name or IP address of the server to connect to.\n * @property {number} [wsInfo.port] The port of the server to connect to.\n * @property {string} [wsInfo.url] The URL path to use to request a websocket connection.\n * @property {string} [wsInfo.params] Any additional params that might be required by the server to establish the websocket connection.\n * @property {number} lastContact The date and time that the last known contact with the server was.\n */\n\nimport { changeConnectivityChecking, lostConnection } from './actions'\n\n// Selectors\nimport { getConnectionState } from './selectors'\nimport { getPlatform } from '../../auth/interface/selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('CONNECTIVITY')\n\nexport default function api ({ dispatch, getState }) {\n  const connectivityApi = {\n    /**\n     * Get the state of the websocket.\n     * @public\n     * @static\n     * @memberof connection\n     * @method getSocketState\n     * @param {string} [platform='link'] Backend platform for which to request the websocket's state.\n     * @return {connection.WSConnectionObject} Details about the current websocket connection, including state and configuration.\n     */\n    getSocketState (platform = platforms.LINK) {\n      log.debug(API_LOG_TAG + 'connection.getSocketState: ', platform)\n      return getConnectionState(getState(), platform)\n    },\n\n    /**\n     * Enables or disables connectivity checking.\n     * @public\n     * @memberof connection\n     * @method enableConnectivityChecking\n     * @param {boolean} enable Enable connectivity checking.\n     */\n    enableConnectivityChecking (enable) {\n      log.debug(API_LOG_TAG + 'connection.enableConnectivityChecking: ', enable)\n      dispatch(changeConnectivityChecking(enable))\n    },\n\n    /**\n     * Triggers a reset in the connection to the WebSocket being used for notifications.\n     * This can be used in scenarios where a network issue (undetectable by the SDK)\n     * is detected by an application.\n     *\n     * If there is no WebSocket currently connected, this function has no effect.\n     * Calling this function will trigger all the normal WebSocket and connectivity lifecycle\n     * events as well as trigger re-connection processing that follows the configuration of the SDK.\n     * Calling this function always has the potential of causing some events being lost by the\n     * SDK and preventing proper operation.\n     * @public\n     * @memberof connection\n     * @method resetConnection\n     */\n    resetConnection () {\n      const state = getState()\n      const platform = getPlatform(state)\n      log.debug(API_LOG_TAG + 'connection.resetConnection: ', platform)\n\n      const wsState = getConnectionState(state, platform)\n      if (!wsState.connected) {\n        log.debug(API_LOG_TAG + 'connection.resetConnection: No active websocket connection. Ignoring request.')\n        return\n      }\n      // Dispatching this action would close/cleanup existing ws connection\n      // However, we'll re-connect after that.\n      dispatch(lostConnection(undefined, platform))\n    }\n  }\n  return { connection: connectivityApi }\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { omit } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.WS_ATTEMPT_CONNECT] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_RECONNECT_FAILED] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_CONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: true,\n        method: action.payload.kandy.method,\n        platform: action.meta.platform,\n        ...omit('checkConnectivity', action.payload.kandy)\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.LOST_CONNECTION] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_DISCONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_ERROR] = {\n  next (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\n/*\n  Accepts a boolean payload for checkConnectivity\n */\nreducers[actionTypes.CHANGE_CONNECTIVITY_CHECKING] = {\n  next (state, action) {\n    return {\n      ...state,\n      checkConnectivity: action.payload\n    }\n  }\n}\n\n/*\n  Accepts a payload for pingInterval in MILLISECONDS\n */\nreducers[actionTypes.CHANGE_PING_INTERVAL] = {\n  next (state, action) {\n    return {\n      ...state,\n      pingInterval: action.payload\n    }\n  }\n}\n\n/**\n * Connectivity Interface reducer\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n */\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nvar events = {}\n\nevents[actionTypes.WS_CONNECT_FINISHED] = function (action) {\n  if (action.error) {\n    // TODO: Handle the error case?\n  } else {\n    return {\n      type: eventTypes.WS_CHANGE,\n      args: { platform: action.meta.platform }\n    }\n  }\n}\n\nevents[actionTypes.LOST_CONNECTION] = function (action) {\n  return {\n    type: eventTypes.WS_CHANGE,\n    args: { platform: action.meta.platform }\n  }\n}\n// TODO: Differentiate between types of disconnects?\nevents[actionTypes.WS_DISCONNECT_FINISHED] = events[actionTypes.LOST_CONNECTION]\n\n// TODO: Does an app care that we're trying to connect/reconnect?\nevents[actionTypes.WS_ATTEMPT_CONNECT] = function (action) {\n  return {\n    type: eventTypes.WS_CHANGE,\n    args: { platform: action.meta.platform }\n  }\n}\n\nexport default events\n","/**\n * The WebSocket to the server has changed state.\n *\n * This event is only emitted when the WebSocket is connected, or has lost connection.\n *\n * @public\n * @memberof connection\n * @event ws:change\n * @param {Object} params\n * @param {string} params.platform The platform\n */\nexport const WS_CHANGE = 'ws:change'\n","// Connectivity plugin.\nimport { openWebsocket, cleanupWebSocket, wsEmitter } from './websocket'\nimport { getConnectivityConfig, getPingInterval, getCheckConnectivity } from '../interface/selectors'\nimport * as actionTypes from '../interface/actionTypes'\nimport * as actions from '../interface/actions'\n\n// Other plugins.\nimport { getConnectionInfo } from '../../auth/interface/selectors'\nimport { getSubscriptionInfo } from '../../subscription/interface/selectors'\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { takeEvery, delay, call, put, fork, cancel, actionChannel, race, select, take } from 'redux-saga/effects'\n\n// Constants\nimport { platforms, connCheckMethods, connCheckResponsibility } from '../../constants'\n\n// Helpers\nimport BasicError from '../../errors'\nimport { subscriptionCodes, connectivityCodes } from '../../errors/codes'\n\n// Get the logger\nconst log = logManager.getLogger('CONNECTIVITY')\n\nexport function * wsConnectFlow () {\n  log.info('Creating channel for handling websocket actions ...')\n  const chan = yield actionChannel(actionTypes.WS_ATTEMPT_CONNECT)\n  log.info('Channel successfully created.')\n  yield takeEvery(chan, websocketLifecycle)\n}\n\n/**\n * Saga that handles a websocket over its lifecycle.\n * @method websocketLifecycle\n * @param  {Object} wsConnectAction\n */\nexport function * websocketLifecycle (wsConnectAction) {\n  const wsInfo = wsConnectAction.payload\n  const { platform, isReconnect } = wsConnectAction.meta\n\n  // Redux-saga take() pattern.\n  // Take disconnect websocket action for this platform.\n  function disconnectWebsocketPattern (action) {\n    return action.type === actionTypes.WS_DISCONNECT && action.meta.platform === platform\n  }\n\n  log.info(`Connecting to websocket on platform: ${platform} ...`)\n  // Try to open the websocket, but cancel if we get a disconnect action.\n  const { websocket, disconnect } = yield race({\n    websocket: call(connectWebsocket, wsInfo, platform),\n    disconnect: take(disconnectWebsocketPattern)\n  })\n\n  // If the websocket didn't open, stop here. Dispatch the error if there was one.\n  if (disconnect) {\n    log.info('Received disconnect during websocket connection; stopping.')\n    return\n  } else if (websocket.error) {\n    if (isReconnect) {\n      yield put(actions.wsReconnectFailed(undefined, platform))\n      return\n    } else {\n      yield put(\n        actions.wsConnectFinished(\n          new BasicError({\n            message: websocket.message,\n            code: subscriptionCodes.WS_CONNECTION_ERROR\n          }),\n          platform\n        )\n      )\n      return\n    }\n  }\n\n  // Append information to the websocket, so that its accessible elsewhere.\n  // TODO: Remove this and replace with proper redux state storage.\n  const connConfig = yield select(getConnectivityConfig)\n  websocket.kandy = connConfig\n\n  websocket.kandy.wsInfo = wsInfo\n  websocket.kandy.platform = platform\n\n  // set last contact in both cases to be now\n  websocket.kandy.lastContact = Date.now()\n\n  const emitTask = yield fork(wsEmitter, websocket, platform)\n\n  // determine which pingFlow is appropriate\n  let pingFlow\n  if (websocket.kandy.method.responsibleParty === connCheckResponsibility.SERVER) {\n    log.debug(`Starting a serverPing flow on ${platform} ...`)\n    pingFlow = yield fork(serverPingFlow, websocket, platform)\n  } else {\n    log.debug(`Starting a clientPing flow on ${platform} ...`)\n    pingFlow = yield fork(clientPingFlow, websocket, platform)\n  }\n\n  // Dispatch the finish action, to notify that the websocket is connected.\n  yield put(actions.wsConnectFinished(websocket, platform))\n\n  // Redux-saga take() pattern.\n  // Take end of lifecycle WS actions for this platform.\n  function closeWebsocketPattern (action) {\n    return (\n      (action.type === actionTypes.WS_DISCONNECT ||\n        action.type === actionTypes.LOST_CONNECTION ||\n        action.type === actionTypes.WS_CLOSED ||\n        action.type === actionTypes.WS_ERROR) &&\n      action.meta.platform === platform\n    )\n  }\n\n  // Wait for a disconnect or lost connection action.\n  const action = yield take(closeWebsocketPattern)\n  log.debug(`Cancelling outstanding tasks upon receiving action: ${action.type}`)\n\n  // Whether we're disconnecting or have lost connection,\n  //      we want to cancel these tasks either way.\n  yield cancel([emitTask, pingFlow])\n\n  log.debug('Cleaning up websocket connection ...')\n  yield call(cleanupWebSocket, websocket)\n\n  if (action.type === actionTypes.WS_DISCONNECT) {\n    // If we're disconnecting, close the websocket to end it's lifecycle.\n    yield put(actions.wsDisconnectFinished(undefined, platform))\n    log.info('Successfully disconnected websocket connection.')\n  } else if (action.type === actionTypes.WS_CLOSED && action.payload.code === 1000) {\n    // 1000 signifies a normal closure\n    // Normal websocket close, don't try to reconnect\n    log.debug('Websocket closed normally.')\n    yield put(actions.wsReconnectFailed(undefined, platform))\n  } else {\n    if (websocket.kandy.autoReconnect) {\n      // If this is a Link websocket, we need to ensure the URL is using the\n      //     \"latest\" access token from state.\n      if (wsConnectAction.meta.platform === platforms.UC) {\n        log.info('Updating access token ...')\n        const { notificationChannel } = yield select(getSubscriptionInfo)\n        const { accessToken, oauthToken } = yield select(getConnectionInfo)\n        wsInfo.url = notificationChannel\n        if (oauthToken && !accessToken) {\n          wsInfo.params = {\n            access_token: oauthToken\n          }\n        } else {\n          wsInfo.params = {\n            token: accessToken\n          }\n        }\n      } else if (wsConnectAction.meta.platform === platforms.LINK) {\n        const { bearerAccessToken, accessToken } = yield select(getConnectionInfo)\n        // If using bearerAccessToken and WS query mode, set the token as part\n        //    of the WS reconnect query string.\n        if (bearerAccessToken && connConfig.webSocketOAuthMode === 'query') {\n          wsInfo.params = {\n            access_token: bearerAccessToken\n          }\n        } else if (accessToken) {\n          wsInfo.params = {\n            token: accessToken\n          }\n        }\n      }\n\n      // If we've lost connection, re-dispatch the initial action, so that we can\n      //      start the lifecycle over.\n      log.debug('Attempting to reconnect using a new websocket ...')\n      yield put(actions.wsAttemptConnect(wsInfo, wsConnectAction.meta.platform, true))\n    } else {\n      log.debug('Not attempting to reconnect to websocket autoReconnect is false.')\n      yield put(actions.wsReconnectFailed(undefined, platform))\n    }\n  }\n}\n\n/**\n * if we receive a server ping we want to respond with a pong,\n * if there is none we want to check to see if its been too long since the server last pinged us and if it has been then reconnect,\n * otherwise we just want to increment the time since the last ping\n * @param {Object} ws a websocket connected to the backend\n * @return {Object} yields a Flux standard action\n */\nexport function * serverPingFlow (ws) {\n  const { lastContact, platform, maxMissedPings, autoReconnect } = ws.kandy\n  let timeOfLastPing = Date.now()\n  const { pingInterval: configPingInterval } = yield select(getConnectivityConfig)\n  if (configPingInterval) {\n    log.warn(\n      '`connectivity.pingInterval` has been set, but `connectivity.method.responsibleParty` is set to `server`. ' +\n        `The configured value of ${configPingInterval}ms will be ignored.`\n    )\n  }\n\n  while (true) {\n    /**\n     * //TODO: Get rid of this use of getPingInterval\n     * The server doesn't even use this interval, it uses whatever the server is set to\n     * It gets an undefined value, sets it to 120 seconds, and when the server responds switched to that timeout.\n     * See KJS-58 for a discussion of the problem, and KAA-2215 for a long-term solution\n     */\n    let pingInterval = yield select(getPingInterval)\n    pingInterval = typeof pingInterval !== 'undefined' ? pingInterval : 120000\n    const maxIdleDuration = pingInterval * maxMissedPings\n    log.debug(`serverPing: Using ping interval: ${pingInterval} with maximum idle duration: ${maxIdleDuration}`)\n\n    // wait for incoming server pings or disconnect actions on an interval\n    const { serverPing, disconnect } = yield race({\n      expiry: delay(pingInterval),\n      serverPing: take(actionTypes.RECEIVE_SERVER_PING),\n      disconnect: take(actionTypes.WS_DISCONNECT_FINISHED)\n    })\n\n    // is disconnect action received then exit\n    if (disconnect) {\n      log.debug('Got disconnect action. Exiting from serverPing flow ...')\n      break\n    }\n\n    if (serverPing) {\n      // server sent us a ping so reset the timeSinceLastPing\n      timeOfLastPing = Date.now()\n\n      // pingInterval is stored in milliseconds but comes in as seconds so convert\n      const pingIntervalMillis = serverPing.payload.connCheck.interval * 1000\n      // Prevent firing actions if pingInterval hasn't changed\n      if (pingIntervalMillis !== pingInterval) {\n        yield put(actions.changePingInterval(pingIntervalMillis, platform))\n      }\n\n      const message = { connAck: {} }\n      log.debug(\n        `Received a server ping which uses interval: ${pingIntervalMillis} ms. ${platform} is replying with message: ${message}`\n      )\n      const error = _sendWSMessage(ws, JSON.stringify(message))\n\n      // if the pong websocket message has an error then try to reconnect\n      if (error) {\n        log.info(`Got error when attempting to reply: ${error.message}`)\n        if (autoReconnect) {\n          log.info('Trying to auto reconnect ...')\n        }\n        yield put(actions.lostConnection(undefined, platform))\n        break\n      }\n    } else {\n      if (Date.now() - timeOfLastPing >= maxIdleDuration) {\n        log.warn('Closing websocket due to inactivity. (have not received pong from server)', platform)\n\n        // try to reconnect or exit\n        if (autoReconnect) {\n          log.debug(`${platform} is attempting to auto reconnect ...`)\n        }\n        yield put(actions.lostConnection(undefined, platform))\n        break\n      } else {\n        log.debug(`${platform} websocket last contact: ${lastContact}. Reconnect after ${maxIdleDuration}.`)\n      }\n    }\n  }\n}\n\n/**\n * This flow is responsible for handling keepAlive and pingPong methods for client,\n * if keepAlive is used the client simply sends the keepAlive message to the websocket after waiting the pingInterval\n * if pingPong is used the client is responsible for pinging the server and listening for server \"pong\" responses via the websocket\n * the client will then determine if too much time has passed and attempt to reconnect if its not receiving server pongs or if an error occurs\n * @param {Object} ws a websocket connected to the backend\n * @return {Object} yields a Flux standard action\n */\nexport function * clientPingFlow (ws) {\n  const { lastContact, platform, maxMissedPings, autoReconnect } = ws.kandy\n  const { checkConnectivity, method } = yield select(getConnectivityConfig)\n\n  let timeOfLastPong = Date.now()\n  let message = ''\n  let shouldCheck\n\n  while (true) {\n    // If the flag was explicitly set in state, prefer that over the config.\n    shouldCheck = yield select(getCheckConnectivity)\n    shouldCheck = typeof shouldCheck !== 'undefined' ? shouldCheck : checkConnectivity\n\n    const { pingInterval } = yield select(getConnectivityConfig)\n    const maxIdleDuration = pingInterval * maxMissedPings\n    const intervalInSeconds = pingInterval / 1000\n\n    if (shouldCheck) {\n      if (method.type === connCheckMethods.PING_PONG) {\n        message = { connCheck: { interval: intervalInSeconds } }\n      } else if (method.type === connCheckMethods.KEEP_ALIVE) {\n        message = { message_type: 'ping' }\n      } else {\n        log.error(`Invalid connectivity method: ${method}`)\n        break\n      }\n\n      log.debug(`${platform} is sending a ${method.type} every ${intervalInSeconds} sec.`)\n\n      const error = _sendWSMessage(ws, JSON.stringify(message))\n      if (error) {\n        log.error('Exception in clientPing flow: ' + error.message)\n        if (autoReconnect) {\n          log.debug(`${platform} is attempting to auto reconnect ...`)\n        }\n        yield put(actions.lostConnection(undefined, platform))\n        break\n      }\n    } else {\n      log.debug('Set to not check websocket connectivity. Waiting for connectivity status change ...')\n\n      // If we shouldn't ping, wait until we receive a trigger to (maybe) ping.\n      const shouldCheckConnectivity = yield take(\n        action => action.type === 'CHANGE_CONNECTIVITY_CHECKING' && action.payload\n      )\n      log.debug(`Connectivity check setting changed. Check connectivity?: ${shouldCheckConnectivity}`)\n      continue\n    }\n\n    const delayStartTime = Date.now()\n    // Wait for either the ping interval, a disconnect or a pong from the server\n    const { disconnect, serverPong } = yield race({\n      expiry: delay(pingInterval),\n      serverPong: take(actionTypes.RECEIVE_SERVER_PONG),\n      disconnect: take(actionTypes.WS_DISCONNECT_FINISHED)\n    })\n\n    // If we receive a serverPong, we will not have waited the full pingInterval duration.\n    //    Determine how long we were waiting for, so that we know how long to wait (again)\n    //    to fulfill the full pingInterval duration (before restarting the ping loop).\n    const timeElapsed = Date.now() - delayStartTime\n\n    // If we received a disconnect action, stop the pings and exit.\n    if (disconnect) {\n      log.debug('Got disconnect action. Exiting from clientPing flow ...')\n      break\n    }\n\n    if (method.type === connCheckMethods.PING_PONG) {\n      if (serverPong) {\n        // we received a pong, wait pingInterval to send another ping\n        timeOfLastPong = Date.now()\n\n        const timeUntilNextPing = pingInterval - timeElapsed\n        const { disconnect } = yield race({\n          expiry: delay(timeUntilNextPing),\n          disconnect: take(actionTypes.WS_DISCONNECT_FINISHED)\n        })\n        // If we received a disconnect action, stop the pings and exit.\n        if (disconnect) {\n          log.debug('Got disconnect action. Exiting from clientPing flow ...')\n          break\n        }\n      } else {\n        if (Date.now() - timeOfLastPong >= maxIdleDuration) {\n          log.warn('Closing websocket due to inactivity. (have not received pong from server)', platform)\n\n          // its been too long since the last pong, attempt to reconnect or exit\n          yield put(actions.lostConnection(undefined, platform))\n\n          break\n        } else {\n          log.debug(`${platform} websocket last contact: ${lastContact}. Reconnect after ${maxIdleDuration}.`)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Generic Websocket message that takes a websocket and a message and sends it\n * @param  {Object} ws  websocket\n * @return {Object}     Error object\n */\nfunction _sendWSMessage (ws, message) {\n  try {\n    if (ws && ws.readyState === 1) {\n      log.debug('Sending message on websocket.', message)\n      ws.send(message)\n    } else {\n      throw new BasicError({\n        message: 'websocket was not in readyState',\n        code: connectivityCodes.WS_MESSAGE_ERROR\n      })\n    }\n  } catch (e) {\n    return e\n  }\n}\n\n/**\n * Helper function for connecting to a websocket.\n * Attempts to connect a specified number of times before returning an error.\n * Includes a delay in between attempts, determined by configs.\n * @method connectWebsocket\n * @param  {Object} wsInfo\n * @return {Websocket|Object}  Either a connected websocket or an error object.\n */\nexport function * connectWebsocket (wsInfo, platform) {\n  const configs = yield select(getConnectivityConfig)\n  let connectionAttempt = 0\n  // The delay between attempts should not be shorter than 2 seconds.\n  let delayTime = configs.reconnectDelay > 2000 ? configs.reconnectDelay : 2000\n  let websocket\n\n  // If no limit is set, we will continually attempt to reconnect.\n  if (!configs.reconnectLimit) {\n    log.debug('No connectivity reconnect limit set.')\n  }\n\n  function * safeOpenWs (wsInfo) {\n    let websocket\n    try {\n      websocket = yield call(openWebsocket, wsInfo)\n    } catch (err) {\n      websocket = err\n    }\n    return websocket\n  }\n\n  while (connectionAttempt < configs.reconnectLimit || !configs.reconnectLimit) {\n    const wsConnectStart = Date.now()\n    const { openWs, timeout } = yield race({\n      openWs: call(safeOpenWs, wsInfo),\n      timeout: delay(delayTime)\n    })\n    const attemptDuration = Date.now() - wsConnectStart\n\n    // Checking for both timeout and open websocket errors here since we need to calculate the next delay parameters in\n    //  both scenarios\n    if (timeout || (openWs && openWs.error)) {\n      connectionAttempt++\n      websocket = openWs\n      log.debug(\n        `Failed to connect to websocket on ${platform}. (Attempt #${connectionAttempt}). Message: ${\n          timeout ? 'Timed out' : websocket.message\n        }.`\n      )\n\n      // If we are still under the reconnect attempt limit, calculate the next delay time and delay before retrying.\n      if (connectionAttempt < configs.reconnectLimit || !configs.reconnectLimit) {\n        // Calculate the remaining delay time by checking how long the previous connection attempt was.\n        // Do this before potentially lengthening the `delayTime` value.\n        const remainingDelay = timeout ? 0 : delayTime - attemptDuration\n\n        // Increase the delay time for the next loop if we're not at the limit.\n        if (delayTime !== configs.reconnectTimeLimit) {\n          delayTime = configs.reconnectDelay * Math.pow(configs.reconnectTimeMultiplier, connectionAttempt)\n          delayTime = delayTime < configs.reconnectTimeLimit ? delayTime : configs.reconnectTimeLimit\n        }\n\n        log.debug(`Websocket will attempt to reconnect after ${remainingDelay} ms on ${platform}`)\n        if (remainingDelay > 0) {\n          yield delay(remainingDelay)\n        }\n      } else {\n        log.debug(`Stopping websocket connection attempts on ${platform}.`)\n        // We are at reconnect attempt limit; if it was due to a timeout we need to return an error. In case of\n        //  websocket error, that will be returned by the websocket.\n        if (timeout) {\n          return {\n            error: true,\n            message: `Websocket connection timed out. Tried ${connectionAttempt} times to connect.`\n          }\n        }\n        break\n      }\n    } else if (openWs) {\n      websocket = openWs\n      break\n    }\n  }\n\n  // Return either the websocket or the latest error.\n  return websocket\n}\n","import { wsClosed, wsError, receiveServerPing, receiveServerPong } from '../interface/actions'\nimport { eventChannel, END, buffers } from 'redux-saga'\nimport { take, put, call } from 'redux-saga/effects'\n\nimport { toQueryString } from '../../common/utils'\n\n// Other plugins.\nimport { websocketNotification } from '../../notifications/interface/actions'\nimport { logManager } from '../../logs'\n\nconst INITIAL_BUFFER_SIZE = 50\nconst log = logManager.getLogger('CONNECTIVITY')\n\n/**\n * Create a new websocket.\n * @method openWebsocket\n * @param  {Object} options Websocket configuration options.\n * @param {string} options.protocol Websocket protocol to use.\n * @param {string} options.server Websocket hostname.\n * @param {string} options.port Websocket port to use.\n * @param {string} options.url Websocket notification channel.\n * @param {Object} options.params A list of URL params to attach to the websocket.\n * @return {WebSocket} ws Newly connected websocket.\n */\nexport function openWebsocket (options) {\n  // Create the websocket.\n  const wsUrl = `${options.protocol}://${options.server}:${options.port}${options.url}` + toQueryString(options.params)\n  log.debug(`Opening socket at: ${wsUrl}`)\n  const ws = new WebSocket(wsUrl)\n\n  // Use a promise to wait for the first message from the websocket.\n  // This indicates whether the WS opened successfully or not.\n  const validateWS = new Promise((resolve, reject) => {\n    const onOpen = function () {\n      ws.onopen = null\n      ws.onerror = null\n      resolve(ws)\n    }\n    const onError = function () {\n      ws.onopen = null\n      ws.onerror = null\n\n      // TODO: Fix this?\n      /* eslint-disable-next-line prefer-promise-reject-errors */\n      reject({\n        // Websocket doesn't return error codes for security reasons and as such all websocket\n        // errors have to be handled the same.\n        error: true,\n        message: 'Could not connect to websocket. Received error on open.'\n      })\n    }\n    ws.onopen = onOpen\n    ws.onerror = onError\n  })\n  return validateWS\n}\n\n/**\n * Clean-up a provided websocket.\n * @method cleanupWebSocket\n * @param  {Websocket} ws Websocket to be cleaned-up.\n * @return {Websocket} ws The websocket after being cleaned.\n */\nexport function cleanupWebSocket (ws) {\n  if (ws.close) {\n    ws.close()\n  }\n  ws.onclose = null\n  ws.onmessage = null\n  ws.onopen = null\n  ws.onerror = null\n}\n\n/**\n * Create an event channel for a given websocket\n * @param  {WebSocket} ws       The websocket to make an event channel for.\n * @param {string} [platform=link]    The backend platform associated with the websocket.\n * @return {EventChannel}              The event channel corresponding to the WebSocket\n */\nfunction createWsChannel (ws, platform) {\n  // this function handles server messages\n  return eventChannel(emit => {\n    // Define handlers\n    ws.onmessage = message => {\n      // Mark this websocket are being connected as of now.\n      ws.kandy.lastContact = Date.now()\n\n      var data = JSON.parse(message.data)\n      log.debug('Received message on websocket.', data)\n      if (data.connCheck) {\n        // Handle CPaaS server pings\n        emit(receiveServerPing(data, platform))\n      } else if (data.connAck) {\n        // Handle CPaaS server pongs\n        emit(receiveServerPong(data, platform))\n      } else {\n        emit(websocketNotification(data, platform))\n      }\n    }\n    ws.onclose = data => {\n      emit(wsClosed(data, platform))\n      emit(END)\n    }\n    ws.onerror = err => {\n      emit(wsError(new Error(err), platform))\n      emit(END)\n    }\n\n    return () => cleanupWebSocket(ws)\n  }, buffers.expanding(INITIAL_BUFFER_SIZE))\n}\n\n/**\n * Saga worker for creating a websocket and emitting its events\n * @param {Object} ws configuration options.\n * @param {string} [platform=link]    The backend platform associated with the websocket.\n * @return {Generator}\n */\nexport function * wsEmitter (ws, platform) {\n  var wsChannel = yield call(createWsChannel, ws, platform)\n  while (true) {\n    const action = yield take(wsChannel)\n    yield put(action)\n  }\n}\n","// Notification plugin.\nimport { api, reducer, name } from '../../notifications/interface'\nimport events from '../../notifications/interface/events'\nimport * as pushRegistrationSagas from './sagas/pushRegistration'\nimport { enableWebsocketChannelEntry, processNotification } from './sagas/notification'\nimport createMiddleware from '../middleware'\n\n// Other plugins.\nimport { mapEvents } from '../../events/interface/actions'\nimport { update as updateConfig } from '../../config/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { defaultsDeep, values } from 'lodash/fp'\n\n// Parse and/or Validate\nimport { validation as v8n, parse, enums } from '../../../src/common/validation'\n\n/**\n * Configuration options for the notification feature.\n * @public\n * @name config.notifications\n * @memberof config\n * @instance\n * @param {Object} notifications - The notifications configuration object.\n * @param {number} [notifications.idCacheLength=100] - Default amount of event ids to remember for de-duplication purposes.\n * @param {string} [notifications.incomingCallNotificationMode='any-channel'] - Communication channel mode used for incoming call notifications. Supported values are 'any-channel' or 'push-channel-only'.\n * @param {Object} [notifications.pushRegistration] - Object describing the server to use for push services.\n * @param {string} [notifications.pushRegistration.server] - Hostname for the push registration server.\n * @param {string} [notifications.pushRegistration.port] - Port for the push registration server.\n * @param {string} [notifications.pushRegistration.protocol] - Protocol for the push registration server.\n * @param {string} [notifications.pushRegistration.version] - Version for the push registration server.\n */\n\nconst defaultOptions = {\n  idCacheLength: 100,\n  incomingCallNotificationMode: 'any-channel'\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  idCacheLength: v8n.positive(),\n  incomingCallNotificationMode: enums(['any-channel', 'push-channel-only']),\n  pushRegistration: v8n.optional(\n    v8n.schema({\n      server: v8n.string(),\n      port: v8n.string(),\n      protocol: v8n.string(),\n      version: v8n.string()\n    })\n  )\n})\nconst parseOptions = parse('notifications', v8nValidation)\n\n/**\n * Notifications plugin factory.\n * @method notifications\n * @param {configs.notifications} options - Configuration options for authentication.\n * @return {Object} plugin - A notifications plugin.\n */\nexport default function notifications (options = {}, bottle) {\n  const pluginOptions = defaultsDeep(defaultOptions, options)\n  parseOptions(pluginOptions)\n\n  function * init () {\n    yield put(updateConfig(pluginOptions, name))\n    yield put(mapEvents(events))\n  }\n\n  const capabilities = ['push', 'registerPushNotifications', 'externalNotifications']\n\n  return {\n    name,\n    capabilities,\n    init,\n    api,\n    reducer,\n    sagas: [enableWebsocketChannelEntry, processNotification, ...values(pushRegistrationSagas)],\n    middleware: createMiddleware(bottle)\n  }\n}\n","import reducer from './reducers'\nimport api from './api'\n\nconst name = 'notifications'\n\nexport { name, api, reducer }\n","import * as actionTypes from './actionTypes'\nimport { WS_CONNECT_FINISHED, WS_DISCONNECT_FINISHED } from '../../connectivity/interface/actionTypes'\nimport { handleActions } from 'redux-actions'\n\nconst reducers = {}\n\nreducers[actionTypes.ENABLE_NOTIFICATION_CHANNEL_FINISH] = {\n  next (state, action) {\n    const channel = action.meta.channel\n    const enabled = action.payload.channelEnabled\n\n    let newChannelState\n    if (enabled) {\n      newChannelState = {\n        ...state[channel],\n        ...action.payload\n      }\n    } else {\n      // If the channel is being disabled, clear old state.\n      newChannelState = {\n        ...action.payload\n      }\n    }\n\n    return {\n      ...state,\n      [channel]: newChannelState\n    }\n  }\n}\n\n/*\n * The websocket channel is assumed to be enabled when the\n *      websocket is opened.\n */\nreducers[WS_CONNECT_FINISHED] = {\n  next (state) {\n    // TODO: Link WS only?\n    return {\n      ...state,\n      WEBSOCKET: {\n        ...state.WEBSOCKET,\n        channelEnabled: true\n      }\n    }\n  }\n}\n\n/*\n * The websocket channel is assumed to be disabled when the\n *      websocket is closed.\n */\nreducers[WS_DISCONNECT_FINISHED] = {\n  next (state) {\n    // TODO: Link WS only?\n    return {\n      ...state,\n      WEBSOCKET: {\n        ...state.WEBSOCKET,\n        channelEnabled: false\n      }\n    }\n  }\n}\n\n// Default notifications sub-state.\nconst defaultState = {\n  WEBSOCKET: {\n    channelEnabled: false\n  },\n  PUSH: {\n    channelEnabled: true\n  }\n}\n\n/**\n * Notifications reducer.\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n */\nconst reducer = handleActions(reducers, defaultState)\nexport default reducer\n","/**\n * The 'notification' namespace allows user to register/deregister for/from push notifications as well as\n * enabling/disabling the processing of websocket notifications.\n *\n * @public\n * @requires externalNotifications\n * @namespace notification\n */\n\nimport * as actions from './actions'\nimport { platforms } from '../../constants'\n\nimport { defer } from '../../common/utils'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Notifications API.\n * @method api\n * @param {Function} dispatch The redux store's dispatch function.\n * @return {Object} api  The notifications API object.\n */\nexport default function api ({ dispatch }) {\n  const notificationApi = {\n    /**\n     * Provides an external notification to the system for processing.\n     *\n     * @public\n     * @requires externalNotifications\n     * @memberof notification\n     * @method process\n     * @param {Object} notification\n     * @param {string} [channel] - The channel that the notification came from.\n     */\n    process (notification, channel, platform = platforms.LINK) {\n      log.debug(API_LOG_TAG + 'notification.process: ', notification, channel, platform)\n      dispatch(actions.externalNotification(notification, channel, platform))\n    },\n\n    /**\n     * Registers with Apple push notification service. Once registration is successful, the application will be able to receive\n     * standard and/or voip push notifications. It can then send these notifications to the SDK with {@link api.notifications.process}\n     * in order for the SDK to process them.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method registerApplePush\n     * @param {Object} params\n     * @param {string[]} params.services - Array of services for which we wish to receive notifications.\n     * @param {string} params.voipDeviceToken - The voip device token used for voip push on iOS.\n     *                                          This token is required if registering for call service notifications on iOS.\n     * @param {string} params.standardDeviceToken - The standardDevice token used for standard push on iOS .\n     *                                              This token is required when registering for non-call service notifications.\n     * @param {string} params.bundleId - The bundleId to identify the application receiving the push notification.\n     * @param {string} params.clientCorrelator - Unique identifier for a client device.\n     * @param {string} params.realm - The realm used by the push registration service to identify and\n     *                                establish a connection with the service gateway.\n     * @param {boolean} params.isProduction - If true, push notification will be sent to production.\n     *                                        If false, push notification will be sent to sandbox.\n     * @return {Promise} When successful,  the information of the registration.\n     *                   Promise will reject with error object otherwise.\n     */\n    registerApplePush ({\n      services,\n      voipDeviceToken,\n      standardDeviceToken,\n      bundleId,\n      clientCorrelator,\n      realm,\n      isProduction\n    }) {\n      const deferredResult = defer()\n      log.debug(API_LOG_TAG + 'notification.registerApplePush', arguments)\n\n      dispatch(\n        actions.registerApplePushNotification(\n          {\n            services,\n            voipDeviceToken,\n            standardDeviceToken,\n            bundleId,\n            clientCorrelator,\n            realm,\n            isProduction\n          },\n          deferredResult\n        )\n      )\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Registers with Google push notification service. Once registration is successful, the application will be able to receive\n     * standard and/or voip push notifications. It can then send these notifications to the SDK with {@link api.notifications.process}\n     * in order for the SDK to process them.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method registerAndroidPush\n     * @param {Object} params\n     * @param {string[]} params.services - Array of services to register for.\n     * @param {string} params.deviceToken - The device token used for standard push on Android. This token is required\n     *                                      when registering for all related services notifications.\n     * @param {string} params.bundleId - The bundleId to identify the application receiving the push notification.\n     * @param {string} params.clientCorrelator - Unique identifier for a client device.\n     * @param {string} params.realm - The realm used by the push registration service to identify\n     *                                and establish a connection with the service gateway.\n     * @return {Promise} When successful,  the information of the registration.\n     *                   Promise will reject with error object otherwise.\n     */\n    registerAndroidPush ({ services, deviceToken, bundleId, clientCorrelator, realm }) {\n      const deferredResult = defer()\n      log.debug(API_LOG_TAG + 'notification.registerAndroidPush', arguments)\n\n      dispatch(\n        actions.registerAndroidPushNotification(\n          {\n            services,\n            deviceToken,\n            bundleId,\n            clientCorrelator,\n            realm\n          },\n          deferredResult\n        )\n      )\n      return deferredResult.promise\n    },\n\n    /**\n     * Unregister Apple push notifications.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method unregisterApplePush\n     * @param {string} registrationInfo - The data returned from the push registration\n     * @return {Promise} When successful, the promise will resolve with undefined.\n     *                   Promise will reject with error object otherwise.\n     */\n    unregisterApplePush (registrationInfo) {\n      const deferredResult = defer()\n      log.debug(API_LOG_TAG + 'notification.unregisterPush')\n      dispatch(actions.unregisterApplePushNotification(registrationInfo, deferredResult))\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Unregister Android push notifications.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method unregisterAndroidPush\n     * @param {string} registrationInfo - The data returned from the push registration\n     * @return {Promise} When successful, the promise will resolve with undefined.\n     *                   Promise will reject with error object otherwise.\n     */\n    unregisterAndroidPush (registrationInfo) {\n      const deferredResult = defer()\n      log.debug(API_LOG_TAG + 'notification.unregisterPush')\n      dispatch(actions.unregisterAndroidPushNotification(registrationInfo, deferredResult))\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Enables, or disables, the processing of websocket notifications.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method enableWebsocket\n     * @param {boolean} enable - Whether the websocket channel should be enabled.\n     */\n    enableWebsocket (enable) {\n      log.debug(API_LOG_TAG + 'notification.enableWebsocket: ', enable)\n      dispatch(\n        actions.enableNotificationChannel('WEBSOCKET', {\n          channelEnabled: enable\n        })\n      )\n    }\n  }\n\n  return { notification: notificationApi }\n}\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nvar events = {}\n\nevents[actionTypes.ENABLE_NOTIFICATION_CHANNEL_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.NOTI_ERROR,\n      args: { channel: action.meta.channel, error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.NOTI_CHANGE,\n      args: { channel: action.meta.channel }\n    }\n  }\n}\n\nevents[actionTypes.NOTIFICATION_RECEIVED] = function (action) {\n  if (!action.error) {\n    return {\n      type: eventTypes.NOTI_RECEIVED,\n      args: { payload: action.payload }\n    }\n  }\n}\n\nexport default events\n","/**\n * Push notifications registration state has changed.\n *\n * @public\n * @requires push\n * @memberof notification\n * @event notifications:change\n * @param {Object} params\n * @param {string} params.channel The channel for the notification.\n */\nexport const NOTI_CHANGE = 'notifications:change'\n\n/**\n * An error occurred with push notifications.\n *\n * @public\n * @requires push\n * @memberof notification\n * @event notifications:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n * @param {string} params.channel The channel for the notification.\n */\nexport const NOTI_ERROR = 'notifications:error'\n\n/**\n * A notification was received by the SDK.\n *\n * @private This is an undocumented feature.\n *\n * @event notification:received\n * @param {Object} params Object that has information about the notification.\n * @param {Object} params.payload The payload of the notification.\n */\nexport const NOTI_RECEIVED = 'notification:received'\n","// Libraries.\nimport { defaults } from 'lodash/fp'\nimport { call, select, takeEvery } from 'redux-saga/effects'\n// Other plugins.\nimport { getConnectionInfo } from '../../../auth/interface/selectors'\n// Logs\nimport { logManager } from '../../../logs'\nimport * as actionTypes from '../../interface/actionTypes'\nimport { getNotificationConfig } from '../../interface/selectors'\nimport * as requests from '../requests'\n\n// Get the logger\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Register for apple push notification\n * @method applePushRegistrationEntry\n */\nexport function * applePushRegistrationEntry () {\n  yield takeEvery(actionTypes.REGISTER_APPLE_PUSH_NOTIFICATION, registerPushDeviceToken)\n}\n\n/**\n * Register for android push notification\n * @method androidPushRegistrationEntry\n */\nexport function * androidPushRegistrationEntry () {\n  yield takeEvery(actionTypes.REGISTER_ANDROID_PUSH_NOTIFICATION, registerPushDeviceToken)\n}\n\n/**\n * Saga for registering a device token for push notifications.\n * @method registerPushDeviceToken\n */\nfunction * registerPushDeviceToken (action) {\n  // Wait for a registration action.\n  const connection = yield select(getConnectionInfo)\n  const { pushRegistration } = yield select(getNotificationConfig)\n\n  // If a push registration endpoint was configured, use that instead of default.\n  if (pushRegistration) {\n    connection.server = defaults(connection.server, pushRegistration)\n    connection.protocol = defaults(connection.protocol, pushRegistration)\n    connection.port = defaults(connection.port, pushRegistration)\n    connection.version = defaults(connection.version, pushRegistration)\n  }\n\n  log.info('Registering device token for PUSH notifications...')\n  const response = yield call(requests.pushNotificationsRegistration, connection, {\n    ...action.payload\n  })\n\n  if (response.error) {\n    // Failed to create registration, reject the deferred result.\n    yield call([action.meta.deferred, 'reject'], {\n      error: response.text\n    })\n  } else {\n    // Successfully created registration, resolve the deferred result and respond with the registration.\n    yield call([action.meta.deferred, 'resolve'], response.registration)\n  }\n}\n\n/**\n * Unregister for apple push notification\n * @method applePushUnregisterEntry\n */\nexport function * applePushUnregisterEntry () {\n  yield takeEvery(actionTypes.UNREGISTER_APPLE_PUSH_NOTIFICATION, unregisterPushDeviceToken)\n}\n\n/**\n * Unregister for android push notification.\n * @method androidPushUnregisterEntry\n */\nexport function * androidPushUnregisterEntry () {\n  yield takeEvery(actionTypes.UNREGISTER_ANDROID_PUSH_NOTIFICATION, unregisterPushDeviceToken)\n}\n\n/**\n * Saga for deregistering a device token for push notifications.\n * @method deregisterPushDeviceToken\n */\nfunction * unregisterPushDeviceToken (action) {\n  const connection = yield select(getConnectionInfo)\n  const { pushRegistration } = yield select(getNotificationConfig)\n\n  // If a push registration endpoint was configured, use that instead of default.\n  if (pushRegistration) {\n    connection.server = defaults(connection.server, pushRegistration)\n    connection.protocol = defaults(connection.protocol, pushRegistration)\n    connection.port = defaults(connection.port, pushRegistration)\n    connection.version = defaults(connection.version, pushRegistration)\n  }\n\n  log.info('Un-registering device token for PUSH notifications...')\n  const response = yield call(requests.pushNotificationsDeRegistration, connection, {\n    registration: action.payload.registration\n  })\n  if (response.error) {\n    yield call([action.meta.deferred, 'reject'], {\n      error: response.text\n    })\n  } else {\n    yield call([action.meta.deferred, 'resolve'], undefined)\n  }\n}\n","import { defaults, has } from 'lodash/fp'\nimport { buffers } from 'redux-saga'\nimport { inflate } from 'pako'\nimport { actionChannel, call, put, select, take, takeEvery } from 'redux-saga/effects'\nimport { getConnectionInfo } from '../../../auth/interface/selectors'\nimport { platforms } from '../../../constants'\nimport { logManager } from '../../../logs'\nimport * as actions from '../../interface/actions'\nimport * as actionTypes from '../../interface/actionTypes'\nimport { getNotificationConfig, getNotificationsInfo } from '../../interface/selectors'\nimport * as requests from '../requests'\n\n// Get the logger\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Unregister for android push notification.\n * @method enableWebsocketChannelEntry\n */\nexport function * enableWebsocketChannelEntry () {\n  yield takeEvery(actionTypes.ENABLE_NOTIFICATION_CHANNEL, enableWebsocketChannel)\n}\n\nfunction * enableWebsocketChannel (action) {\n  if (action.payload.enable) {\n    // TODO: If websockets are not connected, connect them here.\n  }\n\n  // TODO: Handle possible error case when connecting websockets.\n  //      Otherwise, plain dispatch to update state.\n  yield put(\n    actions.enableNotificationChannelFinish(action.meta.channel, {\n      params: action.payload\n    })\n  )\n}\n\nconst INITIAL_BUFFER_SIZE = 10\n\nexport function * processNotification () {\n  var queue = []\n\n  const externalNotifications = yield actionChannel(\n    actionTypes.PROCESS_NOTIFICATION,\n    buffers.expanding(INITIAL_BUFFER_SIZE)\n  )\n  while (true) {\n    const action = yield take(externalNotifications)\n    const config = yield select(getNotificationConfig)\n    log.info(\n      `Received notification on channel ${action.meta.channel} for platform: ${action.meta.platform}; Handling...`\n    )\n\n    // Only process notifications from enabled channels, ie. \"silence\" the channel.\n    const channel = yield select(getNotificationsInfo, action.meta.channel)\n    if (!channel.channelEnabled) {\n      log.debug(`Notification received on disabled channel: ${action.meta.channel}. Ignoring it ...`)\n      continue\n    }\n\n    const notification = action.payload\n    const notificationMessage = notification.notificationMessage\n    const notificationId = id(action.meta.platform)(notification)(notificationMessage)\n\n    let formattedPayload = action.payload\n    if (has('payload.notificationMessage.sessionParams.sdpFormat', action)) {\n      log.debug('Notification contains SDP. Normalizing.')\n      formattedPayload = yield call(normalizeSDP, action.payload)\n    }\n\n    // If we're in the PUSH-only notification mode and\n    // this incoming notification is coming through a channel other than PUSH channel (e.g. WEBSOCKET) and\n    // this notification is for an incoming call\n    if (\n      formattedPayload.notificationMessage.eventType === 'call' &&\n      config.incomingCallNotificationMode === 'push-channel-only' &&\n      action.meta.channel !== 'PUSH'\n    ) {\n      // Ignore this call-related notification, but at a minimum generate a log so that user is aware.\n      log.warn(\n        'Dropped incoming call notification with id: ' +\n          notificationId +\n          ' received through channel: ' +\n          action.meta.channel +\n          ' because current mode for handling notifications is set to: push-channel-only.'\n      )\n      continue\n    } else {\n      // Don't check for duplicate notifications if idCacheLength is set to 0\n      // Get the list of \"relevant\" IDs in the queue (\"relevant\" being the latest X elements).\n      // This covers edge-cases where the cache length config is changed (to a smaller number)\n      //    after the queue has begun to be populated.\n      const ids = config.idCacheLength === 0 ? [] : queue.slice(config.idCacheLength * -1)\n      // If the notification ID is part of the list, then it's a duplicate.\n      const duplicate = ids.includes(notificationId)\n      if (duplicate) {\n        log.info('Notification was a duplicate; ignoring.')\n        const error = new Error(`Notification id ${notificationId} is duplicate.`)\n        // TODO: Tech-debt; this action should be a notificationReceived error action.\n        //      But that requires all sagas listening for notifications to filter out\n        //      error actions ..which requires their take() patterns changed, which\n        //      is another tech-debt item.\n        yield put(actions.processNotificationFinish(error))\n      } else {\n        queue.push(notificationId)\n        // Because the client can update the value of idCacheLength at any time\n        // we have to adjust the size of our queue accordingly\n        while (queue.length > config.idCacheLength) {\n          queue.shift()\n        }\n\n        const { platform, channel } = action.meta\n        // Inform all other plugins by sending a NOTIFICATION_RECEIVED action\n        yield put(actions.notificationReceived(formattedPayload, platform, channel))\n      }\n    }\n  }\n}\n\nconst id = platform => notification => notificationMessage => {\n  switch (platform) {\n    case platforms.LINK:\n      log.debug(`The received notification is of type ${notificationMessage.eventType}.`)\n      return notificationMessage.eventId\n\n    case platforms.UC:\n      // A Link notification can be in either the Link format or the SPiDR format (for calls).\n      return notificationMessage.id || notificationMessage.eventId\n\n    case platforms.CPAAS:\n      // CPaaS notifications do not have a consistent path to their ID.\n      //    The ID is one level down in the object, but we need to dynamically\n      //    find the key that its in.\n      for (const key in notification) {\n        if (notification[key].id) {\n          return notification[key].id\n        }\n      }\n      log.error('Received notification without a findable ID: ', Object.keys(notification))\n      return null\n\n    default:\n      log.debug('Received notification from unknown platform.')\n      return null\n  }\n}\n\n/**\n * This function accepts a notification payload. If the payload is a spidr payload\n * and contains an sdpFormat that needs manipulating, it is done here.\n * @method normalizeSDP\n * @param payload A processNotification action payload\n * @returns payload A processNotification action payload\n */\nexport function * normalizeSDP (payload) {\n  // Copy the payload to not disturb the action.\n  payload = { ...payload }\n\n  if (payload.notificationMessage.sessionParams.sdpFormat === 'compressed') {\n    log.debug('Found SDP format: compressed. Deflating compressed SDP...')\n    // convert based64 encoded string into bytes\n    const sdpCompressedBytes = atob(payload.notificationMessage.sessionParams.sdp)\n\n    // First convert the ASCII string into an array of unsigned integers\n    // pako.inflate() requires an Uint8Array as parameter.\n    const buf = new ArrayBuffer(sdpCompressedBytes.length)\n    const bufView = new Uint8Array(buf) // allocate enough space ..\n    for (let i = 0, strLen = sdpCompressedBytes.length; i < strLen; i++) {\n      bufView[i] = sdpCompressedBytes.charCodeAt(i) // fill-in the array of uint(s)\n    }\n\n    // uncompressed the bytes\n    try {\n      const sdpUnCompressedBytes = inflate(bufView)\n      // convert uncompressed bytes back into string\n\n      const sdpString = String.fromCharCode.apply(null, sdpUnCompressedBytes)\n\n      payload.notificationMessage.sessionParams.sdp = sdpString\n      log.debug(`Returning uncompressed SDP as part of payload: ${sdpString}`)\n    } catch (err) {\n      log.debug(`Cannot inflate the compressed SDP: ${err}`)\n      // TODO: If there was an error, try to handle it here.\n    }\n    return payload\n  } else if (payload.notificationMessage.sessionParams.sdpFormat === 'url') {\n    const connection = yield select(getConnectionInfo)\n    const { pushRegistration } = yield select(getNotificationConfig)\n    log.debug(`Found SDP format: url. pushRegistration: ${pushRegistration}`)\n    // If a push registration endpoint was configured, use that instead of default.\n    if (pushRegistration) {\n      connection.server = defaults(connection.server, pushRegistration)\n      connection.protocol = defaults(connection.protocol, pushRegistration)\n      connection.port = defaults(connection.port, pushRegistration)\n      connection.version = defaults(connection.version, pushRegistration)\n    }\n    log.info('Fetching SDP...')\n    const response = yield call(requests.fetchSDP, connection, payload.notificationMessage.sessionParams.sdp)\n    if (response.error) {\n      // REST request failed.\n      // TODO: Handle the error here rather than throwing an error\n    } else {\n      payload.notificationMessage.sessionParams.sdp = response.eventDataResponse.sdp\n    }\n    return payload\n  } else {\n    log.debug(`Unknown sdpFormat received: ${payload.notificationMessage.sessionParams.sdpFormat}.`)\n    return payload\n  }\n}\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","/**\n * Middleware factory for the Notifications plugin.\n */\nexport default function createMiddleware (bottle) {\n  // List of all listeners that are waiting for actions.\n  const actionListeners = []\n\n  /*\n   * The middleware that will be given to the Factory.\n   *\n   * TODO: Eventually, when the Connectivity plugin is redesigned (or maybe as\n   *    technical-debt follow-up afterwards?), this middleware can be replaced\n   *    so that the Notifications plugin doesn't need to use redux middlewares anymore.\n   */\n  const middleware = context => next => action => {\n    // Act after the action has gone through the reducers.\n    const returnVal = next(action)\n\n    let i = actionListeners.length\n    // Start from the end of the list so we can remove items from the list\n    //    without making it complicated to iterate over everything.\n    while (i--) {\n      const listener = actionListeners[i]\n      /*\n       * If the action matches a listener, then process the action with the listener\n       *    and eventually call the listener's callback function.\n       */\n      if (listener.pattern(action)) {\n        /*\n         * If this `take` was only intended for a single action, remove the listener\n         *    from the list and clear its timeout.\n         */\n        if (listener.singleTake) {\n          actionListeners.splice(i, 1)\n          if (listener.timeoutId) {\n            clearTimeout(listener.timeoutId)\n          }\n        }\n\n        listener.callback(action)\n      }\n    }\n    return returnVal\n  }\n\n  /**\n   * Utility function for operations to pause until an action is dispatched.\n   *\n   * Using this function should be avoided if possible. This was created as a stop-gap\n   *    so pre-redesign sagas and post-redesign operations could still work together.\n   *    ie. so a saga that is triggered by an action, then responds by dispatching\n   *    another action, can be used by an operation.\n   *\n   * @method waitForAction\n   * @param {Function} pattern Function that decides whether the action should trigger the listener.\n   * @param {number} [timeout] Delay, in milleseconds, to wait for the action before rejecting the promise.\n   * @return {Promise} Promise that resolves when the action has been dispatched.\n   * @example\n   * const takeAction = container.Notifications.takeAction\n   * const action = await takeAction((action) => ...)\n   */\n  function takeAction (pattern, timeout) {\n    if (typeof pattern === 'string') {\n      // If a single action type was passed in, convert it to a function for consistency.\n      const actionType = pattern\n      pattern = action => action.type === actionType\n    }\n\n    return new Promise((resolve, reject) => {\n      let timeoutId\n      // If a timeout was provided, reject the promise after that long.\n      if (typeof timeout === 'number') {\n        timeoutId = setTimeout(reject, timeout)\n      }\n\n      actionListeners.push({\n        singleTake: true,\n        pattern,\n        callback: resolve,\n        timeoutId\n      })\n    })\n  }\n\n  /**\n   * Utility function to act on dispatched actions.\n   * Will call the provided callback function every time a matching action is\n   *    dispatched.\n   *\n   * This was created as a stop-gap between pre-redesign sagas and post-redesign\n   *    operations. It simulates the behaviour of a redux middleware without\n   *    other Plugins needing to actually create/use a redux middleware themselves.\n   *\n   * @method takeEveryAction\n   * @param {Function} pattern Function that decides whether the action should trigger the listener.\n   * @param {Function} callback Function to be called with a matched action.\n   * @return {undefined}\n   * @throws {Error} When either parameter provided is invalid.\n   * @example\n   * const takeEveryAction = container.Notifications.takeEveryAction\n   * takeAction((action) => { ... }, aCallback)\n   *\n   * function aCallback (action) { ... }\n   */\n  function takeEveryAction (pattern, callback) {\n    if (typeof pattern === 'string') {\n      // If a single action type was passed in, convert it to a function for consistency.\n      const actionType = pattern\n      pattern = action => action.type === actionType\n    }\n\n    if (typeof pattern !== 'function' || typeof callback !== 'function') {\n      throw new Error('takeEveryAction parametesr must be functions.')\n    }\n\n    actionListeners.push({\n      singleTake: false,\n      pattern,\n      callback\n    })\n  }\n\n  // Add the utilities to the bottle container.\n  bottle.value('Notifications.takeAction', takeAction)\n  bottle.value('Notifications.takeEveryAction', takeEveryAction)\n\n  return middleware\n}\n","// Request plugin.\nimport { defaultOptions, parseOptions } from './configs'\nimport watchRequests from './sagas'\nimport eventsMap from './interface/events'\nimport createRequestHelper from './requestModule'\nimport { api, name } from './interface'\n\n// Other plugins.\nimport { update as updateConfig } from '../config/interface/actions'\nimport { mapEvents } from '../events/interface/actions'\n\n// Utils.\nimport { mergeValues } from '../common/utils'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\n\n/*\n * HTTP request plugin.\n */\nexport default pluginFactory()\n\n/*\n * Platform-specific request plugins.\n *    Same base REST behaviour as the generic request plugin, with some extra\n *    handling of a response.\n */\nexport const linkRequest = pluginFactory('link')\nexport const ucRequest = pluginFactory('uc')\nexport const cpaasRequest = pluginFactory('cpaas')\n\n/**\n * Factory function for creating a Request Plugin.\n *    Allows for specifying which platform the requests will be made to. This\n *    adds special handling of responses to check for special-case issues.\n * @param  {string} [platform] The platform this plugin is for.\n * @return {Function} The actual Plugin creator function.\n */\nfunction pluginFactory (platform) {\n  // Generate the saga for this platform, or a generic saga if platform is undefined.\n  const saga = watchRequests(platform)\n\n  return function request (options = {}, bottle) {\n    options = mergeValues(defaultOptions, options)\n    parseOptions(options)\n\n    function * init () {\n      yield put(updateConfig(options, name))\n      yield put(mapEvents(eventsMap))\n    }\n\n    bottle.factory('sendRequest', createRequestHelper)\n\n    return {\n      sagas: [saga],\n      init,\n      capabilities: platform ? ['restAuthorization'] : [],\n      api,\n      name\n    }\n  }\n}\n","// Parse and/or Validate\nimport { validation as v8n, parse } from '../../src/common/validation'\n\n/**\n * Configurable properties 'published' by this \"Request\" plugin.\n * NOTE: Do NOT expose the config properties (related to this plugin) to the public API documentation.\n *\n * @property {boolean} [injectAgentVersionHeader=true] Option to automatically inject an agent version header to every REST request.\n *            This header is used to help with diagnostics and analytics in a completely anonymous fashion.\n *\n * @property {string} [customAgentVersionHeaderSuffix=''] Additional custom information that can be appended to the agent version header's value.\n *           This additional suffix value is only used when injectAgentVersionHeader property is enabled.\n */\nexport const defaultOptions = {\n  injectAgentVersionHeader: true,\n  customAgentVersionHeaderSuffix: ''\n}\n\nconst v8nValidation = v8n.schema({\n  injectAgentVersionHeader: v8n.boolean()\n})\nexport const parseOptions = parse('request', v8nValidation)\n","// Other plugins.\nimport { logManager } from '../logs'\n\n// Utils.\nimport { toQueryString } from '../common/utils'\n\n/**\n * The possible response data types that can be handled.\n */\nconst responseTypes = Object.freeze({\n  json: 'json',\n  blob: 'blob',\n  text: 'text',\n  none: 'none'\n})\n\n/**\n * Make a request with the specified options. The options is very similar to the options passed to the GlobalFetch\n * method except that is also accepts the url as part of the options.\n * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Request\n *\n * Currently this processes the request and assumes nothing about the response.\n * - If the response has a body, it will always be parsed and forwarded on.\n *      - If no body, then use an empty object in its place.\n * - If the fetch succeeded, the response \"results\" will always be forwarded on,\n *      even if the response is outside of the 200-299 range.\n *      - Because some backends provide more detailed error info (that a saga\n *        may need) as part of the body, rather than just the response status.\n * - If the fetch fails, return with the fetch failure information.\n *\n * @param {Object} options Options to make the request with.\n * @param {string} options.url The URL to make the request to.\n * @param {Object} [options.queryParams] The parameters to be added to the query string\n * @param {string} [options.responseType='json] The expected data type of the response body.\n * @param {Blob|BufferSource|FormData|UrlSearchParams|string} [options.body] The request body\n * @return {Promise} A promise that resolves with a custom response object.\n */\nexport default async function makeRequest (options, requestId) {\n  const log = logManager.getLogger('REQUEST', requestId)\n\n  /*\n   * Check the provided options to ensure they are valid before making the request.\n   */\n  const error = validateOptions(options)\n  if (error) {\n    log.info(error.result.message)\n    return error\n  }\n\n  // Extract and remove the non-fetch API properties.\n  const { url, queryParams, responseType = 'json', ...fetchOptions } = options\n\n  // Grab that last part of the URL (after the last /) to be logged.\n  let endUrl = url.match(/([^/]*)$/)[0]\n  // Cut it short if it's too long, since this should be human-readable.\n  endUrl = endUrl.length > 15 ? endUrl.substring(0, 15) + '...' : endUrl\n  log.info(`Making ${fetchOptions.method} ${endUrl} request.`)\n\n  let response\n  /*\n   * Make the request. Scenarios to check for:\n   *  1. Fetch failed.\n   *  2. Fetch succeeded and is ok, with no response body.\n   *  3. Fetch succeeded and is ok, with expected response type.\n   *  4. Fetch succeeded and is ok, with unexpected response type.\n   *  5. Fetch succeeded but is not ok.\n   */\n  try {\n    response = await fetch(url + toQueryString(queryParams), fetchOptions)\n  } catch (err) {\n    // Scenario 1: Fetch failed.\n    log.info(`Failed to make request, caused by ${err.message}`)\n    return makeResponse({ error: 'FETCH' }, { code: err.name, message: err.message })\n  }\n\n  // Basic information for the request result.\n  const result = {\n    ok: response.ok,\n    code: response.status,\n    message: response.statusText\n  }\n\n  if (response.ok) {\n    if (response.status === 204) {\n      /*\n       * A `204 (No Content)` response indicates a success, but with no content to return.\n       * Avoid parsing the response because there isn't one.\n       */\n      // Scenario 2: Response is ok, with no response body.\n      log.info(`Finished request with successful response (status ${response.status}).`)\n      return makeResponse(undefined, { body: {}, ...result })\n    }\n\n    const data = await parseBody(response, responseType)\n    if (data instanceof Error) {\n      // Scenario 4: Response is ok, with an unexpected type.\n      log.error(`Failed to parse with response type: ${responseType}. Error: ${data}`)\n      return makeResponse({ error: 'REQUEST' }, { code: data.name, message: data.message })\n    } else {\n      // Scenario 3: Response is ok, with an expected type.\n      log.info(`Finished request with successful response (status ${response.status}).`)\n      return makeResponse(undefined, { body: data, ...result })\n    }\n  } else {\n    // Scenario 5: Response is not ok.\n    let contentType\n    // Check the Content-Type of the response.\n    try {\n      contentType = await response.headers.get('content-type')\n    } catch (err) {\n      log.debug(`Failed to get content-type:${err.message}.`)\n    }\n    /*\n     * Handle a SPiDR special-case error where the response body is a HTML page...\n     * Throw away the body and simply report it as 'Forbidden'.\n     */\n    if (response.status === 403 && contentType.includes('html')) {\n      return makeResponse({ error: 'REQUEST' }, result)\n    }\n\n    /*\n     * Try to parse the response as JSON, and if successful, include\n     * it in the returned error. otherwise, provide an empty object instead.\n     */\n    let responseBody\n    try {\n      responseBody = await response.json()\n      if (response.status === 503) {\n        let retryValue\n        if (responseBody && responseBody.subscribeResponse) {\n          // Try to get the retry value from the body of the response.\n          // If it is in the body, then its value is a number\n          retryValue = responseBody.subscribeResponse.retryAfter\n        } else if (responseBody && responseBody.authorizationResponse) {\n          // This is the case where request has been initiated as part of an anonymous call.\n          retryValue = responseBody.authorizationResponse.retryAfter\n        }\n\n        let retryAfter // the final value to be used\n        if (retryValue) {\n          retryAfter = retryValue // should already be in milli seconds\n        } else {\n          // Try to get the retry value from `Retry-After` Header of the response.\n          // This is the case when 503 response comes from an HTTP reverse proxy/load balancer node.\n          try {\n            // If provided as part of 'Retry-After' Header, its value will always be provided as a string\n            retryValue = await response.headers.get('retry-after')\n          } catch (err) {\n            log.debug(`Failed to get retry-after:${err.message}.`)\n          }\n\n          if (retryValue) {\n            // We have a value (either from body or from header of that reply).\n            if (retryValue.endsWith(' GMT')) {\n              // It is provided as `HTTP-date` format,\n              // according to Standards spec: https://www.rfc-editor.org/rfc/rfc9110.html#section-10.2.3\n              // If so, convert it to `number` format.\n              const futureDate = new Date(retryValue)\n              retryAfter = futureDate.getTime() - Date.now() // milliseconds\n            } else {\n              // it is provided in header as seconds\n              retryAfter = retryValue * 1000 // automatic convertion from string to number, in milliseconds\n            }\n          }\n        }\n\n        // Ensure that no matter where it comes from, we always have the final value(s) saved in the parsed body,\n        // as this is always used for later decision making.\n        // NOTE: No guarantees on the existence of retryAfter,\n        //       as HTTP reverse proxy/load balancer does not guarantee to provide one\n        //       (see `SPiDR REST Overload Controls - Functional Description` spec).\n        if (retryAfter && retryAfter > 0) {\n          // retry value is available & valid.\n          // return the same body for both link & anonymous rquest.\n          responseBody = { subscribeResponse: { statusCode: 503, retryAfter } }\n        } else {\n          // The spec says that if we got a 503 but with no retryAfter available, then treat the reply as 500 error.\n          responseBody = { subscribeResponse: { statusCode: 500 } }\n        }\n      }\n    } catch (err) {\n      responseBody = {}\n      log.debug('Failed to parse response:', err.message)\n    }\n    return makeResponse({ error: 'REQUEST' }, { body: responseBody, ...result })\n  }\n}\n\n/**\n * Checks for the provided options to be considered valid before making the\n *    request. If an option is invalid, an error response will be returned.\n * @param  {Object} options\n * @return {Response|undefined}\n */\nfunction validateOptions (options) {\n  const { url, responseType } = options\n\n  if (!url || typeof url !== 'string') {\n    const invalidUrlMessage = `Invalid request url; expected url of type string but received ${url} instead`\n    return makeResponse({ error: 'REQUEST_URL', message: invalidUrlMessage })\n  }\n\n  /*\n   * If an expected responseType was provided, it should be one of the types\n   *    that we know how to handle.\n   */\n  if (responseType && !responseTypes.hasOwnProperty(responseType)) {\n    const invalidResponseType = 'Cannot make request; responseType value was invalid.'\n    return makeResponse({ error: 'RESPONSE_TYPE', message: invalidResponseType })\n  }\n}\n\n/**\n * Get the body from the response depending on our expected content-type.\n * @return {Body|Error}\n */\nasync function parseBody (response, expectedType) {\n  /**\n   * The SDK should only be parsing the responses as is expected without checking the content type of the response.\n   * This is deterministic depending on the `responseType` passed in to the request through the request options.\n   */\n  let responseBody = {}\n  try {\n    switch (expectedType) {\n      case responseTypes.json:\n        responseBody = await response.json()\n        break\n      case responseTypes.blob:\n        responseBody = await response.blob()\n        break\n      case responseTypes.text:\n        responseBody = await response.text()\n        break\n      case responseTypes.none:\n        // Do not parse the response\n        break\n      default:\n        // This should be unreachable code.\n        throw Error('Assertion failed')\n    }\n  } catch (e) {\n    // Note: We get here if we have a successful request but the server sent us unexpected data.\n    // We need to treat this as an error case because we can no longer enforce a contract with the\n    // code making the request.\n    //\n    // If the code gets here the issue is either with the server not sending us expected data, or with\n    // the calling code that told us to expect the wrong data.\n\n    return e\n  }\n\n  return responseBody\n}\n\n/**\n * Make a response object that will  have the same structure every time\n * regardless of the server response.\n *\n * @param {Object} apiResponse API related response data\n * @param {string} apiResponse.error This should be a string indicating an error if the request fails due to an invalid request.\n * @param {string} apiResponse.message This should be a string with more details about the api error.\n * @param {Object} httpResponse This will contain the response data from the server.\n * @param {Object} httpResponse.body The response body data from the server.\n * @param {boolean} httpResponse.ok Indicates if the request was considered a success by the server.\n * @param {Object} httpResponse.code The HTTP status code for the request.\n * @param {Object} httpResponse.message A message describing the server response.\n * @return {Object} An object containing API and/or server response details.\n */\nfunction makeResponse (apiResponse = {}, httpResponse = {}) {\n  return {\n    body: httpResponse.body,\n    error: apiResponse.error,\n    result: {\n      ok: Boolean(httpResponse.ok),\n      code: httpResponse.code,\n      message: apiResponse.message || httpResponse.message\n    }\n  }\n}\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nconst eventsMap = {}\n\neventsMap[actionTypes.AUTHORIZATION_ERROR] = function (action) {\n  return {\n    type: eventTypes.REQUEST_ERROR,\n    args: {\n      error: action.payload\n    }\n  }\n}\n\nexport default eventsMap\n","// Request plugin.\nimport * as actions from './interface/actions'\nimport * as eventTypes from './interface/eventTypes'\nimport * as authorizations from './authorization'\nimport { handleRequest } from './sagas'\n\n// Other plugins.\nimport { getRequestInfo, getPlatform } from '../auth/interface/selectors'\n\n// Helpers.\nimport { getVersion } from '../common/version'\nimport { mergeValues } from '../common/utils'\n\n// Libraries.\nimport { omit } from 'lodash/fp'\n\n/**\n * Request helper factory function.\n * @method createRequestHelper\n * @param  {Object} container The bottle container.\n * @return {Function} The request function.\n */\nexport default function createRequestHelper (container) {\n  const { emitEvent, context } = container\n\n  return async function doRequest (options) {\n    const requestInfo = getRequestInfo(context.getState())\n    const platform = getPlatform(context.getState())\n\n    // Merge the default request options from state into the provided options.\n    //    The provided options take priority.\n    // Workaround: The options for link and cpaas have different names\n    // Look for options (cpaas) first, then requestOptions (link)\n    const defaultOptions = requestInfo.options || requestInfo.requestOptions\n    options = mergeValues(defaultOptions, options)\n\n    // Create an action to both pass in and to get a requestId.\n    const requestAction = actions.request(options)\n\n    // Workaround: For backwards-compatibility, we need to log the request action\n    //    for the LogHandler, but we don't want to actually dispatch the action\n    //    (otherwise it'll be processed...). So we manually log the fake action\n    //    to imitate how the logger would log an action.\n    logFakeAction(context, requestAction)\n\n    // handleRequest is a generator (so that it can be used as a saga by\n    //    redux-saga). So we need the \"setup\" the generator and then invoke it.\n    const gen = handleRequest(platform, requestAction)\n    const result = await gen.next().value\n\n    // If the platform was specified and this is not a 3.X build, perform the\n    //    authorization check side-effect.\n    if (platform && !getVersion().startsWith('3')) {\n      // Call the 'authorization' function specific for this platform.\n      //    They're all named ${platform}Authorization so it's easier to call them.\n      const error = authorizations[`${platform}Authorization`](result)\n\n      if (error) {\n        emitEvent(eventTypes.REQUEST_ERROR, { error })\n      }\n    }\n\n    const responseAction = actions.response(requestAction.meta.requestId, result, !!result.error)\n    logFakeAction(context, responseAction)\n\n    return result\n  }\n}\n\n/**\n * Workaround for logging an action without dispatching it.\n *\n * The Log plugin will automatically log any action that is dispatched, but in\n *    some cases we don't want to dispatch an action anymore. For backwards-\n *    compatibility, the action still needs to be logged. This function logs an\n *    action as if it were dispatched.\n *\n * Caveat: The action shouldn't update state (since then it _should_ be dispatched),\n *    since the prev/next state logs would then be incorrect.\n */\nexport function logFakeAction ({ getState, container }, action) {\n  const log = container.logManager.getLogger('ACTION')\n  const logState = getState().config.logs\n  const { logActions, logLevel } = logState\n\n  // If logActions are falsy, don't log the action.\n  if (!logActions) {\n    return\n  }\n\n  /*\n   * Action log options:\n   *  - collapsed: Whether to use group or groupCollapsed.\n   *  - actionOnly: Whether to log the 'prev state' and 'next state'.\n   *  - exposePayloads: Whether to log the payloads or not.\n   *  - logLevel: Whether to log any action/state details.\n   */\n  const { collapsed, actionOnly, exposePayloads } = logActions\n\n  const groupMethod = collapsed ? 'groupCollapsed' : 'group'\n  const hidePayload = exposePayloads === false || (action.meta && action.meta.isSensitive)\n  const actionToLog = hidePayload ? omit('payload', action) : action\n\n  log[groupMethod](`action ${action.type} @ ${getTime()} (in 0.00 ms)`)\n  if (logLevel === 'DEBUG') {\n    if (actionOnly) {\n      log.debug('action    ', actionToLog)\n    } else {\n      log.debug('prev state', getState())\n      log.debug('action    ', actionToLog)\n      // Assume the action does not update state, so use the same state value.\n      log.debug('next state', getState())\n    }\n  }\n  log.groupEnd()\n}\n\n/*\n * Helper function.\n * Get a timestamp formatted in the specific way that redux-logger uses for actions.\n * Code copy/pasted from redux-logger: https://github.com/LogRocket/redux-logger/blob/master/src/helpers.js\n */\nfunction getTime () {\n  const time = new Date()\n  const repeat = (str, times) => new Array(times + 1).join(str)\n  const pad = (num, maxLength) => repeat('0', maxLength - num.toString().length) + num\n  return `${pad(time.getHours(), 2)}:${pad(time.getMinutes(), 2)}:${pad(time.getSeconds(), 2)}.${pad(\n    time.getMilliseconds(),\n    3\n  )}`\n}\n","import name from './name'\nimport api from './api'\n\nexport { name, api }\n","/**\n * This interface is for an request plugin.\n * @type {string}\n */\nconst name = 'requests'\nexport default name\n","import { fetchResource } from '../utils'\nimport { logManager, API_LOG_TAG } from '../../logs'\n// Other plugins.\nimport { getPlatform, getRequestInfo } from '../../auth/interface/selectors'\nimport { merge } from 'lodash/fp'\n\nconst log = logManager.getLogger('REQUEST')\n\n/**\n * Request API.\n * @method api\n * @param  {Function} $0\n * @param  {Function} $0.dispatch - The redux store's dispatch function.\n * @param  {Function} $0.getState - The redux store's getState function.\n * @return {Object} api - The request API object.\n */\nexport default function api ({ dispatch, getState }) {\n  return {\n    request: {\n      /**\n       * The 'request' namespace (within the 'api' type) is used to make network requests to the server.\n       *\n       * @public\n       * @namespace request\n       */\n\n      /**\n       * Send a request to the underlying REST service with the appropriate configuration and authentication.\n       * This is a wrapper on top of the browser's [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n       * and behaves very similarly but using SDK configuration for the base URL and authentication as well\n       * as SDK logging.\n       *\n       * @public\n       * @memberof request\n       * @method fetch\n       * @param {string} resource The full path of the resource to fetch from the underlying service. This should include any REST version\n       *                          or user information. This path will be appended to the base URL according to SDK configuration.\n       * @param {RequestInit} init An object containing any custom settings that you want to apply to the request. See [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n       *                           for a full description and defaults.\n       * @return {Promise<Response>} A promise for a [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) object.\n       * @example\n       * // Send a REST request to the server\n       * // Create a request options object following [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n       * const requestOptions = {\n       *   method: 'POST',\n       *   body: JSON.stringify({\n       *     test: 123\n       *   })\n       * }\n       *\n       * // Note that you will need to subscribe for the `custom` service in order to\n       * // receive notifications from the `externalnotification` service.\n       * const response = await client.request.fetch('/rest/version/1/user/xyz@test.com/externalnotification', requestOptions)\n       */\n      async fetch (resource, init = {}) {\n        log.debug(API_LOG_TAG + 'fetch: ', resource)\n        const state = getState()\n        const platform = getPlatform(state)\n        const requestInfo = getRequestInfo(state, platform)\n        const options = platform === 'cpaas' ? requestInfo.options : requestInfo.requestOptions\n        requestInfo.requestOptions = merge(init, options)\n        requestInfo.platform = platform\n        // Do request\n        return await fetchResource(resource, requestInfo)\n      }\n    }\n  }\n}\n","/**\n * The ID of a User (e.g. joe@test.3s5j.att.com)\n * @public\n * @static\n * @typedef {string} UserID\n * @memberof user\n * @requires cpaas_user_id\n */\n\n/**\n * The User ID ie: joe@test.3s5j.att.com\n *\n * @public\n * @static\n * @typedef {string} UserID\n * @memberof call\n * @requires cpaas_user_id\n */\n\n/**\n * The ID of a User (e.g. joe@domain.com)\n * @public\n * @static\n * @typedef {string} UserID\n * @memberof user\n * @requires link_user_id\n */\n\n/**\n * The SIP URI ie: sip:joe@domain.com\n *\n * @public\n * @static\n * @typedef {string} SIP_URI\n * @memberof call\n * @requires link_user_id\n */\n\n/**\n * The Phone Number ie: +18885559876\n *\n * @public\n * @static\n * @typedef {string} PhoneNumber\n * @memberof call\n * @requires cpaas_pstn\n */\n\n/**\n * The TEL URI ie: tel:+18885559876\n *\n * @public\n * @static\n * @typedef {string} TEL_URI\n * @memberof call\n * @requires link_pstn\n */\n","/**\n * Creates and returns an SDP Handler function that will remove the desired codecs\n *  from the SDP when passed to the pipeline.\n *\n * @method createCodecRemover\n * @param  {Array<string|Object} codecs An array of strings or objects representing the desired codecs to be removed.\n * @example\n * // `codecs` paramters can be an array of strings (i.e., ['VP8', 'VP9']) or as objects with the following signature:\n * const codecsToBeRemoved = [{\n *   name: 'codecname',\n *   fmtpParams: 'specific ftmp parameter target'\n * }]\n * const codecRemover = createCodecRemover(codecsToBeRemoved)\n * @return {Function} returns an SDP handler function\n */\nexport function createCodecRemover (codecs = []) {\n  // We allow the user to pass in a codecs of objects or strings, so here we format the strings into objects for uniformity.\n  codecs = codecs.map(item => (typeof item === 'string' ? { name: item } : item))\n\n  return function (newSdp, info, originalSdp) {\n    // This is an array of strings representing codec names we want to remove.\n    const codecStringsToRemove = codecs.map(codec => codec.name)\n\n    newSdp.media.forEach(media => {\n      // This is an array of just the codes (codec payloads) that we FOR SURE want to remove.\n      const finalRemoveList = []\n      // This is an array of RTP objects who have codecs that are the same as strings passed in via codecs.\n      let filteredRtp = []\n\n      // If the current rtp.codec is in the codecStringsToRemove list, add the rtp to filteredRtp\n      filteredRtp = media.rtp.filter(rtp => codecStringsToRemove.includes(rtp.codec))\n\n      filteredRtp.forEach(rtp => {\n        // We grab the relevantCodec codecs object from the passed in codecs, based on the name string.\n        const relevantCodecs = codecs.filter(codec => codec.name === rtp.codec)\n\n        // We check the relevantCodec. If it is not present, then we have no codecs info for this specific rtp.\n        relevantCodecs.forEach(relevantCodec => {\n          // If fmtpParams doesnt exist or is of length 0 then we assume we can remove all instances of this codec\n          if (!relevantCodec.fmtpParams || (relevantCodec.fmtpParams && relevantCodec.fmtpParams.length === 0)) {\n            // We want to delete this codec no matter what, since no fmtp params were included.\n            finalRemoveList.push(rtp.payload)\n          } else {\n            // There are fmtp values for this codec. Therefore we have to check each media.fmtp object to see if it is the right one.\n            // Then when we find the right fmtp object, we check its config to see if it has the parameters specified in the input.\n            media.fmtp.forEach(fmtp => {\n              // We check each iteration to see if we found the right fmtp object.\n              if (fmtp.payload === rtp.payload) {\n                // If we found the right fmtp object, we have to make sure each config param is in the fmtp.config.\n                if (relevantCodec.fmtpParams.every(c => fmtp.config.includes(c))) {\n                  finalRemoveList.push(rtp.payload)\n                }\n              }\n            })\n          }\n        })\n      })\n\n      // At this point we should have an array (finalRemoveList) that contains all ORIGINAL codec payloads that we need to remove.\n      // We now need to check fmtp for all rtx payloads ASSOCIATED with the original codec payload.\n      media.fmtp.forEach(fmtp => {\n        // Check if the config contains apt=, which indicates this fmtp is associated with another.\n        if (fmtp.config.includes('apt=')) {\n          // If so, lets grab the whole string WITHOUT the apt= part, and convet it into an integer. This should be a payload number.\n          var payload = parseInt(fmtp.config.replace('apt=', ''))\n\n          // Check if the finalRemoveList contains the payload that this fmtp is associated with.\n          if (finalRemoveList.includes(payload)) {\n            // If so, then we need to add this fmtp.payload to the finalRemoveList\n            finalRemoveList.push(fmtp.payload)\n          }\n        }\n      })\n\n      // We assume past this point that the finalRemoveList is all powerful.\n      // For each codec in the media.payloads string, if it is in our finalRemoveList list, we remove it.\n      let isNumber = false\n      if (typeof media.payloads === 'number') {\n        media.payloads = media.payloads.toString()\n        isNumber = true\n      }\n      if (media.payloads) {\n        media.payloads = media.payloads\n          .split(' ')\n          .filter(payload => !finalRemoveList.includes(parseInt(payload)))\n          .join(' ')\n      }\n      if (media.payloads && isNumber) {\n        media.payloads = parseInt(media.payloads)\n      }\n\n      // For each codec object, if the payload is in our filteredCodes list, we remove the object.\n      media.rtp = media.rtp.filter(rtp => !finalRemoveList.includes(rtp.payload))\n      media.fmtp = media.fmtp.filter(fmtp => !finalRemoveList.includes(fmtp.payload))\n\n      if (media.rtcpFb) {\n        media.rtcpFb = media.rtcpFb.filter(rtcpFb => !finalRemoveList.includes(rtcpFb.payload))\n      }\n    })\n\n    return newSdp\n  }\n}\n","// SDP Handlers\nexport * from './codecRemover.js'\n"],"sourceRoot":""}